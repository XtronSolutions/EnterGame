{"version":3,"sources":["assets\\Script\\BusinessDetail.js"],"names":["GamePlayReferenceManager","BusinessDetail","cc","Class","name","Component","properties","BusinessName","type","Label","serializable","BusinessType","BusinessModeLabel","BusinessBalance","BusinessLocations","CanSell","Boolean","SellBusinessBtnNode","Node","SellLocationBtnNode","BusinessMode","Integer","BusinessIndex","CanUndergoPartnership","PartnerNameLabel","BusinessValueLabel","PartnerShipBtnNode","FinalBusinessValue","SelectBusinessForPayDayRoll","SelectBusinessButtonNode","CheckReferences","require","SetSelectBusinessForPayDayRoll","_state","SetBusinessMode","_val","SetBusinessIndex","SetName","_name","string","SetType","_type","SetMode","_mode","SetBalance","_balance","SetLocations","_locations","SetPartnerName","SetBusinessValue","_value","SetFinalBusinessValue","ToggleSellBusinessButton","getComponent","Button","interactable","ToggleSellLocationButton","TogglePartnerShipButton","SellLocation","_manager","Instance","Get_GameManager","_playerIndex","GetTurnNumber","_tempData","PlayerGameInfo","NoOfBusiness","LocationsName","length","LoanTaken","pop","_amount","LoanAmount","Cash","Get_GameplayUIManager","ShowToast","setTimeout","SetBusinessUI_SellBusinessUISetup","SellBusiness","HomeBasedAmount","splice","_loanAmount","MortarAmount","GetIntoPartnerShip","Get_MultiplayerController","GetSelectedMode","console","log","_data","Data","Turn","PlayerData","SelectedBusinsessIndex","BusValue","Get_MultiplayerSyncManager","RaiseEvent","ToggleWaitingScreen_PartnerShipSetup","SelectBusinessforPayDay","ExitSellScreen__SellBusinessUISetup","IsBot","ProcessPayDay_TurnDecision","SelectBusinessforDoublePayDay_ThroughoutGame","_receiveDouble","ReceiveDoublePayDay","ExitScreen_BusinessPayDayUISetup","ReceiveDoublePayDayAmount","completeCardTurn"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager = null;\r\nvar BusinessDetail = cc.Class({\r\n  name: \"BusinessDetail\",\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    BusinessName: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessType: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessModeLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessBalance: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessLocations: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    CanSell: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SellBusinessBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    SellLocationBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessMode: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessIndex: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    CanUndergoPartnership: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerNameLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessValueLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerShipBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    FinalBusinessValue: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectBusinessForPayDayRoll: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectBusinessButtonNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  SetSelectBusinessForPayDayRoll(_state) {\r\n    this.SelectBusinessForPayDayRoll = _state;\r\n  },\r\n\r\n  SetBusinessMode(_val) {\r\n    this.BusinessMode = _val;\r\n  },\r\n\r\n  SetBusinessIndex(_val) {\r\n    this.BusinessIndex = _val;\r\n  },\r\n\r\n  SetName(_name) {\r\n    this.BusinessName.string = _name;\r\n  },\r\n\r\n  SetType(_type) {\r\n    this.BusinessType.string = _type;\r\n  },\r\n\r\n  SetMode(_mode) {\r\n    this.BusinessModeLabel.string = _mode;\r\n  },\r\n\r\n  SetBalance(_balance) {\r\n    this.BusinessBalance.string = _balance;\r\n  },\r\n\r\n  SetLocations(_locations) {\r\n    this.BusinessLocations.string = _locations;\r\n  },\r\n\r\n  SetPartnerName(_name) {\r\n    this.PartnerNameLabel.string = _name;\r\n  },\r\n\r\n  SetBusinessValue(_value) {\r\n    this.BusinessValueLabel.string = _value;\r\n  },\r\n\r\n  SetFinalBusinessValue(_value) {\r\n    this.FinalBusinessValue = _value;\r\n  },\r\n\r\n  ToggleSellBusinessButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellBusinessBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  ToggleSellLocationButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellLocationBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  TogglePartnerShipButton(_state) {\r\n    this.PartnerShipBtnNode.getComponent(cc.Button).interactable = _state;\r\n  },\r\n\r\n  SellLocation() {\r\n    if (this.BusinessMode == 1) {\r\n      //home based\r\n      //there is not going to be any location for home based\r\n    } else if (this.BusinessMode == 2) {\r\n      //Brick and mortar\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n      if (_tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length > 0) {\r\n        //if selected business has any location at all\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n          var _amount = 75000 - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n\r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        } else {\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n          _tempData.Cash += 75000;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $75000 added to your cash\", 2000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  SellBusiness() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (_tempData.NoOfBusiness.length > 1) {\r\n      if (this.BusinessMode == 1) {\r\n        //home based\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          var HomeBasedAmount = 10000;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          var _amount = HomeBasedAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          var _loanAmount = _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount - HomeBasedAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0) _amount = 0;\r\n\r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        } else {\r\n          var HomeBasedAmount = 10000;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += HomeBasedAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $10000 added to your cash\", 2000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        }\r\n      } else if (this.BusinessMode == 2) {\r\n        //brick and mortar\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          var MortarAmount = 75000;\r\n          var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          var _amount = MortarAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n          var _loanAmount = _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount - MortarAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0) _amount = 0;\r\n\r\n          _tempData.Cash += _amount;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business along with any locations, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        } else {\r\n          var MortarAmount = 75000;\r\n          var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += MortarAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + MortarAmount + \" added to your cash\", 2000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        }\r\n      }\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Cannot sell, you need atleast one business to continue playing game.\", 2000);\r\n    }\r\n  },\r\n\r\n  GetIntoPartnerShip() {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n      //real players\r\n      console.log(\"Sending offer\");\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n      if (_tempData.NoOfBusiness.length > 0) {\r\n        console.log(\"has some business\");\r\n        var _data = { Data: { Turn: _manager.GetTurnNumber(), PlayerData: _tempData, SelectedBusinsessIndex: this.BusinessIndex, BusValue: this.FinalBusinessValue } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(11, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(true);\r\n      }\r\n    } else {\r\n      console.log(\"game being played by bot\");\r\n    }\r\n  },\r\n\r\n  SelectBusinessforPayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    if (this.BusinessMode == 1) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreen__SellBusinessUISetup();\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].IsBot) _manager.ProcessPayDay_TurnDecision(false, true, true, this.BusinessIndex, 1, 0, 0);\r\n      else _manager.ProcessPayDay_TurnDecision(false, false, true, this.BusinessIndex, 1, 0, 0);\r\n    } else if (this.BusinessMode == 2) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreen__SellBusinessUISetup();\r\n\r\n      var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n      if (_manager.PlayerGameInfo[_playerIndex].IsBot) _manager.ProcessPayDay_TurnDecision(false, true, true, this.BusinessIndex, 0, 1, _locations);\r\n      else _manager.ProcessPayDay_TurnDecision(false, false, true, this.BusinessIndex, 0, 1, _locations);\r\n    }\r\n  },\r\n\r\n  SelectBusinessforDoublePayDay_ThroughoutGame() {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n      var _receiveDouble = _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay;\r\n      if (!_receiveDouble) {\r\n        if (this.BusinessMode == 1) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreen_BusinessPayDayUISetup();\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay = true;\r\n          _tempData.ReceiveDoublePayDayAmount++;\r\n        } else if (this.BusinessMode == 2) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreen_BusinessPayDayUISetup();\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay = true;\r\n          _tempData.ReceiveDoublePayDayAmount++;\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You will receive double pay day profits against selected business throughout game.\", 3200);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your current slected business already receive double pay day.\", 2800);\r\n      }\r\n    } else {\r\n      console.log(\"its bot\");\r\n    }\r\n  },\r\n});\r\n"]}