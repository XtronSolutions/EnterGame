{"version":3,"sources":["assets\\Script\\BusinessDetail.js"],"names":["GamePlayReferenceManager","BusinessDetail","cc","Class","name","Component","properties","BusinessName","type","Label","serializable","BusinessType","BusinessModeLabel","BusinessBalance","BusinessLocations","CanSell","Boolean","SellBusinessBtnNode","Node","SellLocationBtnNode","BusinessMode","Integer","BusinessIndex","CanUndergoPartnership","PartnerNameLabel","BusinessValueLabel","PartnerShipBtnNode","FinalBusinessValue","CheckReferences","require","SetBusinessMode","_val","SetBusinessIndex","SetName","_name","string","SetType","_type","SetMode","_mode","SetBalance","_balance","SetLocations","_locations","SetPartnerName","SetBusinessValue","_value","SetFinalBusinessValue","ToggleSellBusinessButton","_state","getComponent","Button","interactable","ToggleSellLocationButton","TogglePartnerShipButton","SellLocation","_manager","Instance","Get_GameManager","_playerIndex","GetTurnNumber","_tempData","PlayerGameInfo","NoOfBusiness","LocationsName","length","LoanTaken","pop","_amount","LoanAmount","Cash","Get_GameplayUIManager","ShowToast","setTimeout","SetBusinessUI_SellBusinessUISetup","SellBusiness","HomeBasedAmount","splice","_loanAmount","MortarAmount","GetIntoPartnerShip","Get_MultiplayerController","GetSelectedMode","console","log","_data","Data","Turn","PlayerData","SelectedBusinsessIndex","BusValue","Get_MultiplayerSyncManager","RaiseEvent","ToggleWaitingScreen_PartnerShipSetup"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager = null;\r\nvar BusinessDetail = cc.Class({\r\n  name: \"BusinessDetail\",\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    BusinessName: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessType: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessModeLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessBalance: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessLocations: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    CanSell: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SellBusinessBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    SellLocationBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessMode: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessIndex: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    CanUndergoPartnership: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerNameLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessValueLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerShipBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    FinalBusinessValue: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null)\r\n      GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  SetBusinessMode(_val) {\r\n    this.BusinessMode = _val;\r\n  },\r\n\r\n  SetBusinessIndex(_val) {\r\n    this.BusinessIndex = _val;\r\n  },\r\n\r\n  SetName(_name) {\r\n    this.BusinessName.string = _name;\r\n  },\r\n\r\n  SetType(_type) {\r\n    this.BusinessType.string = _type;\r\n  },\r\n\r\n  SetMode(_mode) {\r\n    this.BusinessModeLabel.string = _mode;\r\n  },\r\n\r\n  SetBalance(_balance) {\r\n    this.BusinessBalance.string = _balance;\r\n  },\r\n\r\n  SetLocations(_locations) {\r\n    this.BusinessLocations.string = _locations;\r\n  },\r\n\r\n  SetPartnerName(_name) {\r\n    this.PartnerNameLabel.string = _name;\r\n  },\r\n\r\n  SetBusinessValue(_value) {\r\n    this.BusinessValueLabel.string = _value;\r\n  },\r\n\r\n  SetFinalBusinessValue(_value) {\r\n    this.FinalBusinessValue = _value;\r\n  },\r\n\r\n  ToggleSellBusinessButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellBusinessBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  ToggleSellLocationButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellLocationBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  TogglePartnerShipButton(_state) {\r\n    this.PartnerShipBtnNode.getComponent(cc.Button).interactable = _state;\r\n  },\r\n\r\n  SellLocation() {\r\n    if (this.BusinessMode == 1) {\r\n      //home based\r\n      //there is not going to be any location for home based\r\n    } else if (this.BusinessMode == 2) {\r\n      //Brick and mortar\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n      if (_tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length > 0) {\r\n        //if selected business has any location at all\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n          var _amount =\r\n            75000 - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n\r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"You have successfully sold one of your location, $\" +\r\n              _amount +\r\n              \" added to your cash after paying loan\",\r\n            2000\r\n          );\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        } else {\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n          _tempData.Cash += 75000;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"You have successfully sold one of your location, $75000 added to your cash\",\r\n            2000\r\n          );\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  SellBusiness() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (_tempData.NoOfBusiness.length > 1) {\r\n      if (this.BusinessMode == 1) {\r\n        //home based\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          var HomeBasedAmount = 10000;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          var _amount =HomeBasedAmount -_tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          var _loanAmount =_tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -HomeBasedAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0)\r\n             _amount = 0;\r\n          \r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" +_amount +\" added to your cash after paying loan\",2000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        } else {\r\n          var HomeBasedAmount = 10000;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += HomeBasedAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"You have successfully sold your business, $10000 added to your cash\",\r\n            2000\r\n          );\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        }\r\n      } else if (this.BusinessMode == 2) {\r\n        //brick and mortar\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          var MortarAmount = 75000;\r\n          var _locations =\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          var _amount =\r\n            MortarAmount -\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n          var _loanAmount =\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -\r\n            MortarAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[\r\n              this.BusinessIndex\r\n            ].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0) _amount = 0;\r\n\r\n          _tempData.Cash += _amount;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"You have successfully sold your business along with any locations, $\" +\r\n              _amount +\r\n              \" added to your cash after paying loan\",\r\n            2000\r\n          );\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        } else {\r\n          var MortarAmount = 75000;\r\n          var _locations =\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += MortarAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"You have successfully sold your business, $\" +\r\n              MortarAmount +\r\n              \" added to your cash\",\r\n            2000\r\n          );\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n          }, 2050);\r\n        }\r\n      }\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n        \"Cannot sell, you need atleast one business to continue playing game.\",\r\n        2000\r\n      );\r\n    }\r\n  },\r\n\r\n  GetIntoPartnerShip()\r\n  {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2)//real players\r\n    {\r\n      console.log(\"Sending offer\");\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n      if (_tempData.NoOfBusiness.length > 0) {\r\n        console.log(\"has some business\");\r\n        var _data = { Data: { Turn: _manager.GetTurnNumber(), PlayerData: _tempData, SelectedBusinsessIndex: this.BusinessIndex, BusValue: this.FinalBusinessValue } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(11, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(true);\r\n      }\r\n    } else\r\n    {\r\n      console.log(\"game being played by bot\");\r\n        \r\n    }\r\n  },\r\n});\r\n"]}