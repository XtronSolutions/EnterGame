{"version":3,"sources":["assets\\Script\\BusinessDetail.js"],"names":["GamePlayReferenceManager","BusinessDetail","cc","Class","name","Component","properties","BusinessName","type","Label","serializable","BusinessType","BusinessModeLabel","BusinessBalance","BusinessLocations","CanSell","Boolean","SellBusinessBtnNode","Node","SellLocationBtnNode","BusinessMode","Integer","BusinessIndex","CheckReferences","require","SetBusinessMode","_val","SetBusinessIndex","SetName","_name","string","SetType","_type","SetMode","_mode","SetBalance","_balance","SetLocations","_locations","ToggleSellBusinessButton","_state","getComponent","Button","interactable","ToggleSellLocationButton","SellLocation","_manager","Instance","Get_GameManager","_playerIndex","GetTurnNumber","_tempData","PlayerGameInfo","NoOfBusiness","LocationsName","length","LoanTaken","pop","_amount","LoanAmount","Cash","Get_GameplayUIManager","ShowToast","setTimeout","SetBusinessUI_SellBusinessUISetup","SellBusiness","HomeBasedAmount","splice","_loanAmount","MortarAmount"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager=null;\r\nvar BusinessDetail=cc.Class({\r\n    name:\"BusinessDetail\",\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        BusinessName: {\r\n            default: null,        \r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n\r\n        BusinessType: {\r\n            default: null,        \r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n\r\n        BusinessModeLabel: {\r\n            default: null,        \r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n\r\n        BusinessBalance: {\r\n            default: null,        \r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n\r\n        BusinessLocations: {\r\n            default: null,        \r\n            type: cc.Label,\r\n            serializable: true,\r\n        },\r\n\r\n        CanSell: {\r\n            default: false,        \r\n            type: cc.Boolean,\r\n            serializable: true,\r\n        },\r\n\r\n        SellBusinessBtnNode: {\r\n            default: null,        \r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n\r\n        SellLocationBtnNode: {\r\n            default: null,        \r\n            type: cc.Node,\r\n            serializable: true,\r\n        },\r\n\r\n        BusinessMode: {\r\n            default: -1,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        },\r\n\r\n        BusinessIndex: {\r\n            default: -1,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        },\r\n\r\n    },\r\n    \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    SetBusinessMode(_val)\r\n    {\r\n        this.BusinessMode=_val;\r\n    },\r\n\r\n    SetBusinessIndex(_val)\r\n    {\r\n        this.BusinessIndex=_val;\r\n    },\r\n\r\n    SetName(_name)\r\n    {\r\n        this.BusinessName.string=_name;\r\n    },\r\n\r\n    SetType(_type)\r\n    {\r\n        this.BusinessType.string=_type;\r\n    },\r\n\r\n    SetMode(_mode)\r\n    {\r\n        this.BusinessModeLabel.string=_mode;\r\n    },\r\n\r\n    SetBalance(_balance)\r\n    {\r\n        this.BusinessBalance.string=_balance;\r\n    },\r\n\r\n    SetLocations(_locations)\r\n    {\r\n        this.BusinessLocations.string=_locations;\r\n    },\r\n\r\n    ToggleSellBusinessButton(_state)\r\n    {\r\n        if(this.CanSell)\r\n        {\r\n            this.SellBusinessBtnNode.getComponent(cc.Button).interactable=_state;\r\n        }\r\n\r\n    },\r\n\r\n    ToggleSellLocationButton(_state)\r\n    {\r\n        if(this.CanSell)\r\n        {\r\n            this.SellLocationBtnNode.getComponent(cc.Button).interactable=_state; \r\n        }\r\n    },\r\n\r\n    SellLocation()\r\n    {\r\n        \r\n        if(this.BusinessMode==1) //home based\r\n        {\r\n            //there is not going to be any location for home based\r\n        }\r\n        else if(this.BusinessMode==2) //Brick and mortar\r\n        {\r\n            var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            var _tempData=_manager.PlayerGameInfo[_playerIndex];\r\n\r\n            if(_tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length>0) //if selected business has any location at all\r\n            {\r\n                if(_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) //if there is some loan on selected business\r\n                {\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n                    var _amount=75000-_tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount=0;\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken=false;\r\n\r\n                    _tempData.Cash+=_amount;\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $\"+_amount+\" added to your cash after paying loan\",2000);\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n                    }, 2050);\r\n                }else\r\n                {\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n                    _tempData.Cash+=75000;\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $75000 added to your cash\",2000);\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n                    }, 2050);\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    SellBusiness()\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        var _tempData=_manager.PlayerGameInfo[_playerIndex];\r\n\r\n        if(_tempData.NoOfBusiness.length>1)\r\n        {\r\n        if(this.BusinessMode==1) //home based\r\n        {\r\n            if(_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) //if there is some loan on selected business\r\n            {\r\n                var HomeBasedAmount=10000;\r\n                _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n                var _amount=HomeBasedAmount-_tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n                var _loanAmount=_tempData.NoOfBusiness[this.BusinessIndex].LoanAmount-HomeBasedAmount;\r\n\r\n\r\n                if(_loanAmount<=0) //means payed all loan\r\n                {\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount=0;\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken=false;\r\n                }else\r\n                {\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount-=HomeBasedAmount;\r\n                }\r\n\r\n                if(_amount<=0)\r\n                    _amount=0;\r\n\r\n                _tempData.Cash+=_amount;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\"+_amount+\" added to your cash after paying loan\",2000);\r\n                setTimeout(() => {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n                }, 2050);\r\n            }else\r\n            {\r\n                var HomeBasedAmount=10000;\r\n                _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n                _tempData.Cash+=HomeBasedAmount;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $10000 added to your cash\",2000);\r\n                setTimeout(() => {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n                }, 2050);\r\n            }\r\n\r\n        }else if(this.BusinessMode==2) //brick and mortar\r\n        {\r\n            if(_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) //if there is some loan on selected business\r\n            {\r\n                var MortarAmount=75000;\r\n                var _locations=_tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n                if(_locations>0)//if business have location muliplye each location with amount\r\n                    MortarAmount+=(_locations*MortarAmount);\r\n\r\n                var _amount=MortarAmount-_tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n                var _loanAmount=_tempData.NoOfBusiness[this.BusinessIndex].LoanAmount-MortarAmount;\r\n\r\n\r\n                if(_loanAmount<=0) //means payed all loan\r\n                {\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount=0;\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken=false;\r\n                }else\r\n                {\r\n                    _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount-=HomeBasedAmount;\r\n                }\r\n\r\n                if(_amount<=0)\r\n                    _amount=0;\r\n\r\n                _tempData.Cash+=_amount;\r\n                _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business along with any locations, $\"+_amount+\" added to your cash after paying loan\",2000);\r\n                setTimeout(() => {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n                }, 2050);\r\n            }else\r\n            {\r\n                var MortarAmount=75000;\r\n                var _locations=_tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n                if(_locations>0)//if business have location muliplye each location with amount\r\n                    MortarAmount+=(_locations*MortarAmount);\r\n\r\n                _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n                _tempData.Cash+=MortarAmount;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\"+MortarAmount+\" added to your cash\",2000);\r\n                setTimeout(() => {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n                }, 2050);\r\n            }\r\n        }\r\n    }\r\n    else\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Cannot sell, you need atleast one business to continue playing game.\",2000);\r\n    }\r\n\r\n    },\r\n});\r\n"]}