{"version":3,"sources":["assets\\Script\\ServerBackend.js"],"names":["ResponseTypeEnum","cc","Enum","None","Successful","UserNotFound","InvalidEmailPassword","WentWrong","Student","Class","name","properties","dOB","gradeLevel","emailAddress","teacherName","facebookPage","gamesWon","testsTaken","testingAverage","gameCash","AccessToken","UpdatedAt","userID","ctor","_name","_dob","_gradeLevel","_emailAddress","_teacherName","_facebookPage","_gamesWon","_testsTaken","_testingAverage","_gameCash","Teacher","school","classTaught","contactNumber","_school","_classTaught","_contactNumber","_accessToken","_updatedAt","_userID","ProgramAmbassadors","address","_address","SchoolAdministrators","schoolName","_schoolName","ProgramDirectors","ServerBackend","Component","StudentData","type","serializable","tooltip","TeacherData","MentorData","AdminData","DirectorData","ResponseType","displayName","statics","Instance","RemovePersistNode","game","removePersistRootNode","node","onLoad","addPersistRootNode","console","error","getUserAPI","loginUserAPI","UpdateData","GetUserData","_email","_role","_subType","payload","UserPayload","header","CallRESTAPI","LoginUser","_password","UserLoginPayload","Fetch","_url","_method","_requestBody","_headers","fetch","headers","method","body","JSON","stringify","_type","Fetch_Promise","Response","json","TempData","MainData","UserDataResponse","statusCode","message","data","log","includes","systemEvent","emit","roleType","AssignStudentData","AssignTeacherData","AssignMentorData","AssignAdminData","AssignDirectorData","DataResponse","isLoggedIn","doB","SK","fbPage","testTaken","inGameCash","userToken","updatedAt","start","ReloginFromStorage","email","role","Data","LSK","createdAt","isDeleted","TableName","password","PK","_statusCode","_message","_data","license","_license","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//-------------------------------------------enumeration for type of business-------------------------//\r\nvar ResponseTypeEnum = cc.Enum({\r\n    None:0,\r\n    Successful: 1,           \r\n    UserNotFound: 2,\r\n    InvalidEmailPassword: 3,\r\n    WentWrong:4              \r\n});\r\n//-------------------------------------------class for Student Data-------------------------//\r\nvar Student = cc.Class({\r\n    name:\"Student\",\r\n    properties: {\r\n        name: \"\",\r\n        dOB: \"\",\r\n        gradeLevel: \"\",\r\n        emailAddress: \"\",\r\n        teacherName: \"\",\r\n        facebookPage: \"\",\r\n        gamesWon: 0,\r\n        testsTaken: 0,\r\n        testingAverage: 0,\r\n        gameCash: 0,\r\n        AccessToken:\"\",\r\n        UpdatedAt:0,\r\n        userID:\"\"\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _name = \"none\",\r\n            _dob = \"none\",\r\n            _gradeLevel = \"none\",\r\n            _emailAddress = \"none\",\r\n            _teacherName = \"none\",\r\n            _facebookPage = \"none\",\r\n            _gamesWon = 0,\r\n            _testsTaken = 0,\r\n            _testingAverage = 0,\r\n            _gameCash = 0\r\n        ) {\r\n        this.name = _name;\r\n        this.dOB = _dob;\r\n        this.gradeLevel = _gradeLevel;\r\n        this.emailAddress = _emailAddress;\r\n        this.teacherName = _teacherName;\r\n        this.facebookPage = _facebookPage;\r\n        this.gamesWon = _gamesWon;\r\n        this.testsTaken = _testsTaken;\r\n        this.testingAverage = _testingAverage;\r\n        this.gameCash = _gameCash;\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for Teacher Data-------------------------////\r\nvar Teacher = cc.Class({\r\n    name: \"Teacher\",\r\n    properties: {\r\n        name: \"\",\r\n        school: \"\",\r\n        classTaught: 0,\r\n        emailAddress: \"\",\r\n        contactNumber: \"\",\r\n        AccessToken:\"\",\r\n        UpdatedAt: 0,\r\n        userID:\"\"\r\n    },\r\n    //Default and Parametrized constructor\r\n    ctor: function\r\n        (_name = \"none\",\r\n            _school = \"none\",\r\n            _classTaught = 0,\r\n            _emailAddress = \"none\",\r\n            _contactNumber = \"none\",\r\n            _accessToken = \"\",\r\n            _updatedAt = 0,\r\n            _userID=\"\"\r\n        ) {\r\n        this.name = _name;\r\n        this.school = _school;\r\n        this.classTaught = _classTaught;\r\n        this.emailAddress = _emailAddress;\r\n        this.contactNumber = _contactNumber;\r\n        this.AccessToken = _accessToken;\r\n        this.UpdatedAt = _updatedAt;\r\n        this.userID = _userID;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for Program Ambassadors Data-------------------------////\r\nvar ProgramAmbassadors = cc.Class({\r\n    name: \"ProgramAmbassadors\",\r\n    properties: {\r\n        name: \"\",\r\n        emailAddress: \"\",\r\n        contactNumber: \"\",\r\n        address: \"\",\r\n        AccessToken:\"\",\r\n        UpdatedAt: 0,\r\n        userID:\"\"\r\n    },\r\n    //Deafult and Parametrized constructor\r\n    ctor: function\r\n        (_name = \"none\",\r\n            _emailAddress = \"none\",\r\n            _contactNumber = \"none\",\r\n            _address = \"none\",\r\n            _accessToken = \"\",\r\n            _updatedAt = 0,\r\n            _userID=\"\"\r\n        ) {\r\n        this.name = _name;\r\n        this.emailAddress = _emailAddress;\r\n        this.contactNumber = _contactNumber;\r\n        this.address = _address;\r\n        this.AccessToken = _accessToken;\r\n        this.UpdatedAt = _updatedAt;\r\n        this.userID = _userID;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for School Administrators Data-------------------------////\r\nvar SchoolAdministrators = cc.Class({\r\n    name: \"SchoolAdministrators\",\r\n    properties: {\r\n        name: \"\",\r\n        schoolName: \"\",\r\n        contactNumber: \"\",\r\n        emailAddress: \"\",\r\n        AccessToken:\"\",\r\n        UpdatedAt: 0,\r\n        userID:\"\"\r\n    },\r\n    //Default and Parametrized constructor\r\n    ctor: function\r\n        (_name = \"none\",\r\n            _schoolName = \"none\",\r\n            _emailAddress = \"none\",\r\n            _contactNumber = \"none\",\r\n            _accessToken = \"\",\r\n            _updatedAt = 0,\r\n            _userID=\"\"\r\n        ) {\r\n        this.name = _name;\r\n        this.schoolName = _schoolName;\r\n        this.contactNumber = _contactNumber;\r\n        this.emailAddress = _emailAddress;\r\n        this.AccessToken = _accessToken;\r\n        this.UpdatedAt = _updatedAt;\r\n        this.userID = _userID;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for Program Directors Data-------------------------////\r\nvar ProgramDirectors = cc.Class({\r\n    name: \"ProgramDirectors\",\r\n    properties: {\r\n        name: \"\",\r\n        emailAddress: \"\",\r\n        AccessToken:\"\",\r\n        UpdatedAt: 0,\r\n        userID:\"\"\r\n    },\r\n    //Default and Parametrized constructor\r\n    ctor: function\r\n        (   _name = \"none\",\r\n            _emailAddress = \"none\",\r\n            _accessToken = \"\",\r\n            _updatedAt = 0,\r\n            _userID=\"\"\r\n        )\r\n    {\r\n        this.name = _name;\r\n        this.emailAddress = _emailAddress;\r\n        this.AccessToken = _accessToken;\r\n        this.UpdatedAt = _updatedAt;\r\n        this.userID = _userID;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for ServerBackend-------------------------//\r\nvar ServerBackend=cc.Class({\r\n    name:\"ServerBackend\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        StudentData: {\r\n            default: null,                \r\n            type: Student,\r\n            serializable: true,\r\n            tooltip: \"current logged in student data\"\r\n        },\r\n        TeacherData: {\r\n            default: null,                \r\n            type: Teacher,\r\n            serializable: true,\r\n            tooltip: \"current logged in teacher data\"\r\n        },\r\n        MentorData: {\r\n            default: null,                \r\n            type: ProgramAmbassadors,\r\n            serializable: true,\r\n            tooltip: \"current logged in Mentor / ProgramAmbassadors  data\"\r\n        },\r\n        AdminData: {\r\n            default: null,                \r\n            type: SchoolAdministrators,\r\n            serializable: true,\r\n            tooltip: \"current logged in SchoolAdministrators  data\"\r\n        },\r\n        DirectorData: {\r\n            default: null,                \r\n            type: ProgramDirectors,\r\n            serializable: true,\r\n            tooltip: \"current logged in ProgramDirectors  data\"\r\n        },\r\n        ResponseType:{\r\n            displayName:\"Response\",\r\n            type: ResponseTypeEnum,\r\n            default: ResponseTypeEnum.None,\r\n            serializable: true,\r\n            tooltip: \"ResponseType catogory for api's\",\r\n        }, \r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    RemovePersistNode()\r\n    {\r\n        ServerBackend.Instance=null;\r\n        cc.game.removePersistRootNode(this.node);\r\n    },\r\n\r\n    onLoad() {\r\n        if(!ServerBackend.Instance)\r\n        {\r\n            ServerBackend.Instance=this;\r\n            cc.game.addPersistRootNode(this.node);\r\n            this.StudentData=new Student();\r\n            console.error(\"creating instance \"+this.node.name);\r\n        }\r\n\r\n        //private variables\r\n        this.getUserAPI=\"https://ia3nqkp6th.execute-api.us-east-2.amazonaws.com/dev/getUser\";\r\n        this.loginUserAPI=\"https://ia3nqkp6th.execute-api.us-east-2.amazonaws.com/dev/loginUser\";\r\n\r\n       // this.GetUserData(\"xtrondev@gmail.com\",\"Student\");\r\n    },\r\n\r\n\r\n    UpdateData()\r\n    {\r\n\r\n    },\r\n    \r\n    GetUserData(_email,_role,_accessToken,_subType=-1)\r\n    {\r\n        var payload = new UserPayload(_email, _role);\r\n        var header = { \"Content-Type\": \"application/json; charset=utf-8\", \"Authorization\": _accessToken };\r\n        this.CallRESTAPI( this.getUserAPI,\"POST\",payload,1,header,_subType);    \r\n    },\r\n\r\n    LoginUser(_email,_password,_role)\r\n    {\r\n        var payload=new UserLoginPayload(_email,_password,_role,\"79be6824-fae7-40cf-816f-ae0be1ab1fvd\");\r\n        this.CallRESTAPI( this.loginUserAPI,\"POST\",payload,2,null,-1);    \r\n    },\r\n\r\n    Fetch(_url,_method,_requestBody,_headers=null)\r\n    {\r\n        if(_method==\"GET\")\r\n        {\r\n            if (_headers ==null) {\r\n                return fetch(\r\n                    _url,\r\n                    {\r\n                        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\r\n                        method: _method,\r\n                    }\r\n                );\r\n            } else\r\n            {\r\n                return fetch(\r\n                    _url,\r\n                    {\r\n                        headers: _headers,\r\n                        method: _method,\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if (_headers == null) {\r\n                //console.error(\"header is null\");\r\n                //console.error(_requestBody);\r\n                return fetch(\r\n                    _url,\r\n                    {\r\n                        headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\r\n                        method: _method,\r\n                        body: JSON.stringify(_requestBody)\r\n                    }\r\n                );\r\n            } else\r\n            {\r\n                return fetch(\r\n                    _url,\r\n                    {\r\n                        headers:  _headers ,\r\n                        method: _method,\r\n                        body: JSON.stringify(_requestBody)\r\n                    }\r\n                );\r\n            }\r\n        }\r\n    },\r\n    \r\n    CallRESTAPI(_url,_method,_requestBody,_type,_headers=null,_subType=-1) {\r\n        Fetch_Promise(_url,_method,_requestBody,_headers);\r\n        async function Fetch_Promise(_url,_method,_requestBody,_headers=null) {\r\n            try {\r\n                var Response=await ServerBackend.Instance.Fetch(_url,_method,_requestBody,_headers);\r\n                var TempData=await Response.json();\r\n                \r\n                if(_type==1) //getting user data\r\n                {\r\n                    var MainData=new UserDataResponse(TempData.statusCode,TempData.message,TempData.data);\r\n                    console.log(TempData);\r\n                    if (_subType == 0) { //return data to storage class\r\n                        if (MainData.message.includes(\"SUCCESS\") || MainData.message.includes(\"sucessfully\")) { \r\n                            console.log(\"got data successfully\");\r\n                            console.log(MainData);\r\n\r\n                            //both below calls are written inside storgaemanager\r\n                            cc.systemEvent.emit(\"WriteData\", MainData);\r\n                            cc.systemEvent.emit(\"RefreshData\", 0);\r\n                        } else\r\n                        {\r\n                            cc.systemEvent.emit(\"RefreshData\", 1);\r\n                        }\r\n                    }\r\n                }\r\n                else if(_type==2) //login user\r\n                {\r\n                    var MainData=new UserDataResponse(TempData.statusCode,TempData.message,TempData.data);\r\n                    console.log(TempData);\r\n                    if(MainData.message.includes(\"sucessfully\"))\r\n                    {\r\n                        cc.systemEvent.emit(\"WriteData\",MainData);\r\n                        console.log(\"user logged in successfully\");\r\n                        console.log(MainData);\r\n                        if(MainData.data.roleType.includes(\"Student\"))\r\n                        {\r\n                            ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                            ServerBackend.Instance.AssignStudentData(MainData,true);\r\n                            cc.systemEvent.emit(\"AssignProfileData\",true,false,false,false,false);\r\n                        }\r\n                        else if(MainData.data.roleType.includes(\"Teacher\"))\r\n                        {\r\n                            ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                            ServerBackend.Instance.AssignTeacherData(MainData,true);\r\n                            cc.systemEvent.emit(\"AssignProfileData\",false,true,false,false,false);\r\n                        }\r\n                        else if(MainData.data.roleType.includes(\"ProgramAmbassador\"))\r\n                        {\r\n                            ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                            ServerBackend.Instance.AssignMentorData(MainData,true);\r\n                            cc.systemEvent.emit(\"AssignProfileData\",false,false,true,false,false);\r\n                        }\r\n                        else if(MainData.data.roleType.includes(\"SchoolAdmin\"))\r\n                        {\r\n                            ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                            ServerBackend.Instance.AssignAdminData(MainData,true);\r\n                            cc.systemEvent.emit(\"AssignProfileData\",false,false,false,true,false);\r\n                        }\r\n                        else if(MainData.data.roleType.includes(\"ProgramDirector\"))\r\n                        {\r\n                            ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                            ServerBackend.Instance.AssignDirectorData(MainData,true);\r\n                            cc.systemEvent.emit(\"AssignProfileData\",false,false,false,false,true);\r\n                        }\r\n                    }\r\n                    else  if(MainData.message.includes(\"wrong\") ||MainData.message.includes(\"characters\"))\r\n                    {\r\n                        ServerBackend.Instance.ResponseType=ResponseTypeEnum.InvalidEmailPassword;\r\n                        cc.systemEvent.emit(\"AssignProfileData\");\r\n                    }\r\n                    else if(MainData.message.includes(\"Data not Found!\"))\r\n                    {\r\n                        ServerBackend.Instance.ResponseType=ResponseTypeEnum.UserNotFound;\r\n                        cc.systemEvent.emit(\"AssignProfileData\");\r\n                    }else if(MainData.message.includes(\"Password should contain atleast one Integer\"))\r\n                    {\r\n                        ServerBackend.Instance.ResponseType=ResponseTypeEnum.InvalidEmailPassword;\r\n                        cc.systemEvent.emit(\"AssignProfileData\");\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                if(_type==2) //login user error\r\n                {\r\n                    ServerBackend.Instance.ResponseType=ResponseTypeEnum.WentWrong;\r\n                    cc.systemEvent.emit(\"AssignProfileData\");\r\n                }\r\n                console.error(e);\r\n            } finally {\r\n              //  console.log('We do cleanup here');\r\n            }    \r\n        }\r\n        //#region Commented\r\n        // fetch(\r\n        //     _url, \r\n        //     {\r\n        //         headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\r\n        //         method: _method,\r\n        //         body: JSON.stringify(_requestBody)\r\n        //     }\r\n        //   )\r\n        //   .then(response=>{\r\n        //       response.json().then(data=>{\r\n        //         //console.log(data);\r\n        //         //return data; \r\n        //     }); \r\n        //   })\r\n        //   .catch(function(err) {\r\n        //     console.log(err);\r\n        //   });\r\n        //#endregion\r\n    },\r\n\r\n    AssignStudentData(DataResponse,isLoggedIn)\r\n    {\r\n        this.StudentData.name=DataResponse.data.name;\r\n        this.StudentData.dOB=DataResponse.data.doB;\r\n        this.StudentData.gradeLevel=DataResponse.data.gradeLevel;\r\n        this.StudentData.emailAddress=DataResponse.data.SK;\r\n        this.StudentData.teacherName=DataResponse.data.teacherName;\r\n        this.StudentData.facebookPage=DataResponse.data.fbPage;\r\n        this.StudentData.gamesWon=DataResponse.data.gamesWon;\r\n        this.StudentData.testsTaken=DataResponse.data.testTaken;\r\n        this.StudentData.testingAverage=DataResponse.data.testingAverage;\r\n        this.StudentData.gameCash=DataResponse.data.inGameCash;\r\n        this.StudentData.userID=DataResponse.data.userID;\r\n\r\n        if(isLoggedIn)\r\n        {\r\n            this.StudentData.AccessToken=DataResponse.data.userToken;\r\n            this.StudentData.UpdatedAt=DataResponse.data.updatedAt; \r\n        }\r\n\r\n        console.log(this.StudentData);\r\n    },\r\n\r\n    AssignTeacherData(DataResponse,isLoggedIn)\r\n    {\r\n        this.TeacherData.name=DataResponse.data.name;\r\n        this.TeacherData.school=DataResponse.data.schoolName;\r\n        this.TeacherData.classTaught=DataResponse.data.classTaught;\r\n        this.TeacherData.emailAddress=DataResponse.data.SK;\r\n        this.TeacherData.contactNumber = DataResponse.data.contactNumber;\r\n        this.TeacherData.userID=DataResponse.data.userID;\r\n\r\n        if(isLoggedIn)\r\n        {\r\n            this.TeacherData.AccessToken=DataResponse.data.userToken;\r\n            this.TeacherData.UpdatedAt=DataResponse.data.updatedAt; \r\n        }\r\n\r\n        console.log(this.TeacherData);\r\n    },\r\n\r\n    AssignMentorData(DataResponse,isLoggedIn)\r\n    {\r\n        this.MentorData.name=DataResponse.data.name;\r\n        this.MentorData.emailAddress=DataResponse.data.SK;\r\n        this.MentorData.contactNumber = DataResponse.data.contactNumber;\r\n        this.MentorData.userID = DataResponse.data.userID;\r\n        this.MentorData.address=DataResponse.data.address;\r\n\r\n        if(isLoggedIn)\r\n        {\r\n            this.MentorData.AccessToken=DataResponse.data.userToken;\r\n            this.MentorData.UpdatedAt=DataResponse.data.updatedAt; \r\n        }\r\n\r\n        console.log(this.MentorData);\r\n    },\r\n\r\n    AssignAdminData(DataResponse,isLoggedIn)\r\n    {\r\n        this.AdminData.name=DataResponse.data.name;\r\n        this.AdminData.emailAddress=DataResponse.data.SK;\r\n        this.AdminData.contactNumber = DataResponse.data.contactNumber;\r\n        this.AdminData.userID = DataResponse.data.userID;\r\n        this.AdminData.schoolName=DataResponse.data.schoolName;\r\n\r\n        if(isLoggedIn)\r\n        {\r\n            this.AdminData.AccessToken=DataResponse.data.userToken;\r\n            this.AdminData.UpdatedAt=DataResponse.data.updatedAt; \r\n        }\r\n\r\n        console.log(this.AdminData);\r\n    },\r\n\r\n    AssignDirectorData(DataResponse,isLoggedIn)\r\n    {\r\n        this.DirectorData.name=DataResponse.data.name;\r\n        this.DirectorData.emailAddress=DataResponse.data.SK;\r\n\r\n        if(isLoggedIn)\r\n        {\r\n            this.DirectorData.AccessToken=DataResponse.data.userToken;\r\n            this.DirectorData.UpdatedAt=DataResponse.data.updatedAt; \r\n        }\r\n\r\n        console.log(this.DirectorData);\r\n    },\r\n    start() { },\r\n    \r\n    ReloginFromStorage(MainData)\r\n    {\r\n\r\n                console.log(\"user logged in successfully automatically\");\r\n                console.log(MainData);\r\n                if(MainData.data.roleType.includes(\"Student\"))\r\n                {\r\n                    ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                    ServerBackend.Instance.AssignStudentData(MainData,true);\r\n                    cc.systemEvent.emit(\"AssignProfileData\",true,false,false,false,false);\r\n                }\r\n                else if(MainData.data.roleType.includes(\"Teacher\"))\r\n                {\r\n                    ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                    ServerBackend.Instance.AssignTeacherData(MainData,true);\r\n                    cc.systemEvent.emit(\"AssignProfileData\",false,true,false,false,false);\r\n                }\r\n                else if(MainData.data.roleType.includes(\"ProgramAmbassador\"))\r\n                {\r\n                    ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                    ServerBackend.Instance.AssignMentorData(MainData,true);\r\n                    cc.systemEvent.emit(\"AssignProfileData\",false,false,true,false,false);\r\n                }\r\n                else if(MainData.data.roleType.includes(\"SchoolAdmin\"))\r\n                {\r\n                    ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                    ServerBackend.Instance.AssignAdminData(MainData,true);\r\n                    cc.systemEvent.emit(\"AssignProfileData\",false,false,false,true,false);\r\n                }\r\n                else if(MainData.data.roleType.includes(\"ProgramDirector\"))\r\n                {\r\n                    ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                    ServerBackend.Instance.AssignDirectorData(MainData,true);\r\n                    cc.systemEvent.emit(\"AssignProfileData\",false,false,false,false,true);\r\n                }\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for sending payload to receive data-------------------------//\r\nvar UserPayload = cc.Class({\r\n    name:\"UserPayload\",\r\n    properties: {\r\n        email: \"\",\r\n        role: \"\",\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _email= 'none',\r\n            _role= \"none\"\r\n        ) {\r\n        this.email = _email;\r\n        this.role = _role;  \r\n    },\r\n});\r\n\r\n//-------------------------------------------class for User Data-------------------------//\r\nvar Data = cc.Class({\r\n    name:\"Data\",\r\n    properties: {\r\n        inGameCash: \"\",\r\n        LSK: \"\",\r\n        userToken:\"\",\r\n        classTaught:\"\",\r\n        contactNumber:\"\",\r\n        schoolName:\"\",\r\n        gamesWon:\"\",\r\n        createdAt:0,\r\n        isDeleted:false,\r\n        TableName:\"\",\r\n        gradeLevel:\"\",\r\n        name:\"\",\r\n        roleType:\"\",\r\n        password:\"\",\r\n        fbPage:\"\",\r\n        updatedAt:0,\r\n        teacherName:\"\",\r\n        doB:\"\",\r\n        SK:\"\",\r\n        testTaken:\"\",\r\n        PK:\"\",\r\n        testingAverage:\"\",\r\n        userID: \"\",\r\n        address:\"\"\r\n    },\r\n});\r\n\r\n//-------------------------------------------root class of response received when getting user api is hit-------------------------//\r\nvar UserDataResponse = cc.Class({\r\n    name:\"UserDataResponse\",\r\n    properties: {\r\n        statusCode: \"\",\r\n        message: \"\",\r\n        data:Data\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _statusCode= \"none\",\r\n            _message= \"none\",\r\n            _data=null\r\n        ) {\r\n        this.statusCode = _statusCode;\r\n        this.message = _message;\r\n        this.data=_data;\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for sending payload to login user-------------------------------//\r\nvar UserLoginPayload = cc.Class({\r\n    name:\"UserLoginPayload\",\r\n    properties: {\r\n        email: \"\",\r\n        password:\"\",\r\n        role: \"\",\r\n        license:\"\"\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _email= 'none',\r\n            _password=\"none\",\r\n            _role = \"none\",\r\n            _license=\"none\"\r\n        ) {\r\n        this.email = _email;\r\n        this.password = _password;\r\n        this.role = _role;  \r\n        this.license=_license\r\n    },\r\n});\r\n\r\n\r\n\r\nmodule.exports= ServerBackend;\r\n"]}