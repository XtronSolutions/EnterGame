{"version":3,"sources":["assets\\Script\\ServerBackend.js"],"names":["ResponseTypeEnum","cc","Enum","None","Successful","UserNotFound","InvalidEmailPassword","WentWrong","Student","Class","name","properties","dOB","gradeLevel","emailAddress","teacherName","facebookPage","gamesWon","testsTaken","testingAverage","gameCash","AccessToken","UpdatedAt","userID","ctor","_name","_dob","_gradeLevel","_emailAddress","_teacherName","_facebookPage","_gamesWon","_testsTaken","_testingAverage","_gameCash","Teacher","school","classTaught","contactNumber","_school","_classTaught","_contactNumber","ProgramAmbassadors","address","_address","SchoolAdministrators","schoolName","_schoolName","ProgramDirectors","ServerBackend","Component","StudentData","type","serializable","tooltip","ResponseType","displayName","statics","Instance","RemovePersistNode","game","removePersistRootNode","node","onLoad","addPersistRootNode","console","error","getUserAPI","loginUserAPI","GetUserData","_email","_role","payload","UserPayload","CallRESTAPI","LoginUser","_password","UserLoginPayload","Fetch","_url","_method","_requestBody","fetch","headers","method","body","JSON","stringify","_type","Fetch_Promise","Response","json","TempData","MainData","UserDataResponse","statusCode","message","data","log","includes","roleType","AssignStudentData","systemEvent","emit","DataResponse","isLoggedIn","doB","SK","fbPage","testTaken","inGameCash","userToken","updatedAt","start","email","role","Data","LSK","createdAt","isDeleted","TableName","password","PK","_statusCode","_message","_data","module","exports"],"mappings":";;;;;;;;;;AAAA;AACA,IAAIA,gBAAgB,GAAGC,EAAE,CAACC,IAAH,CAAQ;AAC3BC,EAAAA,IAAI,EAAC,CADsB;AAE3BC,EAAAA,UAAU,EAAE,CAFe;AAG3BC,EAAAA,YAAY,EAAE,CAHa;AAI3BC,EAAAA,oBAAoB,EAAE,CAJK;AAK3BC,EAAAA,SAAS,EAAC;AALiB,CAAR,CAAvB,EAOA;;AACA,IAAIC,OAAO,GAAGP,EAAE,CAACQ,KAAH,CAAS;AACnBC,EAAAA,IAAI,EAAC,SADc;AAEnBC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE,EADE;AAERE,IAAAA,GAAG,EAAE,EAFG;AAGRC,IAAAA,UAAU,EAAE,EAHJ;AAIRC,IAAAA,YAAY,EAAE,EAJN;AAKRC,IAAAA,WAAW,EAAE,EALL;AAMRC,IAAAA,YAAY,EAAE,EANN;AAORC,IAAAA,QAAQ,EAAE,CAPF;AAQRC,IAAAA,UAAU,EAAE,CARJ;AASRC,IAAAA,cAAc,EAAE,CATR;AAURC,IAAAA,QAAQ,EAAE,CAVF;AAWRC,IAAAA,WAAW,EAAC,EAXJ;AAYRC,IAAAA,SAAS,EAAC,CAZF;AAaRC,IAAAA,MAAM,EAAC;AAbC,GAFO;AAiBvB;AACIC,EAAAA,IAAI,EAAE,cAEEC,KAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,aALF,EAMEC,YANF,EAOEC,aAPF,EAQEC,SARF,EASEC,WATF,EAUEC,eAVF,EAWEC,SAXF,EAYA;AAAA,QAVET,KAUF;AAVEA,MAAAA,KAUF,GAVU,MAUV;AAAA;;AAAA,QATEC,IASF;AATEA,MAAAA,IASF,GATS,MAST;AAAA;;AAAA,QAREC,WAQF;AAREA,MAAAA,WAQF,GARgB,MAQhB;AAAA;;AAAA,QAPEC,aAOF;AAPEA,MAAAA,aAOF,GAPkB,MAOlB;AAAA;;AAAA,QANEC,YAMF;AANEA,MAAAA,YAMF,GANiB,MAMjB;AAAA;;AAAA,QALEC,aAKF;AALEA,MAAAA,aAKF,GALkB,MAKlB;AAAA;;AAAA,QAJEC,SAIF;AAJEA,MAAAA,SAIF,GAJc,CAId;AAAA;;AAAA,QAHEC,WAGF;AAHEA,MAAAA,WAGF,GAHgB,CAGhB;AAAA;;AAAA,QAFEC,eAEF;AAFEA,MAAAA,eAEF,GAFoB,CAEpB;AAAA;;AAAA,QADEC,SACF;AADEA,MAAAA,SACF,GADc,CACd;AAAA;;AACF,SAAKxB,IAAL,GAAYe,KAAZ;AACA,SAAKb,GAAL,GAAWc,IAAX;AACA,SAAKb,UAAL,GAAkBc,WAAlB;AACA,SAAKb,YAAL,GAAoBc,aAApB;AACA,SAAKb,WAAL,GAAmBc,YAAnB;AACA,SAAKb,YAAL,GAAoBc,aAApB;AACA,SAAKb,QAAL,GAAgBc,SAAhB;AACA,SAAKb,UAAL,GAAkBc,WAAlB;AACA,SAAKb,cAAL,GAAsBc,eAAtB;AACA,SAAKb,QAAL,GAAgBc,SAAhB;AACH;AAzCkB,CAAT,CAAd,EA4CA;;AACA,IAAIC,OAAO,GAAGlC,EAAE,CAACQ,KAAH,CAAS;AACnBC,EAAAA,IAAI,EAAE,SADa;AAEnBC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE,EADE;AAER0B,IAAAA,MAAM,EAAE,EAFA;AAGRC,IAAAA,WAAW,EAAE,CAHL;AAIRvB,IAAAA,YAAY,EAAE,EAJN;AAKRwB,IAAAA,aAAa,EAAE;AALP,GAFO;AASnB;AACAd,EAAAA,IAAI,EAAE,cACDC,KADC,EAEEc,OAFF,EAGEC,YAHF,EAIEZ,aAJF,EAKEa,cALF,EAMA;AAAA,QALDhB,KAKC;AALDA,MAAAA,KAKC,GALO,MAKP;AAAA;;AAAA,QAJEc,OAIF;AAJEA,MAAAA,OAIF,GAJY,MAIZ;AAAA;;AAAA,QAHEC,YAGF;AAHEA,MAAAA,YAGF,GAHiB,CAGjB;AAAA;;AAAA,QAFEZ,aAEF;AAFEA,MAAAA,aAEF,GAFkB,MAElB;AAAA;;AAAA,QADEa,cACF;AADEA,MAAAA,cACF,GADmB,MACnB;AAAA;;AACF,SAAK/B,IAAL,GAAYe,KAAZ;AACA,SAAKW,MAAL,GAAcG,OAAd;AACA,SAAKF,WAAL,GAAmBG,YAAnB;AACA,SAAK1B,YAAL,GAAoBc,aAApB;AACA,SAAKU,aAAL,GAAqBG,cAArB;AACH;AAtBkB,CAAT,CAAd,EAyBA;;AACA,IAAIC,kBAAkB,GAAGzC,EAAE,CAACQ,KAAH,CAAS;AAC9BC,EAAAA,IAAI,EAAE,oBADwB;AAE9BC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE,EADE;AAERI,IAAAA,YAAY,EAAE,EAFN;AAGRwB,IAAAA,aAAa,EAAE,EAHP;AAIRK,IAAAA,OAAO,EAAE;AAJD,GAFkB;AAQ9B;AACAnB,EAAAA,IAAI,EAAE,cACDC,KADC,EAEEG,aAFF,EAGEa,cAHF,EAIEG,QAJF,EAKA;AAAA,QAJDnB,KAIC;AAJDA,MAAAA,KAIC,GAJO,MAIP;AAAA;;AAAA,QAHEG,aAGF;AAHEA,MAAAA,aAGF,GAHkB,MAGlB;AAAA;;AAAA,QAFEa,cAEF;AAFEA,MAAAA,cAEF,GAFmB,MAEnB;AAAA;;AAAA,QADEG,QACF;AADEA,MAAAA,QACF,GADa,MACb;AAAA;;AACF,SAAKlC,IAAL,GAAYe,KAAZ;AACA,SAAKX,YAAL,GAAoBc,aAApB;AACA,SAAKU,aAAL,GAAqBG,cAArB;AACA,SAAKE,OAAL,GAAeC,QAAf;AACH;AAnB6B,CAAT,CAAzB,EAsBA;;AACA,IAAIC,oBAAoB,GAAG5C,EAAE,CAACQ,KAAH,CAAS;AAChCC,EAAAA,IAAI,EAAE,sBAD0B;AAEhCC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE,EADE;AAERoC,IAAAA,UAAU,EAAE,EAFJ;AAGRR,IAAAA,aAAa,EAAE,EAHP;AAIRxB,IAAAA,YAAY,EAAE;AAJN,GAFoB;AAQhC;AACAU,EAAAA,IAAI,EAAE,cACDC,KADC,EAEEsB,WAFF,EAGEnB,aAHF,EAIEa,cAJF,EAKA;AAAA,QAJDhB,KAIC;AAJDA,MAAAA,KAIC,GAJO,MAIP;AAAA;;AAAA,QAHEsB,WAGF;AAHEA,MAAAA,WAGF,GAHgB,MAGhB;AAAA;;AAAA,QAFEnB,aAEF;AAFEA,MAAAA,aAEF,GAFkB,MAElB;AAAA;;AAAA,QADEa,cACF;AADEA,MAAAA,cACF,GADmB,MACnB;AAAA;;AACF,SAAK/B,IAAL,GAAYe,KAAZ;AACA,SAAKqB,UAAL,GAAkBC,WAAlB;AACA,SAAKT,aAAL,GAAqBG,cAArB;AACA,SAAK3B,YAAL,GAAoBc,aAApB;AACH;AAnB+B,CAAT,CAA3B,EAsBA;;AACA,IAAIoB,gBAAgB,GAAG/C,EAAE,CAACQ,KAAH,CAAS;AAC5BC,EAAAA,IAAI,EAAE,kBADsB;AAE5BC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE,EADE;AAERI,IAAAA,YAAY,EAAE;AAFN,GAFgB;AAM5B;AACAU,EAAAA,IAAI,EAAE,cACDC,KADC,EAEEG,aAFF,EAIN;AAAA,QAHKH,KAGL;AAHKA,MAAAA,KAGL,GAHa,MAGb;AAAA;;AAAA,QAFQG,aAER;AAFQA,MAAAA,aAER,GAFwB,MAExB;AAAA;;AACI,SAAKlB,IAAL,GAAYe,KAAZ;AACA,SAAKX,YAAL,GAAoBc,aAApB;AACH;AAd2B,CAAT,CAAvB,EAiBA;;AACA,IAAIqB,aAAa,GAAChD,EAAE,CAACQ,KAAH,CAAS;AACvBC,EAAAA,IAAI,EAAC,eADkB;AAEvB,aAAST,EAAE,CAACiD,SAFW;AAGvBvC,EAAAA,UAAU,EAAE;AACRwC,IAAAA,WAAW,EAAE;AACT,iBAAS,IADA;AAETC,MAAAA,IAAI,EAAE5C,OAFG;AAGT6C,MAAAA,YAAY,EAAE,IAHL;AAITC,MAAAA,OAAO,EAAE;AAJA,KADL;AAORC,IAAAA,YAAY,EAAC;AACTC,MAAAA,WAAW,EAAC,UADH;AAETJ,MAAAA,IAAI,EAAEpD,gBAFG;AAGT,iBAASA,gBAAgB,CAACG,IAHjB;AAITkD,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAC;AALC;AAPL,GAHW;AAkBvBG,EAAAA,OAAO,EAAE;AAAE;AACPC,IAAAA,QAAQ,EAAE;AADL,GAlBc;AAsBvBC,EAAAA,iBAtBuB,+BAuBvB;AACIV,IAAAA,aAAa,CAACS,QAAd,GAAuB,IAAvB;AACAzD,IAAAA,EAAE,CAAC2D,IAAH,CAAQC,qBAAR,CAA8B,KAAKC,IAAnC;AACH,GA1BsB;AA4BvBC,EAAAA,MA5BuB,oBA4Bd;AACL,QAAG,CAACd,aAAa,CAACS,QAAlB,EACA;AACIT,MAAAA,aAAa,CAACS,QAAd,GAAuB,IAAvB;AACAzD,MAAAA,EAAE,CAAC2D,IAAH,CAAQI,kBAAR,CAA2B,KAAKF,IAAhC;AACA,WAAKX,WAAL,GAAiB,IAAI3C,OAAJ,EAAjB;AACAyD,MAAAA,OAAO,CAACC,KAAR,CAAc,uBAAqB,KAAKJ,IAAL,CAAUpD,IAA7C;AACH,KAPI,CASL;;;AACA,SAAKyD,UAAL,GAAgB,oEAAhB;AACA,SAAKC,YAAL,GAAkB,sEAAlB,CAXK,CAaN;AACF,GA1CsB;AA4CvBC,EAAAA,WA5CuB,uBA4CXC,MA5CW,EA4CJC,KA5CI,EA6CvB;AACI,QAAIC,OAAO,GAAC,IAAIC,WAAJ,CAAgBH,MAAhB,EAAuBC,KAAvB,CAAZ;AACA,SAAKG,WAAL,CAAkB,KAAKP,UAAvB,EAAkC,MAAlC,EAAyCK,OAAzC,EAAiD,CAAjD;AACH,GAhDsB;AAkDvBG,EAAAA,SAlDuB,qBAkDbL,MAlDa,EAkDNM,SAlDM,EAkDIL,KAlDJ,EAmDvB;AACI,QAAIC,OAAO,GAAC,IAAIK,gBAAJ,CAAqBP,MAArB,EAA4BM,SAA5B,EAAsCL,KAAtC,CAAZ;AACA,SAAKG,WAAL,CAAkB,KAAKN,YAAvB,EAAoC,MAApC,EAA2CI,OAA3C,EAAmD,CAAnD;AACH,GAtDsB;AAwDvBM,EAAAA,KAxDuB,iBAwDjBC,IAxDiB,EAwDZC,OAxDY,EAwDJC,YAxDI,EAyDvB;AACI,QAAGD,OAAO,IAAE,KAAZ,EACA;AACI,aAAOE,KAAK,CACRH,IADQ,EAER;AACII,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SADb;AAEIC,QAAAA,MAAM,EAAEJ;AAFZ,OAFQ,CAAZ;AAOH,KATD,MAWA;AACI,aAAOE,KAAK,CACRH,IADQ,EAER;AACII,QAAAA,OAAO,EAAE;AAAE,0BAAgB;AAAlB,SADb;AAEIC,QAAAA,MAAM,EAAEJ,OAFZ;AAGIK,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,YAAf;AAHV,OAFQ,CAAZ;AAQH;AACJ,GA/EsB;AAiFvBP,EAAAA,WAjFuB,uBAiFXK,IAjFW,EAiFNC,OAjFM,EAiFEC,YAjFF,EAiFeO,KAjFf,EAiFsB;AACzCC,IAAAA,aAAa,CAACV,IAAD,EAAMC,OAAN,EAAcC,YAAd,CAAb;;AADyC,aAE1BQ,aAF0B;AAAA;AAAA,MAmEzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AArFyC;AAAA,+EAEzC,iBAA6BV,IAA7B,EAAkCC,OAAlC,EAA0CC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAE2BhC,aAAa,CAACS,QAAd,CAAuBoB,KAAvB,CAA6BC,IAA7B,EAAkCC,OAAlC,EAA0CC,YAA1C,CAF3B;;AAAA;AAEYS,gBAAAA,QAFZ;AAAA;AAAA,uBAG2BA,QAAQ,CAACC,IAAT,EAH3B;;AAAA;AAGYC,gBAAAA,QAHZ;;AAKQ,oBAAGJ,KAAK,IAAE,CAAV,EAAa;AACb;AACQK,oBAAAA,QADR,GACiB,IAAIC,gBAAJ,CAAqBF,QAAQ,CAACG,UAA9B,EAAyCH,QAAQ,CAACI,OAAlD,EAA0DJ,QAAQ,CAACK,IAAnE,CADjB;AAEIhC,oBAAAA,OAAO,CAACiC,GAAR,CAAYN,QAAZ;;AACA,wBAAGC,QAAQ,CAACG,OAAT,CAAiBG,QAAjB,CAA0B,SAA1B,CAAH,EACA;AACIlC,sBAAAA,OAAO,CAACiC,GAAR,CAAY,uBAAZ;AACAjC,sBAAAA,OAAO,CAACiC,GAAR,CAAYL,QAAZ;;AACA,0BAAGA,QAAQ,CAACI,IAAT,CAAcG,QAAd,CAAuBD,QAAvB,CAAgC,SAAhC,CAAH,EACA;AACIlD,wBAAAA,aAAa,CAACS,QAAd,CAAuB2C,iBAAvB,CAAyCR,QAAzC,EAAkD,KAAlD,EADJ,CAEI;AACH,uBAJD,MAKK,IAAGA,QAAQ,CAACI,IAAT,CAAcG,QAAd,CAAuBD,QAAvB,CAAgC,SAAhC,CAAH,EACL,CAEC;AACJ;AACJ,mBAlBD,MAmBK,IAAGX,KAAK,IAAE,CAAV,EAAa;AAClB;AACQK,oBAAAA,QADR,GACiB,IAAIC,gBAAJ,CAAqBF,QAAQ,CAACG,UAA9B,EAAyCH,QAAQ,CAACI,OAAlD,EAA0DJ,QAAQ,CAACK,IAAnE,CADjB;AAEIhC,oBAAAA,OAAO,CAACiC,GAAR,CAAYN,QAAZ;;AACA,wBAAGC,QAAQ,CAACG,OAAT,CAAiBG,QAAjB,CAA0B,aAA1B,CAAH,EACA;AACIlC,sBAAAA,OAAO,CAACiC,GAAR,CAAY,6BAAZ;AACAjC,sBAAAA,OAAO,CAACiC,GAAR,CAAYL,QAAZ;;AACA,0BAAGA,QAAQ,CAACI,IAAT,CAAcG,QAAd,CAAuBD,QAAvB,CAAgC,SAAhC,CAAH,EACA;AACIlD,wBAAAA,aAAa,CAACS,QAAd,CAAuBH,YAAvB,GAAoCvD,gBAAgB,CAACI,UAArD;AACA6C,wBAAAA,aAAa,CAACS,QAAd,CAAuB2C,iBAAvB,CAAyCR,QAAzC,EAAkD,IAAlD;AACA5F,wBAAAA,EAAE,CAACqG,WAAH,CAAeC,IAAf,CAAoB,mBAApB;AACH,uBALD,MAMK,IAAGV,QAAQ,CAACI,IAAT,CAAcG,QAAd,CAAuBD,QAAvB,CAAgC,SAAhC,CAAH,EACL,CAEC;AACJ,qBAdD,MAeM,IAAGN,QAAQ,CAACG,OAAT,CAAiBG,QAAjB,CAA0B,OAA1B,KAAqCN,QAAQ,CAACG,OAAT,CAAiBG,QAAjB,CAA0B,YAA1B,CAAxC,EACN;AACIlD,sBAAAA,aAAa,CAACS,QAAd,CAAuBH,YAAvB,GAAoCvD,gBAAgB,CAACM,oBAArD;AACAL,sBAAAA,EAAE,CAACqG,WAAH,CAAeC,IAAf,CAAoB,mBAApB;AACH,qBAJK,MAKD,IAAGV,QAAQ,CAACG,OAAT,CAAiBG,QAAjB,CAA0B,iBAA1B,CAAH,EACL;AACIlD,sBAAAA,aAAa,CAACS,QAAd,CAAuBH,YAAvB,GAAoCvD,gBAAgB,CAACK,YAArD;AACAJ,sBAAAA,EAAE,CAACqG,WAAH,CAAeC,IAAf,CAAoB,mBAApB;AACH;AACJ;;AArDT;AAAA;;AAAA;AAAA;AAAA;;AAuDQ,oBAAGf,KAAK,IAAE,CAAV,EAAa;AACb;AACIvC,oBAAAA,aAAa,CAACS,QAAd,CAAuBH,YAAvB,GAAoCvD,gBAAgB,CAACO,SAArD;AACAN,oBAAAA,EAAE,CAACqG,WAAH,CAAeC,IAAf,CAAoB,mBAApB;AACH;;AACDtC,gBAAAA,OAAO,CAACC,KAAR;;AA5DR;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFyC;AAAA;AAAA;AAsF5C,GAvKsB;AAyKvBmC,EAAAA,iBAzKuB,6BAyKLG,YAzKK,EAyKQC,UAzKR,EA0KvB;AACI,SAAKtD,WAAL,CAAiBzC,IAAjB,GAAsB8F,YAAY,CAACP,IAAb,CAAkBvF,IAAxC;AACA,SAAKyC,WAAL,CAAiBvC,GAAjB,GAAqB4F,YAAY,CAACP,IAAb,CAAkBS,GAAvC;AACA,SAAKvD,WAAL,CAAiBtC,UAAjB,GAA4B2F,YAAY,CAACP,IAAb,CAAkBpF,UAA9C;AACA,SAAKsC,WAAL,CAAiBrC,YAAjB,GAA8B0F,YAAY,CAACP,IAAb,CAAkBU,EAAhD;AACA,SAAKxD,WAAL,CAAiBpC,WAAjB,GAA6ByF,YAAY,CAACP,IAAb,CAAkBlF,WAA/C;AACA,SAAKoC,WAAL,CAAiBnC,YAAjB,GAA8BwF,YAAY,CAACP,IAAb,CAAkBW,MAAhD;AACA,SAAKzD,WAAL,CAAiBlC,QAAjB,GAA0BuF,YAAY,CAACP,IAAb,CAAkBhF,QAA5C;AACA,SAAKkC,WAAL,CAAiBjC,UAAjB,GAA4BsF,YAAY,CAACP,IAAb,CAAkBY,SAA9C;AACA,SAAK1D,WAAL,CAAiBhC,cAAjB,GAAgCqF,YAAY,CAACP,IAAb,CAAkB9E,cAAlD;AACA,SAAKgC,WAAL,CAAiB/B,QAAjB,GAA0BoF,YAAY,CAACP,IAAb,CAAkBa,UAA5C;AACA,SAAK3D,WAAL,CAAiB5B,MAAjB,GAAwBiF,YAAY,CAACP,IAAb,CAAkB1E,MAA1C;;AAEA,QAAGkF,UAAH,EACA;AACI,WAAKtD,WAAL,CAAiB9B,WAAjB,GAA6BmF,YAAY,CAACP,IAAb,CAAkBc,SAA/C;AACA,WAAK5D,WAAL,CAAiB7B,SAAjB,GAA2BkF,YAAY,CAACP,IAAb,CAAkBe,SAA7C;AACH;;AAED/C,IAAAA,OAAO,CAACiC,GAAR,CAAY,KAAK/C,WAAjB;AACH,GA9LsB;AAgMvB8D,EAAAA,KAhMuB,mBAgMd,CAAE;AAhMY,CAAT,CAAlB,EAmMA;;AACA,IAAIxC,WAAW,GAAGxE,EAAE,CAACQ,KAAH,CAAS;AACvBC,EAAAA,IAAI,EAAC,aADkB;AAEvBC,EAAAA,UAAU,EAAE;AACRuG,IAAAA,KAAK,EAAE,EADC;AAERC,IAAAA,IAAI,EAAE;AAFE,GAFW;AAM3B;AACI3F,EAAAA,IAAI,EAAE,cAEE8C,MAFF,EAGEC,KAHF,EAIA;AAAA,QAFED,MAEF;AAFEA,MAAAA,MAEF,GAFU,MAEV;AAAA;;AAAA,QADEC,KACF;AADEA,MAAAA,KACF,GADS,MACT;AAAA;;AACF,SAAK2C,KAAL,GAAa5C,MAAb;AACA,SAAK6C,IAAL,GAAY5C,KAAZ;AACH;AAdsB,CAAT,CAAlB,EAiBA;;AACA,IAAI6C,IAAI,GAAGnH,EAAE,CAACQ,KAAH,CAAS;AAChBC,EAAAA,IAAI,EAAC,MADW;AAEhBC,EAAAA,UAAU,EAAE;AACRmG,IAAAA,UAAU,EAAE,EADJ;AAERO,IAAAA,GAAG,EAAE,EAFG;AAGRN,IAAAA,SAAS,EAAC,EAHF;AAIR1E,IAAAA,WAAW,EAAC,EAJJ;AAKRC,IAAAA,aAAa,EAAC,EALN;AAMRQ,IAAAA,UAAU,EAAC,EANH;AAOR7B,IAAAA,QAAQ,EAAC,EAPD;AAQRqG,IAAAA,SAAS,EAAC,CARF;AASRC,IAAAA,SAAS,EAAC,KATF;AAURC,IAAAA,SAAS,EAAC,EAVF;AAWR3G,IAAAA,UAAU,EAAC,EAXH;AAYRH,IAAAA,IAAI,EAAC,EAZG;AAaR0F,IAAAA,QAAQ,EAAC,EAbD;AAcRqB,IAAAA,QAAQ,EAAC,EAdD;AAeRb,IAAAA,MAAM,EAAC,EAfC;AAgBRI,IAAAA,SAAS,EAAC,CAhBF;AAiBRjG,IAAAA,WAAW,EAAC,EAjBJ;AAkBR2F,IAAAA,GAAG,EAAC,EAlBI;AAmBRC,IAAAA,EAAE,EAAC,EAnBK;AAoBRE,IAAAA,SAAS,EAAC,EApBF;AAqBRa,IAAAA,EAAE,EAAC,EArBK;AAsBRvG,IAAAA,cAAc,EAAC,EAtBP;AAuBRI,IAAAA,MAAM,EAAC;AAvBC;AAFI,CAAT,CAAX,EA6BA;;AACA,IAAIuE,gBAAgB,GAAG7F,EAAE,CAACQ,KAAH,CAAS;AAC5BC,EAAAA,IAAI,EAAC,kBADuB;AAE5BC,EAAAA,UAAU,EAAE;AACRoF,IAAAA,UAAU,EAAE,EADJ;AAERC,IAAAA,OAAO,EAAE,EAFD;AAGRC,IAAAA,IAAI,EAACmB;AAHG,GAFgB;AAOhC;AACI5F,EAAAA,IAAI,EAAE,cAEEmG,WAFF,EAGEC,QAHF,EAIEC,KAJF,EAKA;AAAA,QAHEF,WAGF;AAHEA,MAAAA,WAGF,GAHe,MAGf;AAAA;;AAAA,QAFEC,QAEF;AAFEA,MAAAA,QAEF,GAFY,MAEZ;AAAA;;AAAA,QADEC,KACF;AADEA,MAAAA,KACF,GADQ,IACR;AAAA;;AACF,SAAK9B,UAAL,GAAkB4B,WAAlB;AACA,SAAK3B,OAAL,GAAe4B,QAAf;AACA,SAAK3B,IAAL,GAAU4B,KAAV;AACH;AAjB2B,CAAT,CAAvB,EAoBA;;AACA,IAAIhD,gBAAgB,GAAG5E,EAAE,CAACQ,KAAH,CAAS;AAC5BC,EAAAA,IAAI,EAAC,kBADuB;AAE5BC,EAAAA,UAAU,EAAE;AACRuG,IAAAA,KAAK,EAAE,EADC;AAERO,IAAAA,QAAQ,EAAC,EAFD;AAGRN,IAAAA,IAAI,EAAE;AAHE,GAFgB;AAOhC;AACI3F,EAAAA,IAAI,EAAE,cAEE8C,MAFF,EAGEM,SAHF,EAIEL,KAJF,EAKA;AAAA,QAHED,MAGF;AAHEA,MAAAA,MAGF,GAHU,MAGV;AAAA;;AAAA,QAFEM,SAEF;AAFEA,MAAAA,SAEF,GAFY,MAEZ;AAAA;;AAAA,QADEL,KACF;AADEA,MAAAA,KACF,GADS,MACT;AAAA;;AACF,SAAK2C,KAAL,GAAa5C,MAAb;AACA,SAAKmD,QAAL,GAAgB7C,SAAhB;AACA,SAAKuC,IAAL,GAAY5C,KAAZ;AACH;AAjB2B,CAAT,CAAvB;AAoBAuD,MAAM,CAACC,OAAP,GAAgB9E,aAAhB","sourceRoot":"/","sourcesContent":["//-------------------------------------------enumeration for type of business-------------------------//\r\nvar ResponseTypeEnum = cc.Enum({\r\n    None:0,\r\n    Successful: 1,           \r\n    UserNotFound: 2,\r\n    InvalidEmailPassword: 3,\r\n    WentWrong:4              \r\n});\r\n//-------------------------------------------class for Student Data-------------------------//\r\nvar Student = cc.Class({\r\n    name:\"Student\",\r\n    properties: {\r\n        name: \"\",\r\n        dOB: \"\",\r\n        gradeLevel: \"\",\r\n        emailAddress: \"\",\r\n        teacherName: \"\",\r\n        facebookPage: \"\",\r\n        gamesWon: 0,\r\n        testsTaken: 0,\r\n        testingAverage: 0,\r\n        gameCash: 0,\r\n        AccessToken:\"\",\r\n        UpdatedAt:0,\r\n        userID:\"\"\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _name = \"none\",\r\n            _dob = \"none\",\r\n            _gradeLevel = \"none\",\r\n            _emailAddress = \"none\",\r\n            _teacherName = \"none\",\r\n            _facebookPage = \"none\",\r\n            _gamesWon = 0,\r\n            _testsTaken = 0,\r\n            _testingAverage = 0,\r\n            _gameCash = 0\r\n        ) {\r\n        this.name = _name;\r\n        this.dOB = _dob;\r\n        this.gradeLevel = _gradeLevel;\r\n        this.emailAddress = _emailAddress;\r\n        this.teacherName = _teacherName;\r\n        this.facebookPage = _facebookPage;\r\n        this.gamesWon = _gamesWon;\r\n        this.testsTaken = _testsTaken;\r\n        this.testingAverage = _testingAverage;\r\n        this.gameCash = _gameCash;\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for Teacher Data-------------------------////\r\nvar Teacher = cc.Class({\r\n    name: \"Teacher\",\r\n    properties: {\r\n        name: \"\",\r\n        school: \"\",\r\n        classTaught: 0,\r\n        emailAddress: \"\",\r\n        contactNumber: \"\",\r\n    },\r\n    //Default and Parametrized constructor\r\n    ctor: function\r\n        (_name = \"none\",\r\n            _school = \"none\",\r\n            _classTaught = 0,\r\n            _emailAddress = \"none\",\r\n            _contactNumber = \"none\"\r\n        ) {\r\n        this.name = _name;\r\n        this.school = _school;\r\n        this.classTaught = _classTaught;\r\n        this.emailAddress = _emailAddress;\r\n        this.contactNumber = _contactNumber;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for Program Ambassadors Data-------------------------////\r\nvar ProgramAmbassadors = cc.Class({\r\n    name: \"ProgramAmbassadors\",\r\n    properties: {\r\n        name: \"\",\r\n        emailAddress: \"\",\r\n        contactNumber: \"\",\r\n        address: \"\",\r\n    },\r\n    //Deafult and Parametrized constructor\r\n    ctor: function\r\n        (_name = \"none\",\r\n            _emailAddress = \"none\",\r\n            _contactNumber = \"none\",\r\n            _address = \"none\"\r\n        ) {\r\n        this.name = _name;\r\n        this.emailAddress = _emailAddress;\r\n        this.contactNumber = _contactNumber;\r\n        this.address = _address;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for School Administrators Data-------------------------////\r\nvar SchoolAdministrators = cc.Class({\r\n    name: \"SchoolAdministrators\",\r\n    properties: {\r\n        name: \"\",\r\n        schoolName: \"\",\r\n        contactNumber: \"\",\r\n        emailAddress: \"\",\r\n    },\r\n    //Default and Parametrized constructor\r\n    ctor: function\r\n        (_name = \"none\",\r\n            _schoolName = \"none\",\r\n            _emailAddress = \"none\",\r\n            _contactNumber = \"none\"\r\n        ) {\r\n        this.name = _name;\r\n        this.schoolName = _schoolName;\r\n        this.contactNumber = _contactNumber;\r\n        this.emailAddress = _emailAddress;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for Program Directors Data-------------------------////\r\nvar ProgramDirectors = cc.Class({\r\n    name: \"ProgramDirectors\",\r\n    properties: {\r\n        name: \"\",\r\n        emailAddress: \"\",\r\n    },\r\n    //Default and Parametrized constructor\r\n    ctor: function\r\n        (_name = \"none\",\r\n            _emailAddress = \"none\"\r\n        )\r\n    {\r\n        this.name = _name;\r\n        this.emailAddress = _emailAddress;\r\n    }\r\n});\r\n\r\n//-------------------------------------------class for ServerBackend-------------------------//\r\nvar ServerBackend=cc.Class({\r\n    name:\"ServerBackend\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        StudentData: {\r\n            default: null,                \r\n            type: Student,\r\n            serializable: true,\r\n            tooltip: \"current logged in student data\"\r\n        },\r\n        ResponseType:{\r\n            displayName:\"Response\",\r\n            type: ResponseTypeEnum,\r\n            default: ResponseTypeEnum.None,\r\n            serializable: true,\r\n            tooltip:\"ResponseType catogory for api's\",}, \r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    RemovePersistNode()\r\n    {\r\n        ServerBackend.Instance=null;\r\n        cc.game.removePersistRootNode(this.node);\r\n    },\r\n\r\n    onLoad() {\r\n        if(!ServerBackend.Instance)\r\n        {\r\n            ServerBackend.Instance=this;\r\n            cc.game.addPersistRootNode(this.node);\r\n            this.StudentData=new Student();\r\n            console.error(\"creating instance \"+this.node.name);\r\n        }\r\n\r\n        //private variables\r\n        this.getUserAPI=\"https://ia3nqkp6th.execute-api.us-east-2.amazonaws.com/dev/getUser\";\r\n        this.loginUserAPI=\"https://ia3nqkp6th.execute-api.us-east-2.amazonaws.com/dev/loginUser\";\r\n\r\n       // this.GetUserData(\"xtrondev@gmail.com\",\"Student\");\r\n    },\r\n\r\n    GetUserData(_email,_role)\r\n    {\r\n        var payload=new UserPayload(_email,_role);\r\n        this.CallRESTAPI( this.getUserAPI,\"POST\",payload,1);    \r\n    },\r\n\r\n    LoginUser(_email,_password,_role)\r\n    {\r\n        var payload=new UserLoginPayload(_email,_password,_role);\r\n        this.CallRESTAPI( this.loginUserAPI,\"POST\",payload,2);    \r\n    },\r\n\r\n    Fetch(_url,_method,_requestBody)\r\n    {\r\n        if(_method==\"GET\")\r\n        {\r\n            return fetch(\r\n                _url, \r\n                {\r\n                    headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\r\n                    method: _method,\r\n                }\r\n              );\r\n        }\r\n        else\r\n        {\r\n            return fetch(\r\n                _url, \r\n                {\r\n                    headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\r\n                    method: _method,\r\n                    body: JSON.stringify(_requestBody)\r\n                }\r\n              );\r\n        }\r\n    },\r\n    \r\n    CallRESTAPI(_url,_method,_requestBody,_type) {\r\n        Fetch_Promise(_url,_method,_requestBody);\r\n        async function Fetch_Promise(_url,_method,_requestBody) {\r\n            try {\r\n                var Response=await ServerBackend.Instance.Fetch(_url,_method,_requestBody);\r\n                var TempData=await Response.json();\r\n                \r\n                if(_type==1) //getting user data\r\n                {\r\n                    var MainData=new UserDataResponse(TempData.statusCode,TempData.message,TempData.data);\r\n                    console.log(TempData);\r\n                    if(MainData.message.includes(\"SUCCESS\"))\r\n                    {\r\n                        console.log(\"got data successfully\");\r\n                        console.log(MainData);\r\n                        if(MainData.data.roleType.includes(\"Student\"))\r\n                        {\r\n                            ServerBackend.Instance.AssignStudentData(MainData,false);\r\n                            //cc.systemEvent.emit(\"AssignProfileData\");\r\n                        }\r\n                        else if(MainData.data.roleType.includes(\"Teacher\"))\r\n                        {\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n                else if(_type==2) //login user\r\n                {\r\n                    var MainData=new UserDataResponse(TempData.statusCode,TempData.message,TempData.data);\r\n                    console.log(TempData);\r\n                    if(MainData.message.includes(\"sucessfully\"))\r\n                    {\r\n                        console.log(\"user logged in successfully\");\r\n                        console.log(MainData);\r\n                        if(MainData.data.roleType.includes(\"Student\"))\r\n                        {\r\n                            ServerBackend.Instance.ResponseType=ResponseTypeEnum.Successful;\r\n                            ServerBackend.Instance.AssignStudentData(MainData,true);\r\n                            cc.systemEvent.emit(\"AssignProfileData\");\r\n                        }\r\n                        else if(MainData.data.roleType.includes(\"Teacher\"))\r\n                        {\r\n                            \r\n                        }\r\n                    }\r\n                    else  if(MainData.message.includes(\"wrong\") ||MainData.message.includes(\"characters\"))\r\n                    {\r\n                        ServerBackend.Instance.ResponseType=ResponseTypeEnum.InvalidEmailPassword;\r\n                        cc.systemEvent.emit(\"AssignProfileData\");\r\n                    }\r\n                    else if(MainData.message.includes(\"Data not Found!\"))\r\n                    {\r\n                        ServerBackend.Instance.ResponseType=ResponseTypeEnum.UserNotFound;\r\n                        cc.systemEvent.emit(\"AssignProfileData\");\r\n                    }\r\n                }\r\n            } catch (e) {\r\n                if(_type==2) //login user error\r\n                {\r\n                    ServerBackend.Instance.ResponseType=ResponseTypeEnum.WentWrong;\r\n                    cc.systemEvent.emit(\"AssignProfileData\");\r\n                }\r\n                console.error(e);\r\n            } finally {\r\n              //  console.log('We do cleanup here');\r\n            }    \r\n        }\r\n        //#region Commented\r\n        // fetch(\r\n        //     _url, \r\n        //     {\r\n        //         headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\r\n        //         method: _method,\r\n        //         body: JSON.stringify(_requestBody)\r\n        //     }\r\n        //   )\r\n        //   .then(response=>{\r\n        //       response.json().then(data=>{\r\n        //         //console.log(data);\r\n        //         //return data; \r\n        //     }); \r\n        //   })\r\n        //   .catch(function(err) {\r\n        //     console.log(err);\r\n        //   });\r\n        //#endregion\r\n    },\r\n\r\n    AssignStudentData(DataResponse,isLoggedIn)\r\n    {\r\n        this.StudentData.name=DataResponse.data.name;\r\n        this.StudentData.dOB=DataResponse.data.doB;\r\n        this.StudentData.gradeLevel=DataResponse.data.gradeLevel;\r\n        this.StudentData.emailAddress=DataResponse.data.SK;\r\n        this.StudentData.teacherName=DataResponse.data.teacherName;\r\n        this.StudentData.facebookPage=DataResponse.data.fbPage;\r\n        this.StudentData.gamesWon=DataResponse.data.gamesWon;\r\n        this.StudentData.testsTaken=DataResponse.data.testTaken;\r\n        this.StudentData.testingAverage=DataResponse.data.testingAverage;\r\n        this.StudentData.gameCash=DataResponse.data.inGameCash;\r\n        this.StudentData.userID=DataResponse.data.userID;\r\n\r\n        if(isLoggedIn)\r\n        {\r\n            this.StudentData.AccessToken=DataResponse.data.userToken;\r\n            this.StudentData.UpdatedAt=DataResponse.data.updatedAt; \r\n        }\r\n\r\n        console.log(this.StudentData);\r\n    },\r\n\r\n    start () {},\r\n});\r\n\r\n//-------------------------------------------class for sending payload to receive data-------------------------//\r\nvar UserPayload = cc.Class({\r\n    name:\"UserPayload\",\r\n    properties: {\r\n        email: \"\",\r\n        role: \"\",\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _email= 'none',\r\n            _role= \"none\"\r\n        ) {\r\n        this.email = _email;\r\n        this.role = _role;  \r\n    },\r\n});\r\n\r\n//-------------------------------------------class for User Data-------------------------//\r\nvar Data = cc.Class({\r\n    name:\"Data\",\r\n    properties: {\r\n        inGameCash: \"\",\r\n        LSK: \"\",\r\n        userToken:\"\",\r\n        classTaught:\"\",\r\n        contactNumber:\"\",\r\n        schoolName:\"\",\r\n        gamesWon:\"\",\r\n        createdAt:0,\r\n        isDeleted:false,\r\n        TableName:\"\",\r\n        gradeLevel:\"\",\r\n        name:\"\",\r\n        roleType:\"\",\r\n        password:\"\",\r\n        fbPage:\"\",\r\n        updatedAt:0,\r\n        teacherName:\"\",\r\n        doB:\"\",\r\n        SK:\"\",\r\n        testTaken:\"\",\r\n        PK:\"\",\r\n        testingAverage:\"\",\r\n        userID:\"\"\r\n    },\r\n});\r\n\r\n//-------------------------------------------root class of response received when getting user api is hit-------------------------//\r\nvar UserDataResponse = cc.Class({\r\n    name:\"UserDataResponse\",\r\n    properties: {\r\n        statusCode: \"\",\r\n        message: \"\",\r\n        data:Data\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _statusCode= \"none\",\r\n            _message= \"none\",\r\n            _data=null\r\n        ) {\r\n        this.statusCode = _statusCode;\r\n        this.message = _message;\r\n        this.data=_data;\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for sending payload to login user-------------------------------//\r\nvar UserLoginPayload = cc.Class({\r\n    name:\"UserLoginPayload\",\r\n    properties: {\r\n        email: \"\",\r\n        password:\"\",\r\n        role: \"\",\r\n    },\r\n//Deafault and Parametrized constructor\r\n    ctor: function\r\n        (\r\n            _email= 'none',\r\n            _password=\"none\",\r\n            _role= \"none\"\r\n        ) {\r\n        this.email = _email;\r\n        this.password = _password;\r\n        this.role = _role;  \r\n    },\r\n});\r\n\r\nmodule.exports= ServerBackend;\r\n"]}