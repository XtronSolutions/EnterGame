{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","DamageDecisionResult","GamePlayReferenceManager","businessDetailNodes","SenderDamagingID","businessTakeOverNodes","businessDamagingNodes","oneQuestionNodes","selectPlayerProfitNodes","selectedPlayerTakeOver","selectedPlayerDamaging","businessDetailPartnershipNodes","businessDetailPayDayNodes","PartnerShipData","PartnerShipOfferReceived","CancelledID","StartGameCash","SelectedBusinessPayDay","HMAmount","BMAmount","BMLocations","SelectedBusinessIndex","TurnOverForInvest","BusinessSetupCardFunctionality","GivenCashBusiness","StartAnyBusinessWithoutCash","PreviousCash","TimeoutRef","CompletionWindowTime","LongMessageTime","ShortMessageTime","globalTurnTimer","PayDayInfo","InvestSellInfo","TimerTimeout","DoubleDayBusinessHB","DoubleDayBusinessBM","GiveProfitUserID","TotalPayDay","BankRuptedCard","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","AddButtonNode","AddCashScreen","AddCashLabel","AddCashEditBox","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","TimerText","BlockerNode","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","BusinessManipulationPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","PassedPayDayCountLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","WaitingScreenLabel","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PartnershipUI","WaitingStatusScreen","MainScreen","TitleName","PlayerName","PlayerCash","PartnerShipPrefab","DecisionScreen","DecisionPlayerName","DecisionPlayerCash","DecisionDescription","ResultUI","ResultScreen","StatusLabel","BodyLabel","BusinessPayDaySetupUI","TitleContentLabel","BusinessPrefab","SelectPlayerForProfitSetupUI","SelectPlayerGeneric","SelectBusinessGeneric","DamagingInformationDecisionSetup","DiceResultScreen","BusinessSelectScreen","DamageBusinessSelect","BuyHalfBusinessSetupUI","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HBDiceCounter","BMDiceCounter","NextHalfPayDay","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PartnershipSetupUI","ResultSetupUI","BusinessPayDayUISetup","SelectPlayerForProfitUI","SelectPlayerTakeOverSetup","SelectPlayerDamagingSetup","DecisionDamagingSetup","SelectBusinessTakeOver","BuyHalfBusinessUISetup","PopUpUI","PopUpUILabel","PopUpUIButton","GameplayUIScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","BusinessDoublePayScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","SelectPlayerForProfitScreen","SelectPlayerTakeOverScreen","SelectPlayerDamagingScreen","SelectBusinessTakeOverScreen","InsufficientBalanceScreen","TempDiceText","LeaveRoomButton","AvatarSprites","SpriteFrame","ResetAllData","ResetTurnVariable","GoldInvested","GoldSold","StockInvested","StockSold","CheckReferences","require","onEnable","systemEvent","on","SyncData","onDisable","off","onLoad","IsBotTurn","PayDayCount","DoublePayDayCount","IsBankrupted","BankruptedAmount","AddCashAmount","Timer","TimerStarted","ToggleScreen_InsufficientBalance","_state","active","Exit___InsufficientBalance","InitialScreen_SpectateMode","CloseInitialScreen_SpectateMode","ToggleLeaveRoomButton_SpectateModeUI","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","ToggleCashAddScreen_BusinessSetup","EnableCashAdd_BusinessSetup","StudentData","gameCash","OnCashAdd_BusinessSetup","_val","OnClickDoneCashAdd_BusinessSetup","_gamecash","parseInt","_amount","undefined","Cash","console","log","toString","UpdateUserData","ShowToast","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","Init_BusinessSetup","PlayerData","CardFunctionality","CardDataFunctionality","BusinessInfo","BusinessType","EnumBusinessType","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","userID","PlayerUID","OnChangeName_BusinessSetup","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","OnChangAvatarID_BusinessSetup","AvatarID","avatarId","GetObj_BusinessSetup","UID","isNaN","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","Math","abs","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","PushDataForPlayerLeft","_data","_mode","GetSelectedMode","_playerDataIntance","PlayerID","HomeBasedAmount","IsActive","_playerBusinessDataIntance","push","RaiseEvent","_ID","_playerLeft","_isSpectate","PhotonActor","getCustomProperty","MaxPlayers","GetRealActors","actorNr","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_businessName","_isHomeBased","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","completeCardTurn","InitialSetup_BusinessSetup","IsBankrupt","BankruptAmount","GetTurnNumber","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","IsBot","isactive","_active","clearTimeout","UpdateTimer","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","CheckMarketingAmountShare_CardFunctionality","_manager","_playerIndex","HasMarketingCompany","RaiseEventForMarketingShare","_amnt","_id","_msg","ID","msg","OnMarketingAmountSelected_TurnDecision","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","DestroyGeneratedNodes","OnExpandButtonExitClicked_TurnDecision","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","_isTurnOver","ResetStockBusinessNameInput","RollOneDice","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","EnablePartnership_PartnerShipSetup","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ToggleScreen_PartnerShipSetup","ToggleWaitingScreen_PartnerShipSetup","ToggleDecisionScreen_PartnerShipSetup","Reset_PartnerShipSetup","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","_totalLocations","LocationsName","SetBusinessMode","SetMode","SetBusinessValue","SetFinalBusinessValue","_allLocationsAmount","_finalAmount","SetBalance","SetLocations","IsPartnership","TogglePartnerShipButton","SetPartnerName","PartnerName","EnablePartnershipDecision_PartnerShipSetup","customProperties","PlayerSessionData","Exit_PartnerShipSetup","destroy","ReceiveEvent_PartnershipSetup","_actor","_turn","Turn","_playerData","_SelectedBusinessIndex","SelectedBusinsessIndex","_businessValue","BusValue","_payAmount","_businessMode","CheckSpectate","AcceptOffer_PartnershipSetup","_allActors","RoomActors","myIndex","GetMyIndex","RaiseEventDecisionAnswer_PartnershipSetup","CancelOffer_PartnershipSetup","_isAccepted","_payment","_isCancelled","_uID","_mainData","Accepted","CashPayment","Cancelled","BusinessIndex","ReceiveEventDecisionAnswer_PartnershipSetup","_accepted","_cash","_cancelled","_uid","PartnerID","includes","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","RaiseEventToSyncInfo","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","loanTaken","Button","interactable","GetLoanAmount_PayDay","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_forSelectedBusiness","_hMAmount","_bmAmount","_bmLocation","PaydayCounter","DoublePayCounter","_halfPayday","CanGiveProfitOnPayDay","UserIDForProfitPayDay","ReceiveDoublePayDay","_res","_time","UpdateCash_PayDay","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_doublePayDay","_dice","_amountToBeSend","_amountToBeAdjusted","_multiplier","_paydaymultiplier","doublePayDayAdded","SendProfit_Partner_TurnDecision","ReceivePayment_PayDay","_locations","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","ProcessBankrupt","_showText","_txt","Exit_SelectPlayerGeneric","ExitScreen__BusinessGenric","ToggleDiceResultScreen_DamageDecision","ToggleMainScreen_DamageDecision","ToggleScreen_BuyHalfBusiness","emit","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","StartNewGame_PayDay","mode","_sendingData","IsDiceRolled","IsBankRupted","_myActor","playerData","BankruptedNextTurn","StartNewGame_BankRupted","ShowInfo","info","RaiseEventForCompletion","ToggleDoublePayNextTurn","NextTurnHalfPayDayCounter","ToggleHalfPayNextTurn","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","_sellAmount","Reset_SellBusinessUISetup","SetSellingAmount","ToggleSellLocationButton","SetBusinessUI_BusinessManipulationUISetup","Amount","SelectBusinessforPayDay","_isTurnover","EnableManipilationScreen__BusinessManipulationUISetup","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","ShowQuestionToast","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_modeIndex","RoomEssentials","IsSpectate","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","ToggleScreen_BusinessPayDayUISetup","EditTitle_BusinessPayDayUISetup","_mainTitle","_tileContent","ExitScreen_BusinessPayDayUISetup","ClearBusiness_BusinessPayDayUISetup","ExitScreen_AlongTurnOver_BusinessPayDayUISetup","ProcessBusiness_BusinessPayDayUISetup","_businessType","EnableSeletiveDoublePayDay_BusinessPayDayUISetup","_isBrickAndMortar","ToggleScreen_SelectPlayerForProfit","SetUpSpaceScreen_SelectPlayerForProfit","ResetSpaceScreen_SelectPlayerForProfit","Exit_SelectPlayerForProfit","ExitAlongTurnOver_SelectPlayerForProfit","ToggleScreen_SelectPlayerTakeOver","SetUpSpaceScreen_SelectPlayerTakeOver","_buyHalfBusiness","setBuyHalf","k","setPlayerIndex","ResetSpaceScreen_SelectPlayerTakeOver","ResetSpaceScreen_SelectPlayerDamaging","ToggleScreen_SelectPlayerDamaging","ExitAlongTurnOver_SelectPlayerGeneric","ToggleScreen_BusinessTakeOver","SetBusinessUI_BusinessTakeOver","_OtherPlayerIndex","Reset_BusinessTakeOver","SetPlayerObject","SetPlayerIndex","setHalfBusiness","EnableScreen__BusinessTakeOver","Reset__DamageDecision","ToggleBusinessScreen_DamageDecision","ExitScreenAlongTurnOver__BusinessGenric","SetUpSpaceScreen_SelectPlayerDamaging","SetBusinessUI_DamageDecision","EnableBusinessScreen_DamageDecision","_noButton","SetMesageText_DamageDecision","EnableDiceResult_DamageDecision","_fineMultiplier","_text","SetSenderID_DamageDecision","ReceiveEvent_DamageDecision","_reciverID","_cashReceived","_isDiceRolled","Get_GameplayUIManager","PayAmount_DamageDecision","SelectBusinessForHalfOwnership_DamagingDecision","_selectedPlayerIndex","_playersData","_myDataIndex","GivePartnerShip_DamageDecision","_businessLength","_businessCounter","SetTitleText_BuyHalfBusiness","message","time","_hasbutton","SelfToast","CompleteToast","ShowResultScreen","_status","RestartTheGame","RestartGame","_dataInfo"],"mappings":";;;;;;AAAA,IAAIA,WAAW,GAAG,IAAlB;AACA,IAAIC,oBAAoB,GAAG,CAA3B;AACA,IAAIC,wBAAwB,GAAG,IAA/B;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,qBAAqB,GAAG,EAA5B;AACA,IAAIC,qBAAqB,GAAG,EAA5B;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,uBAAuB,GAAG,EAA9B;AACA,IAAIC,sBAAsB,GAAG,EAA7B;AACA,IAAIC,sBAAsB,GAAG,EAA7B;AACA,IAAIC,8BAA8B,GAAG,EAArC;AACA,IAAIC,yBAAyB,GAAG,EAAhC;AACA,IAAIC,eAAe,GAAG,IAAtB;AACA,IAAIC,wBAAwB,GAAG,KAA/B;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,aAAa,GAAG,KAApB;AACA,IAAIC,sBAAsB,GAAG,KAA7B;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,WAAW,GAAG,CAAlB;AACA,IAAIC,qBAAqB,GAAG,CAA5B;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AACA,IAAIC,8BAA8B,GAAG,KAArC;AACA,IAAIC,iBAAiB,GAAG,CAAxB;AACA,IAAIC,2BAA2B,GAAG,KAAlC;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,UAAJ;AACA,IAAIC,oBAAoB,GAAG,IAA3B;AACA,IAAIC,eAAe,GAAG,IAAtB;AACA,IAAIC,gBAAgB,GAAG,IAAvB;AACA,IAAIC,eAAe,GAAG,EAAtB;AACA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,YAAJ;AACA,IAAIC,mBAAmB,GAAG,CAA1B;AACA,IAAIC,mBAAmB,GAAG,CAA1B;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,WAAW,GAAG,CAAlB;AACA,IAAIC,cAAc,GAAG,KAArB,EACA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAGC,EAAE,CAACC,IAAH,CAAQ;AAC3BC,EAAAA,IAAI,EAAE,CADqB;AAE3BC,EAAAA,WAAW,EAAE,KAFc;AAG3BC,EAAAA,aAAa,EAAE,KAHY;AAI3BC,EAAAA,cAAc,EAAE,KAJW;AAK3BC,EAAAA,aAAa,EAAE,KALY;AAM3BC,EAAAA,aAAa,EAAE,KANY;AAO3BC,EAAAA,KAAK,EAAE;AAPoB,CAAR,CAArB,EASA;;AACA,IAAIC,eAAe,GAAGT,EAAE,CAACU,KAAH,CAAS;AAC7BC,EAAAA,IAAI,EAAE,iBADuB;AAG7BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAAE;AACZC,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZ,iBAAS,IAHG;AAIZC,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KADJ;AAQVC,IAAAA,YAAY,EAAE;AACZL,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZ,iBAAS,IAHG;AAIZC,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KARJ;AAeVE,IAAAA,kBAAkB,EAAE;AAClBN,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACqB,IAFS;AAGlB,iBAAS,EAHS;AAIlBJ,MAAAA,YAAY,EAAE,KAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAfV;AAsBVI,IAAAA,kBAAkB,EAAE;AAClBR,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACqB,IAFS;AAGlB,iBAAS,EAHS;AAIlBJ,MAAAA,YAAY,EAAE,KAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAtBV;AA6BVK,IAAAA,iBAAiB,EAAE;AACjBT,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFQ;AAGjB,iBAAS,IAHQ;AAIjBP,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KA7BT;AAoCVO,IAAAA,iBAAiB,EAAE;AACjBX,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFQ;AAGjB,iBAAS,IAHQ;AAIjBP,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KApCT;AA2CVQ,IAAAA,eAAe,EAAE;AACfZ,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGf,iBAAS,IAHM;AAIfV,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KA3CP;AAkDVU,IAAAA,oBAAoB,EAAE;AACpBd,MAAAA,WAAW,EAAE,sBADO;AAEpBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFW;AAGpB,iBAAS,IAHW;AAIpBV,MAAAA,YAAY,EAAE,IAJM;AAKpBC,MAAAA,OAAO,EAAE;AALW,KAlDZ;AAyDVW,IAAAA,OAAO,EAAE;AACPf,MAAAA,WAAW,EAAE,SADN;AAEPC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFF;AAGP,iBAAS,IAHF;AAIPC,MAAAA,YAAY,EAAE,IAJP;AAKPC,MAAAA,OAAO,EAAE;AALF,KAzDC;AAgEVY,IAAAA,SAAS,EAAE;AACThB,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFA;AAGT,iBAAS,IAHA;AAITV,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KAhED;AAuEVa,IAAAA,iBAAiB,EAAE;AACjBjB,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjB,iBAAS,IAHQ;AAIjBV,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KAvET;AA8EVc,IAAAA,aAAa,EAAE;AACblB,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KA9EL;AAqFVe,IAAAA,UAAU,EAAE;AACVnB,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEhB,cAFI;AAGV,iBAASA,cAAc,CAACG,IAHd;AAIVe,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KArFF;AA4FVgB,IAAAA,eAAe,EAAE;AACfpB,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAE,CAACf,EAAE,CAAC2B,IAAJ,CAFS;AAGf,iBAAS,EAHM;AAIfV,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KA5FP;AAmGViB,IAAAA,iBAAiB,EAAE;AACjBrB,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjB,iBAAS,IAHQ;AAIjBV,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KAnGT;AA0GVkB,IAAAA,cAAc,EAAE;AACdtB,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGd,iBAAS,IAHK;AAIdV,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK,KA1GN;AAiHVmB,IAAAA,aAAa,EAAE;AACbvB,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAjHL;AAwHVoB,IAAAA,aAAa,EAAE;AACbxB,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAxHL;AA+HVqB,IAAAA,YAAY,EAAE;AACZzB,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZ,iBAAS,IAHG;AAIZC,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KA/HJ;AAsIVsB,IAAAA,cAAc,EAAE;AACd1B,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFK;AAGd,iBAAS,IAHK;AAIdP,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK;AAtIN,GAHiB;AAiJ7BuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD,GAnJ4B;AAqJ7BC,EAAAA,wBAAwB,EAAE,kCAAU/B,IAAV,EAAgB;AACxC,SAAKE,YAAL,CAAkB8B,MAAlB,GAA2BhC,IAA3B;AACD;AAvJ4B,CAAT,CAAtB,EAyJA;;AACA,IAAIiC,mBAAmB,GAAG5C,EAAE,CAACU,KAAH,CAAS;AACjCC,EAAAA,IAAI,EAAE,qBAD2B;AAGjCC,EAAAA,UAAU,EAAE;AACViC,IAAAA,gBAAgB,EAAE;AAChB/B,MAAAA,WAAW,EAAE,kBADG;AAEhBC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFO;AAGhB,iBAAS,IAHO;AAIhBP,MAAAA,YAAY,EAAE,IAJE;AAKhBC,MAAAA,OAAO,EAAE;AALO,KADR;AAQV4B,IAAAA,WAAW,EAAE;AACXhC,MAAAA,WAAW,EAAE,aADF;AAEXC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFE;AAGX,iBAAS,IAHE;AAIXP,MAAAA,YAAY,EAAE,IAJH;AAKXC,MAAAA,OAAO,EAAE;AALE,KARH;AAeV6B,IAAAA,YAAY,EAAE;AACZjC,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFG;AAGZ,iBAAS,IAHG;AAIZP,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KAfJ;AAsBV8B,IAAAA,eAAe,EAAE;AACflC,MAAAA,WAAW,EAAE,MADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAtBP;AA6BV+B,IAAAA,kBAAkB,EAAE;AAClBnC,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KA7BV;AAoCVgC,IAAAA,2BAA2B,EAAE;AAC3BpC,MAAAA,WAAW,EAAE,6BADc;AAE3BC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFkB;AAG3B,iBAAS,IAHkB;AAI3BV,MAAAA,YAAY,EAAE,IAJa;AAK3BC,MAAAA,OAAO,EAAE;AALkB,KApCnB;AA2CViC,IAAAA,oBAAoB,EAAE;AACpBrC,MAAAA,WAAW,EAAE,sBADO;AAEpBC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFW;AAGpB,iBAAS,IAHW;AAIpBnC,MAAAA,YAAY,EAAE,IAJM;AAKpBC,MAAAA,OAAO,EAAE;AALW,KA3CZ;AAkDVmC,IAAAA,SAAS,EAAE;AACTvC,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KAlDD;AAyDVoC,IAAAA,WAAW,EAAE;AACXxC,MAAAA,WAAW,EAAE,aADF;AAEXC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFE;AAGX,iBAAS,IAHE;AAIXV,MAAAA,YAAY,EAAE,IAJH;AAKXC,MAAAA,OAAO,EAAE;AALE;AAzDH,GAHqB;AAoEjCuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD,GAtEgC;AAwEjCC,EAAAA,wBAAwB,EAAE,kCAAU/B,IAAV,EAAgB;AACxC,SAAKE,YAAL,CAAkB8B,MAAlB,GAA2BhC,IAA3B;AACD;AA1EgC,CAAT,CAA1B,EA4EA;;AACA,IAAI4C,UAAU,GAAGvD,EAAE,CAACC,IAAH,CAAQ;AACvBC,EAAAA,IAAI,EAAE,CADiB;AAEvBsD,EAAAA,WAAW,EAAE,CAFU;AAGvBC,EAAAA,UAAU,EAAE,CAHW;AAIvBC,EAAAA,SAAS,EAAE,CAJY;AAKvBC,EAAAA,QAAQ,EAAE,CALa;AAMvBnD,EAAAA,KAAK,EAAE;AANgB,CAAR,CAAjB,EAQA;;AACA,IAAIoD,YAAY,GAAG5D,EAAE,CAACU,KAAH,CAAS;AAC1BC,EAAAA,IAAI,EAAE,cADoB;AAE1BC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQV4C,IAAAA,eAAe,EAAE;AACfhD,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KARP;AAeV6C,IAAAA,eAAe,EAAE;AACfjD,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV8C,IAAAA,eAAe,EAAE;AACflD,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAtBP;AA6BV+C,IAAAA,mBAAmB,EAAE;AACnBnD,MAAAA,WAAW,EAAE,gBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFU;AAGnB,iBAAS,IAHU;AAInBC,MAAAA,YAAY,EAAE,IAJK;AAKnBC,MAAAA,OAAO,EAAE;AALU,KA7BX;AAoCVgD,IAAAA,qBAAqB,EAAE;AACrBpD,MAAAA,WAAW,EAAE,kBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY,KApCb;AA2CViD,IAAAA,qBAAqB,EAAE;AACrBrD,MAAAA,WAAW,EAAE,kBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY,KA3Cb;AAkDVkD,IAAAA,eAAe,EAAE;AACftD,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAlDP;AAyDVmD,IAAAA,WAAW,EAAE;AACXvD,MAAAA,WAAW,EAAE,aADF;AAEXC,MAAAA,IAAI,EAAEwC,UAFK;AAGX,iBAASA,UAAU,CAACrD,IAHT;AAIXe,MAAAA,YAAY,EAAE;AAJH,KAzDH;AA+DVqD,IAAAA,aAAa,EAAE;AACbxD,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFI;AAGb,iBAAS,IAHI;AAIbP,MAAAA,YAAY,EAAE;AAJD;AA/DL,GAFc;AAwE1BwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA1EyB,CAAT,CAAnB,EA4EA;;AACA,IAAI8B,cAAc,GAAGvE,EAAE,CAACU,KAAH,CAAS;AAC5BC,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVsD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVuD,IAAAA,eAAe,EAAE;AACf3D,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBVwD,IAAAA,kBAAkB,EAAE;AAClB5D,MAAAA,WAAW,EAAE,eADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAtBV;AA6BVyD,IAAAA,iBAAiB,EAAE;AACjB7D,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjB,iBAAS,IAHQ;AAIjBV,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KA7BT;AAoCV0D,IAAAA,kBAAkB,EAAE;AAClB9D,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFS;AAGlB,iBAAS,IAHS;AAIlBnC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KApCV;AA2CV2D,IAAAA,0BAA0B,EAAE;AAC1B/D,MAAAA,WAAW,EAAE,4BADa;AAE1BC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFiB;AAG1B,iBAAS,IAHiB;AAI1BnC,MAAAA,YAAY,EAAE,IAJY;AAK1BC,MAAAA,OAAO,EAAE;AALiB,KA3ClB;AAkDV4D,IAAAA,UAAU,EAAE;AACVhE,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAlDF;AAyDV6D,IAAAA,kBAAkB,EAAE;AAClBjE,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS;AAzDV,GAFgB;AAmE5BuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AArE2B,CAAT,CAArB,EAuEA;;AACA,IAAIuC,QAAQ,GAAGhF,EAAE,CAACU,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAE,UADgB;AAEtBC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVsD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,MADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeV+D,IAAAA,oBAAoB,EAAE;AACpBnE,MAAAA,WAAW,EAAE,iBADO;AAEpBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFW;AAGpB,iBAAS,IAHW;AAIpBC,MAAAA,YAAY,EAAE,IAJM;AAKpBC,MAAAA,OAAO,EAAE;AALW,KAfZ;AAsBVgE,IAAAA,aAAa,EAAE;AACbpE,MAAAA,WAAW,EAAE,mBADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFI;AAGb,iBAAS,IAHI;AAIbC,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAtBL;AA6BViE,IAAAA,qBAAqB,EAAE;AACrBrE,MAAAA,WAAW,EAAE,sBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY,KA7Bb;AAoCVkE,IAAAA,sBAAsB,EAAE;AACtBtE,MAAAA,WAAW,EAAE,wBADS;AAEtBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFa;AAGtB,iBAAS,IAHa;AAItBC,MAAAA,YAAY,EAAE,IAJQ;AAKtBC,MAAAA,OAAO,EAAE;AALa,KApCd;AA2CVmE,IAAAA,YAAY,EAAE;AACZvE,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZ,iBAAS,IAHG;AAIZV,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KA3CJ;AAkDVoE,IAAAA,KAAK,EAAE;AACLxE,MAAAA,WAAW,EAAE,gBADR;AAELC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFJ;AAGL,iBAAS,IAHJ;AAILV,MAAAA,YAAY,EAAE,IAJT;AAKLC,MAAAA,OAAO,EAAE;AALJ,KAlDG;AAyDVqE,IAAAA,OAAO,EAAE;AACPzE,MAAAA,WAAW,EAAE,SADN;AAEPC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFF;AAGP,iBAAS,IAHF;AAIPV,MAAAA,YAAY,EAAE,IAJP;AAKPC,MAAAA,OAAO,EAAE;AALF,KAzDC;AAgEVsE,IAAAA,aAAa,EAAE;AACb1E,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAhEL;AAuEVuE,IAAAA,eAAe,EAAE;AACf3E,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGf,iBAAS,IAHM;AAIfV,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAvEP;AA8EVwE,IAAAA,mBAAmB,EAAE;AACnB5E,MAAAA,WAAW,EAAE,qBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFU;AAGnB,iBAAS,IAHU;AAInBV,MAAAA,YAAY,EAAE,IAJK;AAKnBC,MAAAA,OAAO,EAAE;AALU,KA9EX;AAqFVyE,IAAAA,sBAAsB,EAAE;AACtB7E,MAAAA,WAAW,EAAE,mBADS;AAEtBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFa;AAGtB,iBAAS,IAHa;AAItBC,MAAAA,YAAY,EAAE,IAJQ;AAKtBC,MAAAA,OAAO,EAAE;AALa,KArFd;AA4FV4C,IAAAA,eAAe,EAAE;AACfhD,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KA5FP;AAmGV0E,IAAAA,kBAAkB,EAAE;AAClB9E,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAnGV;AA0GV2E,IAAAA,gBAAgB,EAAE;AAChB/E,MAAAA,WAAW,EAAE,kBADG;AAEhBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFO;AAGhB,iBAAS,IAHO;AAIhBC,MAAAA,YAAY,EAAE,IAJE;AAKhBC,MAAAA,OAAO,EAAE;AALO,KA1GR;AAiHV4E,IAAAA,cAAc,EAAE;AACdhF,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGd,iBAAS,IAHK;AAIdV,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK,KAjHN;AAwHV6E,IAAAA,eAAe,EAAE;AACfjF,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM;AAxHP,GAFU;AAkItBuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AApIqB,CAAT,CAAf,EAsIA;;AACA,IAAIuD,QAAQ,GAAGhG,EAAE,CAACU,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAE,UADgB;AAEtBC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVsD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVuD,IAAAA,eAAe,EAAE;AACf3D,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV4D,IAAAA,UAAU,EAAE;AACVhE,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAtBF;AA6BV6D,IAAAA,kBAAkB,EAAE;AAClBjE,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS;AA7BV,GAFU;AAuCtBuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAzCqB,CAAT,CAAf,EA2CA;;AACA,IAAIwD,WAAW,GAAGjG,EAAE,CAACU,KAAH,CAAS;AACzBC,EAAAA,IAAI,EAAE,aADmB;AAEzBC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVsD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVuD,IAAAA,eAAe,EAAE;AACf3D,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV4D,IAAAA,UAAU,EAAE;AACVhE,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAtBF;AA6BV6D,IAAAA,kBAAkB,EAAE;AAClBjE,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS;AA7BV,GAFa;AAuCzBuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAzCwB,CAAT,CAAlB,EA2CA;;AACA,IAAIyD,aAAa,GAAGlG,EAAE,CAACU,KAAH,CAAS;AAC3BC,EAAAA,IAAI,EAAE,eADqB;AAE3BC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVsD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVuD,IAAAA,eAAe,EAAE;AACf3D,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV4D,IAAAA,UAAU,EAAE;AACVhE,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAtBF;AA6BV6D,IAAAA,kBAAkB,EAAE;AAClBjE,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KA7BV;AAoCViF,IAAAA,iBAAiB,EAAE;AACjBrF,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFQ;AAGjB,iBAAS,IAHQ;AAIjBC,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KApCT;AA2CVkF,IAAAA,aAAa,EAAE;AACbtF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFI;AAGb,iBAAS,IAHI;AAIbnC,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KA3CL;AAkDVmF,IAAAA,aAAa,EAAE;AACbvF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAlDL;AAyDVoF,IAAAA,aAAa,EAAE;AACbxF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAzDL;AAgEVqF,IAAAA,kBAAkB,EAAE;AAClBzF,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAhEV;AAuEVsF,IAAAA,kBAAkB,EAAE;AAClB1F,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAvEV;AA8EVuF,IAAAA,iBAAiB,EAAE;AACjB3F,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFQ;AAGjB,iBAAS,IAHQ;AAIjBC,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KA9ET;AAqFVwF,IAAAA,uBAAuB,EAAE;AACvB5F,MAAAA,WAAW,EAAE,yBADU;AAEvBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFc;AAGvB,iBAAS,IAHc;AAIvBC,MAAAA,YAAY,EAAE,IAJS;AAKvBC,MAAAA,OAAO,EAAE;AALc,KArFf;AA4FVyF,IAAAA,qBAAqB,EAAE;AACrB7F,MAAAA,WAAW,EAAE,uBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY;AA5Fb,GAFe;AAsG3BuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAxG0B,CAAT,CAApB,EA0GA;;AACA,IAAImE,aAAa,GAAG5G,EAAE,CAACU,KAAH,CAAS;AAC3BC,EAAAA,IAAI,EAAE,eADqB;AAE3BC,EAAAA,UAAU,EAAE;AACViG,IAAAA,mBAAmB,EAAE;AACnB/F,MAAAA,WAAW,EAAE,qBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFU;AAGnB,iBAAS,IAHU;AAInBV,MAAAA,YAAY,EAAE,IAJK;AAKnBC,MAAAA,OAAO,EAAE;AALU,KADX;AAQV4F,IAAAA,UAAU,EAAE;AACVhG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE;AAJJ,KARF;AAcV8F,IAAAA,SAAS,EAAE;AACTjG,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE;AAJL,KAdD;AAoBV+F,IAAAA,UAAU,EAAE;AACVlG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ,KApBF;AA0BVgG,IAAAA,UAAU,EAAE;AACVnG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ,KA1BF;AAgCViG,IAAAA,iBAAiB,EAAE;AACjBpG,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFQ;AAGjB,iBAAS,IAHQ;AAIjBnC,MAAAA,YAAY,EAAE;AAJG,KAhCT;AAsCVoF,IAAAA,aAAa,EAAE;AACbvF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE;AAJD,KAtCL;AA6CVkG,IAAAA,cAAc,EAAE;AACdrG,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGd,iBAAS,IAHK;AAIdV,MAAAA,YAAY,EAAE;AAJA,KA7CN;AAoDVmG,IAAAA,kBAAkB,EAAE;AAClBtG,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE;AAJI,KApDV;AA2DVoG,IAAAA,kBAAkB,EAAE;AAClBvG,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE;AAJI,KA3DV;AAkEVqG,IAAAA,mBAAmB,EAAE;AACnBxG,MAAAA,WAAW,EAAE,qBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFU;AAGnB,iBAAS,IAHU;AAInBC,MAAAA,YAAY,EAAE;AAJK;AAlEX,GAFe;AA2E3BwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA7E0B,CAAT,CAApB,EA+EA;;AACA,IAAI8E,QAAQ,GAAGvH,EAAE,CAACU,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAE,UADgB;AAEtBC,EAAAA,UAAU,EAAE;AACV4G,IAAAA,YAAY,EAAE;AACZ1G,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZ,iBAAS,IAHG;AAIZV,MAAAA,YAAY,EAAE;AAJF,KADJ;AAQVwG,IAAAA,WAAW,EAAE;AACX3G,MAAAA,WAAW,EAAE,aADF;AAEXC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFE;AAGX,iBAAS,IAHE;AAIXC,MAAAA,YAAY,EAAE;AAJH,KARH;AAeVyG,IAAAA,SAAS,EAAE;AACT5G,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE;AAJL;AAfD,GAFU;AAwBtBwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA1BqB,CAAT,CAAf,EA4BA;;AACA,IAAIkF,qBAAqB,GAAG3H,EAAE,CAACU,KAAH,CAAS;AACnCC,EAAAA,IAAI,EAAE,uBAD6B;AAEnCC,EAAAA,UAAU,EAAE;AACVmG,IAAAA,SAAS,EAAE;AACTjG,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE;AAJL,KADD;AAOV+F,IAAAA,UAAU,EAAE;AACVlG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ,KAPF;AAaVgG,IAAAA,UAAU,EAAE;AACVnG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ,KAbF;AAmBV2G,IAAAA,iBAAiB,EAAE;AACjB9G,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFQ;AAGjB,iBAAS,IAHQ;AAIjBC,MAAAA,YAAY,EAAE;AAJG,KAnBT;AAyBV4G,IAAAA,cAAc,EAAE;AACd/G,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFK;AAGd,iBAAS,IAHK;AAIdnC,MAAAA,YAAY,EAAE;AAJA,KAzBN;AA+BVoF,IAAAA,aAAa,EAAE;AACbvF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE;AAJD;AA/BL,GAFuB;AAwCnCwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA1CkC,CAAT,CAA5B,EA4CA;;AACA,IAAIqF,4BAA4B,GAAG9H,EAAE,CAACU,KAAH,CAAS;AAC1CC,EAAAA,IAAI,EAAE,8BADoC;AAE1CC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVsD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVuD,IAAAA,eAAe,EAAE;AACf3D,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV4D,IAAAA,UAAU,EAAE;AACVhE,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAtBF;AA6BV6D,IAAAA,kBAAkB,EAAE;AAClBjE,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KA7BV;AAoCViF,IAAAA,iBAAiB,EAAE;AACjBrF,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFQ;AAGjB,iBAAS,IAHQ;AAIjBC,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KApCT;AA2CVkF,IAAAA,aAAa,EAAE;AACbtF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFI;AAGb,iBAAS,IAHI;AAIbnC,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KA3CL;AAkDVmF,IAAAA,aAAa,EAAE;AACbvF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI;AAlDL,GAF8B;AA4D1CuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA9DyC,CAAT,CAAnC,EAgEA;;AACA,IAAIsF,mBAAmB,GAAG/H,EAAE,CAACU,KAAH,CAAS;AACjCC,EAAAA,IAAI,EAAE,qBAD2B;AAEjCC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ,KADF;AAOVuD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE;AAJL,KAPD;AAaVwD,IAAAA,eAAe,EAAE;AACf3D,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE;AAJC,KAbP;AAmBV6D,IAAAA,UAAU,EAAE;AACVhE,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE;AAJJ,KAnBF;AAyBV8D,IAAAA,kBAAkB,EAAE;AAClBjE,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE;AAJI,KAzBV;AA+BVkF,IAAAA,iBAAiB,EAAE;AACjBrF,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFQ;AAGjB,iBAAS,IAHQ;AAIjBC,MAAAA,YAAY,EAAE;AAJG,KA/BT;AAqCVmF,IAAAA,aAAa,EAAE;AACbtF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFI;AAGb,iBAAS,IAHI;AAIbnC,MAAAA,YAAY,EAAE;AAJD,KArCL;AA2CVoF,IAAAA,aAAa,EAAE;AACbvF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE;AAJD;AA3CL,GAFqB;AAoDjCwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAtDgC,CAAT,CAA1B,EAwDA;;AACA,IAAIuF,qBAAqB,GAAGhI,EAAE,CAACU,KAAH,CAAS;AACnCC,EAAAA,IAAI,EAAE,uBAD6B;AAEnCC,EAAAA,UAAU,EAAE;AACViD,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVsD,IAAAA,SAAS,EAAE;AACT1D,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVuD,IAAAA,eAAe,EAAE;AACf3D,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBVwD,IAAAA,kBAAkB,EAAE;AAClB5D,MAAAA,WAAW,EAAE,eADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAtBV;AA6BVyD,IAAAA,iBAAiB,EAAE;AACjB7D,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjB,iBAAS,IAHQ;AAIjBV,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KA7BT;AAoCV2G,IAAAA,cAAc,EAAE;AACd/G,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFK;AAGd,iBAAS,IAHK;AAIdnC,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK,KApCN;AA2CV2D,IAAAA,0BAA0B,EAAE;AAC1B/D,MAAAA,WAAW,EAAE,4BADa;AAE1BC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFiB;AAG1B,iBAAS,IAHiB;AAI1BnC,MAAAA,YAAY,EAAE,IAJY;AAK1BC,MAAAA,OAAO,EAAE;AALiB,KA3ClB;AAkDV4D,IAAAA,UAAU,EAAE;AACVhE,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAlDF;AAyDV6D,IAAAA,kBAAkB,EAAE;AAClBjE,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS;AAzDV,GAFuB;AAmEnCuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AArEkC,CAAT,CAA5B,EAuEA;;AACA,IAAIwF,gCAAgC,GAAGjI,EAAE,CAACU,KAAH,CAAS;AAC9CC,EAAAA,IAAI,EAAE,kCADwC;AAE9CC,EAAAA,UAAU,EAAE;AACVkG,IAAAA,UAAU,EAAE;AACVhG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE;AAJJ,KADF;AAOViH,IAAAA,gBAAgB,EAAE;AAChBpH,MAAAA,WAAW,EAAE,kBADG;AAEhBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFO;AAGhB,iBAAS,IAHO;AAIhBV,MAAAA,YAAY,EAAE;AAJE,KAPR;AAaVkH,IAAAA,oBAAoB,EAAE;AACpBrH,MAAAA,WAAW,EAAE,sBADO;AAEpBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFW;AAGpB,iBAAS,IAHW;AAIpBV,MAAAA,YAAY,EAAE;AAJM,KAbZ;AAoBVmH,IAAAA,oBAAoB,EAAE;AACpB,iBAAS,EADW;AAEpBrH,MAAAA,IAAI,EAAEiH,qBAFc;AAGpB/G,MAAAA,YAAY,EAAE;AAHM,KApBZ;AA0BV6C,IAAAA,eAAe,EAAE;AACf,iBAAS,IADM;AAEf/C,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGfC,MAAAA,YAAY,EAAE;AAHC;AA1BP,GAFkC;AAkC9CwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AApC6C,CAAT,CAAvC,EAsCA;;AACA,IAAI4F,sBAAsB,GAAGrI,EAAE,CAACU,KAAH,CAAS;AACpCC,EAAAA,IAAI,EAAE,wBAD8B;AAEpCC,EAAAA,UAAU,EAAE;AACVkG,IAAAA,UAAU,EAAE;AACVhG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE;AAJJ,KADF;AAOV4C,IAAAA,UAAU,EAAE;AACV/C,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ;AAPF,GAFwB;AAgBpCwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAlBmC,CAAT,CAA7B,EAoBA;;AACA,IAAI6F,iBAAJ;AACA,IAAIC,yBAAJ;AACA,IAAIC,YAAJ;AACA,IAAIC,uBAAuB,GAAG,CAAC,CAA/B,EAAkC;AAElC;;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACA,IAAIC,gBAAJ,EAEA;;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AACA,IAAIC,iBAAiB,GAAG,EAAxB;AACA,IAAIC,UAAJ;AACA,IAAIC,WAAJ;AACA,IAAIC,YAAY,GAAG,EAAnB;AAEA,IAAIC,aAAa,GAAG,CAApB;AACA,IAAIC,aAAa,GAAG,CAApB;AACA,IAAIC,cAAc,GAAG,KAArB;AAEA,IAAIC,yBAAyB,GAAG,KAAhC;AACA,IAAIC,2BAA2B,GAAG,KAAlC;AACA,IAAIC,SAAS,GAAG,KAAhB;AACA,IAAIC,iBAAiB,GAAG,CAAxB;AACA,IAAIC,YAAY,GAAG,KAAnB;AAEA,IAAIC,iBAAiB,GAAG1J,EAAE,CAACU,KAAH,CAAS;AAC/BC,EAAAA,IAAI,EAAE,mBADyB;AAE/B,aAASX,EAAE,CAAC2J,SAFmB;AAG/B/I,EAAAA,UAAU,EAAE;AACVgJ,IAAAA,iBAAiB,EAAE;AACjB,iBAAS,IADQ;AAEjB7I,MAAAA,IAAI,EAAEN,eAFW;AAGjBQ,MAAAA,YAAY,EAAE,IAHG;AAIjBC,MAAAA,OAAO,EAAE;AAJQ,KADT;AAOV0B,IAAAA,mBAAmB,EAAE;AACnB,iBAAS,IADU;AAEnB7B,MAAAA,IAAI,EAAE6B,mBAFa;AAGnB3B,MAAAA,YAAY,EAAE,IAHK;AAInBC,MAAAA,OAAO,EAAE;AAJU,KAPX;AAaV2I,IAAAA,iBAAiB,EAAE;AACjB,iBAAS,IADQ;AAEjB9I,MAAAA,IAAI,EAAE6C,YAFW;AAGjB3C,MAAAA,YAAY,EAAE,IAHG;AAIjBC,MAAAA,OAAO,EAAE;AAJQ,KAbT;AAmBV4I,IAAAA,aAAa,EAAE;AACb,iBAAS,IADI;AAEb/I,MAAAA,IAAI,EAAEiE,QAFO;AAGb/D,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KAnBL;AAyBV6I,IAAAA,mBAAmB,EAAE;AACnB,iBAAS,EADU;AAEnBhJ,MAAAA,IAAI,EAAEwD,cAFa;AAGnBtD,MAAAA,YAAY,EAAE,IAHK;AAInBC,MAAAA,OAAO,EAAE;AAJU,KAzBX;AA+BV8I,IAAAA,aAAa,EAAE;AACb,iBAAS,EADI;AAEbjJ,MAAAA,IAAI,EAAEiF,QAFO;AAGb/E,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KA/BL;AAqCV+I,IAAAA,gBAAgB,EAAE;AAChB,iBAAS,EADO;AAEhBlJ,MAAAA,IAAI,EAAEkF,WAFU;AAGhBhF,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAE;AAJO,KArCR;AA2CVgJ,IAAAA,kBAAkB,EAAE;AAClB,iBAAS,EADS;AAElBnJ,MAAAA,IAAI,EAAEmF,aAFY;AAGlBjF,MAAAA,YAAY,EAAE,IAHI;AAIlBC,MAAAA,OAAO,EAAE;AAJS,KA3CV;AAiDViJ,IAAAA,kBAAkB,EAAE;AAClB,iBAAS,EADS;AAElBpJ,MAAAA,IAAI,EAAE6F,aAFY;AAGlB3F,MAAAA,YAAY,EAAE,IAHI;AAIlBC,MAAAA,OAAO,EAAE;AAJS,KAjDV;AAuDVkJ,IAAAA,aAAa,EAAE;AACb,iBAAS,EADI;AAEbrJ,MAAAA,IAAI,EAAEwG,QAFO;AAGbtG,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KAvDL;AA6DVmJ,IAAAA,qBAAqB,EAAE;AACrB,iBAAS,EADY;AAErBtJ,MAAAA,IAAI,EAAE4G,qBAFe;AAGrB1G,MAAAA,YAAY,EAAE,IAHO;AAIrBC,MAAAA,OAAO,EAAE;AAJY,KA7Db;AAmEVoJ,IAAAA,uBAAuB,EAAE;AACvB,iBAAS,EADc;AAEvBvJ,MAAAA,IAAI,EAAE+G,4BAFiB;AAGvB7G,MAAAA,YAAY,EAAE,IAHS;AAIvBC,MAAAA,OAAO,EAAE;AAJc,KAnEf;AA0EVqJ,IAAAA,yBAAyB,EAAE;AACzB,iBAAS,EADgB;AAEzBxJ,MAAAA,IAAI,EAAEgH,mBAFmB;AAGzB9G,MAAAA,YAAY,EAAE,IAHW;AAIzBC,MAAAA,OAAO,EAAE;AAJgB,KA1EjB;AAiFVsJ,IAAAA,yBAAyB,EAAE;AACzB,iBAAS,EADgB;AAEzBzJ,MAAAA,IAAI,EAAEgH,mBAFmB;AAGzB9G,MAAAA,YAAY,EAAE,IAHW;AAIzBC,MAAAA,OAAO,EAAE;AAJgB,KAjFjB;AAwFVuJ,IAAAA,qBAAqB,EAAE;AACrB,iBAAS,EADY;AAErB1J,MAAAA,IAAI,EAAEkH,gCAFe;AAGrBhH,MAAAA,YAAY,EAAE,IAHO;AAIrBC,MAAAA,OAAO,EAAE;AAJY,KAxFb;AA+FVwJ,IAAAA,sBAAsB,EAAE;AACtB,iBAAS,EADa;AAEtB3J,MAAAA,IAAI,EAAEiH,qBAFgB;AAGtB/G,MAAAA,YAAY,EAAE,IAHQ;AAItBC,MAAAA,OAAO,EAAE;AAJa,KA/Fd;AAqGVyJ,IAAAA,sBAAsB,EAAE;AACtB,iBAAS,EADa;AAEtB5J,MAAAA,IAAI,EAAEsH,sBAFgB;AAGtBpH,MAAAA,YAAY,EAAE,IAHQ;AAItBC,MAAAA,OAAO,EAAE;AAJa,KArGd;AA2GV0J,IAAAA,OAAO,EAAE;AACP,iBAAS,IADF;AAEP7J,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFF;AAGPV,MAAAA,YAAY,EAAE,IAHP;AAIPC,MAAAA,OAAO,EAAE;AAJF,KA3GC;AAiHV2J,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZ9J,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZC,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAjHJ;AAuHV4J,IAAAA,aAAa,EAAE;AACb,iBAAS,IADI;AAEb/J,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGbV,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KAvHL;AA6HVa,IAAAA,iBAAiB,EAAE;AACjB,iBAAS,IADQ;AAEjBhB,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjBV,MAAAA,YAAY,EAAE,IAHG;AAIjBC,MAAAA,OAAO,EAAE;AAJQ,KA7HT;AAmIV6J,IAAAA,gBAAgB,EAAE;AAChB,iBAAS,IADO;AAEhBhK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFO;AAGhBV,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAE;AAJO,KAnIR;AAyIViG,IAAAA,cAAc,EAAE;AACd,iBAAS,IADK;AAEdpG,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGdV,MAAAA,YAAY,EAAE,IAHA;AAIdC,MAAAA,OAAO,EAAE;AAJK,KAzIN;AA+IV8J,IAAAA,gBAAgB,EAAE;AAChB,iBAAS,IADO;AAEhBjK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFO;AAGhBV,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAE;AAJO,KA/IR;AAqJV+J,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZlK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZV,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KArJJ;AA2JVgK,IAAAA,kBAAkB,EAAE;AAClB,iBAAS,IADS;AAElBnK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlBV,MAAAA,YAAY,EAAE,IAHI;AAIlBC,MAAAA,OAAO,EAAE;AAJS,KA3JV;AAiKViK,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZpK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZV,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAjKJ;AAuKVkK,IAAAA,eAAe,EAAE;AACf,iBAAS,IADM;AAEfrK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGfV,MAAAA,YAAY,EAAE,IAHC;AAIfC,MAAAA,OAAO,EAAE;AAJM,KAvKP;AA6KVmK,IAAAA,uBAAuB,EAAE;AACvB,iBAAS,IADc;AAEvBtK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFc;AAGvBV,MAAAA,YAAY,EAAE,IAHS;AAIvBC,MAAAA,OAAO,EAAE;AAJc,KA7Kf;AAmLVoK,IAAAA,sBAAsB,EAAE;AACtB,iBAAS,IADa;AAEtBvK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFa;AAGtBV,MAAAA,YAAY,EAAE,IAHQ;AAItBC,MAAAA,OAAO,EAAE;AAJa,KAnLd;AAyLVqK,IAAAA,yBAAyB,EAAE;AACzB,iBAAS,IADgB;AAEzBxK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFgB;AAGzBV,MAAAA,YAAY,EAAE,IAHW;AAIzBC,MAAAA,OAAO,EAAE;AAJgB,KAzLjB;AA+LVsK,IAAAA,2BAA2B,EAAE;AAC3B,iBAAS,IADkB;AAE3BzK,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFkB;AAG3BV,MAAAA,YAAY,EAAE,IAHa;AAI3BC,MAAAA,OAAO,EAAE;AAJkB,KA/LnB;AAqMVuK,IAAAA,0BAA0B,EAAE;AAC1B,iBAAS,IADiB;AAE1B1K,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFiB;AAG1BV,MAAAA,YAAY,EAAE,IAHY;AAI1BC,MAAAA,OAAO,EAAE;AAJiB,KArMlB;AA2MVwK,IAAAA,0BAA0B,EAAE;AAC1B,iBAAS,IADiB;AAE1B3K,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFiB;AAG1BV,MAAAA,YAAY,EAAE,IAHY;AAI1BC,MAAAA,OAAO,EAAE;AAJiB,KA3MlB;AAiNVyK,IAAAA,4BAA4B,EAAE;AAC5B,iBAAS,IADmB;AAE5B5K,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFmB;AAG5BV,MAAAA,YAAY,EAAE,IAHc;AAI5BC,MAAAA,OAAO,EAAE;AAJmB,KAjNpB;AAuNV0K,IAAAA,yBAAyB,EAAE;AACzB,iBAAS,IADgB;AAEzB7K,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFgB;AAGzBV,MAAAA,YAAY,EAAE,IAHW;AAIzBC,MAAAA,OAAO,EAAE;AAJgB,KAvNjB;AA6NV2K,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZ9K,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZC,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KA7NJ;AAmOV4K,IAAAA,eAAe,EAAE;AACf,iBAAS,IADM;AAEf/K,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGfV,MAAAA,YAAY,EAAE;AAHC,KAnOP;AAwOV8K,IAAAA,aAAa,EAAE;AACb,iBAAS,EADI;AAEbhL,MAAAA,IAAI,EAAEf,EAAE,CAACgM,WAFI;AAGb/K,MAAAA,YAAY,EAAE;AAHD;AAxOL,GAHmB;;AAkP/B;;;AAGAgL,EAAAA,YArP+B,0BAqPhB;AACbvM,IAAAA,mBAAmB,GAAG,CAAtB;AACAC,IAAAA,mBAAmB,GAAG,CAAtB;AACAyJ,IAAAA,cAAc,GAAG,KAAjB;AACA7L,IAAAA,WAAW,GAAG,IAAd;AACAE,IAAAA,wBAAwB,GAAG,IAA3B;AACAC,IAAAA,mBAAmB,GAAG,EAAtB;AACAE,IAAAA,qBAAqB,GAAG,EAAxB;AACAC,IAAAA,qBAAqB,GAAG,EAAxB;AACAL,IAAAA,oBAAoB,GAAG,CAAvB;AACAM,IAAAA,gBAAgB,GAAG,EAAnB;AACAH,IAAAA,gBAAgB,GAAG,EAAnB;AACAI,IAAAA,uBAAuB,GAAG,EAA1B;AACAC,IAAAA,sBAAsB,GAAG,EAAzB;AACAC,IAAAA,sBAAsB,GAAG,EAAzB;AACAC,IAAAA,8BAA8B,GAAG,EAAjC;AACAC,IAAAA,yBAAyB,GAAG,EAA5B;AACAC,IAAAA,eAAe,GAAG,IAAlB;AACAC,IAAAA,wBAAwB,GAAG,KAA3B;AACAC,IAAAA,WAAW,GAAG,EAAd;AACAE,IAAAA,sBAAsB,GAAG,KAAzB;AACAC,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,WAAW,GAAG,CAAd;AACAC,IAAAA,qBAAqB,GAAG,CAAxB;AACAC,IAAAA,iBAAiB,GAAG,KAApB;AACAC,IAAAA,8BAA8B,GAAG,KAAjC;AACAC,IAAAA,iBAAiB,GAAG,CAApB;AACAC,IAAAA,2BAA2B,GAAG,KAA9B;AACAC,IAAAA,YAAY,GAAG,CAAf;AACAC,IAAAA,UAAU,GAAG,IAAb;AACAU,IAAAA,gBAAgB,GAAG,EAAnB;AACAE,IAAAA,cAAc,GAAG,KAAjB;AACA2I,IAAAA,uBAAuB,GAAG,CAAC,CAA3B,CAjCa,CAiCiB;AAE9B;;AACAC,IAAAA,mBAAmB,GAAG,EAAtB;AACAC,IAAAA,gBAAgB,CArCH,CAuCb;;AACAC,IAAAA,cAAc,GAAG,EAAjB;AACAC,IAAAA,kBAAkB,GAAG,EAArB;AACAC,IAAAA,iBAAiB,GAAG,EAApB;AACAC,IAAAA,UAAU,GAAG,CAAb;AACAC,IAAAA,WAAW;AACXC,IAAAA,YAAY,GAAG,EAAf;AAEAI,IAAAA,yBAAyB,GAAG,KAA5B;AACAC,IAAAA,2BAA2B,GAAG,KAA9B;AACAC,IAAAA,SAAS,GAAG,KAAZ;AACAC,IAAAA,iBAAiB,GAAG,CAApB;AACAC,IAAAA,YAAY,GAAG,KAAf;AACA5J,IAAAA,WAAW,GAAG,CAAd;AACAqJ,IAAAA,aAAa,GAAG,CAAhB;AACAC,IAAAA,aAAa,GAAG,CAAhB;AACA5J,IAAAA,UAAU,GAAG,EAAb;AACAC,IAAAA,cAAc,GAAG,EAAjB;AACD,GA9S8B;;AAgT/B;;;AAGA0M,EAAAA,iBAnT+B,+BAmTX;AAClB,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACD,GAxT8B;;AA0T/B;;;AAGAC,EAAAA,eA7T+B,6BA6Tb;AAChB,QAAI,CAAC9O,wBAAD,IAA6BA,wBAAwB,IAAI,IAA7D,EAAmEA,wBAAwB,GAAG+O,OAAO,CAAC,0BAAD,CAAlC;AAEnE,QAAI,CAACjP,WAAD,IAAgBA,WAAW,IAAI,IAAnC,EAAyCA,WAAW,GAAGiP,OAAO,CAAC,aAAD,CAArB;AAC1C,GAjU8B;;AAmU/B;;;AAGAC,EAAAA,QAAQ,EAAE,oBAAY;AACpB;AACAzM,IAAAA,EAAE,CAAC0M,WAAH,CAAeC,EAAf,CAAkB,UAAlB,EAA8B,KAAKC,QAAnC,EAA6C,IAA7C;AACD,GAzU8B;;AA2U/B;;;AAGAC,EAAAA,SAAS,EAAE,qBAAY;AACrB7M,IAAAA,EAAE,CAAC0M,WAAH,CAAeI,GAAf,CAAmB,UAAnB,EAA+B,KAAKF,QAApC,EAA8C,IAA9C;AACD,GAhV8B;;AAkV/B;;;AAGAG,EAAAA,MArV+B,oBAqVtB;AACP,SAAKd,YAAL;AACA,SAAKM,eAAL,GAFO,CAIP;;AACA,SAAKJ,YAAL,GAAoB,KAApB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKU,SAAL,GAAiB,KAAjB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,iBAAL,GAAyB,CAAzB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA9N,IAAAA,YAAY,GAAG,IAAf;AACD,GAvW8B;AAyW/B+N,EAAAA,gCAzW+B,4CAyWEC,MAzWF,EAyWU;AACvC,SAAK7B,yBAAL,CAA+B8B,MAA/B,GAAwCD,MAAxC;AACD,GA3W8B;AA6W/BE,EAAAA,0BA7W+B,wCA6WF;AAC3B,SAAKH,gCAAL,CAAsC,KAAtC;AACD,GA/W8B;AAgX/B;AACAI,EAAAA,0BAjX+B,wCAiXF;AAC3B,SAAKhE,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,IAAlD;AACD,GAnX8B;AAqX/BG,EAAAA,+BArX+B,6CAqXG;AAChC,SAAKjE,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,KAAlD,CADgC,CAEhC;AACD,GAxX8B;AA0X/BI,EAAAA,oCA1X+B,gDA0XML,MA1XN,EA0Xc;AAC3C,SAAK3B,eAAL,CAAqB4B,MAArB,GAA8BD,MAA9B;AACD,GA5X8B;AA8X/BM,EAAAA,mCA9X+B,iDA8XO;AACpCtQ,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DC,oBAA9D,CAAmF,IAAnF;AACAzQ,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DE,gBAA9D;AACAC,IAAAA,UAAU,CAAC,YAAM;AACf3Q,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDC,mBAApD;AACA7Q,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DM,iBAA9D;AACA9Q,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+DD,iBAA/D;AACA9Q,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDF,iBAAtD;AACA9Q,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCO,iBAAlC;AACAvO,MAAAA,EAAE,CAAC0O,QAAH,CAAYC,SAAZ,CAAsB,UAAtB;AACD,KAPS,EAOP,GAPO,CAAV;AAQD,GAzY8B;AA0Y/B;AAEA;AACA;AACAC,EAAAA,iCAAiC,EAAE,2CAAUnB,MAAV,EAAkB;AACnD,SAAK7D,iBAAL,CAAuBtH,aAAvB,CAAqCoL,MAArC,GAA8CD,MAA9C;AACD,GAhZ8B;AAkZ/BoB,EAAAA,2BAA2B,EAAE,uCAAY;AACvC,SAAKjF,iBAAL,CAAuBpH,cAAvB,CAAsCG,MAAtC,GAA+C,EAA/C;AACA,SAAK0K,aAAL,GAAqB,EAArB;AACA,SAAKuB,iCAAL,CAAuC,IAAvC;AACA,SAAKhF,iBAAL,CAAuBrH,YAAvB,CAAoCI,MAApC,GAA6ClF,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAA/G;AACD,GAvZ8B;AAyZ/BC,EAAAA,uBAAuB,EAAE,iCAAUC,IAAV,EAAgB;AACvC,SAAK5B,aAAL,GAAqB4B,IAArB;AACD,GA3Z8B;AA6Z/BC,EAAAA,gCAAgC,EAAE,4CAAY;AAC5C,SAAKN,iCAAL,CAAuC,KAAvC;;AACA,QAAIO,SAAS,GAAGC,QAAQ,CAAC3R,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAAnE,CAAxB;;AACA,QAAIM,OAAO,GAAGD,QAAQ,CAAC,KAAK/B,aAAN,CAAtB;;AACA,QAAI,KAAKA,aAAL,IAAsB,IAAtB,IAA8B,KAAKA,aAAL,IAAsB,EAApD,IAA0D,KAAKA,aAAL,IAAsBiC,SAApF,EAA+F;AAC7F,UAAID,OAAO,IAAIF,SAAf,EAA0B;AACxB7G,QAAAA,iBAAiB,CAACiH,IAAlB,IAA0BF,OAA1B;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAYnH,iBAAiB,CAACiH,IAA9B;AACA,aAAK3F,iBAAL,CAAuBzI,YAAvB,CAAoCwB,MAApC,GAA6C2F,iBAAiB,CAACiH,IAAlB,CAAuBG,QAAvB,EAA7C;AACAP,QAAAA,SAAS,IAAIE,OAAb;AACA5R,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAAlE,GAA6EI,SAAS,CAACO,QAAV,EAA7E;AACAjS,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDkB,cAAtD,CAAqElS,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAAvI,EAAiJ,CAAC,CAAlJ,EAAqJ,CAAC,CAAtJ;AAEA,aAAKa,SAAL,CAAe,WAAW,KAAKvC,aAAhB,GAAgC,kBAA/C;AACA,aAAKzD,iBAAL,CAAuBpH,cAAvB,CAAsCG,MAAtC,GAA+C,EAA/C;AACA,aAAK0K,aAAL,GAAqB,EAArB;AACD,OAXD,MAWO;AACL,aAAKuC,SAAL,CAAe,sCAAf;AACD;AACF;AACF,GAjb8B;AAmb/BC,EAAAA,8BAA8B,EAAE,wCAAUC,WAAV,EAAuBC,UAAvB,EAA2CC,SAA3C,EAA0DC,aAA1D,EAAiFC,eAAjF,EAAsGC,oBAAtG,EAAoIC,UAApI,EAAoJC,4BAApJ,EAA0L;AAAA,QAAnKN,UAAmK;AAAnKA,MAAAA,UAAmK,GAAtJ,KAAsJ;AAAA;;AAAA,QAA/IC,SAA+I;AAA/IA,MAAAA,SAA+I,GAAnI,CAAmI;AAAA;;AAAA,QAAhIC,aAAgI;AAAhIA,MAAAA,aAAgI,GAAhH,KAAgH;AAAA;;AAAA,QAAzGC,eAAyG;AAAzGA,MAAAA,eAAyG,GAAvF,CAAuF;AAAA;;AAAA,QAApFC,oBAAoF;AAApFA,MAAAA,oBAAoF,GAA7D,KAA6D;AAAA;;AAAA,QAAtDC,UAAsD;AAAtDA,MAAAA,UAAsD,GAAzC,CAAyC;AAAA;;AAAA,QAAtCC,4BAAsC;AAAtCA,MAAAA,4BAAsC,GAAP,KAAO;AAAA;;AACxN;AACA,SAAK9D,eAAL;AACA,SAAKxK,iBAAL,CAAuB2L,MAAvB,GAAgC,IAAhC;AAEA5O,IAAAA,8BAA8B,GAAGqR,oBAAjC;AACApR,IAAAA,iBAAiB,GAAGqR,UAApB;AACApR,IAAAA,2BAA2B,GAAGqR,4BAA9B;AAEA,SAAKlD,YAAL,GAAoB8C,aAApB;AACA,SAAK7C,gBAAL,GAAwB8C,eAAxB;AAEA,QAAID,aAAJ,EAAmB,KAAK/D,iBAAL;AAEnB,SAAKoE,kBAAL,CAAwBR,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,aAA5D;AACD,GAlc8B;AAmc/BK,EAAAA,kBAAkB,EAAE,4BAAUR,WAAV,EAAuBC,UAAvB,EAA2CC,SAA3C,EAA0DC,aAA1D,EAAiF;AAAA,QAA1DF,UAA0D;AAA1DA,MAAAA,UAA0D,GAA7C,KAA6C;AAAA;;AAAA,QAAtCC,SAAsC;AAAtCA,MAAAA,SAAsC,GAA1B,CAA0B;AAAA;;AAAA,QAAvBC,aAAuB;AAAvBA,MAAAA,aAAuB,GAAP,KAAO;AAAA;;AACnG3H,IAAAA,iBAAiB,GAAG,IAAI/K,WAAW,CAACgT,UAAhB,EAApB;AACAjI,IAAAA,iBAAiB,CAACkI,iBAAlB,GAAsC,IAAIjT,WAAW,CAACkT,qBAAhB,EAAtC;AACAlI,IAAAA,yBAAyB,GAAG,IAAIhL,WAAW,CAACmT,YAAhB,EAA5B;AACAnI,IAAAA,yBAAyB,CAACoI,YAA1B,GAAyCpT,WAAW,CAACqT,gBAAZ,CAA6B1Q,IAAtE;AACA,SAAK0J,iBAAL,CAAuBvH,aAAvB,CAAqCqL,MAArC,GAA8C,KAA9C;;AAEA,QAAIoC,WAAJ,EAAiB;AACf,WAAKlG,iBAAL,CAAuBxH,cAAvB,CAAsCsL,MAAtC,GAA+C,KAA/C;AACA,WAAK9D,iBAAL,CAAuB9H,SAAvB,CAAiC4L,MAAjC,GAA0C,KAA1C;AACApF,MAAAA,iBAAiB,CAACiH,IAAlB,GAAyBhR,aAAzB;AACA,WAAKqL,iBAAL,CAAuBvH,aAAvB,CAAqCqL,MAArC,GAA8C,IAA9C;AACD;;AAED,SAAKmD,+BAAL;;AAEA,QAAId,UAAJ,EAAgB;AACd,WAAKnG,iBAAL,CAAuBxH,cAAvB,CAAsCsL,MAAtC,GAA+C,IAA/C;AACA,WAAK9D,iBAAL,CAAuB9H,SAAvB,CAAiC4L,MAAjC,GAA0C,KAA1C;;AAEA,WAAK,IAAIoD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGrT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAA/F,EAAuGF,KAAK,EAA5G,EAAgH;AAC9G,YAAIrT,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEmC,MAAlE,IAA4ExT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0EI,SAA1J,EAAqK;AACnKzI,UAAAA,uBAAuB,GAAGqI,KAA1B;AACAxI,UAAAA,iBAAiB,GAAG7K,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,CAApB;;AACA,cAAIhS,8BAAJ,EAAoC;AAClC,gBAAIE,2BAAJ,EAAiC;AAC/BC,cAAAA,YAAY,GAAGqJ,iBAAiB,CAACiH,IAAjC;AACAjH,cAAAA,iBAAiB,CAACiH,IAAlB,GAAyB,CAAzB;AACA,mBAAK4B,0BAAL,CAAgC1T,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0E9J,UAA1G;AACA,mBAAKoK,yBAAL,CAA+B3T,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0EI,SAAzG;AACA,mBAAKG,0BAAL,CAAgC/I,iBAAiB,CAACiH,IAAlD;AACA,mBAAK+B,6BAAL,CAAmClC,QAAQ,CAAC3R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0ES,QAA3E,CAA3C;AACD,aAPD,MAOO;AACLtS,cAAAA,YAAY,GAAGqJ,iBAAiB,CAACiH,IAAjC;AACAjH,cAAAA,iBAAiB,CAACiH,IAAlB,GAAyBxQ,iBAAzB;AACA,mBAAKoS,0BAAL,CAAgC1T,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0E9J,UAA1G;AACA,mBAAKoK,yBAAL,CAA+B3T,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0EI,SAAzG;AACA,mBAAKG,0BAAL,CAAgC/I,iBAAiB,CAACiH,IAAlD;AACA,mBAAK+B,6BAAL,CAAmClC,QAAQ,CAAC3R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0ES,QAA3E,CAA3C;AACD;AACF,WAhBD,MAgBO;AACL,iBAAKJ,0BAAL,CAAgC1T,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0E9J,UAA1G;AACA,iBAAKoK,yBAAL,CAA+B3T,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0EI,SAAzG;AACA,iBAAKG,0BAAL,CAAgC5T,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0EvB,IAA1G;AACA,iBAAK+B,6BAAL,CAAmClC,QAAQ,CAAC3R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmED,KAAnE,EAA0ES,QAA3E,CAA3C;AACD;AACF;AACF;AACF,KAhCD,MAgCO;AACL9I,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACA,WAAK0I,0BAAL,CAAgC1T,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEnO,IAAlG;AACA,WAAKyQ,yBAAL,CAA+B3T,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEmC,MAAjG;AACA,WAAKI,0BAAL,CAAgC/I,iBAAiB,CAACiH,IAAlD;AACA,WAAK+B,6BAAL,CAAmClC,QAAQ,CAAC3R,wBAAwB,CAACuQ,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkE0C,QAAnE,CAA3C;AACD;AACF,GA1f8B;AA2f/BC,EAAAA,oBAAoB,EAAE,gCAAY;AAChC,WAAO,KAAK7H,iBAAZ;AACD,GA7f8B;AA8f/BuH,EAAAA,0BAA0B,EAAE,oCAAUxQ,IAAV,EAAgB;AAC1C,SAAKiJ,iBAAL,CAAuBlH,wBAAvB,CAAgD/B,IAAhD;AACA2H,IAAAA,iBAAiB,CAACtB,UAAlB,GAA+BrG,IAA/B;AACD,GAjgB8B;AAkgB/ByQ,EAAAA,yBAAyB,EAAE,mCAAUM,GAAV,EAAe;AACxCpJ,IAAAA,iBAAiB,CAAC4I,SAAlB,GAA8BQ,GAA9B;AACD,GApgB8B;AAqgB/BJ,EAAAA,6BAA6B,EAAE,uCAAUI,GAAV,EAAe;AAC5C,QAAIC,KAAK,CAACD,GAAD,CAAL,IAAcA,GAAG,IAAIpC,SAAzB,EAAoCoC,GAAG,GAAG,CAAN;AAEpCpJ,IAAAA,iBAAiB,CAACiJ,QAAlB,GAA6BG,GAA7B;AACD,GAzgB8B;AA0gB/BE,EAAAA,uCAAuC,EAAE,iDAAUjR,IAAV,EAAgB;AACvD,SAAKiJ,iBAAL,CAAuBxI,kBAAvB,GAA4CT,IAA5C;AACA4H,IAAAA,yBAAyB,CAACsJ,uBAA1B,GAAoDlR,IAApD;AACD,GA7gB8B;AA8gB/BmR,EAAAA,uCAAuC,EAAE,iDAAUnR,IAAV,EAAgB;AACvD,SAAKiJ,iBAAL,CAAuBtI,kBAAvB,GAA4CX,IAA5C;AACA4H,IAAAA,yBAAyB,CAACwJ,YAA1B,GAAyCpR,IAAzC;AACD,GAjhB8B;AAkhB/BkQ,EAAAA,+BAA+B,EAAE,2CAAY;AAC3C,SAAKjH,iBAAL,CAAuBlI,eAAvB,CAAuCsQ,QAAvC,CAAgD,CAAhD,EAAmDA,QAAnD,CAA4D,CAA5D,EAA+DtE,MAA/D,GAAwE,KAAxE;AACA,SAAK9D,iBAAL,CAAuBhI,oBAAvB,CAA4CoQ,QAA5C,CAAqD,CAArD,EAAwDA,QAAxD,CAAiE,CAAjE,EAAoEtE,MAApE,GAA6E,KAA7E;AACA,SAAK9D,iBAAL,CAAuBrI,iBAAvB,CAAyCoB,MAAzC,GAAkD,EAAlD;AACA,SAAKiH,iBAAL,CAAuBnI,iBAAvB,CAAyCkB,MAAzC,GAAkD,EAAlD;AACA,SAAKiH,iBAAL,CAAuBtI,kBAAvB,GAA4C,EAA5C;AACA,SAAKsI,iBAAL,CAAuBxI,kBAAvB,GAA4C,EAA5C;AACAmH,IAAAA,yBAAyB,CAACoI,YAA1B,GAAyCpT,WAAW,CAACqT,gBAAZ,CAA6B1Q,IAAtE;AACD,GA1hB8B;AA2hB/B+R,EAAAA,iCAAiC,EAAE,6CAAY;AAC7C,SAAKrI,iBAAL,CAAuBlI,eAAvB,CAAuCsQ,QAAvC,CAAgD,CAAhD,EAAmDA,QAAnD,CAA4D,CAA5D,EAA+DtE,MAA/D,GAAwE,IAAxE;AACA,SAAK9D,iBAAL,CAAuBhI,oBAAvB,CAA4CoQ,QAA5C,CAAqD,CAArD,EAAwDA,QAAxD,CAAiE,CAAjE,EAAoEtE,MAApE,GAA6E,KAA7E;AAEAnF,IAAAA,yBAAyB,CAACoI,YAA1B,GAAyCpT,WAAW,CAACqT,gBAAZ,CAA6BsB,SAAtE;AACD,GAhiB8B;AAiiB/BC,EAAAA,mCAAmC,EAAE,+CAAY;AAC/C,SAAKvI,iBAAL,CAAuBlI,eAAvB,CAAuCsQ,QAAvC,CAAgD,CAAhD,EAAmDA,QAAnD,CAA4D,CAA5D,EAA+DtE,MAA/D,GAAwE,KAAxE;AACA,SAAK9D,iBAAL,CAAuBhI,oBAAvB,CAA4CoQ,QAA5C,CAAqD,CAArD,EAAwDA,QAAxD,CAAiE,CAAjE,EAAoEtE,MAApE,GAA6E,IAA7E;AAEAnF,IAAAA,yBAAyB,CAACoI,YAA1B,GAAyCpT,WAAW,CAACqT,gBAAZ,CAA6BwB,cAAtE;AACD,GAtiB8B;AAuiB/Bf,EAAAA,0BAA0B,EAAE,oCAAUgB,MAAV,EAAkB;AAC5C,SAAKzI,iBAAL,CAAuBzI,YAAvB,CAAoCwB,MAApC,GAA6C0P,MAA7C;AACA/J,IAAAA,iBAAiB,CAACiH,IAAlB,GAAyB8C,MAAzB;AACD,GA1iB8B;AA2iB/BC,EAAAA,2BAA2B,EAAE,qCAAUD,MAAV,EAAkB;AAC7C,QAAIE,UAAU,GAAG,KAAjB;AACA,QAAIC,cAAc,GAAG,CAArB;;AAEA,QAAI,CAAC1T,8BAAL,EAAqC;AACnC,WAAK,IAAIgS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGxI,iBAAiB,CAACmK,YAAlB,CAA+BzB,MAA3D,EAAmEF,KAAK,EAAxE,EAA4E;AAC1E,YAAIxI,iBAAiB,CAACmK,YAAlB,CAA+B3B,KAA/B,EAAsC4B,SAA1C,EAAqD;AACnDH,UAAAA,UAAU,GAAG,IAAb;AACAC,UAAAA,cAAc,GAAG1B,KAAjB;AACA;AACD;AACF;;AAED,UAAIyB,UAAJ,EAAgB;AACd,aAAK3C,SAAL,CAAe,qCAAqCtH,iBAAiB,CAACmK,YAAlB,CAA+BD,cAA/B,EAA+CvQ,UAAnG,EAA+G7C,eAA/G;AACD,OAFD,MAEO;AACL,YAAIkJ,iBAAiB,CAACiH,IAAlB,IAA0B8C,MAA9B,EAAsC;AACpC,eAAKzC,SAAL,CAAe,8EAAf,EAA+FxQ,eAA/F;AACD,SAFD,MAEO;AACL,eAAKwK,iBAAL,CAAuB5H,aAAvB,CAAqC0L,MAArC,GAA8C,IAA9C;AACAlF,UAAAA,YAAY,GAAGmK,IAAI,CAACC,GAAL,CAASxD,QAAQ,CAAC9G,iBAAiB,CAACiH,IAAnB,CAAR,GAAmC8C,MAA5C,CAAf;AACA,eAAKzI,iBAAL,CAAuB1H,eAAvB,CAAuC,CAAvC,EAA0C8P,QAA1C,CAAmD,CAAnD,EAAsDA,QAAtD,CAA+D,CAA/D,EAAkEa,YAAlE,CAA+E7S,EAAE,CAACgB,KAAlF,EAAyF2B,MAAzF,GAAkG,MAAM6F,YAAxG;AACD;AACF;AACF,KApBD,MAoBO;AACL,WAAKoH,SAAL,CAAe,iDAAf;AACD;AACF,GAtkB8B;AAukB/BkD,EAAAA,iCAAiC,EAAE,2CAAUC,KAAV,EAAiB;AAClD,QAAI,CAACjU,8BAAL,EAAqC;AACnC,UAAIyJ,yBAAyB,CAACoI,YAA1B,IAA0CpT,WAAW,CAACqT,gBAAZ,CAA6BwB,cAA3E,EAA2F;AACzF,aAAKE,2BAAL,CAAiC,KAAjC;AACD,OAFD,MAEO,IAAI/J,yBAAyB,CAACoI,YAA1B,IAA0CpT,WAAW,CAACqT,gBAAZ,CAA6BsB,SAA3E,EAAsF;AAC3F,aAAKI,2BAAL,CAAiC,KAAjC;AACD,OAFM,MAEA;AACL,aAAK1C,SAAL,CAAe,+DAAf;AACD;AACF,KARD,MAQO;AACL,WAAKA,SAAL,CAAe,iDAAf;AACD;AACF,GAnlB8B;AAolB/BoD,EAAAA,qCAAqC,EAAE,+CAAUD,KAAV,EAAiB;AACtD,SAAKnJ,iBAAL,CAAuB5H,aAAvB,CAAqC0L,MAArC,GAA8C,KAA9C;AACD,GAtlB8B;AAulB/BuF,EAAAA,oCAAoC,EAAE,8CAAUnC,KAAV,EAAiB;AACrD,SAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKtJ,iBAAL,CAAuB1H,eAAvB,CAAuC8O,MAA3D,EAAmEkC,CAAC,EAApE,EAAwE;AACtE,UAAIpC,KAAK,IAAIoC,CAAb,EAAgB,KAAKtJ,iBAAL,CAAuB1H,eAAvB,CAAuCgR,CAAvC,EAA0ClB,QAA1C,CAAmD,CAAnD,EAAsDtE,MAAtD,GAA+D,IAA/D,CAAhB,KACK,KAAK9D,iBAAL,CAAuB1H,eAAvB,CAAuCgR,CAAvC,EAA0ClB,QAA1C,CAAmD,CAAnD,EAAsDtE,MAAtD,GAA+D,KAA/D;AACN;AACF,GA5lB8B;AA6lB/ByF,EAAAA,oCAAoC,EAAE,8CAAUJ,KAAV,EAAiB;AACrD,SAAKnJ,iBAAL,CAAuB3H,UAAvB,GAAoClC,cAAc,CAACS,KAAnD;AACA,SAAKyS,oCAAL,CAA0C,CAA1C;AACD,GAhmB8B;AAimB/BG,EAAAA,oCAAoC,EAAE,8CAAUL,KAAV,EAAiB;AACrD,SAAKnJ,iBAAL,CAAuB3H,UAAvB,GAAoClC,cAAc,CAACI,WAAnD;AACA,SAAK8S,oCAAL,CAA0C,CAA1C;AACD,GApmB8B;AAqmB/BI,EAAAA,oCAAoC,EAAE,8CAAUN,KAAV,EAAiB;AACrD,SAAKnJ,iBAAL,CAAuB3H,UAAvB,GAAoClC,cAAc,CAACK,aAAnD;AACA,SAAK6S,oCAAL,CAA0C,CAA1C;AACD,GAxmB8B;AAymB/BK,EAAAA,oCAAoC,EAAE,8CAAUP,KAAV,EAAiB;AACrD,SAAKnJ,iBAAL,CAAuB3H,UAAvB,GAAoClC,cAAc,CAACM,cAAnD;AACA,SAAK4S,oCAAL,CAA0C,CAA1C;AACD,GA5mB8B;AA6mB/BM,EAAAA,oCAAoC,EAAE,8CAAUR,KAAV,EAAiB;AACrD,SAAKnJ,iBAAL,CAAuB3H,UAAvB,GAAoClC,cAAc,CAACO,aAAnD;AACA,SAAK2S,oCAAL,CAA0C,CAA1C;AACD,GAhnB8B;AAinB/BO,EAAAA,oCAAoC,EAAE,8CAAUT,KAAV,EAAiB;AACrD,SAAKnJ,iBAAL,CAAuB3H,UAAvB,GAAoClC,cAAc,CAACQ,aAAnD;AACA,SAAK0S,oCAAL,CAA0C,CAA1C;AACD,GApnB8B;AAqnB/BQ,EAAAA,gCAAgC,EAAE,0CAAUV,KAAV,EAAiB;AACjD,QAAI,KAAKnJ,iBAAL,CAAuB3H,UAAvB,IAAqClC,cAAc,CAACS,KAAxD,EAA+D+H,yBAAyB,CAACtG,UAA1B,GAAuCuG,YAAvC,CAA/D,KACKD,yBAAyB,CAACtG,UAA1B,GAAuCmN,QAAQ,CAAC,KAAKxF,iBAAL,CAAuB3H,UAAxB,CAA/C;AAELsG,IAAAA,yBAAyB,CAACmK,SAA1B,GAAsC,IAAtC;AACA,SAAKM,qCAAL;AACA1K,IAAAA,iBAAiB,CAACiH,IAAlB,GAAyBjH,iBAAiB,CAACiH,IAAlB,GAAyBhH,yBAAyB,CAACtG,UAA5E;AACA,SAAKoP,0BAAL,CAAgC/I,iBAAiB,CAACiH,IAAlD;AACD,GA7nB8B;AA+nB/BmE,EAAAA,qBA/nB+B,iCA+nBTC,KA/nBS,EA+nBF;AAC3B,QAAIC,KAAK,GAAGnW,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4F,eAA9D,EAAZ;;AACA,QAAID,KAAK,IAAI,CAAb,EAAgB;AACdE,MAAAA,kBAAkB,GAAG,IAAIvW,WAAW,CAACgT,UAAhB,EAArB;AACAuD,MAAAA,kBAAkB,CAACvE,IAAnB,GAA0B,KAA1B;AACAuE,MAAAA,kBAAkB,CAACC,QAAnB,GAA8BJ,KAAK,CAAC1C,MAApC;AACA6C,MAAAA,kBAAkB,CAAC9M,UAAnB,GAAgC2M,KAAK,CAAChT,IAAtC;AACAmT,MAAAA,kBAAkB,CAACvC,QAAnB,GAA8B,CAA9B;AACAuC,MAAAA,kBAAkB,CAACE,eAAnB,GAAqC,CAArC;AACAF,MAAAA,kBAAkB,CAACG,QAAnB,GAA8B,KAA9B;AACAH,MAAAA,kBAAkB,CAACtD,iBAAnB,GAAuC,IAAIjT,WAAW,CAACkT,qBAAhB,EAAvC;AACAyD,MAAAA,0BAA0B,GAAG,IAAI3W,WAAW,CAACmT,YAAhB,EAA7B;AACAwD,MAAAA,0BAA0B,CAACvD,YAA3B,GAA0CpT,WAAW,CAACqT,gBAAZ,CAA6BsB,SAAvE;AACAgC,MAAAA,0BAA0B,CAACrC,uBAA3B,GAAqD,QAArD;AACAqC,MAAAA,0BAA0B,CAACnC,YAA3B,GAA0C,YAA1C;;AACA+B,MAAAA,kBAAkB,CAACrB,YAAnB,CAAgC0B,IAAhC,CAAqCD,0BAArC;;AAEAzW,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,CAA1E,EAA6EN,kBAA7E;AACD;AACF,GAlpB8B;AAmpB/BlH,EAAAA,QAAQ,EAAE,kBAAU+G,KAAV,EAAiBU,GAAjB,EAAsBC,WAAtB,EAA2C;AAAA,QAArBA,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AACnD,QAAIC,WAAW,GAAG9W,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EC,iBAA5E,CAA8F,gBAA9F,EAAgH,YAAhH,CAAlB;;AAEA,QAAIF,WAAJ,EAAiB;AACf9W,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DyG,UAA9D,GAA2EjX,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D0G,aAA9D,EAA3E;AACD;;AAED,QAAI,CAACL,WAAL,EAAkB;AAChB,UAAID,GAAG,IAAI5W,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EI,OAAvF,EAAgGnX,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEoD,IAAnE,CAAwER,KAAxE;AACjG,KATkD,CAWnD;;;AAEA,QAAIlW,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAAnE,IAA6EvT,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DyG,UAA/I,EAA2J;AACzJ;AACAjX,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4G,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,cAAxG,EAAwH,IAAxH,EAA8H,IAA9H;AACAtX,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4G,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,gBAAxG,EAA0HtX,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAA9K,EAA8L,IAA9L;AACA,WAAKnH,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,KAAlD;AACA,WAAK3L,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;AACA,WAAK3C,gBAAL,CAAsB2C,MAAtB,GAA+B,IAA/B;AAEAjQ,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2G,SAApD;AACAxF,MAAAA,OAAO,CAACC,GAAR,CAAYhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAAhE;AACD;AACF,GA3qB8B;AA6qB/BkE,EAAAA,gBAAgB,EAAE,0BAAU5F,OAAV,EAAmB6F,aAAnB,EAAkCC,YAAlC,EAAgD;AAChE,QAAI7M,iBAAiB,CAACiH,IAAlB,GAAyBF,OAAzB,IAAoC,CAACrQ,2BAAzC,EAAsE;AACpE,WAAK4Q,SAAL,CAAe,0CAA0CsF,aAA1C,GAA0D,YAAzE,EAAuF9V,eAAvF;AACD,KAFD,MAEO;AACL,UAAI+V,YAAJ,EAAkB;AAChB,YAAI7M,iBAAiB,CAAC0L,eAAlB,GAAoC,CAAxC,EAA2C;AACzC,cAAI,CAAChV,2BAAL,EAAkC;AAChCsJ,YAAAA,iBAAiB,CAACiH,IAAlB,GAAyBjH,iBAAiB,CAACiH,IAAlB,GAAyBF,OAAlD;AACA,iBAAKzF,iBAAL,CAAuBzI,YAAvB,CAAoCwB,MAApC,GAA6C,MAAM2F,iBAAiB,CAACiH,IAArE;AACD;;AAED,eAAK6F,SAAL,GAAiB,IAAjB;AACA9M,UAAAA,iBAAiB,CAAC0L,eAAlB;AACD,SARD,MAQO;AACL,eAAKoB,SAAL,GAAiB,KAAjB;AACA,eAAKxF,SAAL,CAAe,sDAAf;AACD;AACF,OAbD,MAaO;AACL,YAAI,CAAC5Q,2BAAL,EAAkC;AAChCsJ,UAAAA,iBAAiB,CAACiH,IAAlB,GAAyBjH,iBAAiB,CAACiH,IAAlB,GAAyBF,OAAlD;AACA,eAAKzF,iBAAL,CAAuBzI,YAAvB,CAAoCwB,MAApC,GAA6C,MAAM2F,iBAAiB,CAACiH,IAArE;AACD;;AACD,aAAK6F,SAAL,GAAiB,IAAjB;AACA9M,QAAAA,iBAAiB,CAAC+M,oBAAlB;AACD;AACF;AACF,GAvsB8B;AAysB/BC,EAAAA,kBAAkB,EAAE,8BAAY;AAC9B,QAAI,CAACxW,8BAAL,EAAqC;AACnC,WAAKiD,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;;AAEA,UAAInF,yBAAyB,CAACmK,SAA9B,EAAyC;AACvCnK,QAAAA,yBAAyB,CAACmK,SAA1B,GAAsC,KAAtC;AACApK,QAAAA,iBAAiB,CAACiH,IAAlB,GAAyBjH,iBAAiB,CAACiH,IAAlB,GAAyBhH,yBAAyB,CAACtG,UAA5E;AACAsG,QAAAA,yBAAyB,CAACtG,UAA1B,GAAuC,CAAvC;AACA,aAAK2N,SAAL,CAAe,6BAAf;AACD;AACF,KATD,MASO;AACLtH,MAAAA,iBAAiB,CAACiH,IAAlB,GAAyBtQ,YAAzB;AACA,WAAK8C,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;AACAjF,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACA3J,MAAAA,8BAA8B,GAAG,KAAjC;AACAC,MAAAA,iBAAiB,GAAG,CAApB;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAvB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD;AACF,GA5tB8B;AA8tB/BC,EAAAA,0BAA0B,EAAE,sCAAY;AAAA;;AACtC,QAAI5B,KAAK,GAAGnW,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4F,eAA9D,EAAZ;;AAEA,QAAI,KAAK1G,YAAT,EAAuB;AACrB7E,MAAAA,iBAAiB,CAACmN,UAAlB,GAA+B,IAA/B;AACAnN,MAAAA,iBAAiB,CAACoN,cAAlB,GAAmC,KAAKtI,gBAAxC;AACA3P,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEtT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnE,IAA0IrN,iBAA1I;AACD,KAJD,MAIO;AACL7K,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEoD,IAAnE,CAAwE7L,iBAAxE;AACD;;AAED,QAAIsL,KAAK,IAAI,CAAb,EAAgB;AACd;AACA;AACAnW,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmHzM,iBAAnH;;AAEA,UAAI,CAAC,KAAK6E,YAAV,EAAwB;AACtB1P,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,CAA1E,EAA6E9L,iBAA7E;AACA,aAAKsB,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,IAAlD;AACD,OAHD,MAGO;AACL,aAAK9D,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,KAAlD;AACA,aAAK3L,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;AACA,aAAK3C,gBAAL,CAAsB2C,MAAtB,GAA+B,IAA/B;AAEA,YAAIiG,KAAK,GAAG;AAAEiC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,UAAU,EAAE,IAAd;AAAoBC,YAAAA,IAAI,EAAErY,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAA1B;AAA+FI,YAAAA,cAAc,EAAEzN;AAA/G;AAAR,SAAZ;AACA7K,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,CAA1E,EAA6ET,KAA7E;AACAlW,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2H,sBAApD;AACD;AACF,KAjBD,MAiBO,IAAIpC,KAAK,IAAI,CAAb,EAAgB;AACrB;AACA,UAAI,CAAC,KAAKzG,YAAV,EAAwB;AACtB,aAAKvD,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,IAAlD;AACAU,QAAAA,UAAU,CAAC,YAAM;AACf,UAAA,KAAI,CAACxE,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,KAAlD;AACA,UAAA,KAAI,CAAC3L,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;AACA,UAAA,KAAI,CAAC3C,gBAAL,CAAsB2C,MAAtB,GAA+B,IAA/B;AACAjQ,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2G,SAApD;AACD,SALS,EAKP,IALO,CAAV;AAMD,OARD,MAQO;AACL,aAAKpL,iBAAL,CAAuBzH,iBAAvB,CAAyCuL,MAAzC,GAAkD,KAAlD;AACA,aAAK3L,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;AACA,aAAK3C,gBAAL,CAAsB2C,MAAtB,GAA+B,IAA/B;AACAjQ,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2H,sBAApD;AACD;AACF,KAhBM,MAgBA;AACLxG,MAAAA,OAAO,CAACyG,KAAR,CAAc,kBAAd;AACD;AACF,GA7wB8B;AA+wB/BC,EAAAA,sCAAsC,EAAE,kDAAY;AAClD,QAAI,CAACpX,8BAAL,EAAqC;AACnCrB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEtI,uBAAnE,IAA8FH,iBAA9F;AACA,WAAKvG,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;AACAjF,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACA,WAAK0N,2BAAL,CAAiC,IAAjC;AACD,KALD,MAKO;AACL7N,MAAAA,iBAAiB,CAACiH,IAAlB,GAAyBtQ,YAAzB;AACAxB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEtI,uBAAnE,IAA8FH,iBAA9F;AACA,WAAKvG,iBAAL,CAAuB2L,MAAvB,GAAgC,KAAhC;AACAjF,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACA3J,MAAAA,8BAA8B,GAAG,KAAjC;AACAC,MAAAA,iBAAiB,GAAG,CAApB;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAvB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD;AACF,GA/xB8B;AAiyB/Ba,EAAAA,mBAAmB,EAAE,+BAAY;AAC/B,SAAKhB,SAAL,GAAiB,KAAjB;AAEA,QAAI7M,yBAAyB,CAACsJ,uBAA1B,IAAqD,EAAzD,EAA6D,KAAKjC,SAAL,CAAe,+BAAf,EAA7D,KACK,IAAIrH,yBAAyB,CAACwJ,YAA1B,IAA0C,EAA9C,EAAkD,KAAKnC,SAAL,CAAe,+BAAf,EAAlD,KACA;AACH,UAAIrH,yBAAyB,CAACoI,YAA1B,IAA0CpT,WAAW,CAACqT,gBAAZ,CAA6B1Q,IAAvE,IAA+EqI,yBAAyB,CAACoI,YAA1B,IAA0CrB,SAA7H,EAAwI;AACtI,aAAKM,SAAL,CAAe,0BAAf;AACA;AACD;;AAED,UAAIrH,yBAAyB,CAACoI,YAA1B,IAA0CpT,WAAW,CAACqT,gBAAZ,CAA6BsB,SAA3E,EACE;AACA,aAAK+C,gBAAL,CAAsB,KAAtB,EAA6B,MAA7B,EAAqC,IAArC,EAFF,KAGK,IAAI1M,yBAAyB,CAACoI,YAA1B,IAA0CpT,WAAW,CAACqT,gBAAZ,CAA6BwB,cAA3E,EACH;AACA,aAAK6C,gBAAL,CAAsB,KAAtB,EAA6B,kBAA7B,EAAiD,KAAjD;;AAEF,UAAI,KAAKG,SAAL,IAAkB,IAAlB,IAA0B,KAAKjI,YAAL,IAAqB,IAAnD,EAAyD;AACvD7E,QAAAA,iBAAiB,CAACmK,YAAlB,CAA+B0B,IAA/B,CAAoC5L,yBAApC;;AAEA,YAAIE,uBAAuB,IAAI,CAAC,CAAhC,EAAmC;AACjC;AACA,eAAKyN,sCAAL;AACD,SAHD,CAIA;AAJA,aAKK;AACH,iBAAKV,0BAAL;AACD,WAVsD,CAYvD;;;AACA,aAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzV,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAAvF,EAA+FkC,CAAC,EAAhG,EAAoG;AAClG1D,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEmC,CAAnE,EAAsElM,UAApG;AACAwI,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEmC,CAAnE,EAAsEhC,SAAlG;AACA1B,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEmC,CAAnE,EAAsEmD,KAAtG;AACA7G,UAAAA,OAAO,CAACC,GAAR,CAAY,wCAAZ;AACAD,UAAAA,OAAO,CAACC,GAAR,CAAYhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEmC,CAAnE,EAAsET,YAAlF;AACAjD,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEmC,CAAnE,EAAsE3D,IAApG;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEmC,CAAnE,EAAsER,SAA1G;AACAlD,UAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEmC,CAAnE,EAAsEjR,UAA1G;AACD;AACF;AACF;AACF,GA50B8B;AA60B/B;AAEA;AACA;AACAkU,EAAAA,2BAA2B,EAAE,qCAAUG,QAAV,EAAoB;AAC/C,SAAKnP,cAAL,CAAoBuG,MAApB,GAA6B4I,QAA7B;AAEA,QAAIC,OAAO,GAAGD,QAAd;;AAEA,QAAIC,OAAJ,EAAa;AACXA,MAAAA,OAAO,GAAG,KAAV;AACA,WAAK3T,mBAAL,CAAyBU,WAAzB,CAAqCoK,MAArC,GAA8C,KAA9C;AACA,WAAKJ,KAAL,GAAahO,eAAb;AACA,WAAKiO,YAAL,GAAoB,IAApB;AACA,WAAK3K,mBAAL,CAAyBS,SAAzB,CAAmCV,MAAnC,GAA4C,KAAK2K,KAAL,GAAa,kEAAzD;AACAkJ,MAAAA,YAAY,CAAC/W,YAAD,CAAZ;AACA,WAAKgX,WAAL;AACD,KARD,MAQO;AACLD,MAAAA,YAAY,CAAC/W,YAAD,CAAZ;AACA,WAAK6N,KAAL,GAAa,CAAb;AACA,WAAKC,YAAL,GAAoB,KAApB;AACA,WAAK3K,mBAAL,CAAyBS,SAAzB,CAAmCV,MAAnC,GAA4C,EAA5C;AACA,WAAKC,mBAAL,CAAyBU,WAAzB,CAAqCoK,MAArC,GAA8C,KAA9C;AACD;;AAED,SAAKgJ,uBAAL;AACD,GAv2B8B;AAy2B/BD,EAAAA,WAz2B+B,yBAy2BjB;AAAA;;AACZ,QAAI,KAAKnJ,KAAL,GAAa,CAAjB,EAAoB;AAClB,WAAKA,KAAL,GAAa,KAAKA,KAAL,GAAa,CAA1B;AACA,WAAK1K,mBAAL,CAAyBS,SAAzB,CAAmCV,MAAnC,GAA4C,KAAK2K,KAAL,GAAa,kEAAzD;AACA7N,MAAAA,YAAY,GAAG2O,UAAU,CAAC,YAAM;AAC9B,QAAA,MAAI,CAACqI,WAAL;AACD,OAFwB,EAEtB,IAFsB,CAAzB;AAGD,KAND,MAMO;AACLD,MAAAA,YAAY,CAAC/W,YAAD,CAAZ;AACA,WAAK6N,KAAL,GAAa,CAAb;AACA,WAAKC,YAAL,GAAoB,KAApB;AACA,WAAK3K,mBAAL,CAAyBS,SAAzB,CAAmCV,MAAnC,GAA4C,yDAA5C;AACA,WAAKC,mBAAL,CAAyBU,WAAzB,CAAqCoK,MAArC,GAA8C,IAA9C;AACD;AACF,GAv3B8B;AAy3B/BgJ,EAAAA,uBAAuB,EAAE,mCAAY;AACnC,SAAK9T,mBAAL,CAAyBI,eAAzB,CAAyCL,MAAzC,GAAkD,OAAOlF,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEtT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnE,EAAwIpG,IAAjM;AACD,GA33B8B;AA63B/BoH,EAAAA,qCAAqC,EAAE,+CAAUtE,MAAV,EAAkB;AACvD;AACA3J,IAAAA,mBAAmB,GAAG2J,MAAtB;AACD,GAh4B8B;AAk4B/BuE,EAAAA,2CAl4B+B,uDAk4BavH,OAl4Bb,EAk4B0B;AAAA,QAAbA,OAAa;AAAbA,MAAAA,OAAa,GAAH,CAAG;AAAA;;AACvD,QAAIwH,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AAEA,SAAK,IAAI7E,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG+F,QAAQ,CAAC9F,cAAT,CAAwBC,MAApD,EAA4DF,KAAK,EAAjE,EAAqE;AACnE,UAAI+F,QAAQ,CAAC9F,cAAT,CAAwBD,KAAxB,EAA+BN,iBAA/B,CAAiDuG,mBAArD,EAA0E;AACxE,aAAKC,2BAAL,CAAiC3H,OAAjC,EAA0CwH,QAAQ,CAAC9F,cAAT,CAAwBD,KAAxB,EAA+BI,SAAzE,EAAoF,wCAAwC7B,OAAxC,GAAkD,8BAAtI;AACD;AACF;AACF,GA34B8B;AA64B/B2H,EAAAA,2BA74B+B,uCA64BHC,KA74BG,EA64BIC,GA74BJ,EA64BSC,IA74BT,EA64Be;AAC5C,QAAIxD,KAAK,GAAG;AAAEtB,MAAAA,MAAM,EAAE4E,KAAV;AAAiBG,MAAAA,EAAE,EAAEF,GAArB;AAA0BG,MAAAA,GAAG,EAAEF;AAA/B,KAAZ;AACA1Z,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,EAA1E,EAA8ET,KAA9E;AACD,GAh5B8B;AAk5B/B2D,EAAAA,sCAAsC,EAAE,kDAAY;AAClD,QAAI5O,mBAAmB,IAAI,EAAvB,IAA6BA,mBAAmB,IAAI,IAAxD,EAA8D;AAC5D,WAAKkH,SAAL,CAAe,yBAAf;AACD,KAFD,MAEO;AACL,UAAIkH,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,WAAK4B,eAAL,GAAuBnI,QAAQ,CAAC1G,mBAAD,CAA/B;AACA8G,MAAAA,OAAO,CAACC,GAAR,CAAYhS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAA7F,EAHK,CAKL;;AACA,UAAI9R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF,KAAKgI,eAAlG,EAAmH;AACjH9Z,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF9R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF,KAAKgI,eAArL;AACA9Z,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFU,eAAjF,GAAmG/Z,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFU,eAAjF,GAAmG,KAAKD,eAA3M;AACA,aAAK3H,SAAL,CACE,0CAA0CnS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFU,eAA3H,GAA6I,wBAA7I,GAAwK/Z,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAzP,GAAgQ,GADlQ,EAEEnQ,eAFF;AAIA,aAAKsX,uBAAL;AACA,aAAKE,2CAAL,CAAiD,KAAKW,eAAtD,EARiH,CAUjH;;AACA,aAAK3U,mBAAL,CAAyBC,gBAAzB,CAA0CF,MAA1C,GAAmD,EAAnD;AACA+F,QAAAA,mBAAmB,GAAG,EAAtB;AACD,OAbD,MAaO;AACL,aAAKkH,SAAL,CAAe,8BAAf,EADK,CAGL;;AACA,aAAKhN,mBAAL,CAAyBC,gBAAzB,CAA0CF,MAA1C,GAAmD,EAAnD;AACA+F,QAAAA,mBAAmB,GAAG,EAAtB;AACD;AACF;AACF,GAh7B8B;AAk7B/B+O,EAAAA,wCAAwC,EAAE,oDAAY;AACpD;AACA,QAAIX,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,QAAIlY,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFY,YAArF,EAAmG;AACjG,WAAK9H,SAAL,CAAe,kCAAf;AACD,KAFD,MAEO;AACL,UAAInS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF,IAA7F,EAAmG;AACjG9R,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFY,YAAjF,GAAgG,IAAhG;AACA/O,QAAAA,gBAAgB,GAAG,IAAnB;AACA6G,QAAAA,OAAO,CAACC,GAAR,CAAY9G,gBAAZ;AACAlL,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF9R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF,IAAhL;AACA,aAAKK,SAAL,CAAe,8DAA8DnS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAA/I,GAAsJ,GAArK,EAA0KnQ,eAA1K;AACA,aAAKsX,uBAAL;AACD,OAPD,MAOO;AACL,aAAK9G,SAAL,CAAe,qDAAf;AACD;AACF;AACF,GAn8B8B;AAq8B/B+H,EAAAA,iDAr8B+B,6DAq8BmBC,KAr8BnB,EAq8B0B;AACvD3O,IAAAA,YAAY,GAAG2O,KAAf;AACD,GAv8B8B;AAw8B/BC,EAAAA,kCAAkC,EAAE,4CAAU9E,KAAV,EAAwB5C,oBAAxB,EAAsDC,UAAtD,EAAsEC,4BAAtE,EAA4G;AAAA;;AAAA,QAAlG0C,KAAkG;AAAlGA,MAAAA,KAAkG,GAA1F,IAA0F;AAAA;;AAAA,QAApF5C,oBAAoF;AAApFA,MAAAA,oBAAoF,GAA7D,KAA6D;AAAA;;AAAA,QAAtDC,UAAsD;AAAtDA,MAAAA,UAAsD,GAAzC,CAAyC;AAAA;;AAAA,QAAtCC,4BAAsC;AAAtCA,MAAAA,4BAAsC,GAAP,KAAO;AAAA;;AAC9I;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AAEA3Q,IAAAA,8BAA8B,GAAGqR,oBAAjC;AACApR,IAAAA,iBAAiB,GAAGqR,UAApB;AACApR,IAAAA,2BAA2B,GAAGqR,4BAA9B;AAEA,SAAKzN,mBAAL,CAAyBK,kBAAzB,CAA4CyK,MAA5C,GAAqD,IAArD;AACA,QAAIoK,eAAe,GAAGra,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0J,2CAApD,CAAgGjZ,8BAAhG,EAAgIC,iBAAhI,EAAmJC,2BAAnJ,CAAtB;;AAEA,QAAI8Y,eAAe,IAAI,CAAvB,EAA0B;AACxB,WAAKlI,SAAL,CAAe,kDAAf;AACAxB,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACxL,mBAAL,CAAyBK,kBAAzB,CAA4CyK,MAA5C,GAAqD,KAArD;;AAEA,YAAI5O,8BAAJ,EAAoC;AAClC,UAAA,MAAI,CAACyN,eAAL;;AACAtD,UAAAA,YAAY,GAAG,EAAf;AACAuG,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAhS,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2J,qBAApD;AACA,UAAA,MAAI,CAACpV,mBAAL,CAAyBK,kBAAzB,CAA4CyK,MAA5C,GAAqD,KAArD;AACA5O,UAAAA,8BAA8B,GAAG,KAAjC;AACAC,UAAAA,iBAAiB,GAAG,CAApB;AACAC,UAAAA,2BAA2B,GAAG,KAA9B;AACAvB,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD;AACF,OAdS,EAcP,IAdO,CAAV;AAeD;AACF,GAr+B8B;AAu+B/B0C,EAAAA,sCAAsC,EAAE,kDAAY;AAClD,QAAI,CAACnZ,8BAAL,EAAqC;AACnC,WAAK4X,uBAAL;AACA,WAAKnK,eAAL;AACAtD,MAAAA,YAAY,GAAG,EAAf;AACAuG,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAhS,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2J,qBAApD;AACA,WAAKpV,mBAAL,CAAyBK,kBAAzB,CAA4CyK,MAA5C,GAAqD,KAArD;AACD,KAPD,MAOO;AACL,WAAKnB,eAAL;AACAtD,MAAAA,YAAY,GAAG,EAAf;AACAuG,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACAhS,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2J,qBAApD;AACA,WAAKpV,mBAAL,CAAyBK,kBAAzB,CAA4CyK,MAA5C,GAAqD,KAArD;AACA5O,MAAAA,8BAA8B,GAAG,KAAjC;AACAC,MAAAA,iBAAiB,GAAG,CAApB;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAvB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD;AACF,GA1/B8B;AA4/B/B2C,EAAAA,uCAAuC,EAAE,mDAAY;AACnD1I,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,SAAKI,8BAAL,CAAoC,KAApC,EAA2C,IAA3C;AACD,GA//B8B;AAigC/BsI,EAAAA,gCAAgC,EAAE,0CAAU9F,MAAV,EAAkB;AAClD;AACAzJ,IAAAA,cAAc,GAAGyJ,MAAjB;AACD,GApgC8B;AAsgC/B+F,EAAAA,8BAA8B,EAAE,0CAAY;AAC1C,QAAI,CAAC,KAAKjM,YAAV,EAAwB;AACtB,WAAKA,YAAL,GAAoB,IAApB;AACAtD,MAAAA,kBAAkB,GAAG,EAArB;AACA,WAAKwP,iCAAL,CAAuC,IAAvC;AACA,WAAKxO,iBAAL,CAAuBxF,WAAvB,GAAqCd,UAAU,CAACE,UAAhD;AACAsF,MAAAA,UAAU,GAAGtL,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDiK,YAApD,EAAb;AACAtP,MAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,WAAKwP,qBAAL,CAA2B,gBAA3B,EAA6CxP,UAA7C,EAAyD,8BAAzD,EAAyFC,WAAW,GAAG,QAAvG,EAAiH,mDAAjH,EAAsK,sBAAtK,EAA8LA,WAAW,GAAG,MAA5M,EAAoN,KAApN,EAA2N,KAAKa,iBAAL,CAAuBxF,WAAlP;AACD,KATD,MASO;AACL,WAAKuL,SAAL,CAAe,8CAAf;AACD;AACF,GAnhC8B;AAqhC/B4I,EAAAA,uCAAuC,EAAE,iDAAU7X,IAAV,EAAgB;AACvDmI,IAAAA,iBAAiB,GAAGnI,IAApB;AACD,GAvhC8B;AAyhC/B8X,EAAAA,+BAA+B,EAAE,yCAAU1F,KAAV,EAAwB2F,WAAxB,EAA6C;AAAA,QAAnC3F,KAAmC;AAAnCA,MAAAA,KAAmC,GAA3B,IAA2B;AAAA;;AAAA,QAArB2F,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AAC5E7Z,IAAAA,iBAAiB,GAAG6Z,WAApB;AAEAlJ,IAAAA,OAAO,CAACyG,KAAR,CAAcyC,WAAd;AAEA,QAAI7Z,iBAAJ,EAAuBiK,iBAAiB,GAAG,mBAApB;;AAEvB,QAAI,CAAC,KAAKuD,aAAN,IAAuBxN,iBAA3B,EAA8C;AAC5C,UAAIiY,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,UAAI7M,iBAAiB,IAAI,EAAzB,EAA6B;AAC3B,aAAK6P,2BAAL;AACA,aAAK/I,SAAL,CAAe,yCAAf;AACD,OAHD,MAGO;AACL,aAAKvD,aAAL,GAAqB,IAArB;AACAxD,QAAAA,kBAAkB,GAAG,EAArB;AACA,aAAKwP,iCAAL,CAAuC,IAAvC;AACA,aAAKxO,iBAAL,CAAuBxF,WAAvB,GAAqCd,UAAU,CAACC,WAAhD;AAEA,YAAI,CAAC3E,iBAAL,EAAwBkK,UAAU,GAAGtL,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDiK,YAApD,EAAb,CAAxB,KACKvP,UAAU,GAAGtL,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDuK,WAApD,EAAb;AAEL5P,QAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,aAAKwP,qBAAL,CAA2B,iBAA3B,EAA8CxP,UAA9C,EAA0D,+BAA1D,EAA2FC,WAAW,GAAG,QAAzG,EAAmH,qDAAnH,EAA0K,sBAA1K,EAAkMA,WAAW,GAAG,MAAhN,EAAwN,KAAxN,EAA+N,KAAKa,iBAAL,CAAuBxF,WAAtP;AACD;AACF,KAlBD,MAkBO;AACL,WAAKuL,SAAL,CAAe,gDAAf;AACD;AACF,GArjC8B;AAujC/BiJ,EAAAA,8BAA8B,EAAE,0CAAY;AAC1C,QAAI,CAAC,KAAKzM,QAAV,EAAoB;AAClB,UAAI0K,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,UAAIlY,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFgC,SAAjF,GAA6F,CAAjG,EAAoG;AAClG,aAAK1M,QAAL,GAAgB,IAAhB;AACAvD,QAAAA,kBAAkB,GAAG,EAArB;AACA,aAAKwP,iCAAL,CAAuC,IAAvC;AACA,aAAKxO,iBAAL,CAAuBxF,WAAvB,GAAqCd,UAAU,CAACI,QAAhD;AACAoF,QAAAA,UAAU,GAAGtL,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDiK,YAApD,EAAb;AACAtP,QAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,aAAKwP,qBAAL,CAA2B,WAA3B,EAAwCxP,UAAxC,EAAoD,8BAApD,EAAoFC,WAAW,GAAG,QAAlG,EAA4G,oDAA5G,EAAkK,uBAAlK,EAA2LA,WAAW,GAAG,MAAzM,EAAiN,MAAjN,EAAyN,KAAKa,iBAAL,CAAuBxF,WAAhP;AACD,OATD,MASO;AACL,aAAKuL,SAAL,CAAe,0DAAf;AACD;AACF,KAdD,MAcO;AACL,WAAKA,SAAL,CAAe,yCAAf;AACD;AACF,GAzkC8B;AA2kC/BmJ,EAAAA,+BAA+B,EAAE,2CAAY;AAC3C,QAAI,CAAC,KAAKzM,SAAV,EAAqB;AACnB,UAAIwK,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,UAAIlY,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFkC,UAAjF,GAA8F,CAAlG,EAAqG;AACnG,aAAK1M,SAAL,GAAiB,IAAjB;AACAzD,QAAAA,kBAAkB,GAAG,EAArB;AACA,aAAKwP,iCAAL,CAAuC,IAAvC;AACA,aAAKxO,iBAAL,CAAuBxF,WAAvB,GAAqCd,UAAU,CAACG,SAAhD;AACAqF,QAAAA,UAAU,GAAGtL,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDiK,YAApD,EAAb;AACAtP,QAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,aAAKwP,qBAAL,CAA2B,YAA3B,EAAyCxP,UAAzC,EAAqD,+BAArD,EAAsFC,WAAW,GAAG,QAApG,EAA8G,sDAA9G,EAAsK,uBAAtK,EAA+LA,WAAW,GAAG,MAA7M,EAAqN,MAArN,EAA6N,KAAKa,iBAAL,CAAuBxF,WAApP;AACD,OATD,MASO;AACL,aAAKuL,SAAL,CAAe,qDAAf;AACD;AACF,KAdD,MAcO;AACL,WAAKA,SAAL,CAAe,2CAAf;AACD;AACF,GA7lC8B;AA+lC/BqJ,EAAAA,iCAAiC,EAAE,6CAAY;AAC7CzJ,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAD6C,CAE7C;AACA;;AACA,SAAKyJ,kCAAL;AACD,GApmC8B;AAsmC/BC,EAAAA,8BAA8B,EAAE,0CAAY;AAC1C3J,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAK0G,2BAAL,CAAiC,KAAjC;AACA1Y,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD+K,QAApD;AACD,GA1mC8B;AA4mC/BC,EAAAA,2BAA2B,EAAE,qCAAUC,KAAV,EAAiB,CAC5C;AACD,GA9mC8B;AA+mC/B;AAEA;AACAC,EAAAA,6BAlnC+B,yCAknCD9L,MAlnCC,EAknCO;AACpC,SAAKtD,kBAAL,CAAwBrD,UAAxB,CAAmC4G,MAAnC,GAA4CD,MAA5C;AACD,GApnC8B;AAsnC/B+L,EAAAA,oCAtnC+B,gDAsnCM/L,MAtnCN,EAsnCc;AAC3C,SAAKtD,kBAAL,CAAwBtD,mBAAxB,CAA4C6G,MAA5C,GAAqDD,MAArD;AACD,GAxnC8B;AA0nC/BgM,EAAAA,qCA1nC+B,iDA0nCOhM,MA1nCP,EA0nCe;AAC5C,SAAKtD,kBAAL,CAAwBhD,cAAxB,CAAuCuG,MAAvC,GAAgDD,MAAhD;AACD,GA5nC8B;AA8nC/ByL,EAAAA,kCA9nC+B,gDA8nCM;AACnC5a,IAAAA,WAAW,GAAG,EAAd;AACA,SAAKob,sBAAL;;AACA,QAAI7C,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGD,QAAQ,CAAClB,aAAT,EAAnB;;AACA,QAAIgE,SAAS,GAAG9C,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,CAAhB;AACA,SAAKyC,6BAAL,CAAmC,IAAnC;AACA,SAAKpP,kBAAL,CAAwBnD,UAAxB,CAAmCrE,MAAnC,GAA4CgX,SAAS,CAAC3S,UAAtD;AACA,SAAKmD,kBAAL,CAAwBlD,UAAxB,CAAmCtE,MAAnC,GAA4C,MAAMgX,SAAS,CAACpK,IAA5D;;AAEA,SAAK,IAAIuB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAClH,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAI8I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAK1P,kBAAL,CAAwBjD,iBAAvC,CAAX;AACA0S,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAK3P,kBAAL,CAAwB9D,aAAtC;AACAuT,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCtG,eAApC;AACAqN,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCkH,OAApC,CAA4CJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACA6H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCoH,gBAApC,CAAqDnJ,KAArD;AAEA,UAAIoJ,eAAe,GAAGP,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAAlE;;AAEA,UAAI5B,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,YAA5C;AACAT,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCyH,gBAApC,CAAqD,KAArD;AACAV,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC0H,qBAApC,CAA0D,KAA1D;AACD,OALD,MAKO,IAAInL,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,gBAA5C;;AACA,YAAIG,mBAAmB,GAAGN,eAAe,GAAG,KAA5C;;AACA,YAAIO,YAAY,GAAG,QAAQD,mBAA3B;;AACAZ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCyH,gBAApC,CAAqDG,YAArD;AACAb,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC0H,qBAApC,CAA0DE,YAA1D;AACD;;AAEDb,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6H,UAApC,CAA+Cf,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B7O,UAA7E;AACA2X,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC8H,YAApC,CAAiDhB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAA7F;;AAEA,UAAI2I,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B8J,aAA9B,IAA+C,IAAnD,EAAyD;AACvDhB,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCgI,uBAApC,CAA4D,KAA5D;AACAjB,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCiI,cAApC,CAAmDnB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiK,WAAjF;AACD,OAHD,MAGO;AACLnB,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCgI,uBAApC,CAA4D,IAA5D;AACAjB,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCiI,cAApC,CAAmD,MAAnD;AACD;;AAED5c,MAAAA,8BAA8B,CAACiW,IAA/B,CAAoCyF,IAApC;AACD;AACF,GA7qC8B;AA+qC/BoB,EAAAA,0CA/qC+B,sDA+qCY7D,IA/qCZ,EA+qCkB;AAC/C,QAAIN,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGD,QAAQ,CAAClB,aAAT,EAAnB;;AACA,QAAIgE,SAAS,GAAGlc,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FC,iBAA7G;AACA,SAAKzB,qCAAL,CAA2C,IAA3C;AACA,SAAKtP,kBAAL,CAAwB/C,kBAAxB,CAA2CzE,MAA3C,GAAoDgX,SAAS,CAAC3S,UAA9D;AACA,SAAKmD,kBAAL,CAAwB9C,kBAAxB,CAA2C1E,MAA3C,GAAoD,MAAMgX,SAAS,CAACpK,IAApE;AACA,SAAKpF,kBAAL,CAAwB7C,mBAAxB,CAA4C3E,MAA5C,GAAqDwU,IAArD;AACD,GAvrC8B;AAyrC/BgE,EAAAA,qBAzrC+B,mCAyrCP;AACtB,SAAKzB,sBAAL;AACA,SAAKH,6BAAL,CAAmC,KAAnC;AACD,GA5rC8B;AA8rC/BG,EAAAA,sBA9rC+B,oCA8rCN;AACvB,SAAK,IAAI5I,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG5S,8BAA8B,CAAC8S,MAA3D,EAAmEF,KAAK,EAAxE,EAA4E;AAC1E5S,MAAAA,8BAA8B,CAAC4S,KAAD,CAA9B,CAAsCsK,OAAtC;AACD;;AACDld,IAAAA,8BAA8B,GAAG,EAAjC;AACD,GAnsC8B;AAqsC/Bmd,EAAAA,6BArsC+B,yCAqsCD1H,KArsCC,EAqsCM;AACnCtV,IAAAA,wBAAwB,GAAG,IAA3B;AACAD,IAAAA,eAAe,GAAGuV,KAAlB;;AACA,QAAI2H,MAAM,GAAG7d,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,EAAb;;AACA,QAAI+G,KAAK,GAAG5H,KAAK,CAACiC,IAAN,CAAW4F,IAAvB;AACA,QAAIC,WAAW,GAAG9H,KAAK,CAACiC,IAAN,CAAWrF,UAA7B;AACA,QAAImL,sBAAsB,GAAG/H,KAAK,CAACiC,IAAN,CAAW+F,sBAAxC;AACA,QAAIC,cAAc,GAAGjI,KAAK,CAACiC,IAAN,CAAWiG,QAAhC;;AACA,QAAIC,UAAU,GAAGF,cAAc,GAAG,CAAlC;;AACA,QAAIG,aAAa,GAAG,EAApB;AAEA,QAAIN,WAAW,CAAChJ,YAAZ,CAAyBiJ,sBAAzB,EAAiD/K,YAAjD,IAAiE,CAArE,EAAwEoL,aAAa,GAAG,YAAhB,CAAxE,KACK,IAAIN,WAAW,CAAChJ,YAAZ,CAAyBiJ,sBAAzB,EAAiD/K,YAAjD,IAAiE,CAArE,EAAwEoL,aAAa,GAAG,gBAAhB;;AAE7E,QAAIte,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D+N,aAA9D,MAAiF,KAArF,EAA4F;AAC1F,UAAI7E,IAAI,GACN,4CACAsE,WAAW,CAACzU,UADZ,GAEA,4CAFA,GAGA,IAHA,GAIA,IAJA,GAKA,iBALA,GAMAyU,WAAW,CAAChJ,YAAZ,CAAyBiJ,sBAAzB,EAAiD3J,YANjD,GAOA,IAPA,GAQA,iBARA,GASAgK,aATA,GAUA,IAVA,GAWA,mBAXA,GAYAH,cAZA,GAaA,IAbA,GAcA,iBAdA,GAeAE,UAfA,GAgBA,IAhBA,GAiBA,IAjBA,GAkBA,uIAnBF;;AAqBA,WAAKd,0CAAL,CAAgD7D,IAAhD;AACD;AACF,GA3uC8B;AA6uC/B8E,EAAAA,4BA7uC+B,0CA6uCA;AAC7B,QAAIpF,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAI6N,UAAU,GAAGze,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DkO,UAA9D,EAAjB;;AACA,QAAIb,MAAM,GAAG7d,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FC,iBAA1G;AACA,QAAIvH,KAAK,GAAGvV,eAAZ;AACA,QAAImd,KAAK,GAAG5H,KAAK,CAACiC,IAAN,CAAW4F,IAAvB;AACA,QAAIC,WAAW,GAAG9H,KAAK,CAACiC,IAAN,CAAWrF,UAA7B;AACA,QAAImL,sBAAsB,GAAG/H,KAAK,CAACiC,IAAN,CAAW+F,sBAAxC;AACA,QAAIC,cAAc,GAAGjI,KAAK,CAACiC,IAAN,CAAWiG,QAAhC;;AACA,QAAIC,UAAU,GAAGF,cAAc,GAAG,CAAlC;;AACA,QAAIG,aAAa,GAAG,EAApB;;AAEA,QAAIK,OAAO,GAAGvF,QAAQ,CAACwF,UAAT,EAAd;;AAEA,QAAIhe,wBAAwB,IAAI,IAAhC,EAAsC;AACpC,UAAIwY,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,EAAiC7M,IAAjC,IAAyCuM,UAA7C,EAAyD;AACvDjF,QAAAA,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,EAAiC7M,IAAjC,IAAyCuM,UAAzC;AACAre,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmH8B,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,CAAnH;AACA,aAAKE,yCAAL,CAA+C,IAA/C,EAAqDR,UAArD,EAAiE,KAAjE,EAAwEjF,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,EAAiClL,SAAzG,EAAoH2F,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,CAApH,EAAsJV,sBAAtJ;AACA,aAAKjC,qCAAL,CAA2C,KAA3C;AACA,aAAK7J,SAAL,CAAe,wDAAf;AACD,OAND,MAMO;AACL,aAAKA,SAAL,CAAe,kBAAf;AACD;AACF,KAVD,MAUO;AACL,WAAKA,SAAL,CAAe,0CAAf;AACA,WAAK6J,qCAAL,CAA2C,KAA3C;AACD;AACF,GAzwC8B;AA2wC/B8C,EAAAA,4BA3wC+B,0CA2wCA;AAC7B,QAAI1F,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIsF,KAAK,GAAGvV,eAAZ;AACA,QAAIsd,sBAAsB,GAAG/H,KAAK,CAACiC,IAAN,CAAW+F,sBAAxC;;AACA,QAAIS,OAAO,GAAGvF,QAAQ,CAACwF,UAAT,EAAd;;AACA7M,IAAAA,OAAO,CAACC,GAAR,CAAYoH,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,EAAiClL,SAA7C;;AACA,QAAI7S,wBAAwB,IAAI,IAAhC,EAAsC;AACpC,WAAKie,yCAAL,CAA+C,KAA/C,EAAsD,CAAtD,EAAyD,IAAzD,EAA+DzF,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,EAAiClL,SAAhG,EAA2G2F,QAAQ,CAAC9F,cAAT,CAAwBqL,OAAxB,CAA3G,EAA6IV,sBAA7I;AACA,WAAKjC,qCAAL,CAA2C,KAA3C;AACA,WAAK7J,SAAL,CAAe,+BAAf;AACD,KAJD,MAIO;AACL,WAAK6J,qCAAL,CAA2C,KAA3C;AACA,WAAK7J,SAAL,CAAe,+BAAf;AACD;AACF,GAzxC8B;AA2xC/B0M,EAAAA,yCA3xC+B,qDA2xCWE,WA3xCX,EA2xCgCC,QA3xChC,EA2xC8CC,YA3xC9C,EA2xCoEC,IA3xCpE,EA2xC+EhJ,KA3xC/E,EA2xC6FnB,cA3xC7F,EA2xCiH;AAAA,QAAtGgK,WAAsG;AAAtGA,MAAAA,WAAsG,GAAxF,KAAwF;AAAA;;AAAA,QAAjFC,QAAiF;AAAjFA,MAAAA,QAAiF,GAAtE,CAAsE;AAAA;;AAAA,QAAnEC,YAAmE;AAAnEA,MAAAA,YAAmE,GAApD,KAAoD;AAAA;;AAAA,QAA7CC,IAA6C;AAA7CA,MAAAA,IAA6C,GAAtC,EAAsC;AAAA;;AAAA,QAAlChJ,KAAkC;AAAlCA,MAAAA,KAAkC,GAA1B,IAA0B;AAAA;;AAAA,QAApBnB,cAAoB;AAApBA,MAAAA,cAAoB,GAAH,CAAG;AAAA;;AAC9I,QAAIoK,SAAS,GAAG;AAAEhH,MAAAA,IAAI,EAAE;AAAEiH,QAAAA,QAAQ,EAAEL,WAAZ;AAAyBM,QAAAA,WAAW,EAAEL,QAAtC;AAAgDM,QAAAA,SAAS,EAAEL,YAA3D;AAAyE3I,QAAAA,QAAQ,EAAE4I,IAAnF;AAAyFpM,QAAAA,UAAU,EAAEoD,KAArG;AAA4GqJ,QAAAA,aAAa,EAAExK;AAA3H;AAAR,KAAhB;AACA/U,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,EAA1E,EAA8EwI,SAA9E;AACD,GA9xC8B;AAgyC/BK,EAAAA,2CAhyC+B,uDAgyCatJ,KAhyCb,EAgyCoB;AACjD,QAAIlW,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D+N,aAA9D,MAAiF,KAArF,EAA4F;AAC1F,UAAInF,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIyI,YAAY,GAAGD,QAAQ,CAAClB,aAAT,EAAnB;;AAEAnG,MAAAA,OAAO,CAACC,GAAR,CAAYkE,KAAZ;AACA,UAAIuJ,SAAS,GAAGvJ,KAAK,CAACiC,IAAN,CAAWiH,QAA3B;AACA,UAAIM,KAAK,GAAGxJ,KAAK,CAACiC,IAAN,CAAWkH,WAAvB;AACA,UAAIM,UAAU,GAAGzJ,KAAK,CAACiC,IAAN,CAAWmH,SAA5B;AACA,UAAIM,IAAI,GAAG1J,KAAK,CAACiC,IAAN,CAAW7B,QAAtB;AACA,UAAI0H,WAAW,GAAG9H,KAAK,CAACiC,IAAN,CAAWrF,UAA7B;AACA,UAAIiC,cAAc,GAAGmB,KAAK,CAACiC,IAAN,CAAWoH,aAAhC;AAEAxN,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;;AACA,UAAIoH,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC5F,SAAtC,IAAmDzT,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FrF,IAA7F,CAAkG3E,MAAzJ,EAAiK;AAC/J,YAAIiM,SAAJ,EAAe;AACb,eAAK3D,6BAAL,CAAmC,KAAnC;AACA,eAAKC,oCAAL,CAA0C,KAA1C;AACA3C,UAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCvH,IAAtC,IAA8C4N,KAA9C;AACAtG,UAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmDD,cAAnD,EAAmEoI,aAAnE,GAAmF,IAAnF;AACA/D,UAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmDD,cAAnD,EAAmE8K,SAAnE,GAA+ED,IAA/E;AACAxG,UAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmDD,cAAnD,EAAmEuI,WAAnE,GAAiFU,WAAW,CAACzU,UAA7F;AACAvJ,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmH8B,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,CAAnH;AAEAtH,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,eAAKG,SAAL,CAAe,iDAAiD6L,WAAW,CAACzU,UAA7D,GAA0E,UAA1E,GAAuFmW,KAAvF,GAA+F,kCAA9G,EAAkJ/d,eAAlJ;AACA,eAAKsX,uBAAL;AACD,SAZD,MAYO,IAAI0G,UAAJ,EAAgB;AACrB,cAAI9e,WAAW,CAACif,QAAZ,CAAqBF,IAArB,KAA8B,KAAlC,EAAyC/e,WAAW,CAAC6V,IAAZ,CAAiBkJ,IAAjB;AAEzC7N,UAAAA,OAAO,CAACC,GAAR,CAAYnR,WAAZ;;AACA,cAAIA,WAAW,CAAC0S,MAAZ,IAAsB6F,QAAQ,CAAC9F,cAAT,CAAwBC,MAAxB,GAAiC,CAA3D,EAA8D;AAC5D,iBAAKuI,6BAAL,CAAmC,KAAnC;AACA,iBAAKC,oCAAL,CAA0C,KAA1C;AACA,iBAAK5J,SAAL,CAAe,+DAAf;AACD;;AAEDJ,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD;AACF,OAzBD,MAyBO;AACL,YAAIyN,SAAJ,EAAe;AACb7e,UAAAA,wBAAwB,GAAG,KAA3B;AACA,eAAKuR,SAAL,CAAe,0CAAf;AACA,eAAK6J,qCAAL,CAA2C,KAA3C;AACD,SAJD,MAIO,IAAI2D,UAAJ,EAAgB,CACtB;AACF;AACF;AACF,GAh1C8B;AAi1C/B;AAEA;AAEAI,EAAAA,cAr1C+B,4BAq1Cd;AACf,SAAK5a,mBAAL,CAAyBE,WAAzB,CAAqCH,MAArC,GAA8C,EAA9C;AACAiG,IAAAA,cAAc,GAAG,EAAjB;AACD,GAx1C8B;AA01C/B+P,EAAAA,2BA11C+B,yCA01CD;AAC5B,SAAK/V,mBAAL,CAAyBG,YAAzB,CAAsCJ,MAAtC,GAA+C,EAA/C;AACAmG,IAAAA,iBAAiB,GAAG,EAApB;AACD,GA71C8B;AA+1C/B2U,EAAAA,0BA/1C+B,sCA+1CJpO,OA/1CI,EA+1CK;AAClCxG,IAAAA,kBAAkB,GAAGwG,OAArB;;AAEA,QAAIxG,kBAAkB,IAAI,EAA1B,EAA8B;AAC5B,WAAK6U,qBAAL,CAA2B1U,WAAW,GAAG,MAAzC;AACD,KAFD,MAEO;AACL,UAAIqG,OAAO,GAAGD,QAAQ,CAACvG,kBAAD,CAAtB;;AACA,UAAIwG,OAAO,GAAGrG,WAAW,GAAGqG,OAA5B;;AACA,WAAKqO,qBAAL,CAA2B1U,WAAW,GAAG,GAAd,GAAoBH,kBAApB,GAAyC,GAAzC,GAA+CwG,OAA1E;AACD;AACF,GAz2C8B;AA22C/BgJ,EAAAA,iCA32C+B,6CA22CG5K,MA32CH,EA22CW;AACxC,SAAKzC,gBAAL,CAAsB0C,MAAtB,GAA+BD,MAA/B;AACA,SAAKiJ,uBAAL;AACA,SAAK8G,cAAL;AACA,SAAK7E,2BAAL;AACD,GAh3C8B;AAk3C/BJ,EAAAA,qBAl3C+B,iCAk3CToF,MAl3CS,EAk3CDC,WAl3CC,EAk3CYC,WAl3CZ,EAk3CyBC,WAl3CzB,EAk3CsCC,eAl3CtC,EAk3CuDC,iBAl3CvD,EAk3C0EC,iBAl3C1E,EAk3C6FC,WAl3C7F,EAk3C0GzQ,MAl3C1G,EAk3CkH;AAC/I,SAAKlB,eAAL;AACA,SAAK1C,iBAAL,CAAuBvF,aAAvB,CAAqC3B,MAArC,GAA8C,EAA9C;AACA,SAAKkH,iBAAL,CAAuBhG,UAAvB,CAAkClB,MAAlC,GAA2Cgb,MAA3C;AACA,SAAK9T,iBAAL,CAAuB/F,eAAvB,CAAuCnB,MAAvC,GAAgDib,WAAhD;AACA,SAAK/T,iBAAL,CAAuB9F,eAAvB,CAAuCpB,MAAvC,GAAgDkb,WAAhD;AACA,SAAKhU,iBAAL,CAAuB7F,eAAvB,CAAuCrB,MAAvC,GAAgDmb,WAAhD;AACA,SAAKjU,iBAAL,CAAuB5F,mBAAvB,CAA2CtB,MAA3C,GAAoDob,eAApD;AACA,SAAKlU,iBAAL,CAAuB3F,qBAAvB,CAA6CvB,MAA7C,GAAsDqb,iBAAtD;AACA,SAAKnU,iBAAL,CAAuB1F,qBAAvB,CAA6CxB,MAA7C,GAAsDsb,iBAAtD;AACA,SAAKpU,iBAAL,CAAuBzF,eAAvB,CAAuCzB,MAAvC,GAAgDub,WAAhD;AACD,GA73C8B;AA+3C/BR,EAAAA,qBA/3C+B,iCA+3CTO,iBA/3CS,EA+3CU;AACvC,SAAKpU,iBAAL,CAAuB1F,qBAAvB,CAA6CxB,MAA7C,GAAsDsb,iBAAtD;AACD,GAj4C8B;AAm4C/BE,EAAAA,sBAn4C+B,oCAm4CN;AAAA;;AACvB,QAAItV,kBAAkB,IAAI,EAA1B,EAA8B;AAC5B,WAAK+G,SAAL,CAAe,yBAAf;AACD,KAFD,MAEO;AACL,UAAIkH,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACAnW,MAAAA,cAAc,GAAG,EAAjB;;AAEA,UAAI,KAAKqK,iBAAL,CAAuBxF,WAAvB,IAAsCd,UAAU,CAACE,UAArD,EAAiE;AAC/D,YAAI4L,OAAO,GAAGD,QAAQ,CAACvG,kBAAD,CAAtB;;AACA,YAAIuV,YAAY,GAAGpV,WAAW,GAAGqG,OAAjC;;AACA,YAAI+O,YAAY,IAAI3gB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAArG,EAA2G;AACzG9R,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF6O,YAAzF;AACA3gB,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFgC,SAAjF,IAA8FzJ,OAA9F;AACA,eAAKO,SAAL,CAAe,kCAAkCP,OAAlC,GAA4C,iBAA3D,EAA8EjQ,eAA9E;AAEAI,UAAAA,cAAc,GAAG,iBAAiB,IAAjB,GAAwB,IAAxB,GAA+B,eAA/B,GAAiDwJ,WAAW,GAAG,IAA/D,GAAsE,IAAtE,GAA6E,oBAA7E,GAAoGA,WAApG,GAAkH,IAAlH,GAAyH,oBAAzH,GAAgJqG,OAAhJ,GAA0J,IAA1J,GAAiK,6BAAjK,GAAiM+O,YAAlN;AAEA,eAAKC,oBAAL,CAA0B7e,cAA1B;AAEA4O,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACkQ,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAZD,MAYO;AACL,eAAKZ,qBAAL,CAA2B1U,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKgB,iBAAL,CAAuBvF,aAAvB,CAAqC3B,MAArC,GAA8C,EAA9C;AACA,eAAKiN,SAAL,CAAe,6BAAf;AACD;AACF,OArBD,MAqBO,IAAI,KAAK/F,iBAAL,CAAuBxF,WAAvB,IAAsCd,UAAU,CAACI,QAArD,EAA+D;AACpE,YAAI0L,OAAO,GAAGD,QAAQ,CAACvG,kBAAD,CAAtB;;AACA,YAAIwG,OAAO,IAAI5R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFgC,SAAhG,EAA2G;AACzG,cAAIsF,YAAY,GAAGpV,WAAW,GAAGqG,OAAjC;;AACA5R,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF6O,YAAzF;AACA3gB,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFgC,SAAjF,IAA8FzJ,OAA9F;AACA,eAAKO,SAAL,CAAe,gCAAgCP,OAAhC,GAA0C,wBAA1C,GAAqE+O,YAApF,EAAkGhf,eAAlG;AAEAI,UAAAA,cAAc,GAAG,kBAAkB,IAAlB,GAAyB,IAAzB,GAAgC,eAAhC,GAAkDwJ,WAAW,GAAG,IAAhE,GAAuE,IAAvE,GAA8E,oBAA9E,GAAqGA,WAArG,GAAmH,IAAnH,GAA0H,eAA1H,GAA4IqG,OAA5I,GAAsJ,IAAtJ,GAA6J,6BAA7J,GAA6L+O,YAA9M;AAEA,eAAKC,oBAAL,CAA0B7e,cAA1B;AAEA4O,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACkQ,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAbD,MAaO;AACL,eAAKZ,qBAAL,CAA2B1U,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKgB,iBAAL,CAAuBvF,aAAvB,CAAqC3B,MAArC,GAA8C,EAA9C;AACA,eAAKiN,SAAL,CAAe,gDAAgDnS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFgC,SAAjI,GAA6I,iBAA5J,EAA+K1Z,eAA/K;AACD;AACF,OArBM,MAqBA,IAAI,KAAKyK,iBAAL,CAAuBxF,WAAvB,IAAsCd,UAAU,CAACC,WAArD,EAAkE;AACvE,YAAI6L,OAAO,GAAGD,QAAQ,CAACvG,kBAAD,CAAtB;;AACA,YAAIuV,YAAY,GAAGpV,WAAW,GAAGqG,OAAjC;;AACA,YAAI+O,YAAY,IAAI3gB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAArG,EAA2G;AACzG9R,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF6O,YAAzF;AACA3gB,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFkC,UAAjF,IAA+F3J,OAA/F,CAFyG,CAGzG;;AAEA,eAAKO,SAAL,CAAe,kCAAkCP,OAAlC,GAA4C,sBAA5C,GAAqEvG,iBAApF,EAAuG1J,eAAvG;AAEAI,UAAAA,cAAc,GAAG,kBAAkB,IAAlB,GAAyB,IAAzB,GAAgC,eAAhC,GAAkDwJ,WAAW,GAAG,IAAhE,GAAuE,IAAvE,GAA8E,oBAA9E,GAAqGA,WAArG,GAAmH,IAAnH,GAA0H,oBAA1H,GAAiJqG,OAAjJ,GAA2J,IAA3J,GAAkK,6BAAlK,GAAkM+O,YAAnN;AAEA,eAAKC,oBAAL,CAA0B7e,cAA1B;AAEA4O,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACkQ,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAdD,MAcO;AACL,eAAKZ,qBAAL,CAA2B1U,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKgB,iBAAL,CAAuBvF,aAAvB,CAAqC3B,MAArC,GAA8C,EAA9C;AACA,eAAKiN,SAAL,CAAe,6BAAf;AACD;AACF,OAvBM,MAuBA,IAAI,KAAK/F,iBAAL,CAAuBxF,WAAvB,IAAsCd,UAAU,CAACG,SAArD,EAAgE;AACrE,YAAI2L,OAAO,GAAGD,QAAQ,CAACvG,kBAAD,CAAtB;;AAEA,YAAIwG,OAAO,IAAI5R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFkC,UAAhG,EAA4G;AAC1G,cAAIoF,YAAY,GAAGpV,WAAW,GAAGqG,OAAjC;;AACA5R,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF6O,YAAzF;AACA3gB,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFkC,UAAjF,IAA+F3J,OAA/F;AAEA,eAAKO,SAAL,CAAe,gCAAgCP,OAAhC,GAA0C,yBAA1C,GAAsE+O,YAArF,EAAmGhf,eAAnG;AAEAI,UAAAA,cAAc,GAAG,mBAAmB,IAAnB,GAA0B,IAA1B,GAAiC,eAAjC,GAAmDwJ,WAAW,GAAG,IAAjE,GAAwE,IAAxE,GAA+E,oBAA/E,GAAsGA,WAAtG,GAAoH,IAApH,GAA2H,eAA3H,GAA6IqG,OAA7I,GAAuJ,IAAvJ,GAA8J,6BAA9J,GAA8L+O,YAA/M;AAEA,eAAKC,oBAAL,CAA0B7e,cAA1B;AAEA4O,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACkQ,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAdD,MAcO;AACL,eAAKZ,qBAAL,CAA2B1U,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKgB,iBAAL,CAAuBvF,aAAvB,CAAqC3B,MAArC,GAA8C,EAA9C;AACA,eAAKiN,SAAL,CAAe,kDAAkDnS,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFkC,UAAnI,GAAgJ,kBAA/J,EAAmL5Z,eAAnL;AACD;AACF;AACF;AACF,GAp+C8B;AAs+C/Bkf,EAAAA,qBAt+C+B,mCAs+CP;AACtB,SAAKjG,iCAAL,CAAuC,KAAvC;;AAEA,QAAIxZ,iBAAJ,EAAuB;AACrBpB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACA1W,MAAAA,iBAAiB,GAAG,KAApB;AACD;AACF,GA7+C8B;AA8+C/B;AAEA;AACA0f,EAAAA,yBAj/C+B,qCAi/CL9Q,MAj/CK,EAi/CG;AAChC,SAAKxC,YAAL,CAAkByC,MAAlB,GAA2BD,MAA3B;AACD,GAn/C8B;AAq/C/B+Q,EAAAA,8BAr/C+B,0CAq/CA/Q,MAr/CA,EAq/CQ;AACrC,SAAK3D,aAAL,CAAmBrE,eAAnB,CAAmCiI,MAAnC,GAA4CD,MAA5C;AACD,GAv/C8B;AAy/C/BgR,EAAAA,oBAz/C+B,gCAy/CVhgB,QAz/CU,EAy/CAC,QAz/CA,EAy/CUggB,SAz/CV,EAy/CqB;AAClD,QAAIjgB,QAAQ,IAAI,CAAhB,EAAmB;AACjB4K,MAAAA,yBAAyB,GAAG,IAA5B;AACA,WAAKS,aAAL,CAAmBzE,YAAnB,CAAgCwN,YAAhC,CAA6C7S,EAAE,CAAC2e,MAAhD,EAAwDC,YAAxD,GAAuE,KAAvE;AACD,KAHD,MAGO;AACLvV,MAAAA,yBAAyB,GAAG,KAA5B;AACA,WAAKS,aAAL,CAAmBzE,YAAnB,CAAgCwN,YAAhC,CAA6C7S,EAAE,CAAC2e,MAAhD,EAAwDC,YAAxD,GAAuE,IAAvE;AACD;;AAED,QAAIlgB,QAAQ,IAAI,CAAhB,EAAmB;AACjB4K,MAAAA,2BAA2B,GAAG,IAA9B;AACA,WAAKQ,aAAL,CAAmBxE,KAAnB,CAAyBuN,YAAzB,CAAsC7S,EAAE,CAAC2e,MAAzC,EAAiDC,YAAjD,GAAgE,KAAhE;AACD,KAHD,MAGO;AACLtV,MAAAA,2BAA2B,GAAG,KAA9B;AACA,WAAKQ,aAAL,CAAmBxE,KAAnB,CAAyBuN,YAAzB,CAAsC7S,EAAE,CAAC2e,MAAzC,EAAiDC,YAAjD,GAAgE,IAAhE;AACD;;AAED,QAAI,CAACF,SAAL,EAAgB;AACdnV,MAAAA,SAAS,GAAG,IAAZ;AACA,WAAKO,aAAL,CAAmBvE,OAAnB,CAA2BsN,YAA3B,CAAwC7S,EAAE,CAAC2e,MAA3C,EAAmDC,YAAnD,GAAkE,KAAlE;AACD,KAHD,MAGO;AACLrV,MAAAA,SAAS,GAAG,KAAZ;AACA,WAAKO,aAAL,CAAmBvE,OAAnB,CAA2BsN,YAA3B,CAAwC7S,EAAE,CAAC2e,MAA3C,EAAmDC,YAAnD,GAAkE,IAAlE;AACD;AACF,GAjhD8B;AAmhD/BC,EAAAA,oBAnhD+B,kCAmhDR;AACrB,QAAIhI,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AAEA,QAAImJ,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAIhO,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG+F,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmDzB,MAA/E,EAAuFF,KAAK,EAA5F,EAAgG;AAC9F,UAAI+F,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmD3B,KAAnD,EAA0D4B,SAA9D,EAAyE;AACvEoM,QAAAA,KAAK,GAAGjI,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmD3B,KAAnD,EAA0D7O,UAAlE;AACA;AACD;AACF;;AACD,WAAO6c,KAAP;AACD,GA/hD8B;AAiiD/BC,EAAAA,iBAjiD+B,6BAiiDbpB,MAjiDa,EAiiDLqB,eAjiDK,EAiiDoBC,OAjiDpB,EAiiDqCC,OAjiDrC,EAiiDsDC,MAjiDtD,EAiiDsEC,oBAjiDtE,EAiiDoG1D,sBAjiDpG,EAiiDgI2D,SAjiDhI,EAiiD+IC,SAjiD/I,EAiiD8JC,WAjiD9J,EAiiD+KC,aAjiD/K,EAiiDkMC,gBAjiDlM,EAiiDwNC,WAjiDxN,EAiiD6O;AAAA;;AAAA,QAAlPV,eAAkP;AAAlPA,MAAAA,eAAkP,GAAhO,KAAgO;AAAA;;AAAA,QAAzNC,OAAyN;AAAzNA,MAAAA,OAAyN,GAA/M,KAA+M;AAAA;;AAAA,QAAxMC,OAAwM;AAAxMA,MAAAA,OAAwM,GAA9L,KAA8L;AAAA;;AAAA,QAAvLC,MAAuL;AAAvLA,MAAAA,MAAuL,GAA9K,KAA8K;AAAA;;AAAA,QAAvKC,oBAAuK;AAAvKA,MAAAA,oBAAuK,GAAhJ,KAAgJ;AAAA;;AAAA,QAAzI1D,sBAAyI;AAAzIA,MAAAA,sBAAyI,GAAhH,CAAgH;AAAA;;AAAA,QAA7G2D,SAA6G;AAA7GA,MAAAA,SAA6G,GAAjG,CAAiG;AAAA;;AAAA,QAA9FC,SAA8F;AAA9FA,MAAAA,SAA8F,GAAlF,CAAkF;AAAA;;AAAA,QAA/EC,WAA+E;AAA/EA,MAAAA,WAA+E,GAAjE,CAAiE;AAAA;;AAAA,QAA9DC,aAA8D;AAA9DA,MAAAA,aAA8D,GAA9C,CAA8C;AAAA;;AAAA,QAA3CC,gBAA2C;AAA3CA,MAAAA,gBAA2C,GAAxB,CAAwB;AAAA;;AAAA,QAArBC,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AAC1Q,QAAI7I,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,QAAIgE,SAAS,GAAGlc,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,CAAhB;;AACAjX,IAAAA,WAAW,GAAG,CAAd;AAEAD,IAAAA,gBAAgB,GAAG,EAAnB;;AACA,QAAIiX,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC6I,qBAA1C,EAAiE;AAC/D/f,MAAAA,gBAAgB,GAAGiX,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC8I,qBAAzD;AACA/I,MAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC6I,qBAAtC,GAA8D,KAA9D;AACA9I,MAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC8I,qBAAtC,GAA8D,EAA9D;AACD;;AAEDpQ,IAAAA,OAAO,CAACC,GAAR,CAAY7P,gBAAZ;AACA4P,IAAAA,OAAO,CAACC,GAAR,CAAYoH,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC8I,qBAAlD;;AAEA,QAAIhgB,gBAAgB,IAAI,EAAxB,EAA4B;AAC1B,WAAKgQ,SAAL,CAAe,kEAAf,EAAmF,IAAnF;AACD;;AAED1G,IAAAA,aAAa,GAAG,CAAhB;AACAC,IAAAA,aAAa,GAAG,CAAhB;AACAC,IAAAA,cAAc,GAAGsW,WAAjB,CAtB0Q,CAuB1Q;AAEA;;AAEAhgB,IAAAA,mBAAmB,GAAG,CAAtB;AACAC,IAAAA,mBAAmB,GAAG,CAAtB;;AACA,SAAK,IAAImR,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAClH,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAI1B,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7D,YAAIgJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B+O,mBAAlC,EAAuD;AACrDngB,UAAAA,mBAAmB;AACpB;AACF,OAJD,MAIO,IAAI0P,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpE,YAAIgJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B+O,mBAAlC,EAAuD;AACrDlgB,UAAAA,mBAAmB;AACpB;AACF;AACF;;AAED,QAAID,mBAAmB,GAAG,CAAtB,IAA2BC,mBAAmB,GAAG,CAArD,EAAwD;AACtD,WAAKiQ,SAAL,CAAe,0CAA0ClQ,mBAAmB,GAAGC,mBAAhE,IAAuF,eAAtG,EAAuH,IAAvH;AACD;;AAED,QAAImgB,IAAI,GAAGN,aAAa,GAAGC,gBAA3B;;AACAlgB,IAAAA,UAAU,GAAG,oCAAoCugB,IAAjD;AACA,SAAK9S,SAAL,GAAiBmS,MAAjB;AACA,SAAKlS,WAAL,GAAmBuS,aAAnB;AACA,SAAKtS,iBAAL,GAAyBuS,gBAAzB;AACAhW,IAAAA,YAAY,GAAGuV,eAAf;AACA,SAAKT,yBAAL,CAA+B,IAA/B;AACA,SAAKzU,aAAL,CAAmBjG,UAAnB,CAA8BlB,MAA9B,GAAuCgb,MAAvC;AACA,QAAIoC,KAAK,GAAG,IAAZ;AACAvhB,IAAAA,sBAAsB,GAAG4gB,oBAAzB;AACAxgB,IAAAA,qBAAqB,GAAG8c,sBAAxB;AACAjd,IAAAA,QAAQ,GAAG4gB,SAAX;AACA3gB,IAAAA,QAAQ,GAAG4gB,SAAX;AACA3gB,IAAAA,WAAW,GAAG4gB,WAAd;;AAEA,QAAI,CAAC/gB,sBAAL,EAA6B;AAC3B,UAAI2gB,MAAM,IAAI,KAAd,EAAqB;AACnB,YAAI/V,cAAJ,EAAoB;AAClB,eAAKwG,SAAL,CAAe,6CAAf,EAA8DmQ,KAA9D;AACD,SAHkB,CAKnB;;;AACA,YAAId,OAAO,IAAIC,OAAf,EAAwB,KAAKtP,SAAL,CAAe,2EAAf,EAA4FmQ,KAA5F,EAAxB,KACK,IAAId,OAAJ,EAAa,KAAKrP,SAAL,CAAe,wDAAf,EAAyEmQ,KAAzE,EAAb,KACA,IAAIb,OAAJ,EAAa,KAAKtP,SAAL,CAAe,4DAAf,EAA6EmQ,KAA7E;AACnB,OATD,MASO;AACL;AACA,YAAId,OAAO,IAAIC,OAAf,EAAwB1P,OAAO,CAACC,GAAR,CAAY,2EAAZ,EAAxB,KACK,IAAIwP,OAAJ,EAAazP,OAAO,CAACC,GAAR,CAAY,wDAAZ,EAAb,KACA,IAAIyP,OAAJ,EAAa1P,OAAO,CAACC,GAAR,CAAY,4DAAZ;AACnB;AACF;;AAED,SAAKuQ,iBAAL,CAAuBviB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAxG;;AAEA,QAAI,CAAC/Q,sBAAL,EAA6B;AAC3BC,MAAAA,QAAQ,GAAGhB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiF9C,eAA5F;AACAtV,MAAAA,QAAQ,GAAGjB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFzB,oBAA5F;AACA1W,MAAAA,WAAW,GAAGlB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFmJ,oBAA/F;AACD;;AAED,QAAI1N,UAAU,GAAG,KAAjB;AACA,QAAIC,cAAc,GAAG,CAArB;;AAEA,SAAK,IAAI1B,MAAK,GAAG,CAAjB,EAAoBA,MAAK,GAAGrT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8FzB,MAA1H,EAAkIF,MAAK,EAAvI,EAA2I;AACzI,UAAIrT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8F3B,MAA9F,EAAqG4B,SAAzG,EAAoH;AAClHH,QAAAA,UAAU,GAAG,IAAb;AACAC,QAAAA,cAAc,GAAG1B,MAAjB;AACA;AACD;AACF;;AAED,QAAI4N,SAAS,GAAG,KAAhB;;AAEA,QAAI,CAAClgB,sBAAL,EAA6B;AAC3BkgB,MAAAA,SAAS,GAAGnM,UAAZ;AACD;;AAED,SAAKzI,aAAL,CAAmB7E,oBAAnB,CAAwCtC,MAAxC,GAAiDlE,QAAjD;AACA,SAAKqL,aAAL,CAAmB5E,aAAnB,CAAiCvC,MAAjC,GAA0CjE,QAA1C;AACA,SAAKoL,aAAL,CAAmB3E,qBAAnB,CAAyCxC,MAAzC,GAAkDhE,WAAlD;AACA,SAAKmL,aAAL,CAAmB1E,sBAAnB,CAA0CzC,MAA1C,GAAmD,KAAKsK,WAAxD;;AAEA,QAAI4J,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB,CA7G0Q,CA+G1Q;;;AACA,QAAIkB,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCoJ,kBAA1C,EAA8D;AAC5D,UAAIpB,KAAK,GAAG,KAAKD,oBAAL,EAAZ;;AACA,WAAK/U,aAAL,CAAmB/D,eAAnB,CAAmCpD,MAAnC,GAA4C,WAAWmc,KAAvD;AACD,KAHD,MAGO;AACL,WAAKhV,aAAL,CAAmB/D,eAAnB,CAAmCpD,MAAnC,GAA4C,YAA5C;AACD,KArHyQ,CAuH1Q;;;AACA,QAAIsc,OAAO,IAAIC,OAAf,EAAwB,KAAKT,oBAAL,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCC,SAAhC,EAAxB,KACK,IAAIO,OAAJ,EAAa,KAAKR,oBAAL,CAA0B,CAA1B,EAA6B/f,QAA7B,EAAuCggB,SAAvC,EAAb,KACA,IAAIQ,OAAJ,EAAa,KAAKT,oBAAL,CAA0BhgB,QAA1B,EAAoC,CAApC,EAAuCigB,SAAvC,EAAb,KACA,KAAKD,oBAAL,CAA0BhgB,QAA1B,EAAoCC,QAApC,EAA8CggB,SAA9C;;AAEL,QAAIQ,OAAO,IAAID,OAAf,EAAwB;AACtB7Q,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAAC+R,eAAL;AACD,OAFS,EAEPJ,KAAK,GAAG,GAFD,CAAV;AAGD;;AAED,QAAIZ,MAAJ,EAAY;AACV/Q,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACgS,gCAAL;;AACA,QAAA,MAAI,CAACC,yBAAL;;AACA,QAAA,MAAI,CAACC,2BAAL;AACD,OAJS,EAIP,CAJO,CAAV;AAKD;AACF,GA3qD8B;AA6qD/BF,EAAAA,gCA7qD+B,8CA6qDI;AACjC,QAAI,CAAC/W,yBAAL,EAAgC;AAC9B,WAAKmV,8BAAL,CAAoC,IAApC;AAEA,UAAI+B,aAAa,GAAG9W,YAApB;AACA,UAAIiW,WAAW,GAAGtW,cAAlB;;AAEA,UAAI,CAAC5K,sBAAL,EAA6B;AAC3B,YAAI,CAAC+hB,aAAL,EAAoB,KAAKzW,aAAL,CAAmBnE,sBAAnB,CAA0ChD,MAA1C,GAAmD,QAAnD,CAApB,KACK,KAAKmH,aAAL,CAAmBnE,sBAAnB,CAA0ChD,MAA1C,GAAmD,cAAnD;AACN,OAHD,MAGO;AACL4d,QAAAA,aAAa,GAAG,KAAhB;AACA,aAAKzW,aAAL,CAAmBnE,sBAAnB,CAA0ChD,MAA1C,GAAmD,QAAnD;AACD;;AAED0G,MAAAA,yBAAyB,GAAG,IAA5B;AACA,WAAKS,aAAL,CAAmBzE,YAAnB,CAAgCwN,YAAhC,CAA6C7S,EAAE,CAAC2e,MAAhD,EAAwDC,YAAxD,GAAuE,KAAvE;;AAEA,UAAI/H,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AAEA,UAAI,CAACnX,sBAAL,EAA6B;AAC3BC,QAAAA,QAAQ,GAAGhB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiF9C,eAA5F;AACD;;AAED,UAAIwM,KAAK,GAAG/iB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDuK,WAApD,EAAZ;;AACA,UAAIe,SAAS,GAAG9C,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtD;AAEA,UAAIgO,eAAe,GAAG,CAAtB;AACA,UAAIC,mBAAmB,GAAG,CAA1B;AACA,UAAIC,WAAW,GAAG,CAAlB;AACA,UAAIC,iBAAiB,GAAG,KAAK3T,WAA7B;AAEA,UAAIyS,WAAJ,EAAiBiB,WAAW,GAAGA,WAAW,GAAG,CAA5B,CAhCa,CAkC9B;;AACA,UAAIJ,aAAJ,EAAmB;AACjB,YAAI,KAAKrT,iBAAL,IAA0B,CAA9B,EAAiC;AAC/ByT,UAAAA,WAAW,IAAI,IAAI,KAAKzT,iBAAxB;AACD,SAFD,MAEO;AACLyT,UAAAA,WAAW,IAAI,CAAf;AACD;AACF;;AAED,UAAIE,iBAAiB,GAAGF,WAAW,GAAGC,iBAAd,GAAkClhB,mBAAlC,GAAwD8gB,KAAxD,GAAgE,IAAxF;;AAEA,UAAI,CAAChiB,sBAAL,EAA6B;AAC3B,aAAK,IAAIsS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAC3I,MAAtC,EAA8CF,KAAK,EAAnD,EAAuD;AACrD,cAAI6I,SAAS,CAAC7I,KAAD,CAAT,CAAiBH,YAAjB,IAAiC,CAArC,EAAwC;AACtC,gBAAIgJ,SAAS,CAAC7I,KAAD,CAAT,CAAiB8J,aAArB,EAAoC;AAClC,kBAAI6B,QAAQ,GAAGmE,iBAAiB,GAAGD,WAApB,GAAkCH,KAAlC,GAA0C,IAA1C,GAAiDK,iBAAhE;;AACAJ,cAAAA,eAAe,GAAGhE,QAAQ,GAAG,CAA7B;;AACA5F,cAAAA,QAAQ,CAACiK,+BAAT,CAAyCL,eAAzC,EAA0D9G,SAAS,CAAC7I,KAAD,CAAT,CAAiBwM,SAA3E;;AACAoD,cAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;AACF,OAXD,MAWO;AACL,YAAI9G,SAAS,CAAC/a,qBAAD,CAAT,CAAiC+R,YAAjC,IAAiD,CAArD,EAAwD;AACtD,cAAIgJ,SAAS,CAAC/a,qBAAD,CAAT,CAAiCgc,aAArC,EAAoD;AAClD,gBAAI6B,QAAQ,GAAGmE,iBAAiB,GAAGD,WAApB,GAAkCH,KAAlC,GAA0C,IAA1C,GAAiDK,iBAAhE;;AACAJ,YAAAA,eAAe,GAAGhE,QAAQ,GAAG,CAA7B;;AACA5F,YAAAA,QAAQ,CAACiK,+BAAT,CAAyCL,eAAzC,EAA0D9G,SAAS,CAAC/a,qBAAD,CAAT,CAAiC0e,SAA3F;;AACAoD,YAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;;AAED,UAAIC,mBAAmB,GAAG,CAA1B,EAA6B;AAC3B,aAAK9Q,SAAL,CAAe,qGAAf,EAAsHxQ,eAAtH;AACD,OArE6B,CAsE9B;;;AAEA,UAAI,CAACmhB,aAAL,EAAoB/W,iBAAiB,GAAGmX,WAAW,GAAGC,iBAAd,GAAkCniB,QAAlC,GAA6C+hB,KAA7C,GAAqD,IAArD,GAA4DE,mBAA5D,GAAkFG,iBAAtG,CAApB,KACKrX,iBAAiB,GAAGoX,iBAAiB,GAAGD,WAApB,IAAmCliB,QAAQ,GAAG+hB,KAA9C,IAAuD,IAAvD,GAA8DE,mBAA9D,GAAoFG,iBAAxG;AAEL,WAAK/W,aAAL,CAAmBhG,eAAnB,CAAmCnB,MAAnC,GAA4C6d,KAA5C;AACA,WAAK1W,aAAL,CAAmBlE,kBAAnB,CAAsCjD,MAAtC,GAA+ClE,QAA/C;AAEA,UAAI,CAAC8hB,aAAL,EAAoB,KAAKzW,aAAL,CAAmBjE,gBAAnB,CAAoClD,MAApC,GAA6C,MAAMie,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8C/hB,QAA9C,GAAyD,GAAzD,GAA+D,QAA/D,GAA0EiiB,mBAA1E,GAAgG,GAAhG,GAAsGG,iBAAtG,GAA0H,GAA1H,GAAgIrX,iBAA7K,CAApB,KACK,KAAKM,aAAL,CAAmBjE,gBAAnB,CAAoClD,MAApC,GAA6C,MAAMie,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8C/hB,QAA9C,GAAyD,GAAzD,GAA+D,OAA/D,GAAyEkiB,WAAzE,GAAuF,IAAvF,GAA8FD,mBAA9F,GAAoH,GAApH,GAA0HG,iBAA1H,GAA8I,GAA9I,GAAoJrX,iBAAjM;AAELjK,MAAAA,UAAU,IAAI,OAAO,IAAP,GAAc,uBAAd,GAAwCd,QAAxC,GAAmD,IAAnD,GAA0D,eAA1D,GAA4E+hB,KAA5E,GAAoF,IAApF,GAA2F,oBAA3F,GAAkHhX,iBAAhI;AACA3J,MAAAA,WAAW,IAAI2J,iBAAf;;AAEA,UAAI,KAAKwD,SAAT,EAAoB;AAClB,aAAK+T,qBAAL;AACD;AACF;AACF,GAtwD8B;AAwwD/BV,EAAAA,yBAxwD+B,uCAwwDH;AAC1B;AACA,QAAI,CAAC/W,2BAAL,EAAkC;AAChC,WAAKkV,8BAAL,CAAoC,IAApC;AAEA,UAAI+B,aAAa,GAAG9W,YAApB;AACA,UAAImX,iBAAiB,GAAG,KAAK3T,WAA7B;AACA,UAAIyS,WAAW,GAAGtW,cAAlB;;AAEA,UAAI,CAAC5K,sBAAL,EAA6B;AAC3B,YAAI,CAAC+hB,aAAL,EAAoB,KAAKzW,aAAL,CAAmBnE,sBAAnB,CAA0ChD,MAA1C,GAAmD,QAAnD,CAApB,KACK,KAAKmH,aAAL,CAAmBnE,sBAAnB,CAA0ChD,MAA1C,GAAmD,cAAnD;AACN,OAHD,MAGO;AACL4d,QAAAA,aAAa,GAAG,KAAhB;AACA,aAAKzW,aAAL,CAAmBnE,sBAAnB,CAA0ChD,MAA1C,GAAmD,QAAnD;AACD;;AAED2G,MAAAA,2BAA2B,GAAG,IAA9B;AACA,WAAKQ,aAAL,CAAmBxE,KAAnB,CAAyBuN,YAAzB,CAAsC7S,EAAE,CAAC2e,MAAzC,EAAiDC,YAAjD,GAAgE,KAAhE;;AACA,UAAI/H,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AAEA,UAAI,CAACnX,sBAAL,EAA6B;AAC3BE,QAAAA,QAAQ,GAAGjB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFzB,oBAA5F;AACA1W,QAAAA,WAAW,GAAGlB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFmJ,oBAA/F;AACD;;AAED,UAAI5Q,OAAO,GAAG3Q,QAAQ,GAAGC,WAAzB;;AACA,UAAI6hB,KAAK,GAAG/iB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDiK,YAApD,EAAZ;;AAEA,UAAIqB,SAAS,GAAG9C,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtD;AACA,UAAIgO,eAAe,GAAG,CAAtB;AACA,UAAIC,mBAAmB,GAAG,CAA1B;AACA,UAAIC,WAAW,GAAG,CAAlB;AAEA,UAAIjB,WAAJ,EAAiBiB,WAAW,GAAGA,WAAW,GAAG,CAA5B;;AAEjB,UAAIJ,aAAJ,EAAmB;AACjB,YAAI,KAAKrT,iBAAL,IAA0B,CAA9B,EAAiC;AAC/ByT,UAAAA,WAAW,IAAI,IAAI,KAAKzT,iBAAxB;AACD,SAFD,MAEO;AACLyT,UAAAA,WAAW,IAAI,CAAf;AACD;AACF;;AAED,UAAIE,iBAAiB,GAAGD,iBAAiB,GAAGD,WAApB,GAAkChhB,mBAAlC,GAAwD6gB,KAAxD,GAAgE,IAAxF;;AAEA,UAAI,CAAChiB,sBAAL,EAA6B;AAC3B,aAAK,IAAIsS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAC3I,MAAtC,EAA8CF,KAAK,EAAnD,EAAuD;AACrD,cAAI6I,SAAS,CAAC7I,KAAD,CAAT,CAAiBH,YAAjB,IAAiC,CAArC,EAAwC;AACtC,gBAAIgJ,SAAS,CAAC7I,KAAD,CAAT,CAAiB8J,aAArB,EAAoC;AAClC,kBAAIoG,UAAU,GAAGrH,SAAS,CAAC7I,KAAD,CAAT,CAAiBqJ,aAAjB,CAA+BnJ,MAA/B,GAAwC,CAAzD;;AACA,kBAAIyL,QAAQ,GAAGmE,iBAAiB,GAAGI,UAApB,GAAiCL,WAAjC,GAA+CH,KAA/C,GAAuD,IAAvD,GAA8DK,iBAA7E;;AACAJ,cAAAA,eAAe,GAAGhE,QAAQ,GAAG,CAA7B;;AACA5F,cAAAA,QAAQ,CAACiK,+BAAT,CAAyCL,eAAzC,EAA0D9G,SAAS,CAAC7I,KAAD,CAAT,CAAiBwM,SAA3E;;AACAoD,cAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;AACF,OAZD,MAYO;AACL,YAAI9G,SAAS,CAAC/a,qBAAD,CAAT,CAAiC+R,YAAjC,IAAiD,CAArD,EAAwD;AACtD,cAAIgJ,SAAS,CAAC/a,qBAAD,CAAT,CAAiCgc,aAArC,EAAoD;AAClD,gBAAIoG,UAAU,GAAGrH,SAAS,CAAC/a,qBAAD,CAAT,CAAiCub,aAAjC,CAA+CnJ,MAA/C,GAAwD,CAAzE;;AACA,gBAAIyL,QAAQ,GAAGmE,iBAAiB,GAAGI,UAApB,GAAiCL,WAAjC,GAA+CH,KAA/C,GAAuD,IAAvD,GAA8DK,iBAA7E;;AACAJ,YAAAA,eAAe,GAAGhE,QAAQ,GAAG,CAA7B;;AACA5F,YAAAA,QAAQ,CAACiK,+BAAT,CAAyCL,eAAzC,EAA0D9G,SAAS,CAAC/a,qBAAD,CAAT,CAAiC0e,SAA3F;;AACAoD,YAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;;AAED,UAAIC,mBAAmB,GAAG,CAA1B,EAA6B;AAC3B,aAAK9Q,SAAL,CAAe,qGAAf,EAAsHxQ,eAAtH;AACD;;AAED,UAAI,CAACmhB,aAAL,EAAoB/W,iBAAiB,GAAGmX,WAAW,GAAGC,iBAAd,GAAkCvR,OAAlC,GAA4CmR,KAA5C,GAAoD,IAApD,GAA2DE,mBAA3D,GAAiFG,iBAArG,CAApB,KACKrX,iBAAiB,GAAGoX,iBAAiB,GAAGD,WAApB,IAAmCtR,OAAO,GAAGmR,KAA7C,IAAsD,IAAtD,GAA6DE,mBAA7D,GAAmFG,iBAAvG;AAEL,WAAK/W,aAAL,CAAmBhG,eAAnB,CAAmCnB,MAAnC,GAA4C6d,KAA5C;AACA,WAAK1W,aAAL,CAAmBlE,kBAAnB,CAAsCjD,MAAtC,GAA+C0M,OAA/C;AAEA,UAAI,CAACkR,aAAL,EAAoB,KAAKzW,aAAL,CAAmBjE,gBAAnB,CAAoClD,MAApC,GAA6C,MAAMie,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8CnR,OAA9C,GAAwD,GAAxD,GAA8D,QAA9D,GAAyEqR,mBAAzE,GAA+F,GAA/F,GAAqGG,iBAArG,GAAyH,GAAzH,GAA+HrX,iBAA5K,CAApB,KACK,KAAKM,aAAL,CAAmBjE,gBAAnB,CAAoClD,MAApC,GAA6C,MAAMie,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8CnR,OAA9C,GAAwD,GAAxD,GAA8D,OAA9D,GAAwEsR,WAAxE,GAAsF,IAAtF,GAA6FD,mBAA7F,GAAmH,GAAnH,GAAyHG,iBAAzH,GAA6I,GAA7I,GAAmJrX,iBAAhM;AAELjK,MAAAA,UAAU,IAAI,OAAO,IAAP,GAAc,2BAAd,GAA4C8P,OAA5C,GAAsD,IAAtD,GAA6D,eAA7D,GAA+EmR,KAA/E,GAAuF,IAAvF,GAA8F,oBAA9F,GAAqHhX,iBAAnI;AACA3J,MAAAA,WAAW,IAAI2J,iBAAf;;AACA,UAAI,KAAKwD,SAAT,EAAoB;AAClB,aAAK+T,qBAAL;AACD;AACF;AACF,GAl2D8B;AAo2D/BT,EAAAA,2BAp2D+B,yCAo2DD;AAC5B;AACA,QAAI,CAAC/W,SAAL,EAAgB;AACd,UAAIsN,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,UAAIsL,aAAa,GAAG,CAApB;AAEA,UAAIpK,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCoJ,kBAA1C,EACE;AACAe,QAAAA,aAAa,GAAG,KAAKpC,oBAAL,EAAhB,CAFF,KAGKoC,aAAa,GAAG,IAAhB;;AAEL,UAAIxjB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF0R,aAA7F,EAA4G;AAC1G1X,QAAAA,SAAS,GAAG,IAAZ;AACA,aAAKO,aAAL,CAAmBvE,OAAnB,CAA2BsN,YAA3B,CAAwC7S,EAAE,CAAC2e,MAA3C,EAAmDC,YAAnD,GAAkE,KAAlE;AACAnhB,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF9R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF0R,aAAhL;AAEA,YAAI1O,UAAU,GAAG,KAAjB;AACA,YAAIC,cAAc,GAAG,CAArB;;AAEA,aAAK,IAAI1B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGrT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8FzB,MAA1H,EAAkIF,KAAK,EAAvI,EAA2I;AACzI,cAAIrT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8F3B,KAA9F,EAAqG4B,SAAzG,EAAoH;AAClHH,YAAAA,UAAU,GAAG,IAAb;AACAC,YAAAA,cAAc,GAAG1B,KAAjB;AACA;AACD;AACF;;AAEDrT,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8FD,cAA9F,EAA8GvQ,UAA9G,GAA2HxE,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8FD,cAA9F,EAA8GvQ,UAA9G,GAA2Hgf,aAAtP;;AAEA,YAAIxjB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8FD,cAA9F,EAA8GvQ,UAA9G,IAA4H,CAAhI,EAAmI;AACjIxE,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8FD,cAA9F,EAA8GvQ,UAA9G,GAA2H,CAA3H;AACAxE,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFrE,YAAjF,CAA8FD,cAA9F,EAA8GE,SAA9G,GAA0H,KAA1H;AACD;;AAED,YAAImE,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCoJ,kBAA1C,EAA8DrJ,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCoJ,kBAAtC,GAA2D,KAA3D;AAE9D,aAAKF,iBAAL,CAAuBviB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAxG;AACA,aAAK4Q,eAAL;AACD,OA3BD,MA2BO;AACL,YAAItJ,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,YAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AAEA,YAAIkB,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCoJ,kBAA1C,EAA8D,KAAKpW,aAAL,CAAmBhE,cAAnB,CAAkC+M,YAAlC,CAA+C7S,EAAE,CAAC2e,MAAlD,EAA0DC,YAA1D,GAAyE,KAAzE,CAA9D,KACK,KAAK9U,aAAL,CAAmBhE,cAAnB,CAAkC+M,YAAlC,CAA+C7S,EAAE,CAAC2e,MAAlD,EAA0DC,YAA1D,GAAyE,IAAzE;AAEL,aAAK9U,aAAL,CAAmBpE,mBAAnB,CAAuCgI,MAAvC,GAAgD,IAAhD;AACA8B,QAAAA,OAAO,CAACyG,KAAR,CAAc,cAAd;AACD;AACF;AACF,GAt5D8B;AAw5D/B8K,EAAAA,qBAx5D+B,mCAw5DP;AAAA;;AACtB;AACA,QAAIjK,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACAlY,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF9R,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,GAAwF/F,iBAAhL;AACA,SAAKwW,iBAAL,CAAuBviB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAxG;;AACA,QAAI,CAAC,KAAKvC,SAAV,EAAqB;AACnB,WAAK4C,SAAL,CAAe,aAAapG,iBAAb,GAAiC,8DAAjC,GAAkG/L,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAlM;AACAnB,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACoQ,8BAAL,CAAoC,KAApC;;AACA,QAAA,MAAI,CAAC2B,eAAL;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAND,MAMO;AACL3Q,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAajG,iBAAb,GAAiC,8DAAjC,GAAkG/L,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAA/L;AACA,WAAKiP,8BAAL,CAAoC,KAApC;AACA,WAAK2B,eAAL;AACD;AACF,GAx6D8B;AA06D/Be,EAAAA,sBA16D+B,oCA06DN;AACvB,SAAKtR,SAAL,CAAe,4FAAf;;AACA,QAAIiH,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACAkB,IAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCoJ,kBAAtC,GAA2D,IAA3D;AACA,SAAKpW,aAAL,CAAmBpE,mBAAnB,CAAuCgI,MAAvC,GAAgD,KAAhD;AACAnE,IAAAA,SAAS,GAAG,IAAZ;AACA,SAAKO,aAAL,CAAmBvE,OAAnB,CAA2BsN,YAA3B,CAAwC7S,EAAE,CAAC2e,MAA3C,EAAmDC,YAAnD,GAAkE,KAAlE;AACA,SAAKuB,eAAL;AACA5W,IAAAA,SAAS,GAAG,IAAZ;AACD,GAp7D8B;AAs7D/B4X,EAAAA,mBAt7D+B,iCAs7DT;AACpB,SAAKrX,aAAL,CAAmBpE,mBAAnB,CAAuCgI,MAAvC,GAAgD,KAAhD;AACA,SAAK0T,qCAAL,CAA2C,KAA3C;AACD,GAz7D8B;AA27D/BpB,EAAAA,iBA37D+B,6BA27Db3Q,OA37Da,EA27DJ;AACzB,SAAKvF,aAAL,CAAmBtF,SAAnB,CAA6B7B,MAA7B,GAAsC,MAAM0M,OAA5C;AACD,GA77D8B;AA+7D/BgS,EAAAA,qBA/7D+B,mCA+7DP;AACtB,SAAKvX,aAAL,CAAmBpE,mBAAnB,CAAuCgI,MAAvC,GAAgD,KAAhD;AACD,GAj8D8B;AAm8D/B4T,EAAAA,eAn8D+B,2BAm8DfC,SAn8De,EAm8DGC,IAn8DH,EAm8DSzB,KAn8DT,EAm8DgB;AAAA;;AAAA,QAA/BwB,SAA+B;AAA/BA,MAAAA,SAA+B,GAAnB,IAAmB;AAAA;;AAC7C,QAAIA,SAAJ,EAAe;AACb,WAAK3R,SAAL,CAAe4R,IAAf,EAAqBzB,KAArB,EAA4B,KAA5B;AACD;;AACD3R,IAAAA,UAAU,CAAC,YAAM;AACf,MAAA,MAAI,CAACqT,wBAAL;;AACA,MAAA,MAAI,CAACC,0BAAL;;AACA,MAAA,MAAI,CAACC,qCAAL,CAA2C,KAA3C;;AACA,MAAA,MAAI,CAACC,+BAAL,CAAqC,KAArC;;AACA,MAAA,MAAI,CAACP,qBAAL;;AACA,MAAA,MAAI,CAAC9C,yBAAL,CAA+B,KAA/B;;AACA,MAAA,MAAI,CAAC5Q,0BAAL;;AACA,MAAA,MAAI,CAACkU,4BAAL,CAAkC,KAAlC;;AACA7hB,MAAAA,EAAE,CAAC0M,WAAH,CAAeoV,IAAf,CAAoB,UAApB,EAAgC,EAAhC,EAAoC,KAApC;AACAzY,MAAAA,yBAAyB,GAAG,KAA5B;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAC,MAAAA,SAAS,GAAG,KAAZ;AACA9L,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0T,sBAApD,CAA2E,KAA3E;AACAtkB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD2T,0BAApD,CAA+E,KAA/E;AACAvkB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD4T,+BAApD,CAAoF,KAApF;AACAxkB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD6T,YAApD,CAAiE,KAAjE,EAAwE,KAAxE;AACAzkB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD8T,qBAApD;AACD,KAlBS,EAkBPpC,KAAK,GAAG,EAlBD,CAAV;AAmBD,GA19D8B;AA29D/BqC,EAAAA,mBA39D+B,iCA29DT;AACpB;AACA,QAAIC,IAAI,GAAG5kB,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4F,eAA9D,EAAX;;AACA,QAAIwO,IAAI,IAAI,CAAZ,EAAe;AACb,UAAIviB,cAAJ,EAAoB;AAClBA,QAAAA,cAAc,GAAG,KAAjB;AACA,aAAK6hB,qCAAL,CAA2C,KAA3C;AACA,aAAKC,+BAAL,CAAqC,KAArC;AACA,aAAKjU,0BAAL;AACA,aAAK8T,wBAAL;AACA,aAAKC,0BAAL;AACA,aAAKL,qBAAL;AACA,YAAIiB,YAAY,GAAG;AAAElL,UAAAA,EAAE,EAAEzZ,gBAAN;AAAwB4R,UAAAA,IAAI,EAAE/R,oBAA9B;AAAoD+kB,UAAAA,YAAY,EAAE,IAAlE;AAAwEC,UAAAA,YAAY,EAAE;AAAtF,SAAnB;AACA/kB,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,EAA1E,EAA8EkO,YAA9E;AAEA,YAAIG,QAAQ,GAAGhlB,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FC,iBAA5G;AACA,YAAIwH,UAAU,GAAGjlB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAArE;;AAEA,aAAK,IAAID,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG4R,UAAU,CAAC1R,MAAvC,EAA+CF,KAAK,EAApD,EAAwD;AACtD,cAAI4R,UAAU,CAAC5R,KAAD,CAAV,CAAkBI,SAAlB,IAA+BuR,QAAQ,CAACvR,SAA5C,EAAuD;AACrDwR,YAAAA,UAAU,CAAC5R,KAAD,CAAV,CAAkBN,iBAAlB,CAAoCmS,kBAApC,GAAyD,IAAzD;AACAllB,YAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmH2N,UAAU,CAAC5R,KAAD,CAA7H;AACA;AACD;AACF;;AAED,aAAKlB,SAAL,CAAe,yEAAf,EAA0F,IAA1F,EAAgG,KAAhG;AACD,OAvBD,MAuBO;AACL,aAAK0R,eAAL,CAAqB,IAArB,EAA2B,+DAA3B,EAA4F,IAA5F;AACD;AACF,KA3BD,MA2BO,IAAIe,IAAI,IAAI,CAAZ,EAAe;AACpB,WAAKf,eAAL,CAAqB,IAArB,EAA2B,+DAA3B,EAA4F,IAA5F;AACD;AACF,GA5/D8B;AA8/D/BsB,EAAAA,uBA9/D+B,mCA8/DPpB,IA9/DO,EA8/DD;AAC5B;AACA,QAAIa,IAAI,GAAG5kB,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4F,eAA9D,EAAX;AACA,SAAKyN,eAAL,CAAqB,IAArB,EAA2BE,IAA3B,EAAiC,IAAjC;AACD,GAlgE8B;AAogE/BqB,EAAAA,QApgE+B,oBAogEtBlP,KApgEsB,EAogEf;AACd,SAAK/D,SAAL,CAAe+D,KAAK,CAACmP,IAArB,EAA2B,IAA3B,EAAiC,IAAjC;AACD,GAtgE8B;AAwgE/B3C,EAAAA,eAxgE+B,6BAwgEb;AAAA;;AAChB,QAAI9W,yBAAyB,IAAIC,2BAA7B,IAA4DC,SAAhE,EAA2E;AACzE,UAAIuN,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACAnG,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAK8O,yBAAL,CAA+B,KAA/B;;AAEA,UAAI3e,gBAAgB,IAAI,EAAxB,EAA4B;AAC1B,aAAKgQ,SAAL,CAAe,+BAA+B/P,WAA/B,GAA6C,2CAA5D,EAAyG,IAAzG;;AACA,YAAIiX,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACAlY,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmE+F,YAAnE,EAAiFvH,IAAjF,IAAyF1P,WAAzF;AACApC,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDyS,+BAApD,CAAoFjhB,WAApF,EAAiGD,gBAAjG;AAEAwO,QAAAA,UAAU,CAAC,YAAM;AACf,UAAA,MAAI,CAAC2U,uBAAL;AACD,SAFS,EAEP,IAFO,CAAV;AAGD,OATD,MASO;AACL,aAAKA,uBAAL;AACD;AACF;AACF,GA3hE8B;AA6hE/BA,EAAAA,uBA7hE+B,qCA6hEL;AACxB,QAAIlM,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGD,QAAQ,CAAClB,aAAT,EAAnB;;AAEA,QAAI,CAACnX,sBAAL,EAA6B;AAC3BqY,MAAAA,QAAQ,CAACkL,sBAAT,CAAgC,KAAhC;;AACAlL,MAAAA,QAAQ,CAACmL,0BAAT,CAAoC,KAApC;;AACAnL,MAAAA,QAAQ,CAACoL,+BAAT,CAAyC,KAAzC;;AACApL,MAAAA,QAAQ,CAACqL,YAAT,CAAsB,KAAtB,EAA6B,KAA7B;;AACArL,MAAAA,QAAQ,CAACmM,uBAAT,CAAiC,KAAjC;;AAEA,UAAInM,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCtG,iBAAtC,CAAwDyS,yBAAxD,GAAoF,CAAxF,EAA2F;AACzFpM,QAAAA,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCtG,iBAAtC,CAAwDyS,yBAAxD;AACD,OAFD,MAEO;AACLpM,QAAAA,QAAQ,CAACqM,qBAAT,CAA+B,KAA/B;AACD;;AACDrM,MAAAA,QAAQ,CAACsM,YAAT;AACD,KAbD,MAaO;AACLtM,MAAAA,QAAQ,CAACtB,gBAAT;AACD;;AAED,SAAK8I,oBAAL,CAA0B9e,UAA1B;AACD,GAnjE8B;AAojE/B;AAEA;AACA6jB,EAAAA,4CAvjE+B,wDAujEc3V,MAvjEd,EAujEsB;AACnD,SAAKvC,kBAAL,CAAwBwC,MAAxB,GAAiCD,MAAjC;AACD,GAzjE8B;AA2jE/B4V,EAAAA,iCA3jE+B,6CA2jEGC,WA3jEH,EA2jEoB;AAAA,QAAjBA,WAAiB;AAAjBA,MAAAA,WAAiB,GAAH,CAAG;AAAA;;AACjD,SAAKC,yBAAL;;AACA,QAAI1M,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,QAAIgE,SAAS,GAAG9C,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,CAAhB;AAEA,SAAK/M,mBAAL,CAAyBlG,UAAzB,CAAoClB,MAApC,GAA6C,MAA7C;AACA,SAAKoH,mBAAL,CAAyBvF,SAAzB,CAAmC7B,MAAnC,GAA4CkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCvH,IAAlF;AACA,SAAKxF,mBAAL,CAAyBtF,eAAzB,CAAyC9B,MAAzC,GAAkDkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC9P,UAAxF;AACA,SAAK+C,mBAAL,CAAyBrF,kBAAzB,CAA4C/B,MAA5C,GAAqD,wBAAwBkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmDzB,MAAhI;;AAEA,SAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAClH,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAI8I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAK9P,mBAAL,CAAyBnF,kBAAxC,CAAX;AACAgV,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAK/P,mBAAL,CAAyBpF,iBAAvC;AACAiV,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCtG,eAApC;AACAqN,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCkH,OAApC,CAA4CJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACA6H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCoH,gBAApC,CAAqDnJ,KAArD;;AAEA,UAAIwS,WAAW,IAAI,CAAnB,EAAsB;AACpB1J,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC2Q,gBAApC,CAAqDF,WAArD;AACD;;AAED,UAAIlU,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,YAA5C;AACD,OAHD,MAGO,IAAIjL,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,gBAA5C;AACD;;AAEDT,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6H,UAApC,CAA+Cf,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B7O,UAA7E;AACA2X,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC8H,YAApC,CAAiDhB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAA7F;AAEA,UAAI2I,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAA5C,IAAsD,CAA1D,EAA6D4I,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC4Q,wBAApC,CAA6D,KAA7D,EAA7D,KACK7J,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC4Q,wBAApC,CAA6D,IAA7D;AAEL/lB,MAAAA,mBAAmB,CAACyW,IAApB,CAAyByF,IAAzB;AACD;AACF,GAnmE8B;AAqmE/B8J,EAAAA,yCArmE+B,qDAqmEWvE,MArmEX,EAqmE2B;AAAA,QAAhBA,MAAgB;AAAhBA,MAAAA,MAAgB,GAAP,KAAO;AAAA;;AACxD,SAAKoE,yBAAL;;AACA,QAAI1M,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,QAAIgE,SAAS,GAAG9C,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,CAAhB;;AAEA,QAAI,CAACqI,MAAL,EAAa;AACX,WAAKpV,mBAAL,CAAyBlG,UAAzB,CAAoClB,MAApC,GAA6C,UAA7C;AACA,WAAKoH,mBAAL,CAAyBvF,SAAzB,CAAmC7B,MAAnC,GAA4CkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCvH,IAAlF;AACA,WAAKxF,mBAAL,CAAyBtF,eAAzB,CAAyC9B,MAAzC,GAAkDkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC9P,UAAxF;AACA,WAAK+C,mBAAL,CAAyBrF,kBAAzB,CAA4C/B,MAA5C,GAAqD,wBAAwBkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCrE,YAAtC,CAAmDzB,MAAhI;AACD;;AAED,SAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAClH,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAI8I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAK9P,mBAAL,CAAyBlF,0BAAxC,CAAX;AACA+U,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAK/P,mBAAL,CAAyBpF,iBAAvC;AACAiV,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCtG,eAApC;AACAqN,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCkH,OAApC,CAA4CJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACA6H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCoH,gBAApC,CAAqDnJ,KAArD;;AAEA,UAAI1B,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,YAA5C;AACD,OAHD,MAGO,IAAIjL,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,gBAA5C;AACD;;AAEDT,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6H,UAApC,CAA+Cf,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B6S,MAA7E;AACA/J,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC8H,YAApC,CAAiDhB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAA7F;;AAEA,UAAImO,MAAJ,EAAY;AACVvF,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC+Q,uBAApC;AACA;AACD,OAvBiE,CAwBlE;AACA;AACA;AACA;;;AAEAlmB,MAAAA,mBAAmB,CAACyW,IAApB,CAAyByF,IAAzB;AACD;AACF,GAjpE8B;AAkpE/B2J,EAAAA,yBAlpE+B,uCAkpEH;AAC1B,SAAK,IAAIzS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGpT,mBAAmB,CAACsT,MAAhD,EAAwDF,KAAK,EAA7D,EAAiE;AAC/DpT,MAAAA,mBAAmB,CAACoT,KAAD,CAAnB,CAA2BsK,OAA3B;AACD;;AAED1d,IAAAA,mBAAmB,GAAG,EAAtB;AACD,GAxpE8B;AA0pE/B0jB,EAAAA,qCA1pE+B,iDA0pEOyC,WA1pEP,EA0pE4BP,WA1pE5B,EA0pE6C;AAAA,QAAtCO,WAAsC;AAAtCA,MAAAA,WAAsC,GAAxB,KAAwB;AAAA;;AAAA,QAAjBP,WAAiB;AAAjBA,MAAAA,WAAiB,GAAH,CAAG;AAAA;;AAC1E,QAAIO,WAAJ,EAAiB;AACf,WAAK9Z,mBAAL,CAAyBjF,UAAzB,CAAoC4I,MAApC,GAA6C,KAA7C;AACA,WAAK3D,mBAAL,CAAyBhF,kBAAzB,CAA4C2I,MAA5C,GAAqD,IAArD;AACD,KAHD,MAGO;AACL,WAAK3D,mBAAL,CAAyBjF,UAAzB,CAAoC4I,MAApC,GAA6C,IAA7C;AACA,WAAK3D,mBAAL,CAAyBhF,kBAAzB,CAA4C2I,MAA5C,GAAqD,KAArD;AACD;;AACD,SAAK0V,4CAAL,CAAkD,IAAlD;AACA,SAAKC,iCAAL,CAAuCC,WAAvC;AACD,GApqE8B;AAsqE/BQ,EAAAA,qDAtqE+B,iEAsqEuBD,WAtqEvB,EAsqE4C1E,MAtqE5C,EAsqE4D;AAAA,QAArC0E,WAAqC;AAArCA,MAAAA,WAAqC,GAAvB,KAAuB;AAAA;;AAAA,QAAhB1E,MAAgB;AAAhBA,MAAAA,MAAgB,GAAP,KAAO;AAAA;;AACzF,QAAI0E,WAAJ,EAAiB;AACf,WAAK9Z,mBAAL,CAAyBjF,UAAzB,CAAoC4I,MAApC,GAA6C,KAA7C;AACA,WAAK3D,mBAAL,CAAyBhF,kBAAzB,CAA4C2I,MAA5C,GAAqD,IAArD;AACD,KAHD,MAGO;AACL,WAAK3D,mBAAL,CAAyBjF,UAAzB,CAAoC4I,MAApC,GAA6C,IAA7C;AACA,WAAK3D,mBAAL,CAAyBhF,kBAAzB,CAA4C2I,MAA5C,GAAqD,KAArD;AACD;;AAED,QAAI,CAACyR,MAAL,EAAa,KAAKiE,4CAAL,CAAkD,IAAlD;AAEb,SAAKM,yCAAL,CAA+CvE,MAA/C;AACD,GAlrE8B;AAorE/B4E,EAAAA,mCAprE+B,iDAorEO;AACpC,SAAKR,yBAAL;AACA,SAAKH,4CAAL,CAAkD,KAAlD;AACD,GAvrE8B;AAyrE/BY,EAAAA,gDAzrE+B,8DAyrEoB;AACjD,SAAKT,yBAAL;AACA,SAAKH,4CAAL,CAAkD,KAAlD;AACA3lB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GA7rE8B;AA+rE/B;AAEA;AACA0O,EAAAA,gCAlsE+B,4CAksEExW,MAlsEF,EAksEU;AACvC,SAAKtC,YAAL,CAAkBuC,MAAlB,GAA2BD,MAA3B;AACD,GApsE8B;AAssE/ByW,EAAAA,0BAtsE+B,sCAssEJL,WAtsEI,EAssEiB;AAAA,QAArBA,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AAC9C,SAAK3X,iBAAL;AACA,SAAK+X,gCAAL,CAAsC,IAAtC;AACA,SAAKE,yBAAL,CAA+BN,WAA/B;AACD,GA1sE8B;AA2sE/BM,EAAAA,yBA3sE+B,qCA2sELN,WA3sEK,EA2sEQ;AACrC,QAAIhN,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AAEA,SAAK3L,aAAL,CAAmBnG,UAAnB,CAA8BlB,MAA9B,GAAuC,QAAvC;AACA,SAAKqH,aAAL,CAAmBxF,SAAnB,CAA6B7B,MAA7B,GAAsCkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCvH,IAA5E;AACA,SAAKvF,aAAL,CAAmBvF,eAAnB,CAAmC9B,MAAnC,GAA4CkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC9P,UAAlF;;AAEA,QAAI6c,WAAJ,EAAiB;AACf,WAAK7Z,aAAL,CAAmBlF,UAAnB,CAA8B4I,MAA9B,GAAuC,KAAvC;AACA,WAAK1D,aAAL,CAAmBjF,kBAAnB,CAAsC2I,MAAtC,GAA+C,IAA/C;AACD,KAHD,MAGO;AACL,WAAK1D,aAAL,CAAmBlF,UAAnB,CAA8B4I,MAA9B,GAAuC,IAAvC;AACA,WAAK1D,aAAL,CAAmBjF,kBAAnB,CAAsC2I,MAAtC,GAA+C,KAA/C;AACD;AACF,GA1tE8B;AA4tE/B0W,EAAAA,wBA5tE+B,sCA4tEJ;AACzB,SAAKH,gCAAL,CAAsC,KAAtC;AACD,GA9tE8B;AAguE/BI,EAAAA,qCAhuE+B,mDAguES;AACtC,SAAKJ,gCAAL,CAAsC,KAAtC;AACAxmB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GAnuE8B;AAouE/B;AAEA;AACA+O,EAAAA,sCAvuE+B,kDAuuEQ7W,MAvuER,EAuuEgB;AAC7C,SAAKrC,eAAL,CAAqBsC,MAArB,GAA8BD,MAA9B;AACD,GAzuE8B;AA2uE/B8W,EAAAA,gCA3uE+B,4CA2uEEV,WA3uEF,EA2uEuB;AAAA,QAArBA,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AACpD,SAAK3X,iBAAL;AACA,SAAKoY,sCAAL,CAA4C,IAA5C;AACA,SAAKE,+BAAL,CAAqCX,WAArC;AACD,GA/uE8B;AAgvE/BW,EAAAA,+BAhvE+B,2CAgvECX,WAhvED,EAgvEc;AAC3C,QAAIhN,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AAEA,SAAK1L,gBAAL,CAAsBpG,UAAtB,CAAiClB,MAAjC,GAA0C,aAA1C;AACA,SAAKsH,gBAAL,CAAsBzF,SAAtB,CAAgC7B,MAAhC,GAAyCkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCvH,IAA/E;AACA,SAAKtF,gBAAL,CAAsBxF,eAAtB,CAAsC9B,MAAtC,GAA+CkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC9P,UAArF;;AAEA,QAAI6c,WAAJ,EAAiB;AACf,WAAK5Z,gBAAL,CAAsBnF,UAAtB,CAAiC4I,MAAjC,GAA0C,KAA1C;AACA,WAAKzD,gBAAL,CAAsBlF,kBAAtB,CAAyC2I,MAAzC,GAAkD,IAAlD;AACD,KAHD,MAGO;AACL,WAAKzD,gBAAL,CAAsBnF,UAAtB,CAAiC4I,MAAjC,GAA0C,IAA1C;AACA,WAAKzD,gBAAL,CAAsBlF,kBAAtB,CAAyC2I,MAAzC,GAAkD,KAAlD;AACD;AACF,GA/vE8B;AAiwE/B+W,EAAAA,8BAjwE+B,4CAiwEE;AAC/B,SAAKH,sCAAL,CAA4C,KAA5C;AACD,GAnwE8B;AAqwE/BI,EAAAA,2CArwE+B,yDAqwEe;AAC5C,SAAKJ,sCAAL,CAA4C,KAA5C;AACA7mB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GAxwE8B;AAywE/B;AAEA;AACAoP,EAAAA,uCA5wE+B,mDA4wESlX,MA5wET,EA4wEiB;AAC9C,SAAKlC,yBAAL,CAA+BmC,MAA/B,GAAwCD,MAAxC;AACD,GA9wE8B;AAgxE/BmX,EAAAA,oCAhxE+B,gDAgxEMnX,MAhxEN,EAgxEc;AAC3C,SAAKnC,sBAAL,CAA4BoC,MAA5B,GAAqCD,MAArC;AACD,GAlxE8B;AAoxE/BoX,EAAAA,sCApxE+B,kDAoxEQpX,MApxER,EAoxEgB;AAC7C,SAAKvD,kBAAL,CAAwB5D,aAAxB,CAAsCoH,MAAtC,GAA+CD,MAA/C;AACD,GAtxE8B;AAwxE/BqX,EAAAA,iBAxxE+B,6BAwxEb3N,IAxxEa,EAwxEP;AACtB,SAAKjN,kBAAL,CAAwB3D,kBAAxB,CAA2C5D,MAA3C,GAAoDwU,IAApD;AACD,GA1xE8B;AA4xE/B4N,EAAAA,mCA5xE+B,+CA4xEKC,OA5xEL,EA4xEcC,WA5xEd,EA4xE2BvM,WA5xE3B,EA4xEwCwM,UA5xExC,EA4xEwD;AAAA,QAAhBA,UAAgB;AAAhBA,MAAAA,UAAgB,GAAH,CAAG;AAAA;;AACrF,SAAKL,sCAAL,CAA4C,KAA5C;AACA,SAAK3a,kBAAL,CAAwBrG,UAAxB,CAAmClB,MAAnC,GAA4C,cAA5C;AACA,SAAKuH,kBAAL,CAAwB1F,SAAxB,CAAkC7B,MAAlC,GAA2C,MAAMqiB,OAAO,CAACzV,IAAzD;AACA,SAAKrF,kBAAL,CAAwBzF,eAAxB,CAAwC9B,MAAxC,GAAiDqiB,OAAO,CAAChe,UAAzD;AACA,SAAKkD,kBAAL,CAAwB/D,iBAAxB,CAA0CxD,MAA1C,GAAmD,oBAAoBlF,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAA1I;;AAEA,QAAIkU,UAAU,IAAI,CAAlB,EAAqB;AACnB,WAAK,IAAIpU,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,KAAK,EAArD,EAAyD;AACvD,YAAImU,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCkK,cAApC,CAAmDC,UAAnD,IAAiE,KAArE,EAA4E;AAC1E;AACA,cAAIJ,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAA/E,EAA0F;AACxF,gBAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAK3P,kBAAL,CAAwB9D,aAAvC,CAAX;AACAwT,YAAAA,IAAI,CAACE,MAAL,GAAc,KAAK5P,kBAAL,CAAwB7D,aAAtC;AACAuT,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDlU,UAAvG;AACA4S,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAAtG;AACApT,YAAAA,gBAAgB,CAACqW,IAAjB,CAAsByF,IAAtB;AACD;AACF;AACF;AACF,KAbD,MAaO,IAAIsL,UAAU,IAAI,CAAlB,EAAqB;AAC1B;AACA,WAAK,IAAIpU,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,OAAK,EAArD,EAAyD;AACvD,YAAIkU,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAA5C,EAAuD;AACrD,cAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAK3P,kBAAL,CAAwB9D,aAAvC,CAAX;AACAwT,UAAAA,IAAI,CAACE,MAAL,GAAc,KAAK5P,kBAAL,CAAwB7D,aAAtC;AACAuT,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,OAAD,CAAX,CAAmB9J,UAApE;AACA4S,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAAnE;AACApT,UAAAA,gBAAgB,CAACqW,IAAjB,CAAsByF,IAAtB;AACD;AACF;AACF;;AAED,QAAIlB,WAAJ,EAAiB;AACf,WAAKxO,kBAAL,CAAwBpF,UAAxB,CAAmC4I,MAAnC,GAA4C,KAA5C;AACA,WAAKxD,kBAAL,CAAwBnF,kBAAxB,CAA2C2I,MAA3C,GAAoD,IAApD;AACD,KAHD,MAGO;AACL,WAAKxD,kBAAL,CAAwBpF,UAAxB,CAAmC4I,MAAnC,GAA4C,IAA5C;AACA,WAAKxD,kBAAL,CAAwBnF,kBAAxB,CAA2C2I,MAA3C,GAAoD,KAApD;AACD;AACF,GAp0E8B;AAs0E/B6X,EAAAA,mCAt0E+B,iDAs0EO;AACpC,SAAK,IAAIzU,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGhT,gBAAgB,CAACkT,MAA7C,EAAqDF,KAAK,EAA1D,EAA8D;AAC5DhT,MAAAA,gBAAgB,CAACgT,KAAD,CAAhB,CAAwBsK,OAAxB;AACD;;AACDtd,IAAAA,gBAAgB,GAAG,EAAnB;AACD,GA30E8B;AA60E/B0nB,EAAAA,uBA70E+B,qCA60EL;AACxB,SAAKZ,oCAAL,CAA0C,KAA1C;AACD,GA/0E8B;AAi1E/Ba,EAAAA,oCAj1E+B,kDAi1EQ;AACrC,SAAKb,oCAAL,CAA0C,KAA1C;AACAnnB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GAp1E8B;AAs1E/BmQ,EAAAA,sCAt1E+B,kDAs1EQvO,IAt1ER,EAs1Ec;AAC3C,QAAI6N,OAAO,GAAGvnB,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FC,iBAA3G;AACA,SAAKhR,kBAAL,CAAwB1D,kBAAxB,CAA2C7D,MAA3C,GAAoD,cAApD;AACA,SAAKuH,kBAAL,CAAwBzD,iBAAxB,CAA0C9D,MAA1C,GAAmD,MAAMqiB,OAAO,CAACzV,IAAjE;AACA,SAAKrF,kBAAL,CAAwBxD,uBAAxB,CAAgD/D,MAAhD,GAAyDqiB,OAAO,CAAChe,UAAjE;AACA,SAAKkD,kBAAL,CAAwBvD,qBAAxB,CAA8ChE,MAA9C,GAAuDwU,IAAvD;AACD,GA51E8B;AA61E/B;AAEA;AACAwO,EAAAA,kCAh2E+B,8CAg2EIlY,MAh2EJ,EAg2EY;AACzC,SAAKpC,uBAAL,CAA6BqC,MAA7B,GAAsCD,MAAtC;AACD,GAl2E8B;AAo2E/BmY,EAAAA,+BAp2E+B,2CAo2ECC,UAp2ED,EAo2EaC,YAp2Eb,EAo2E2B;AACxD,SAAKzb,qBAAL,CAA2BtD,SAA3B,CAAqCpE,MAArC,GAA8CkjB,UAA9C;AACA,SAAKxb,qBAAL,CAA2BzC,iBAA3B,CAA6CjF,MAA7C,GAAsDmjB,YAAtD;AACD,GAv2E8B;AAy2E/BC,EAAAA,gCAz2E+B,8CAy2EI;AACjC,SAAKC,mCAAL;AACA,SAAKL,kCAAL,CAAwC,KAAxC;AACD,GA52E8B;AA82E/BM,EAAAA,8CA92E+B,4DA82EkB;AAC/C,SAAKD,mCAAL;AACA,SAAKL,kCAAL,CAAwC,KAAxC;AACAloB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GAl3E8B;AAo3E/ByQ,EAAAA,mCAp3E+B,iDAo3EO;AACpC,SAAK,IAAIlV,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG3S,yBAAyB,CAAC6S,MAAtD,EAA8DF,KAAK,EAAnE,EAAuE;AACrE3S,MAAAA,yBAAyB,CAAC2S,KAAD,CAAzB,CAAiCsK,OAAjC;AACD;;AACDjd,IAAAA,yBAAyB,GAAG,EAA5B;AACD,GAz3E8B;AA03E/B+nB,EAAAA,qCA13E+B,iDA03EOvM,SA13EP,EA03EkBwM,aA13ElB,EA03EiC;AAC9D,SAAK,IAAIrV,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAClH,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAI1B,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwDwV,aAA5D,EAA2E;AACzE,YAAIvM,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKxP,qBAAL,CAA2BxC,cAA1C,CAAX;AACA+R,QAAAA,IAAI,CAACE,MAAL,GAAc,KAAKzP,qBAAL,CAA2BhE,aAAzC;AACAuT,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCtG,eAApC;AACAqN,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCkH,OAApC,CAA4CJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACA6H,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCoH,gBAApC,CAAqDnJ,KAArD;AAEA,YAAIoJ,eAAe,GAAGP,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAAlE;;AAEA,YAAI5B,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DiJ,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,YAA5C;AACAT,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCyH,gBAApC,CAAqD,KAArD;AACAV,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC0H,qBAApC,CAA0D,KAA1D;AACD,SALD,MAKO,IAAInL,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEiJ,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,gBAA5C;;AACA,cAAIG,mBAAmB,GAAGN,eAAe,GAAG,KAA5C;;AACA,cAAIO,YAAY,GAAG,QAAQD,mBAA3B;;AACAZ,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCyH,gBAApC,CAAqDG,YAArD;AACAb,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC0H,qBAApC,CAA0DE,YAA1D;AACD;;AAEDb,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6H,UAApC,CAA+Cf,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B7O,UAA7E;AACA2X,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC8H,YAApC,CAAiDhB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAA7F;;AAEA,YAAI2I,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B8J,aAA9B,IAA+C,IAAnD,EAAyD;AACvDhB,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCgI,uBAApC,CAA4D,KAA5D;AACAjB,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCiI,cAApC,CAAmDnB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiK,WAAjF;AACD,SAHD,MAGO;AACLnB,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCgI,uBAApC,CAA4D,IAA5D;AACAjB,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCiI,cAApC,CAAmD,MAAnD;AACD;;AAED3c,QAAAA,yBAAyB,CAACgW,IAA1B,CAA+ByF,IAA/B;AACD;AACF;AACF,GAl6E8B;AAo6E/BwM,EAAAA,gDAp6E+B,4DAo6EkBjR,YAp6ElB,EAo6EwCkR,iBAp6ExC,EAo6EmE;AAAA,QAAjDlR,YAAiD;AAAjDA,MAAAA,YAAiD,GAAlC,KAAkC;AAAA;;AAAA,QAA3BkR,iBAA2B;AAA3BA,MAAAA,iBAA2B,GAAP,KAAO;AAAA;;AAChG,SAAKL,mCAAL;;AACA,QAAInP,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGD,QAAQ,CAAClB,aAAT,EAAnB;;AACA,QAAIgE,SAAS,GAAG9C,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,CAAhB;AACA,SAAK8O,+BAAL,CAAqC,UAArC,EAAiD,wFAAjD;AACA,SAAKD,kCAAL,CAAwC,IAAxC;AACA,SAAKtb,qBAAL,CAA2BrD,UAA3B,CAAsCrE,MAAtC,GAA+CgX,SAAS,CAAC3S,UAAzD;AACA,SAAKqD,qBAAL,CAA2BpD,UAA3B,CAAsCtE,MAAtC,GAA+C,MAAMgX,SAAS,CAACpK,IAA/D;;AAEA,QAAI8W,iBAAJ,EAAuB;AACrB,WAAKH,qCAAL,CAA2CvM,SAA3C,EAAsD,CAAtD;AACD;;AAED,QAAIxE,YAAJ,EAAkB;AAChB,WAAK+Q,qCAAL,CAA2CvM,SAA3C,EAAsD,CAAtD;AACD;AACF,GAr7E8B;AAs7E/B;AAEA;AACA2M,EAAAA,kCAz7E+B,8CAy7EI7Y,MAz7EJ,EAy7EY;AACzC,SAAKjC,2BAAL,CAAiCkC,MAAjC,GAA0CD,MAA1C;AACD,GA37E8B;AA67E/B8Y,EAAAA,sCA77E+B,kDA67EQvB,OA77ER,EA67EiBC,WA77EjB,EA67E8BvM,WA77E9B,EA67E2CwM,UA77E3C,EA67E2D;AAAA,QAAhBA,UAAgB;AAAhBA,MAAAA,UAAgB,GAAH,CAAG;AAAA;;AACxF,SAAK5a,uBAAL,CAA6BzG,UAA7B,CAAwClB,MAAxC,GAAiD,eAAjD;AACA,SAAK2H,uBAAL,CAA6B9F,SAA7B,CAAuC7B,MAAvC,GAAgD,MAAMqiB,OAAO,CAACzV,IAA9D;AACA,SAAKjF,uBAAL,CAA6B7F,eAA7B,CAA6C9B,MAA7C,GAAsDqiB,OAAO,CAAChe,UAA9D;AACA,SAAKsD,uBAAL,CAA6BnE,iBAA7B,CAA+CxD,MAA/C,GAAwD,oBAAoBlF,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAA/I;;AAEA,QAAIkU,UAAU,IAAI,CAAlB,EAAqB;AACnB,WAAK,IAAIpU,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,KAAK,EAArD,EAAyD;AACvD,YAAImU,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCkK,cAApC,CAAmDC,UAAnD,IAAiE,KAArE,EAA4E;AAC1E;AACA,cAAIJ,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAA/E,EAA0F;AACxF,gBAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKvP,uBAAL,CAA6BlE,aAA5C,CAAX;AACAwT,YAAAA,IAAI,CAACE,MAAL,GAAc,KAAKxP,uBAAL,CAA6BjE,aAA3C;AACAuT,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDlU,UAAvG;AACA4S,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAAtG;AACAnT,YAAAA,uBAAuB,CAACoW,IAAxB,CAA6ByF,IAA7B;AACD;AACF;AACF;AACF,KAbD,MAaO,IAAIsL,UAAU,IAAI,CAAlB,EAAqB;AAC1B;AACA,WAAK,IAAIpU,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,OAAK,EAArD,EAAyD;AACvD,YAAIkU,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAA5C,EAAuD;AACrD,cAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKvP,uBAAL,CAA6BlE,aAA5C,CAAX;AACAwT,UAAAA,IAAI,CAACE,MAAL,GAAc,KAAKxP,uBAAL,CAA6BjE,aAA3C;AACAuT,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,OAAD,CAAX,CAAmB9J,UAApE;AACA4S,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAAnE;AACAnT,UAAAA,uBAAuB,CAACoW,IAAxB,CAA6ByF,IAA7B;AACD;AACF;AACF;;AAED,QAAIlB,WAAJ,EAAiB;AACf,WAAKpO,uBAAL,CAA6BxF,UAA7B,CAAwC4I,MAAxC,GAAiD,KAAjD;AACA,WAAKpD,uBAAL,CAA6BvF,kBAA7B,CAAgD2I,MAAhD,GAAyD,IAAzD;AACD,KAHD,MAGO;AACL,WAAKpD,uBAAL,CAA6BxF,UAA7B,CAAwC4I,MAAxC,GAAiD,IAAjD;AACA,WAAKpD,uBAAL,CAA6BvF,kBAA7B,CAAgD2I,MAAhD,GAAyD,KAAzD;AACD;AACF,GAp+E8B;AAs+E/B8Y,EAAAA,sCAt+E+B,oDAs+EU;AACvC,SAAK,IAAI1V,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG/S,uBAAuB,CAACiT,MAApD,EAA4DF,KAAK,EAAjE,EAAqE;AACnE/S,MAAAA,uBAAuB,CAAC+S,KAAD,CAAvB,CAA+BsK,OAA/B;AACD;;AACDrd,IAAAA,uBAAuB,GAAG,EAA1B;AACD,GA3+E8B;AA6+E/B0oB,EAAAA,0BA7+E+B,wCA6+EF;AAC3B,SAAKH,kCAAL,CAAwC,KAAxC;AACD,GA/+E8B;AAi/E/BI,EAAAA,uCAj/E+B,qDAi/EW;AACxC,SAAKJ,kCAAL,CAAwC,KAAxC;AACA7oB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GAp/E8B;AAs/E/B;AAEA;AACAoR,EAAAA,iCAz/E+B,6CAy/EGlZ,MAz/EH,EAy/EW;AACxC,SAAKhC,0BAAL,CAAgCiC,MAAhC,GAAyCD,MAAzC;AACD,GA3/E8B;AA6/E/BmZ,EAAAA,qCA7/E+B,iDA6/EO5B,OA7/EP,EA6/EgBC,WA7/EhB,EA6/E6BvM,WA7/E7B,EA6/E0CwM,UA7/E1C,EA6/E0D2B,gBA7/E1D,EA6/EoF;AAAA,QAA1C3B,UAA0C;AAA1CA,MAAAA,UAA0C,GAA7B,CAA6B;AAAA;;AAAA,QAA1B2B,gBAA0B;AAA1BA,MAAAA,gBAA0B,GAAP,KAAO;AAAA;;AACjH,SAAKtc,yBAAL,CAA+B1G,UAA/B,CAA0ClB,MAA1C,GAAmD,eAAnD;AACA,SAAK4H,yBAAL,CAA+B/F,SAA/B,CAAyC7B,MAAzC,GAAkD,MAAMqiB,OAAO,CAACzV,IAAhE;AACA,SAAKhF,yBAAL,CAA+B9F,eAA/B,CAA+C9B,MAA/C,GAAwDqiB,OAAO,CAAChe,UAAhE;AACA,SAAKuD,yBAAL,CAA+BpE,iBAA/B,CAAiDxD,MAAjD,GAA0D,oBAAoBlF,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAAjJ;AAEA,QAAI4L,SAAS,GAAGnf,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApE;;AAEA,QAAImU,UAAU,IAAI,CAAlB,EAAqB;AACnB,WAAK,IAAIpU,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,KAAK,EAArD,EAAyD;AACvD,YAAImU,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCkK,cAApC,CAAmDC,UAAnD,IAAiE,KAArE,EAA4E;AAC1E;AACA,cAAIJ,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAA/E,EAA0F;AACxF,gBAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKtP,yBAAL,CAA+BnE,aAA9C,CAAX;AACAwT,YAAAA,IAAI,CAACE,MAAL,GAAc,KAAKvP,yBAAL,CAA+BlE,aAA7C;AACAuT,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDlU,UAAvG;AACA4S,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAAtG;;AAEA,gBAAI2V,gBAAJ,EAAsB;AACpBjN,cAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCiU,UAAnC,CAA8C,IAA9C;AACD;;AAED,iBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnK,SAAS,CAAC5L,MAA9B,EAAsC+V,CAAC,EAAvC,EAA2C;AACzC,kBAAInK,SAAS,CAACmK,CAAD,CAAT,CAAa7V,SAAb,IAA0B+T,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAApF,EAA+F;AAC7F0I,gBAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCmU,cAAnC,CAAkDD,CAAlD;AACA;AACD;AACF;;AAED/oB,YAAAA,sBAAsB,CAACmW,IAAvB,CAA4ByF,IAA5B;AACD;AACF;AACF;AACF,KAzBD,MAyBO,IAAIsL,UAAU,IAAI,CAAlB,EAAqB;AAC1B;AACA,WAAK,IAAIpU,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,OAAK,EAArD,EAAyD;AACvD,YAAIkU,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAA5C,EAAuD;AACrD,cAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKtP,yBAAL,CAA+BnE,aAA9C,CAAX;AACAwT,UAAAA,IAAI,CAACE,MAAL,GAAc,KAAKvP,yBAAL,CAA+BlE,aAA7C;AACAuT,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,OAAD,CAAX,CAAmB9J,UAApE;AACA4S,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAAnE;AACAlT,UAAAA,sBAAsB,CAACmW,IAAvB,CAA4ByF,IAA5B;AACD;AACF;AACF;;AAED,QAAIlB,WAAJ,EAAiB;AACf,WAAKnO,yBAAL,CAA+BzF,UAA/B,CAA0C4I,MAA1C,GAAmD,KAAnD;AACA,WAAKnD,yBAAL,CAA+BxF,kBAA/B,CAAkD2I,MAAlD,GAA2D,IAA3D;AACD,KAHD,MAGO;AACL,WAAKnD,yBAAL,CAA+BzF,UAA/B,CAA0C4I,MAA1C,GAAmD,IAAnD;AACA,WAAKnD,yBAAL,CAA+BxF,kBAA/B,CAAkD2I,MAAlD,GAA2D,KAA3D;AACD;AACF,GAljF8B;AAojF/BuZ,EAAAA,qCApjF+B,mDAojFS;AACtC,SAAK,IAAInW,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG9S,sBAAsB,CAACgT,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE9S,MAAAA,sBAAsB,CAAC8S,KAAD,CAAtB,CAA8BsK,OAA9B;AACD;;AACDpd,IAAAA,sBAAsB,GAAG,EAAzB;AACD,GAzjF8B;AA2jF/ByjB,EAAAA,wBA3jF+B,sCA2jFJ;AACzB,SAAKyF,qCAAL;AACA,SAAKD,qCAAL;AACA,SAAKN,iCAAL,CAAuC,KAAvC;AACA,SAAKQ,iCAAL,CAAuC,KAAvC;AACD,GAhkF8B;AAkkF/BC,EAAAA,qCAlkF+B,mDAkkFS;AACtC,SAAKF,qCAAL;AACA,SAAKD,qCAAL;AACA,SAAKN,iCAAL,CAAuC,KAAvC;AACA,SAAKQ,iCAAL,CAAuC,KAAvC;AACA1pB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GAxkF8B;AAykF/B;AACA;AACA;AACA8R,EAAAA,6BA5kF+B,yCA4kFD5Z,MA5kFC,EA4kFO;AACpC,SAAK9B,4BAAL,CAAkC+B,MAAlC,GAA2CD,MAA3C;AACD,GA9kF8B;AAglF/B6Z,EAAAA,8BAhlF+B,0CAglFA7L,WAhlFA,EAglFa8L,iBAhlFb,EAglFoCV,gBAhlFpC,EAglF8D;AAAA,QAAjDU,iBAAiD;AAAjDA,MAAAA,iBAAiD,GAA7B,CAA6B;AAAA;;AAAA,QAA1BV,gBAA0B;AAA1BA,MAAAA,gBAA0B,GAAP,KAAO;AAAA;;AAC3F,SAAKW,sBAAL;;AACA,QAAI3Q,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,QAAIgE,SAAS,GAAG8B,WAAhB;AACAjM,IAAAA,OAAO,CAACC,GAAR,CAAYkK,SAAZ;AAEA,SAAKjP,sBAAL,CAA4B7G,UAA5B,CAAuClB,MAAvC,GAAgD,UAAhD;AACA,SAAK+H,sBAAL,CAA4BlG,SAA5B,CAAsC7B,MAAtC,GAA+CkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsCvH,IAArF;AACA,SAAK7E,sBAAL,CAA4BjG,eAA5B,CAA4C9B,MAA5C,GAAqDkU,QAAQ,CAAC9F,cAAT,CAAwB+F,YAAxB,EAAsC9P,UAA3F;AACA,SAAK0D,sBAAL,CAA4BhG,kBAA5B,CAA+C/B,MAA/C,GAAwD,wBAAwB8Y,WAAW,CAAChJ,YAAZ,CAAyBzB,MAAzG;;AAEA,SAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAClH,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAI8I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKnP,sBAAL,CAA4B7C,cAA3C,CAAX;AACA+R,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAKpP,sBAAL,CAA4B/F,iBAA1C;AACAiV,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCtG,eAApC;AACAqN,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCkH,OAApC,CAA4CJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACA6H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCoH,gBAApC,CAAqDnJ,KAArD;AACA8I,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC4U,eAApC,CAAoDhM,WAApD;AACA7B,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6U,cAApC,CAAmDH,iBAAnD;;AAEA,UAAIV,gBAAJ,EAAsB;AACpBjN,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC8U,eAApC,CAAoD,IAApD;AACD;;AAED,UAAIvY,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,YAA5C;AACD,OAHD,MAGO,IAAIjL,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,gBAA5C;AACD;;AAEDT,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6H,UAApC,CAA+Cf,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B7O,UAA7E;AACA2X,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC8H,YAApC,CAAiDhB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAA7F;AAEApT,MAAAA,qBAAqB,CAACuW,IAAtB,CAA2ByF,IAA3B;AACD;AACF,GAxnF8B;AA0nF/B4N,EAAAA,sBA1nF+B,oCA0nFN;AACvB,SAAK,IAAI1W,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGlT,qBAAqB,CAACoT,MAAlD,EAA0DF,KAAK,EAA/D,EAAmE;AACjElT,MAAAA,qBAAqB,CAACkT,KAAD,CAArB,CAA6BsK,OAA7B;AACD;;AAEDxd,IAAAA,qBAAqB,GAAG,EAAxB;AACD,GAhoF8B;AAkoF/BgqB,EAAAA,8BAloF+B,0CAkoFA/D,WAloFA,EAkoFqBpI,WAloFrB,EAkoFyC3E,YAloFzC,EAkoF2D+P,gBAloF3D,EAkoFqF;AAAA,QAArFhD,WAAqF;AAArFA,MAAAA,WAAqF,GAAvE,KAAuE;AAAA;;AAAA,QAAhEpI,WAAgE;AAAhEA,MAAAA,WAAgE,GAAlD,IAAkD;AAAA;;AAAA,QAA5C3E,YAA4C;AAA5CA,MAAAA,YAA4C,GAA7B,CAA6B;AAAA;;AAAA,QAA1B+P,gBAA0B;AAA1BA,MAAAA,gBAA0B,GAAP,KAAO;AAAA;;AAClH,QAAIhD,WAAJ,EAAiB;AACf,WAAKnZ,sBAAL,CAA4B5F,UAA5B,CAAuC4I,MAAvC,GAAgD,KAAhD;AACA,WAAKhD,sBAAL,CAA4B3F,kBAA5B,CAA+C2I,MAA/C,GAAwD,IAAxD;AACD,KAHD,MAGO;AACL,WAAKhD,sBAAL,CAA4B5F,UAA5B,CAAuC4I,MAAvC,GAAgD,IAAhD;AACA,WAAKhD,sBAAL,CAA4B3F,kBAA5B,CAA+C2I,MAA/C,GAAwD,KAAxD;AACD;;AACD,SAAK2Z,6BAAL,CAAmC,IAAnC;AACA,SAAKC,8BAAL,CAAoC7L,WAApC,EAAiD3E,YAAjD,EAA+D+P,gBAA/D;AACD,GA5oF8B;AA8oF/BnF,EAAAA,0BA9oF+B,wCA8oFF;AAC3B,SAAKmG,qBAAL;AACA,SAAKL,sBAAL;AACA,SAAKM,mCAAL;AACA,SAAKT,6BAAL,CAAmC,KAAnC;AACD,GAnpF8B;AAqpF/BU,EAAAA,uCArpF+B,qDAqpFW;AACxC,SAAKF,qBAAL;AACA,SAAKL,sBAAL;AACA,SAAKH,6BAAL,CAAmC,KAAnC;AACA,SAAKS,mCAAL;AACArqB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDkH,gBAApD;AACD,GA3pF8B;AA4pF/B;AAEA;AACA4R,EAAAA,iCA/pF+B,6CA+pFG1Z,MA/pFH,EA+pFW;AACxC,SAAK/B,0BAAL,CAAgCgC,MAAhC,GAAyCD,MAAzC;AACD,GAjqF8B;AAmqF/Bua,EAAAA,qCAnqF+B,iDAmqFOhD,OAnqFP,EAmqFgBC,WAnqFhB,EAmqF6BvM,WAnqF7B,EAmqF0CwM,UAnqF1C,EAmqF0D;AAAA,QAAhBA,UAAgB;AAAhBA,MAAAA,UAAgB,GAAH,CAAG;AAAA;;AACvF,SAAK1a,yBAAL,CAA+B3G,UAA/B,CAA0ClB,MAA1C,GAAmD,eAAnD;AACA,SAAK6H,yBAAL,CAA+BhG,SAA/B,CAAyC7B,MAAzC,GAAkD,MAAMqiB,OAAO,CAACzV,IAAhE;AACA,SAAK/E,yBAAL,CAA+B/F,eAA/B,CAA+C9B,MAA/C,GAAwDqiB,OAAO,CAAChe,UAAhE;AACA,SAAKwD,yBAAL,CAA+BrE,iBAA/B,CAAiDxD,MAAjD,GAA0D,oBAAoBlF,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAAjJ;AAEA,QAAI4L,SAAS,GAAGnf,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApE;;AAEA,QAAImU,UAAU,IAAI,CAAlB,EAAqB;AACnB,WAAK,IAAIpU,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,KAAK,EAArD,EAAyD;AACvD,YAAImU,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCkK,cAApC,CAAmDC,UAAnD,IAAiE,KAArE,EAA4E;AAC1E;AACA,cAAIJ,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAA/E,EAA0F;AACxF,gBAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKrP,yBAAL,CAA+BpE,aAA9C,CAAX;AACAwT,YAAAA,IAAI,CAACE,MAAL,GAAc,KAAKtP,yBAAL,CAA+BnE,aAA7C;AACAuT,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDlU,UAAvG;AACA4S,YAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAAtG;;AAEA,iBAAK,IAAI6V,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGnK,SAAS,CAAC5L,MAA9B,EAAsC+V,CAAC,EAAvC,EAA2C;AACzC,kBAAInK,SAAS,CAACmK,CAAD,CAAT,CAAa7V,SAAb,IAA0B+T,WAAW,CAACnU,KAAD,CAAX,CAAmBmK,gBAAnB,CAAoCC,iBAApC,CAAsDhK,SAApF,EAA+F;AAC7F0I,gBAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCmU,cAAnC,CAAkDD,CAAlD;AACA;AACD;AACF;;AACD9oB,YAAAA,sBAAsB,CAACkW,IAAvB,CAA4ByF,IAA5B;AACD;AACF;AACF;AACF,KApBD,MAoBO,IAAIsL,UAAU,IAAI,CAAlB,EAAqB;AAC1B;AACA,WAAK,IAAIpU,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGmU,WAAW,CAACjU,MAAxC,EAAgDF,OAAK,EAArD,EAAyD;AACvD,YAAIkU,OAAO,CAAC9T,SAAR,IAAqB+T,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAA5C,EAAuD;AACrD,cAAI0I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKrP,yBAAL,CAA+BpE,aAA9C,CAAX;AACAwT,UAAAA,IAAI,CAACE,MAAL,GAAc,KAAKtP,yBAAL,CAA+BnE,aAA7C;AACAuT,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCwS,aAAnC,CAAiDJ,WAAW,CAACnU,OAAD,CAAX,CAAmB9J,UAApE;AACA4S,UAAAA,IAAI,CAAC/G,YAAL,CAAkB,eAAlB,EAAmCyS,YAAnC,CAAgDL,WAAW,CAACnU,OAAD,CAAX,CAAmBI,SAAnE;AACAjT,UAAAA,sBAAsB,CAACkW,IAAvB,CAA4ByF,IAA5B;AACD;AACF;AACF;;AAED,QAAIlB,WAAJ,EAAiB;AACf,WAAKlO,yBAAL,CAA+B1F,UAA/B,CAA0C4I,MAA1C,GAAmD,KAAnD;AACA,WAAKlD,yBAAL,CAA+BzF,kBAA/B,CAAkD2I,MAAlD,GAA2D,IAA3D;AACD,KAHD,MAGO;AACL,WAAKlD,yBAAL,CAA+B1F,UAA/B,CAA0C4I,MAA1C,GAAmD,IAAnD;AACA,WAAKlD,yBAAL,CAA+BzF,kBAA/B,CAAkD2I,MAAlD,GAA2D,KAA3D;AACD;AACF,GAntF8B;AAqtF/BwZ,EAAAA,qCArtF+B,mDAqtFS;AACtC,SAAK,IAAIpW,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG7S,sBAAsB,CAAC+S,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE7S,MAAAA,sBAAsB,CAAC6S,KAAD,CAAtB,CAA8BsK,OAA9B;AACD;;AACDnd,IAAAA,sBAAsB,GAAG,EAAzB;AACD,GA1tF8B;AA4tF/B;AAEA;AACA2jB,EAAAA,+BA/tF+B,2CA+tFCnU,MA/tFD,EA+tFS;AACtC,SAAKhD,qBAAL,CAA2B3D,UAA3B,CAAsC4G,MAAtC,GAA+CD,MAA/C;AACD,GAjuF8B;AAmuF/BkU,EAAAA,qCAnuF+B,iDAmuFOlU,MAnuFP,EAmuFe;AAC5C,SAAKhD,qBAAL,CAA2BvC,gBAA3B,CAA4CwF,MAA5C,GAAqDD,MAArD;AACD,GAruF8B;AAuuF/Bqa,EAAAA,mCAvuF+B,+CAuuFKra,MAvuFL,EAuuFa;AAC1C,SAAKhD,qBAAL,CAA2BtC,oBAA3B,CAAgDuF,MAAhD,GAAyDD,MAAzD;AACD,GAzuF8B;AA2uF/Bwa,EAAAA,4BA3uF+B,wCA2uFFxM,WA3uFE,EA2uFW8L,iBA3uFX,EA2uFkC;AAAA,QAAvBA,iBAAuB;AAAvBA,MAAAA,iBAAuB,GAAH,CAAG;AAAA;;AAC/D,SAAKM,qBAAL;;AACA,QAAIhR,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIyI,YAAY,GAAGrZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnB;;AACA,QAAIgE,SAAS,GAAG8B,WAAhB;AACAjM,IAAAA,OAAO,CAACC,GAAR,CAAYkK,SAAZ;AAEA,SAAKlP,qBAAL,CAA2BrC,oBAA3B,CAAgDvE,UAAhD,CAA2DlB,MAA3D,GAAoE,UAApE;AACA,SAAK8H,qBAAL,CAA2BrC,oBAA3B,CAAgD5D,SAAhD,CAA0D7B,MAA1D,GAAmE8Y,WAAW,CAAClM,IAA/E;AACA,SAAK9E,qBAAL,CAA2BrC,oBAA3B,CAAgD3D,eAAhD,CAAgE9B,MAAhE,GAAyE8Y,WAAW,CAACzU,UAArF;AACA,SAAKyD,qBAAL,CAA2BrC,oBAA3B,CAAgD1D,kBAAhD,CAAmE/B,MAAnE,GAA4E,wBAAwB8Y,WAAW,CAAChJ,YAAZ,CAAyBzB,MAA7H;;AAEA,SAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG6I,SAAS,CAAClH,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAI8I,IAAI,GAAG5Z,EAAE,CAAC6Z,WAAH,CAAe,KAAKpP,qBAAL,CAA2BrC,oBAA3B,CAAgDP,cAA/D,CAAX;AACA+R,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAKrP,qBAAL,CAA2BrC,oBAA3B,CAAgDzD,iBAA9D;AACAiV,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCtG,eAApC;AACAqN,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCkH,OAApC,CAA4CJ,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACA6H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCmH,OAApC,CAA4CL,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACA+H,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCoH,gBAApC,CAAqDnJ,KAArD;AACA8I,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC4U,eAApC,CAAoDhM,WAApD;AACA7B,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6U,cAApC,CAAmDH,iBAAnD;;AAEA,UAAInY,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,YAA5C;AACD,OAHD,MAGO,IAAIjL,QAAQ,CAACuK,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEiJ,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCuH,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoCwH,OAApC,CAA4C,gBAA5C;AACD;;AAEDT,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC6H,UAApC,CAA+Cf,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8B7O,UAA7E;AACA2X,MAAAA,IAAI,CAAC/G,YAAL,CAAkB,gBAAlB,EAAoC8H,YAApC,CAAiDhB,SAAS,CAAClH,YAAV,CAAuB3B,KAAvB,EAA8BqJ,aAA9B,CAA4CnJ,MAA7F;AAEAnT,MAAAA,qBAAqB,CAACsW,IAAtB,CAA2ByF,IAA3B;AACD;AACF,GA/wF8B;AAixF/BiO,EAAAA,qBAjxF+B,mCAixFP;AACtB,SAAK,IAAI/W,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGjT,qBAAqB,CAACmT,MAAlD,EAA0DF,KAAK,EAA/D,EAAmE;AACjEjT,MAAAA,qBAAqB,CAACiT,KAAD,CAArB,CAA6BsK,OAA7B;AACD;;AAEDvd,IAAAA,qBAAqB,GAAG,EAAxB;AACD,GAvxF8B;AAyxF/BqqB,EAAAA,mCAzxF+B,+CAyxFKrE,WAzxFL,EAyxF0BpI,WAzxF1B,EAyxF8C3E,YAzxF9C,EAyxFgEqR,SAzxFhE,EAyxFmF;AAAA,QAA9EtE,WAA8E;AAA9EA,MAAAA,WAA8E,GAAhE,KAAgE;AAAA;;AAAA,QAAzDpI,WAAyD;AAAzDA,MAAAA,WAAyD,GAA3C,IAA2C;AAAA;;AAAA,QAArC3E,YAAqC;AAArCA,MAAAA,YAAqC,GAAtB,CAAsB;AAAA;;AAAA,QAAnBqR,SAAmB;AAAnBA,MAAAA,SAAmB,GAAP,KAAO;AAAA;;AAChH,QAAIA,SAAS,IAAI,KAAjB,EAAwB;AACtB,UAAItE,WAAJ,EAAiB;AACf,aAAKpZ,qBAAL,CAA2BrC,oBAA3B,CAAgDtD,UAAhD,CAA2D4I,MAA3D,GAAoE,KAApE;AACA,aAAKjD,qBAAL,CAA2BrC,oBAA3B,CAAgDrD,kBAAhD,CAAmE2I,MAAnE,GAA4E,IAA5E;AACD,OAHD,MAGO;AACL,aAAKjD,qBAAL,CAA2BrC,oBAA3B,CAAgDtD,UAAhD,CAA2D4I,MAA3D,GAAoE,IAApE;AACA,aAAKjD,qBAAL,CAA2BrC,oBAA3B,CAAgDrD,kBAAhD,CAAmE2I,MAAnE,GAA4E,KAA5E;AACD;AACF;;AACD,SAAKoa,mCAAL,CAAyC,IAAzC;AACA,SAAKG,4BAAL,CAAkCxM,WAAlC,EAA+C3E,YAA/C;AACD,GAryF8B;AAuyF/BsR,EAAAA,4BAvyF+B,wCAuyFF5G,IAvyFE,EAuyFI;AACjC,SAAK/W,qBAAL,CAA2B3G,eAA3B,CAA2CnB,MAA3C,GAAoD6e,IAApD;AACD,GAzyF8B;AA2yF/B6G,EAAAA,+BA3yF+B,6CA2yFG;AAChC,SAAK1G,qCAAL,CAA2C,IAA3C;;AACA,QAAI9K,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIuP,WAAW,GAAG/G,QAAQ,CAACyB,YAAT,EAAlB;;AACA,QAAIgQ,eAAe,GAAG,IAAtB;AACA9qB,IAAAA,oBAAoB,GAAGogB,WAAW,GAAG0K,eAArC;;AAEA,QAAIC,KAAK,GAAG,OAAO,gBAAP,GAA0B3K,WAA1B,GAAwC,IAAxC,GAA+C,IAA/C,GAAsD,WAAtD,GAAoEA,WAApE,GAAkF,KAAlF,GAA0F0K,eAA1F,GAA4G,KAA5G,GAAoH9qB,oBAAhI;;AACA,SAAK4qB,4BAAL,CAAkCG,KAAlC;AACD,GApzF8B;AAszF/BC,EAAAA,0BAtzF+B,sCAszFJpR,EAtzFI,EAszFA;AAC7BzZ,IAAAA,gBAAgB,GAAGyZ,EAAnB;AACD,GAxzF8B;AA0zF/BqR,EAAAA,2BA1zF+B,uCA0zFH9U,KA1zFG,EA0zFI;AACjC,QAAIlW,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FkK,cAA7F,CAA4GC,UAA5G,IAA0H,KAA9H,EAAqI;AACnI,UAAIsD,UAAU,GAAG/U,KAAK,CAACyD,EAAvB;AACA,UAAIuR,aAAa,GAAGhV,KAAK,CAACpE,IAA1B;AACA,UAAIqZ,aAAa,GAAGjV,KAAK,CAAC4O,YAA1B;AACA,UAAItS,aAAa,GAAG0D,KAAK,CAAC6O,YAA1B;AAEA,UAAIC,QAAQ,GAAGhlB,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FC,iBAA5G;;AACA,UAAIrE,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AAEA,UAAIoU,QAAQ,CAACvR,SAAT,IAAsBwX,UAA1B,EAAsC;AACpCjrB,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkC6a,qBAAlC,GAA0DrP,oCAA1D,CAA+F,KAA/F;AACA/b,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkC6a,qBAAlC,GAA0DpH,wBAA1D;;AACA,YAAImH,aAAJ,EAAmB;AACjB,cAAI,CAAC3Y,aAAL,EAAoB;AAClB4G,YAAAA,QAAQ,CAAC9F,cAAT,CAAwB8F,QAAQ,CAAClB,aAAT,EAAxB,EAAkDpG,IAAlD,IAA0DoZ,aAA1D;AACA,iBAAK/Y,SAAL,CAAe,gCAAgC+Y,aAAhC,GAAgD,wBAAhD,GAA2E9R,QAAQ,CAAC9F,cAAT,CAAwB8F,QAAQ,CAAClB,aAAT,EAAxB,EAAkDpG,IAA5I;;AACAsH,YAAAA,QAAQ,CAACtB,gBAAT;AACD,WAJD,MAIO,IAAItF,aAAJ,EAAmB;AACxB,iBAAKL,SAAL,CAAe,yDAAf;;AACAiH,YAAAA,QAAQ,CAACtB,gBAAT;AACD;AACF,SATD,MASO;AACL,eAAK3F,SAAL,CAAe,uEAAf;;AACAiH,UAAAA,QAAQ,CAACtB,gBAAT;AACD;AACF;AACF;AACF,GAt1F8B;AAw1F/BuT,EAAAA,wBAx1F+B,sCAw1FJ;AACzB,QAAIrG,QAAQ,GAAGhlB,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EyG,gBAA5E,CAA6FC,iBAA5G;;AACA,QAAIrE,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AAEA,SAAK,IAAIyC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG+F,QAAQ,CAAC9F,cAAT,CAAwBC,MAApD,EAA4DF,KAAK,EAAjE,EAAqE;AACnE,UAAI+F,QAAQ,CAAC9F,cAAT,CAAwBD,KAAxB,EAA+BI,SAA/B,IAA4CuR,QAAQ,CAACvR,SAAzD,EAAoE;AAClE,YAAI2F,QAAQ,CAAC9F,cAAT,CAAwBD,KAAxB,EAA+BvB,IAA/B,IAAuC/R,oBAA3C,EAAiE;AAC/DqZ,UAAAA,QAAQ,CAAC9F,cAAT,CAAwBD,KAAxB,EAA+BvB,IAA/B,IAAuC/R,oBAAvC;AACA,eAAKmkB,qCAAL,CAA2C,KAA3C;AACA,eAAKC,+BAAL,CAAqC,KAArC;AACA9hB,UAAAA,cAAc,GAAG,KAAjB;AACA,eAAK8P,SAAL,CAAe,4CAA4CpS,oBAA5C,GAAmE,qBAAnE,GAA2FqZ,QAAQ,CAAC9F,cAAT,CAAwBD,KAAxB,EAA+BvB,IAAzI;AAEA,cAAI+S,YAAY,GAAG;AAAElL,YAAAA,EAAE,EAAEzZ,gBAAN;AAAwB4R,YAAAA,IAAI,EAAE/R,oBAA9B;AAAoD+kB,YAAAA,YAAY,EAAE,IAAlE;AAAwEC,YAAAA,YAAY,EAAE;AAAtF,WAAnB;AACA/kB,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,EAA1E,EAA8EkO,YAA9E;AACD,SATD,MASO;AACLxiB,UAAAA,cAAc,GAAG,IAAjB;AACArC,UAAAA,wBAAwB,CAACuQ,QAAzB,CAAkC6a,qBAAlC,GAA0Drb,gCAA1D,CAA2F,IAA3F;AACD;;AAED;AACD;AACF;AACF,GA/2F8B;AAi3F/Bub,EAAAA,+CAj3F+B,2DAi3FiBtN,WAj3FjB,EAi3F8BjJ,cAj3F9B,EAi3F8CwW,oBAj3F9C,EAi3FwE;AAAA,QAA1BA,oBAA0B;AAA1BA,MAAAA,oBAA0B,GAAH,CAAG;AAAA;;AACrG,SAAKtH,0BAAL;;AACA,QAAI7K,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAI4a,YAAY,GAAGpS,QAAQ,CAAC9F,cAA5B;;AACA,QAAImY,YAAY,GAAGrS,QAAQ,CAACwF,UAAT,EAAnB;;AACA,QAAId,KAAK,GAAG1E,QAAQ,CAAClB,aAAT,EAAZ;;AAEAsT,IAAAA,YAAY,CAACC,YAAD,CAAZ,CAA2BzW,YAA3B,CAAwCD,cAAxC,EAAwDoI,aAAxD,GAAwE,IAAxE;AACAqO,IAAAA,YAAY,CAACC,YAAD,CAAZ,CAA2BzW,YAA3B,CAAwCD,cAAxC,EAAwD8K,SAAxD,GAAoE3f,gBAApE;AACAsrB,IAAAA,YAAY,CAACC,YAAD,CAAZ,CAA2BzW,YAA3B,CAAwCD,cAAxC,EAAwDuI,WAAxD,GAAsEkO,YAAY,CAAC1N,KAAD,CAAZ,CAAoBvU,UAA1F;AAEAvJ,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8DuG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmHkU,YAAY,CAACC,YAAD,CAA/H;AAEA,SAAKvH,qCAAL,CAA2C,KAA3C;AACA,SAAKC,+BAAL,CAAqC,KAArC;AACA,SAAKhS,SAAL,CAAe,gFAAf;AACA,QAAI0S,YAAY,GAAG;AAAElL,MAAAA,EAAE,EAAEzZ,gBAAN;AAAwB4R,MAAAA,IAAI,EAAE/R,oBAA9B;AAAoD+kB,MAAAA,YAAY,EAAE,KAAlE;AAAyEC,MAAAA,YAAY,EAAE;AAAvF,KAAnB;AACA/kB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,EAA1E,EAA8EkO,YAA9E;AACD,GAn4F8B;AAq4F/B6G,EAAAA,8BAr4F+B,4CAq4FE;AAC/B,QAAItS,QAAQ,GAAGpZ,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAI4a,YAAY,GAAGpS,QAAQ,CAAC9F,cAA5B;;AACA,QAAImY,YAAY,GAAGrS,QAAQ,CAACwF,UAAT,EAAnB;;AACA,QAAI+M,eAAe,GAAGH,YAAY,CAACC,YAAD,CAAZ,CAA2BzW,YAA3B,CAAwCzB,MAA9D;AACA,QAAIqY,gBAAgB,GAAG,CAAvB;;AAEA,SAAK,IAAIvY,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGmY,YAAY,CAACC,YAAD,CAAZ,CAA2BzW,YAA3B,CAAwCzB,MAApE,EAA4EF,KAAK,EAAjF,EAAqF;AACnF,UAAImY,YAAY,CAACC,YAAD,CAAZ,CAA2BzW,YAA3B,CAAwC3B,KAAxC,EAA+C8J,aAAnD,EAAkE;AAChEyO,QAAAA,gBAAgB;AACjB;AACF;;AAED,QAAIA,gBAAgB,IAAID,eAAxB,EAAyC;AACvC,WAAKxZ,SAAL,CAAe,mGAAf;AACD,KAFD,MAEO;AACL,WAAKsY,mCAAL,CAAyC,KAAzC,EAAgDe,YAAY,CAACC,YAAD,CAA5D,EAA4EA,YAA5E,EAA0F,IAA1F;AACD;AACF,GAv5F8B;AAy5F/B;AAEA;AACArH,EAAAA,4BA55F+B,wCA45FFpU,MA55FE,EA45FM;AACnC,SAAK9C,sBAAL,CAA4B7D,UAA5B,CAAuC4G,MAAvC,GAAgDD,MAAhD;AACD,GA95F8B;AAg6F/B6b,EAAAA,4BAh6F+B,wCAg6FF9H,IAh6FE,EAg6FI;AACjC,SAAK7W,sBAAL,CAA4B9G,UAA5B,CAAuClB,MAAvC,GAAgD6e,IAAhD;AACD,GAl6F8B;AAm6F/B;AAEA5R,EAAAA,SAAS,EAAE,mBAAU2Z,OAAV,EAAmBC,IAAnB,EAA4CC,UAA5C,EAA+D;AAAA;;AAAA,QAA5CD,IAA4C;AAA5CA,MAAAA,IAA4C,GAArCnqB,gBAAqC;AAAA;;AAAA,QAAnBoqB,UAAmB;AAAnBA,MAAAA,UAAmB,GAAN,IAAM;AAAA;;AACxE,SAAK7e,OAAL,CAAa8C,MAAb,GAAsB,IAAtB;AACA,SAAK7C,YAAL,CAAkBlI,MAAlB,GAA2B4mB,OAA3B;AACA,QAAIG,SAAS,GAAG,IAAhB;AACA,QAAIrH,IAAI,GAAG5kB,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4F,eAA9D,EAAX;;AAEA,QAAIwO,IAAI,IAAI,CAAZ,EAAe;AACb;AACA,UAAI5kB,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEC,MAAnE,GAA4E,CAA5E,IAAiFvT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoD0C,cAApD,CAAmEtT,wBAAwB,CAACuQ,QAAzB,CAAkCK,eAAlC,GAAoDsH,aAApD,EAAnE,EAAwIU,KAA7N,EAAoO;AAClO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKvL,aAAL,CAAmB4C,MAAnB,GAA4B,KAA5B;AACAU,QAAAA,UAAU,CAAC,YAAY;AACrBsb,UAAAA,SAAS,CAAC9e,OAAV,CAAkB8C,MAAlB,GAA2B,KAA3B;AACD,SAFS,EAEP8b,IAFO,CAAV,CAVkO,CAalO;AACD,OAdD,MAcO;AACL,YAAIC,UAAJ,EAAgB;AACd,eAAK3e,aAAL,CAAmB4C,MAAnB,GAA4B,IAA5B;AACA8I,UAAAA,YAAY,CAACtX,UAAD,CAAZ;AACAA,UAAAA,UAAU,GAAGkP,UAAU,CAAC,YAAM;AAC5B,YAAA,MAAI,CAACub,aAAL;AACD,WAFsB,EAEpBxqB,oBAFoB,CAAvB;AAGD,SAND,MAMO;AACL,eAAK2L,aAAL,CAAmB4C,MAAnB,GAA4B,KAA5B;AACAU,UAAAA,UAAU,CAAC,YAAY;AACrBsb,YAAAA,SAAS,CAAC9e,OAAV,CAAkB8C,MAAlB,GAA2B,KAA3B;AACD,WAFS,EAEP8b,IAFO,CAAV;AAGD;AACF;AACF,KA9BD,CA8BE;AA9BF,SA+BK;AACH,YAAIC,UAAJ,EAAgB;AACd,eAAK3e,aAAL,CAAmB4C,MAAnB,GAA4B,IAA5B;AACA8I,UAAAA,YAAY,CAACtX,UAAD,CAAZ;AACAA,UAAAA,UAAU,GAAGkP,UAAU,CAAC,YAAM;AAC5B,YAAA,MAAI,CAACub,aAAL;AACD,WAFsB,EAEpBxqB,oBAFoB,CAAvB;AAGD,SAND,MAMO;AACL,eAAK2L,aAAL,CAAmB4C,MAAnB,GAA4B,KAA5B;AACAU,UAAAA,UAAU,CAAC,YAAY;AACrBsb,YAAAA,SAAS,CAAC9e,OAAV,CAAkB8C,MAAlB,GAA2B,KAA3B;AACD,WAFS,EAEP8b,IAFO,CAAV;AAGD;AACF;AACF,GAx9F8B;AA09F/BG,EAAAA,aA19F+B,2BA09Ff;AACdna,IAAAA,OAAO,CAACyG,KAAR,CAAc,uBAAd;AACA,SAAKrL,OAAL,CAAa8C,MAAb,GAAsB,KAAtB;AACA8I,IAAAA,YAAY,CAACtX,UAAD,CAAZ;AACD,GA99F8B;AAg+F/B0qB,EAAAA,gBAAgB,EAAE,0BAAUC,OAAV,EAAmBlW,KAAnB,EAA0B;AAC1C,SAAKvJ,aAAL,CAAmB5C,YAAnB,CAAgCkG,MAAhC,GAAyC,IAAzC;AACA,SAAKtD,aAAL,CAAmB3C,WAAnB,CAA+B9E,MAA/B,GAAwCknB,OAAxC;AACA,SAAKzf,aAAL,CAAmB1C,SAAnB,CAA6B/E,MAA7B,GAAsCgR,KAAtC;AACD,GAp+F8B;AAs+F/BmW,EAAAA,cAt+F+B,4BAs+Fd;AACfrsB,IAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D8b,WAA9D;AACD,GAx+F8B;AA0+F/B1L,EAAAA,oBA1+F+B,gCA0+FV2L,SA1+FU,EA0+FC;AAC9B,QAAIpW,KAAK,GAAGnW,wBAAwB,CAACuQ,QAAzB,CAAkCC,yBAAlC,GAA8D4F,eAA9D,EAAZ;;AAEA,QAAID,KAAK,IAAI,CAAb,EAAgB;AACd;AACA,UAAID,KAAK,GAAG;AAAEmP,QAAAA,IAAI,EAAEkH;AAAR,OAAZ;AACAvsB,MAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,EAA1E,EAA8ET,KAA9E;AACD,KAJD,MAIO,IAAIC,KAAK,IAAI,CAAb,EAAgB;AACrB;AACA,UAAI,KAAK5G,SAAT,EAAoB;AAClB,YAAI2G,KAAK,GAAG;AAAEmP,UAAAA,IAAI,EAAEkH;AAAR,SAAZ;AACAvsB,QAAAA,wBAAwB,CAACuQ,QAAzB,CAAkCQ,0BAAlC,GAA+D4F,UAA/D,CAA0E,EAA1E,EAA8ET,KAA9E;AACD;AACF;AACF;AAx/F8B,CAAT,CAAxB","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar DamageDecisionResult = 0;\r\nvar GamePlayReferenceManager = null;\r\nvar businessDetailNodes = [];\r\nvar SenderDamagingID = \"\";\r\nvar businessTakeOverNodes = [];\r\nvar businessDamagingNodes = [];\r\nvar oneQuestionNodes = [];\r\nvar selectPlayerProfitNodes = [];\r\nvar selectedPlayerTakeOver = [];\r\nvar selectedPlayerDamaging = [];\r\nvar businessDetailPartnershipNodes = [];\r\nvar businessDetailPayDayNodes = [];\r\nvar PartnerShipData = null;\r\nvar PartnerShipOfferReceived = false;\r\nvar CancelledID = [];\r\nvar StartGameCash = 20000;\r\nvar SelectedBusinessPayDay = false;\r\nvar HMAmount = 0;\r\nvar BMAmount = 0;\r\nvar BMLocations = 0;\r\nvar SelectedBusinessIndex = 0;\r\nvar TurnOverForInvest = false;\r\nvar BusinessSetupCardFunctionality = false;\r\nvar GivenCashBusiness = 0;\r\nvar StartAnyBusinessWithoutCash = false;\r\nvar PreviousCash = 0;\r\nvar TimeoutRef;\r\nvar CompletionWindowTime = 8000;\r\nvar LongMessageTime = 5000;\r\nvar ShortMessageTime = 2500;\r\nvar globalTurnTimer = 30;\r\nvar PayDayInfo = \"\";\r\nvar InvestSellInfo = \"\";\r\nvar TimerTimeout;\r\nvar DoubleDayBusinessHB = 0;\r\nvar DoubleDayBusinessBM = 0;\r\nvar GiveProfitUserID = \"\";\r\nvar TotalPayDay = 0;\r\nvar BankRuptedCard = false;\r\n// var CompletionWindowTime = 500;//8000\r\n// var LongMessageTime = 250;//5000\r\n// var ShortMessageTime = 50;//2500\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n  None: 0,\r\n  TenThousand: 10000,\r\n  TentyThousand: 20000,\r\n  ThirtyThousand: 30000,\r\n  FortyThousand: 40000,\r\n  FiftyThousand: 50000,\r\n  Other: 6,\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI = cc.Class({\r\n  name: \"BusinessSetupUI\",\r\n\r\n  properties: {\r\n    PlayerNameUI: {\r\n      displayName: \"PlayerNameUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player name\",\r\n    },\r\n    PlayerCashUI: {\r\n      displayName: \"PlayerCashUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player cash\",\r\n    },\r\n    BusinessTypeTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business type\",\r\n    },\r\n    BusinessNameTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business name\",\r\n    },\r\n    BusinessTypeLabel: {\r\n      displayName: \"BusinessTypeLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"reference for business type editbox\",\r\n    },\r\n    BusinessNameLabel: {\r\n      displayName: \"BusinessNameLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"referece for business name editbox\",\r\n    },\r\n    HomeBasedNodeUI: {\r\n      displayName: \"HomeBasedNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for home based business\",\r\n    },\r\n    BrickAndMortarNodeUI: {\r\n      displayName: \"BrickAndMortarNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for brick and mortar business\",\r\n    },\r\n    TimerUI: {\r\n      displayName: \"TimerUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the label for timer\",\r\n    },\r\n    TimerNode: {\r\n      displayName: \"TimerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for timer node in business setup\",\r\n    },\r\n    BusinessSetupNode: {\r\n      displayName: \"BusinessSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for business setup\",\r\n    },\r\n    LoanSetupNode: {\r\n      displayName: \"LoanSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for loan setup\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: LoanAmountEnum,\r\n      default: LoanAmountEnum.None,\r\n      serializable: true,\r\n      tooltip: \"loan amount taken by player (state machine)\",\r\n    },\r\n    LoanAmountLabel: {\r\n      displayName: \"LoanAmountLabel\",\r\n      type: [cc.Node],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Reference for all labels of amounts in loan UI\",\r\n    },\r\n    WaitingStatusNode: {\r\n      displayName: \"WaitingStatusNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for waiting status screen on initial business setup\",\r\n    },\r\n    ExitButtonNode: {\r\n      displayName: \"ExitButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for exit button node in business setup\",\r\n    },\r\n    AddButtonNode: {\r\n      displayName: \"AddButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for Add Cash button node in business setup\",\r\n    },\r\n    AddCashScreen: {\r\n      displayName: \"AddCashScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCashScreen node in business setup\",\r\n    },\r\n    AddCashLabel: {\r\n      displayName: \"AddCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCash label in business setup\",\r\n    },\r\n    AddCashEditBox: {\r\n      displayName: \"AddCashEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCash editBox in business setup\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor//\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI = cc.Class({\r\n  name: \"TurnDecisionSetupUI\",\r\n\r\n  properties: {\r\n    MarketingEditBox: {\r\n      displayName: \"MarketingEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of marketing node\",\r\n    },\r\n    GoldEditBox: {\r\n      displayName: \"GoldEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest gold node\",\r\n    },\r\n    StockEditBox: {\r\n      displayName: \"StockEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest stock node\",\r\n    },\r\n    CashAmountLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to cash node\",\r\n    },\r\n    ExpandBusinessNode: {\r\n      displayName: \"ExpandBusinessNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for expnad business node\",\r\n    },\r\n    ExpandBusinessScrollContent: {\r\n      displayName: \"ExpandBusinessScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for content node of scroll view of expand business node\",\r\n    },\r\n    ExpandBusinessPrefab: {\r\n      displayName: \"ExpandBusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for prefab of expand business node\",\r\n    },\r\n    TimerText: {\r\n      displayName: \"TimerText\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for label of timer text for turn decision\",\r\n    },\r\n    BlockerNode: {\r\n      displayName: \"BlockerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for node of blocker for turn decision\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n  None: 0,\r\n  StockInvest: 1,\r\n  GoldInvest: 2,\r\n  StockSell: 3,\r\n  GoldSell: 4,\r\n  Other: 5,\r\n});\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI = cc.Class({\r\n  name: \"InvestSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of invest&sell node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Dice Result of invest&sell node\",\r\n    },\r\n    PriceTitleLabel: {\r\n      displayName: \"PriceTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price Title of invest&sell node\",\r\n    },\r\n    PriceValueLabel: {\r\n      displayName: \"PriceValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price value of invest&sell node\",\r\n    },\r\n    BuyOrSellTitleLabel: {\r\n      displayName: \"BuyOrSellTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BuyOrSell Title of invest&sell node\",\r\n    },\r\n    TotalAmountTitleLabel: {\r\n      displayName: \"TotalAmountTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount Title of invest&sell node\",\r\n    },\r\n    TotalAmountValueLabel: {\r\n      displayName: \"TotalAmountValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount Value of invest&sell node\",\r\n    },\r\n    ButtonNameLabel: {\r\n      displayName: \"ButtonName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of button name of invest&sell node\",\r\n    },\r\n    InvestState: {\r\n      displayName: \"InvestState\",\r\n      type: InvestEnum,\r\n      default: InvestEnum.None,\r\n      serializable: true,\r\n    },\r\n    AmountEditBox: {\r\n      displayName: \"AmountEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI = cc.Class({\r\n  name: \"SellBusinessUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessSellPrefab: {\r\n      displayName: \"BusinessSellPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessSellPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI = cc.Class({\r\n  name: \"PayDayUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of PayDay node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of PayDay node\",\r\n    },\r\n    HomeBasedNumberLabel: {\r\n      displayName: \"HomeBasedNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedNumber node\",\r\n    },\r\n    BMNumberLabel: {\r\n      displayName: \"BrickMortarNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarNumber node\",\r\n    },\r\n    BMNumberLocationLabel: {\r\n      displayName: \"BrickMortarLocations\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarLocations node\",\r\n    },\r\n    PassedPayDayCountLabel: {\r\n      displayName: \"PassedPayDayCountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of PassedPayDayCountLabel node\",\r\n    },\r\n    HomeBasedBtn: {\r\n      displayName: \"HomeBasedBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedBtn node\",\r\n    },\r\n    BMBtn: {\r\n      displayName: \"BrickMortarBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarBtn node\",\r\n    },\r\n    LoanBtn: {\r\n      displayName: \"LoanBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanBtn node\",\r\n    },\r\n    MainPanelNode: {\r\n      displayName: \"MainPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of MainPanel node\",\r\n    },\r\n    ResultPanelNode: {\r\n      displayName: \"ResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultPanel node\",\r\n    },\r\n    LoanResultPanelNode: {\r\n      displayName: \"LoanResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanResultPanelNode node\",\r\n    },\r\n    ResultScreenTitleLabel: {\r\n      displayName: \"ResultScreenTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultScreenTitle node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of DiceResult node\",\r\n    },\r\n    TotalBusinessLabel: {\r\n      displayName: \"TotalBusinessLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalBusiness node\",\r\n    },\r\n    TotalAmountLabel: {\r\n      displayName: \"TotalAmountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount node\",\r\n    },\r\n    SkipLoanButton: {\r\n      displayName: \"SkipLoanButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of SkipLoanButton node\",\r\n    },\r\n    LoanFotterLabel: {\r\n      displayName: \"LoanFotterLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanFotterLabel node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI = cc.Class({\r\n  name: \"InvestUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Invest node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Invest node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Invest node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Invest node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Invest node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI = cc.Class({\r\n  name: \"BuyOrSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of BuyOrSell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of BuyOrSell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of BuyOrSell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of BuyOrSell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI = cc.Class({\r\n  name: \"OneQuestionUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n    WaitingScreen: {\r\n      displayName: \"WaitingScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreen of OneQuestion node\",\r\n    },\r\n    WaitingScreenLabel: {\r\n      displayName: \"WaitingScreenLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreenLabel of OneQuestion node\",\r\n    },\r\n    DecisionTitleLabel: {\r\n      displayName: \"DecisionTitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    DecisionCashLabel: {\r\n      displayName: \"DecisionCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    DecisionPlayerNameLabel: {\r\n      displayName: \"DecisionPlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DecisionQuestionLabel: {\r\n      displayName: \"DecisionQuestionLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player question of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for PartnershipUI-------------------------//\r\nvar PartnershipUI = cc.Class({\r\n  name: \"PartnershipUI\",\r\n  properties: {\r\n    WaitingStatusScreen: {\r\n      displayName: \"WaitingStatusScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the waiting screen node of partnership ui\",\r\n    },\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PartnerShipPrefab: {\r\n      displayName: \"PartnerShipPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerName: {\r\n      displayName: \"DecisionPlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerCash: {\r\n      displayName: \"DecisionPlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionDescription: {\r\n      displayName: \"DecisionDescription\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for ResultUI-------------------------//\r\nvar ResultUI = cc.Class({\r\n  name: \"ResultUI\",\r\n  properties: {\r\n    ResultScreen: {\r\n      displayName: \"ResultScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    StatusLabel: {\r\n      displayName: \"StatusLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    BodyLabel: {\r\n      displayName: \"BodyLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for BusinessPayDaySetupUI-------------------------//\r\nvar BusinessPayDaySetupUI = cc.Class({\r\n  name: \"BusinessPayDaySetupUI\",\r\n  properties: {\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleContentLabel: {\r\n      displayName: \"TitleContentLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    BusinessPrefab: {\r\n      displayName: \"BusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SelectPlayerForProfitSetupUI-------------------------//\r\nvar SelectPlayerForProfitSetupUI = cc.Class({\r\n  name: \"SelectPlayerForProfitSetupUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SelectPlayerGeneric-------------------------//\r\nvar SelectPlayerGeneric = cc.Class({\r\n  name: \"SelectPlayerGeneric\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SelectBusinessGeneric-------------------------//\r\nvar SelectBusinessGeneric = cc.Class({\r\n  name: \"SelectBusinessGeneric\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessPrefab: {\r\n      displayName: \"BusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for DamagingInformationDecisionSetup-------------------------//\r\nvar DamagingInformationDecisionSetup = cc.Class({\r\n  name: \"DamagingInformationDecisionSetup\",\r\n  properties: {\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    DiceResultScreen: {\r\n      displayName: \"DiceResultScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    BusinessSelectScreen: {\r\n      displayName: \"BusinessSelectScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DamageBusinessSelect: {\r\n      default: {},\r\n      type: SelectBusinessGeneric,\r\n      serializable: true,\r\n    },\r\n\r\n    DiceResultLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for BuyHalfBusinessSetupUI-------------------------//\r\nvar BuyHalfBusinessSetupUI = cc.Class({\r\n  name: \"BuyHalfBusinessSetupUI\",\r\n  properties: {\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleLabel: {\r\n      displayName: \"TitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount = \"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount = \"\";\r\nvar EnterBuySellAmount = \"\";\r\nvar StockBusinessName = \"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName = \"\";\r\n\r\nvar HBDiceCounter = 0;\r\nvar BMDiceCounter = 0;\r\nvar NextHalfPayDay = false;\r\n\r\nvar HomeBasedPaymentCompleted = false;\r\nvar BrickMortarPaymentCompleted = false;\r\nvar LoanPayed = false;\r\nvar TotalPayDayAmount = 0;\r\nvar DoublePayDay = false;\r\n\r\nvar GameplayUIManager = cc.Class({\r\n  name: \"GameplayUIManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    BusinessSetupData: {\r\n      default: null,\r\n      type: BusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessSetupUI class\",\r\n    },\r\n    TurnDecisionSetupUI: {\r\n      default: null,\r\n      type: TurnDecisionSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of TurnDecisionSetupUI class\",\r\n    },\r\n    InvestSellSetupUI: {\r\n      default: null,\r\n      type: InvestSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    PayDaySetupUI: {\r\n      default: null,\r\n      type: PayDayUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    SellBusinessSetupUI: {\r\n      default: {},\r\n      type: SellBusinessUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SellBusinessUI class\",\r\n    },\r\n    InvestSetupUI: {\r\n      default: {},\r\n      type: InvestUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestUI class\",\r\n    },\r\n    BuyOrSellSetupUI: {\r\n      default: {},\r\n      type: BuyOrSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyOrSellUI class\",\r\n    },\r\n    OneQuestionSetupUI: {\r\n      default: {},\r\n      type: OneQuestionUI,\r\n      serializable: true,\r\n      tooltip: \"reference of OneQuestionUI class\",\r\n    },\r\n    PartnershipSetupUI: {\r\n      default: {},\r\n      type: PartnershipUI,\r\n      serializable: true,\r\n      tooltip: \"reference of PartnershipUI class\",\r\n    },\r\n    ResultSetupUI: {\r\n      default: {},\r\n      type: ResultUI,\r\n      serializable: true,\r\n      tooltip: \"reference of ResultUI class\",\r\n    },\r\n    BusinessPayDayUISetup: {\r\n      default: {},\r\n      type: BusinessPayDaySetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessPayDaySetupUI class\",\r\n    },\r\n    SelectPlayerForProfitUI: {\r\n      default: {},\r\n      type: SelectPlayerForProfitSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerForProfitSetupUI class\",\r\n    },\r\n\r\n    SelectPlayerTakeOverSetup: {\r\n      default: {},\r\n      type: SelectPlayerGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerGeneric class\",\r\n    },\r\n\r\n    SelectPlayerDamagingSetup: {\r\n      default: {},\r\n      type: SelectPlayerGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerGeneric class\",\r\n    },\r\n\r\n    DecisionDamagingSetup: {\r\n      default: {},\r\n      type: DamagingInformationDecisionSetup,\r\n      serializable: true,\r\n      tooltip: \"reference of DamagingInformationDecisionSetup class\",\r\n    },\r\n\r\n    SelectBusinessTakeOver: {\r\n      default: {},\r\n      type: SelectBusinessGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectBusinessGeneric class\",\r\n    },\r\n    BuyHalfBusinessUISetup: {\r\n      default: {},\r\n      type: BuyHalfBusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyHalfBusinessSetupUI class\",\r\n    },\r\n    PopUpUI: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    PopUpUILabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for pop up screen\",\r\n    },\r\n    PopUpUIButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    BusinessSetupNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for business setup screen\",\r\n    },\r\n    GameplayUIScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for gameplay ui screen\",\r\n    },\r\n    DecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Decision screen\",\r\n    },\r\n    InvestSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest & sell screen\",\r\n    },\r\n    PayDayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for PayDay screen\",\r\n    },\r\n    SellBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellBusiness screen\",\r\n    },\r\n    InvestScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest screen\",\r\n    },\r\n    BuyOrSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BuyOrSell screen\",\r\n    },\r\n    BusinessDoublePayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BusinessDoublePay screen\",\r\n    },\r\n    OneQuestionSpaceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionSpace screen\",\r\n    },\r\n    OneQuestionDecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionDecision screen\",\r\n    },\r\n    SelectPlayerForProfitScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectPlayerForProfit screen\",\r\n    },\r\n    SelectPlayerTakeOverScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectPlayerTakeOver screen\",\r\n    },\r\n    SelectPlayerDamagingScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectPlayerDamaging screen\",\r\n    },\r\n    SelectBusinessTakeOverScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectBusinessTakeOver screen\",\r\n    },\r\n    InsufficientBalanceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for InsufficientBalanceScreen screen\",\r\n    },\r\n    TempDiceText: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for dice\",\r\n    },\r\n    LeaveRoomButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n    AvatarSprites: {\r\n      default: [],\r\n      type: cc.SpriteFrame,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n    @summary Resets this class global variables and other necessary data onLoad\r\n   **/\r\n  ResetAllData() {\r\n    DoubleDayBusinessHB = 0;\r\n    DoubleDayBusinessBM = 0;\r\n    NextHalfPayDay = false;\r\n    GameManager = null;\r\n    GamePlayReferenceManager = null;\r\n    businessDetailNodes = [];\r\n    businessTakeOverNodes = [];\r\n    businessDamagingNodes = [];\r\n    DamageDecisionResult = 0;\r\n    oneQuestionNodes = [];\r\n    SenderDamagingID = \"\";\r\n    selectPlayerProfitNodes = [];\r\n    selectedPlayerTakeOver = [];\r\n    selectedPlayerDamaging = [];\r\n    businessDetailPartnershipNodes = [];\r\n    businessDetailPayDayNodes = [];\r\n    PartnerShipData = null;\r\n    PartnerShipOfferReceived = false;\r\n    CancelledID = [];\r\n    SelectedBusinessPayDay = false;\r\n    HMAmount = 0;\r\n    BMAmount = 0;\r\n    BMLocations = 0;\r\n    SelectedBusinessIndex = 0;\r\n    TurnOverForInvest = false;\r\n    BusinessSetupCardFunctionality = false;\r\n    GivenCashBusiness = 0;\r\n    StartAnyBusinessWithoutCash = false;\r\n    PreviousCash = 0;\r\n    TimeoutRef = null;\r\n    GiveProfitUserID = \"\";\r\n    BankRuptedCard = false;\r\n    InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n    //turn decisions\r\n    TempMarketingAmount = \"\";\r\n    TempHiringLawyer;\r\n\r\n    //buyorsell\r\n    GoldCashAmount = \"\";\r\n    EnterBuySellAmount = \"\";\r\n    StockBusinessName = \"\";\r\n    DiceResult = 0;\r\n    OnceOrShare;\r\n    LocationName = \"\";\r\n\r\n    HomeBasedPaymentCompleted = false;\r\n    BrickMortarPaymentCompleted = false;\r\n    LoanPayed = false;\r\n    TotalPayDayAmount = 0;\r\n    DoublePayDay = false;\r\n    TotalPayDay = 0;\r\n    HBDiceCounter = 0;\r\n    BMDiceCounter = 0;\r\n    PayDayInfo = \"\";\r\n    InvestSellInfo = \"\";\r\n  },\r\n\r\n  /**\r\n    @summary Resets turn variables for goldinvest/goldsold/stokcinvest/stocksold\r\n   **/\r\n  ResetTurnVariable() {\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n  },\r\n\r\n  /**\r\n    @summary check references of class/es needed.\r\n   **/\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n\r\n    if (!GameManager || GameManager == null) GameManager = require(\"GameManager\");\r\n  },\r\n\r\n  /**\r\n    @summary called when this node gets active\r\n   **/\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  /**\r\n    @summary called when this node gets deactive\r\n   **/\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  /**\r\n    @summary called when instance of the class is loaded\r\n   **/\r\n  onLoad() {\r\n    this.ResetAllData();\r\n    this.CheckReferences();\r\n\r\n    //declaring local variables\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n    this.IsBotTurn = false;\r\n    this.PayDayCount = 0;\r\n    this.DoublePayDayCount = 0;\r\n    this.IsBankrupted = false;\r\n    this.BankruptedAmount = 0;\r\n    this.AddCashAmount = \"\";\r\n    this.Timer = 0;\r\n    this.TimerStarted = false;\r\n    TimerTimeout = null;\r\n  },\r\n\r\n  ToggleScreen_InsufficientBalance(_state) {\r\n    this.InsufficientBalanceScreen.active = _state;\r\n  },\r\n\r\n  Exit___InsufficientBalance() {\r\n    this.ToggleScreen_InsufficientBalance(false);\r\n  },\r\n  //#region Spectate UI Setup\r\n  InitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = true;\r\n  },\r\n\r\n  CloseInitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = false;\r\n    // console.trace(\"closedddddddddddddddddddddddddddddddddddd\");\r\n  },\r\n\r\n  ToggleLeaveRoomButton_SpectateModeUI(_state) {\r\n    this.LeaveRoomButton.active = _state;\r\n  },\r\n\r\n  OnLeaveButtonClicked_SpectateModeUI() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(true);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"MainMenu\");\r\n    }, 500);\r\n  },\r\n  //#endregion\r\n\r\n  //#region BusinessSetup with loan\r\n  //Business setup ui//------------------------\r\n  ToggleCashAddScreen_BusinessSetup: function (_state) {\r\n    this.BusinessSetupData.AddCashScreen.active = _state;\r\n  },\r\n\r\n  EnableCashAdd_BusinessSetup: function () {\r\n    this.BusinessSetupData.AddCashEditBox.string = \"\";\r\n    this.AddCashAmount = \"\";\r\n    this.ToggleCashAddScreen_BusinessSetup(true);\r\n    this.BusinessSetupData.AddCashLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash;\r\n  },\r\n\r\n  OnCashAdd_BusinessSetup: function (_val) {\r\n    this.AddCashAmount = _val;\r\n  },\r\n\r\n  OnClickDoneCashAdd_BusinessSetup: function () {\r\n    this.ToggleCashAddScreen_BusinessSetup(false);\r\n    var _gamecash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n    var _amount = parseInt(this.AddCashAmount);\r\n    if (this.AddCashAmount != null && this.AddCashAmount != \"\" && this.AddCashAmount != undefined) {\r\n      if (_amount <= _gamecash) {\r\n        PlayerDataIntance.Cash += _amount;\r\n        console.log(PlayerDataIntance.Cash);\r\n        this.BusinessSetupData.PlayerCashUI.string = PlayerDataIntance.Cash.toString();\r\n        _gamecash -= _amount;\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _gamecash.toString();\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash, -1, -1);\r\n\r\n        this.ShowToast(\"Cash $\" + this.AddCashAmount + \" has been added.\");\r\n        this.BusinessSetupData.AddCashEditBox.string = \"\";\r\n        this.AddCashAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you do not have enough in game cash.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  StartNewBusiness_BusinessSetup: function (isFirstTime, insideGame = false, modeIndex = 0, _isBankrupted = false, _BankruptAmount = 0, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    //called first time form GameManager onload function\r\n    this.CheckReferences();\r\n    this.BusinessSetupNode.active = true;\r\n\r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.IsBankrupted = _isBankrupted;\r\n    this.BankruptedAmount = _BankruptAmount;\r\n\r\n    if (_isBankrupted) this.ResetTurnVariable();\r\n\r\n    this.Init_BusinessSetup(isFirstTime, insideGame, modeIndex, _isBankrupted);\r\n  },\r\n  Init_BusinessSetup: function (isFirstTime, insideGame = false, modeIndex = 0, _isBankrupted = false) {\r\n    PlayerDataIntance = new GameManager.PlayerData();\r\n    PlayerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n    PlayerBusinessDataIntance = new GameManager.BusinessInfo();\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n    this.BusinessSetupData.AddButtonNode.active = false;\r\n\r\n    if (isFirstTime) {\r\n      this.BusinessSetupData.ExitButtonNode.active = false;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n      PlayerDataIntance.Cash = StartGameCash;\r\n      this.BusinessSetupData.AddButtonNode.active = true;\r\n    }\r\n\r\n    this.ResetButtonStates_BusinessSetup();\r\n\r\n    if (insideGame) {\r\n      this.BusinessSetupData.ExitButtonNode.active = true;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID == GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID) {\r\n          InsideGameBusinessSetup = index;\r\n          PlayerDataIntance = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n          if (BusinessSetupCardFunctionality) {\r\n            if (StartAnyBusinessWithoutCash) {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = 0;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n              this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n            } else {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = GivenCashBusiness;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n              this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n            }\r\n          } else {\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n            this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);\r\n            this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      InsideGameBusinessSetup = -1;\r\n      this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n      this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n      this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n      this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.avatarId));\r\n    }\r\n  },\r\n  GetObj_BusinessSetup: function () {\r\n    return this.BusinessSetupData;\r\n  },\r\n  OnChangeName_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n    PlayerDataIntance.PlayerName = name;\r\n  },\r\n  OnChangeUID_BusinessSetup: function (UID) {\r\n    PlayerDataIntance.PlayerUID = UID;\r\n  },\r\n  OnChangAvatarID_BusinessSetup: function (UID) {\r\n    if (isNaN(UID) || UID == undefined) UID = 0;\r\n\r\n    PlayerDataIntance.AvatarID = UID;\r\n  },\r\n  OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessTypeTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessTypeDescription = name;\r\n  },\r\n  OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessNameTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessName = name;\r\n  },\r\n  ResetButtonStates_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BusinessTypeLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameTextUI = \"\";\r\n    this.BusinessSetupData.BusinessTypeTextUI = \"\";\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n  },\r\n  OnHomeBasedSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = true;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.HomeBased;\r\n  },\r\n  OnBrickMortarSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = true;\r\n\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.brickAndmortar;\r\n  },\r\n  OnChangeCash_BusinessSetup: function (amount) {\r\n    this.BusinessSetupData.PlayerCashUI.string = amount;\r\n    PlayerDataIntance.Cash = amount;\r\n  },\r\n  CalculateLoan_BusinessSetup: function (amount) {\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    if (!BusinessSetupCardFunctionality) {\r\n      for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n        if (PlayerDataIntance.NoOfBusiness[index].LoanTaken) {\r\n          _loanTaken = true;\r\n          _businessIndex = index;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_loanTaken) {\r\n        this.ShowToast(\"You have already taken loan of $\" + PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount, LongMessageTime);\r\n      } else {\r\n        if (PlayerDataIntance.Cash >= amount) {\r\n          this.ShowToast(\"You do not need loan, you have enough cash to buy current selected business.\", LongMessageTime);\r\n        } else {\r\n          this.BusinessSetupData.LoanSetupNode.active = true;\r\n          RequiredCash = Math.abs(parseInt(PlayerDataIntance.Cash) - amount);\r\n          this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(cc.Label).string = \"$\" + RequiredCash;\r\n        }\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanButtonClicked_BusinessSetup: function (event) {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar) {\r\n        this.CalculateLoan_BusinessSetup(50000);\r\n      } else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased) {\r\n        this.CalculateLoan_BusinessSetup(10000);\r\n      } else {\r\n        this.ShowToast(\"please select business between Home Based and brick & mortar.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanBackButtonClicked_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanSetupNode.active = false;\r\n  },\r\n  HighLightLoanSelection_BusinessSetup: function (index) {\r\n    for (var i = 0; i < this.BusinessSetupData.LoanAmountLabel.length; i++) {\r\n      if (index == i) this.BusinessSetupData.LoanAmountLabel[i].children[0].active = true;\r\n      else this.BusinessSetupData.LoanAmountLabel[i].children[0].active = false;\r\n    }\r\n  },\r\n  OnLoanAmountChoosed_01_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.Other;\r\n    this.HighLightLoanSelection_BusinessSetup(0);\r\n  },\r\n  OnLoanAmountChoosed_02_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TenThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(1);\r\n  },\r\n  OnLoanAmountChoosed_03_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TentyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(2);\r\n  },\r\n  OnLoanAmountChoosed_04_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.ThirtyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(3);\r\n  },\r\n  OnLoanAmountChoosed_05_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FortyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(4);\r\n  },\r\n  OnLoanAmountChoosed_06_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FiftyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(5);\r\n  },\r\n  OnTakenLoanClicked_BusinessSetup: function (event) {\r\n    if (this.BusinessSetupData.LoanAmount == LoanAmountEnum.Other) PlayerBusinessDataIntance.LoanAmount = RequiredCash;\r\n    else PlayerBusinessDataIntance.LoanAmount = parseInt(this.BusinessSetupData.LoanAmount);\r\n\r\n    PlayerBusinessDataIntance.LoanTaken = true;\r\n    this.OnLoanBackButtonClicked_BusinessSetup();\r\n    PlayerDataIntance.Cash = PlayerDataIntance.Cash + PlayerBusinessDataIntance.LoanAmount;\r\n    this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n  },\r\n\r\n  PushDataForPlayerLeft(_data) {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    if (_mode == 2) {\r\n      _playerDataIntance = new GameManager.PlayerData();\r\n      _playerDataIntance.Cash = 20000;\r\n      _playerDataIntance.PlayerID = _data.userID;\r\n      _playerDataIntance.PlayerName = _data.name;\r\n      _playerDataIntance.AvatarID = 0;\r\n      _playerDataIntance.HomeBasedAmount = 1;\r\n      _playerDataIntance.IsActive = false;\r\n      _playerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n      _playerBusinessDataIntance = new GameManager.BusinessInfo();\r\n      _playerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.HomeBased;\r\n      _playerBusinessDataIntance.BusinessTypeDescription = \"Saloon\";\r\n      _playerBusinessDataIntance.BusinessName = \"Eva Beauty\";\r\n      _playerDataIntance.NoOfBusiness.push(_playerBusinessDataIntance);\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1, _playerDataIntance);\r\n    }\r\n  },\r\n  SyncData: function (_data, _ID, _playerLeft = false) {\r\n    var _isSpectate = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"];\r\n\r\n    if (_isSpectate) {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetRealActors();\r\n    }\r\n\r\n    if (!_playerLeft) {\r\n      if (_ID != GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr) GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n    }\r\n\r\n    // console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length >= GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers) {\r\n      //setting room property to declare initial setup has been\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"InitialSetup\", true, true);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo, true);\r\n      this.BusinessSetupData.WaitingStatusNode.active = false;\r\n      this.BusinessSetupNode.active = false;\r\n      this.GameplayUIScreen.active = true;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n      console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n    }\r\n  },\r\n\r\n  PurchaseBusiness: function (_amount, _businessName, _isHomeBased) {\r\n    if (PlayerDataIntance.Cash < _amount && !StartAnyBusinessWithoutCash) {\r\n      this.ShowToast(\"You have not enough cash to buy this \" + _businessName + \" business.\", LongMessageTime);\r\n    } else {\r\n      if (_isHomeBased) {\r\n        if (PlayerDataIntance.HomeBasedAmount < 3) {\r\n          if (!StartAnyBusinessWithoutCash) {\r\n            PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n            this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n          }\r\n\r\n          this.StartGame = true;\r\n          PlayerDataIntance.HomeBasedAmount++;\r\n        } else {\r\n          this.StartGame = false;\r\n          this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n        }\r\n      } else {\r\n        if (!StartAnyBusinessWithoutCash) {\r\n          PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n          this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n        }\r\n        this.StartGame = true;\r\n        PlayerDataIntance.BrickAndMortarAmount++;\r\n      }\r\n    }\r\n  },\r\n\r\n  Exit_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      this.BusinessSetupNode.active = false;\r\n\r\n      if (PlayerBusinessDataIntance.LoanTaken) {\r\n        PlayerBusinessDataIntance.LoanTaken = false;\r\n        PlayerDataIntance.Cash = PlayerDataIntance.Cash - PlayerBusinessDataIntance.LoanAmount;\r\n        PlayerBusinessDataIntance.LoanAmount = 0;\r\n        this.ShowToast(\"Reverting back loan amount.\");\r\n      }\r\n    } else {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  InitialSetup_BusinessSetup: function () {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (this.IsBankrupted) {\r\n      PlayerDataIntance.IsBankrupt = true;\r\n      PlayerDataIntance.BankruptAmount = this.BankruptedAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()] = PlayerDataIntance;\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n    }\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      //setting player current data in custom properties when his/her turn overs\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n\r\n      if (!this.IsBankrupted) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1, PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n\r\n        var _data = { Data: { bankrupted: true, turn: GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(), PlayerDataMain: PlayerDataIntance } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(9, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else if (_mode == 1) {\r\n      //for AI\r\n      if (!this.IsBankrupted) {\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n        setTimeout(() => {\r\n          this.BusinessSetupData.WaitingStatusNode.active = false;\r\n          this.BusinessSetupNode.active = false;\r\n          this.GameplayUIScreen.active = true;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n        }, 1600);\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else {\r\n      console.error(\"no mode selected\");\r\n    }\r\n  },\r\n\r\n  StartNewSetup_DuringGame_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      this.ToggleDecision_TurnDecision(true);\r\n    } else {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  PayAmountToPlayGame: function () {\r\n    this.StartGame = false;\r\n\r\n    if (PlayerBusinessDataIntance.BusinessTypeDescription == \"\") this.ShowToast(\"please write a business type.\");\r\n    else if (PlayerBusinessDataIntance.BusinessName == \"\") this.ShowToast(\"please write a business name.\");\r\n    else {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.None || PlayerBusinessDataIntance.BusinessType == undefined) {\r\n        this.ShowToast(\"please select a business\");\r\n        return;\r\n      }\r\n\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased)\r\n        //if selected business is homebassed\r\n        this.PurchaseBusiness(10000, \"home\", true);\r\n      else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar)\r\n        //if selected business is brick and mortar\r\n        this.PurchaseBusiness(50000, \"brick and mortar\", false);\r\n\r\n      if (this.StartGame == true || this.IsBankrupted == true) {\r\n        PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n        if (InsideGameBusinessSetup != -1) {\r\n          //if start new business has not been called from inside game\r\n          this.StartNewSetup_DuringGame_BusinessSetup();\r\n        }\r\n        //if start new business has been called at start of game as initial setup\r\n        else {\r\n          this.InitialSetup_BusinessSetup();\r\n        }\r\n\r\n        //prtinting all values to console\r\n        for (var i = 0; i < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; i++) {\r\n          console.log(\"player name: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n          console.log(\"player ID: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n          console.log(\"Is player bot: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n          console.log(\"no of business of player (see below): \");\r\n          console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n          console.log(\"player cash: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n          console.log(\"player taken loan: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n          console.log(\"taken loan amount: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region TurnDecisionSetupUI\r\n  //TurnDecisionSetupUI//------------------------\r\n  ToggleDecision_TurnDecision: function (isactive) {\r\n    this.DecisionScreen.active = isactive;\r\n\r\n    var _active = isactive;\r\n\r\n    if (_active) {\r\n      _active = false;\r\n      this.TurnDecisionSetupUI.BlockerNode.active = false;\r\n      this.Timer = globalTurnTimer;\r\n      this.TimerStarted = true;\r\n      this.TurnDecisionSetupUI.TimerText.string = this.Timer + \" seconds are left to choose above options except 'Roll The Dice'\";\r\n      clearTimeout(TimerTimeout);\r\n      this.UpdateTimer();\r\n    } else {\r\n      clearTimeout(TimerTimeout);\r\n      this.Timer = 0;\r\n      this.TimerStarted = false;\r\n      this.TurnDecisionSetupUI.TimerText.string = \"\";\r\n      this.TurnDecisionSetupUI.BlockerNode.active = false;\r\n    }\r\n\r\n    this.UpdateCash_TurnDecision();\r\n  },\r\n\r\n  UpdateTimer() {\r\n    if (this.Timer > 0) {\r\n      this.Timer = this.Timer - 1;\r\n      this.TurnDecisionSetupUI.TimerText.string = this.Timer + \" seconds are left to choose above options except 'Roll The Dice'\";\r\n      TimerTimeout = setTimeout(() => {\r\n        this.UpdateTimer();\r\n      }, 1000);\r\n    } else {\r\n      clearTimeout(TimerTimeout);\r\n      this.Timer = 0;\r\n      this.TimerStarted = false;\r\n      this.TurnDecisionSetupUI.TimerText.string = \"Timer is over, you can select only 'Roll The Dice' now.\";\r\n      this.TurnDecisionSetupUI.BlockerNode.active = true;\r\n    }\r\n  },\r\n\r\n  UpdateCash_TurnDecision: function () {\r\n    this.TurnDecisionSetupUI.CashAmountLabel.string = \"$ \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].Cash;\r\n  },\r\n\r\n  OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    TempMarketingAmount = amount;\r\n  },\r\n\r\n  CheckMarketingAmountShare_CardFunctionality(_amount = 0) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n      if (_manager.PlayerGameInfo[index].CardFunctionality.HasMarketingCompany) {\r\n        this.RaiseEventForMarketingShare(_amount, _manager.PlayerGameInfo[index].PlayerUID, \"You have received market share of $\" + _amount + \" from your marketing company\");\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventForMarketingShare(_amnt, _id, _msg) {\r\n    var _data = { amount: _amnt, ID: _id, msg: _msg };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(22, _data);\r\n  },\r\n\r\n  OnMarketingAmountSelected_TurnDecision: function () {\r\n    if (TempMarketingAmount == \"\" || TempMarketingAmount == null) {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      this.marketingAmount = parseInt(TempMarketingAmount);\r\n      console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n\r\n      //if player entered amount is greater than total cash he owns\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= this.marketingAmount) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - this.marketingAmount;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount + this.marketingAmount;\r\n        this.ShowToast(\r\n          \"you successfully marketed amount of $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount + \" , remaining cash is $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + \".\",\r\n          LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n        this.CheckMarketingAmountShare_CardFunctionality(this.marketingAmount);\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you don't have enough money.\");\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      }\r\n    }\r\n  },\r\n\r\n  OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n    // if player has more than 5000$\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus) {\r\n      this.ShowToast(\"you have already hired a lawyer.\");\r\n    } else {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= 5000) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus = true;\r\n        TempHiringLawyer = true;\r\n        console.log(TempHiringLawyer);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - 5000;\r\n        this.ShowToast(\"you have successfully hired a lawyer, remaining cash is $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + \".\", LongMessageTime);\r\n        this.UpdateCash_TurnDecision();\r\n      } else {\r\n        this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  onLocationNameChanged_ExpandBusiness_TurnDecision(_name) {\r\n    LocationName = _name;\r\n  },\r\n  OnExpandButtonClicked_TurnDecision: function (event = null, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    //if player has brick and mortar business he could expand it\r\n    console.log(\"expand business\");\r\n\r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = true;\r\n    var generatedLength = GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision(BusinessSetupCardFunctionality, GivenCashBusiness, StartAnyBusinessWithoutCash);\r\n\r\n    if (generatedLength == 0) {\r\n      this.ShowToast(\"You have no brick and mortar business to expand.\");\r\n      setTimeout(() => {\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n\r\n        if (BusinessSetupCardFunctionality) {\r\n          this.CheckReferences();\r\n          LocationName = \"\";\r\n          console.log(\"expand business exit called\");\r\n          GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n          this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n          BusinessSetupCardFunctionality = false;\r\n          GivenCashBusiness = 0;\r\n          StartAnyBusinessWithoutCash = false;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n        }\r\n      }, 1600);\r\n    }\r\n  },\r\n\r\n  OnExpandButtonExitClicked_TurnDecision: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      this.UpdateCash_TurnDecision();\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n    } else {\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  OnNewBusinessButtonClicked_TurnDecision: function () {\r\n    console.log(\"starting new business\");\r\n    this.StartNewBusiness_BusinessSetup(false, true);\r\n  },\r\n\r\n  OnGoldAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    GoldCashAmount = amount;\r\n  },\r\n\r\n  OnGoldDiceClicked_TurnDecision: function () {\r\n    if (!this.GoldInvested) {\r\n      this.GoldInvested = true;\r\n      EnterBuySellAmount = \"\";\r\n      this.ToggleInvestSellScreen_InvestSell(true);\r\n      this.InvestSellSetupUI.InvestState = InvestEnum.GoldInvest;\r\n      DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n      OnceOrShare = DiceResult * 1000;\r\n\r\n      this.AssignData_InvestSell(\"Invest In GOLD\", DiceResult, \"Each Ounce of GOLD price is:\", OnceOrShare + \"/ounce\", \"Enter the number of ounce of GOLD you want to BUY\", \"Total Buying Amount:\", OnceOrShare + \"*0=0\", \"BUY\", this.InvestSellSetupUI.InvestState);\r\n    } else {\r\n      this.ShowToast(\"You can invest in gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n    StockBusinessName = name;\r\n  },\r\n\r\n  OnStockDiceClicked_TurnDecision: function (event = null, _isTurnOver = false) {\r\n    TurnOverForInvest = _isTurnOver;\r\n\r\n    console.error(_isTurnOver);\r\n\r\n    if (TurnOverForInvest) StockBusinessName = \"Friend's Business\";\r\n\r\n    if (!this.StockInvested || TurnOverForInvest) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (StockBusinessName == \"\") {\r\n        this.ResetStockBusinessNameInput();\r\n        this.ShowToast(\"Please enter a business name to invest.\");\r\n      } else {\r\n        this.StockInvested = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockInvest;\r\n\r\n        if (!TurnOverForInvest) DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        else DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Invest in Stock\", DiceResult, \"Each Share of stock price is:\", OnceOrShare + \"/share\", \"Enter the number of shares of stock you want to BUY\", \"Total Buying Amount:\", OnceOrShare + \"*0=0\", \"BUY\", this.InvestSellSetupUI.InvestState);\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can invest in stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellGoldClicked_TurnDecision: function () {\r\n    if (!this.GoldSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount > 0) {\r\n        this.GoldSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.GoldSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Sell GOLD\", DiceResult, \"Each Ounce of GOLD price is:\", OnceOrShare + \"/ounce\", \"Enter the number of ounce of GOLD you want to SELL\", \"Total Selling Amount:\", OnceOrShare + \"*0=0\", \"SELL\", this.InvestSellSetupUI.InvestState);\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any GOLD ounces, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellStockClicked_TurnDecision: function () {\r\n    if (!this.StockSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount > 0) {\r\n        this.StockSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Sell STOCK\", DiceResult, \"Each share of stock price is:\", OnceOrShare + \"/share\", \"Enter the number of shares of stock you want to SELL\", \"Total Selling Amount:\", OnceOrShare + \"*0=0\", \"SELL\", this.InvestSellSetupUI.InvestState);\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnPartnershipClicked_TurnDecision: function () {\r\n    console.log(\"go into partner ship\");\r\n    // this.ShowToast(\"work in progress, coming soon...\");\r\n    // var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    this.EnablePartnership_PartnerShipSetup();\r\n  },\r\n\r\n  OnRollDiceClicked_TurnDecision: function () {\r\n    console.log(\"roll the dice\");\r\n    this.ToggleDecision_TurnDecision(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n  },\r\n\r\n  PrintDiceValue_TurnDecision: function (value) {\r\n    //this.TempDiceText.string=value;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Partnership setup\r\n  ToggleScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.WaitingStatusScreen.active = _state;\r\n  },\r\n\r\n  ToggleDecisionScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.DecisionScreen.active = _state;\r\n  },\r\n\r\n  EnablePartnership_PartnerShipSetup() {\r\n    CancelledID = [];\r\n    this.Reset_PartnerShipSetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.ToggleScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.PlayerName.string = _tempData.PlayerName;\r\n    this.PartnershipSetupUI.PlayerCash.string = \"$\" + _tempData.Cash;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.PartnershipSetupUI.PartnerShipPrefab);\r\n      node.parent = this.PartnershipSetupUI.ScrollContent;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n        var _allLocationsAmount = _totalLocations * 25000;\r\n        var _finalAmount = 50000 + _allLocationsAmount;\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n      } else {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n      }\r\n\r\n      businessDetailPartnershipNodes.push(node);\r\n    }\r\n  },\r\n\r\n  EnablePartnershipDecision_PartnerShipSetup(_msg) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.ToggleDecisionScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.DecisionPlayerName.string = _tempData.PlayerName;\r\n    this.PartnershipSetupUI.DecisionPlayerCash.string = \"$\" + _tempData.Cash;\r\n    this.PartnershipSetupUI.DecisionDescription.string = _msg;\r\n  },\r\n\r\n  Exit_PartnerShipSetup() {\r\n    this.Reset_PartnerShipSetup();\r\n    this.ToggleScreen_PartnerShipSetup(false);\r\n  },\r\n\r\n  Reset_PartnerShipSetup() {\r\n    for (let index = 0; index < businessDetailPartnershipNodes.length; index++) {\r\n      businessDetailPartnershipNodes[index].destroy();\r\n    }\r\n    businessDetailPartnershipNodes = [];\r\n  },\r\n\r\n  ReceiveEvent_PartnershipSetup(_data) {\r\n    PartnerShipOfferReceived = true;\r\n    PartnerShipData = _data;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 1) _businessMode = \"Home Based\";\r\n    else if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 2) _businessMode = \"Brick & Mortar\";\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _msg =\r\n        \"you have received partnership offer by \" +\r\n        _playerData.PlayerName +\r\n        \" , following are the details of business: \" +\r\n        \"\\n\" +\r\n        \"\\n\" +\r\n        \"Business Name: \" +\r\n        _playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessName +\r\n        \"\\n\" +\r\n        \"Business Mode: \" +\r\n        _businessMode +\r\n        \"\\n\" +\r\n        \"Business Value: $\" +\r\n        _businessValue +\r\n        \"\\n\" +\r\n        \"Cash Payment: $\" +\r\n        _payAmount +\r\n        \"\\n\" +\r\n        \"\\n\" +\r\n        \"if offer is accepted you will receive 50% share of that particular business and will receive profit/lose on that particular business.\";\r\n\r\n      this.EnablePartnershipDecision_PartnerShipSetup(_msg);\r\n    }\r\n  },\r\n\r\n  AcceptOffer_PartnershipSetup() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _allActors = GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _data = PartnerShipData;\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    var myIndex = _manager.GetMyIndex();\r\n\r\n    if (PartnerShipOfferReceived == true) {\r\n      if (_manager.PlayerGameInfo[myIndex].Cash >= _payAmount) {\r\n        _manager.PlayerGameInfo[myIndex].Cash -= _payAmount;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[myIndex]);\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(true, _payAmount, false, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"congratulations! you have started business partnership\");\r\n      } else {\r\n        this.ShowToast(\"Not enough cash.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"Offer has been accepted by other player.\");\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n    }\r\n  },\r\n\r\n  CancelOffer_PartnershipSetup() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _data = PartnerShipData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var myIndex = _manager.GetMyIndex();\r\n    console.log(_manager.PlayerGameInfo[myIndex].PlayerUID);\r\n    if (PartnerShipOfferReceived == true) {\r\n      this.RaiseEventDecisionAnswer_PartnershipSetup(false, 0, true, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    } else {\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    }\r\n  },\r\n\r\n  RaiseEventDecisionAnswer_PartnershipSetup(_isAccepted = false, _payment = 0, _isCancelled = false, _uID = \"\", _data = null, _businessIndex = 0) {\r\n    var _mainData = { Data: { Accepted: _isAccepted, CashPayment: _payment, Cancelled: _isCancelled, PlayerID: _uID, PlayerData: _data, BusinessIndex: _businessIndex } };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(12, _mainData);\r\n  },\r\n\r\n  ReceiveEventDecisionAnswer_PartnershipSetup(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = _manager.GetTurnNumber();\r\n\r\n      console.log(_data);\r\n      var _accepted = _data.Data.Accepted;\r\n      var _cash = _data.Data.CashPayment;\r\n      var _cancelled = _data.Data.Cancelled;\r\n      var _uid = _data.Data.PlayerID;\r\n      var _playerData = _data.Data.PlayerData;\r\n      var _businessIndex = _data.Data.BusinessIndex;\r\n\r\n      console.log(\"answer received\");\r\n      if (_manager.PlayerGameInfo[_playerIndex].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        if (_accepted) {\r\n          this.ToggleScreen_PartnerShipSetup(false);\r\n          this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n          _manager.PlayerGameInfo[_playerIndex].Cash += _cash;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerID = _uid;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerName = _playerData.PlayerName;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"offer accepted\");\r\n          this.ShowToast(\"your partnership offer has been accepted by \" + _playerData.PlayerName + \", cash $\" + _cash + \" has been added to your account.\", LongMessageTime);\r\n          this.UpdateCash_TurnDecision();\r\n        } else if (_cancelled) {\r\n          if (CancelledID.includes(_uid) == false) CancelledID.push(_uid);\r\n\r\n          console.log(CancelledID);\r\n          if (CancelledID.length == _manager.PlayerGameInfo.length - 1) {\r\n            this.ToggleScreen_PartnerShipSetup(false);\r\n            this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n            this.ShowToast(\"your partnership offer has been cancelled by all other users.\");\r\n          }\r\n\r\n          console.log(\"offer rejected\");\r\n        }\r\n      } else {\r\n        if (_accepted) {\r\n          PartnerShipOfferReceived = false;\r\n          this.ShowToast(\"Offer has been accepted by other player.\");\r\n          this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        } else if (_cancelled) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Invest and sell moddule\r\n\r\n  ResetGoldInput() {\r\n    this.TurnDecisionSetupUI.GoldEditBox.string = \"\";\r\n    GoldCashAmount = \"\";\r\n  },\r\n\r\n  ResetStockBusinessNameInput() {\r\n    this.TurnDecisionSetupUI.StockEditBox.string = \"\";\r\n    StockBusinessName = \"\";\r\n  },\r\n\r\n  onAmountChanged_InvestSell(_amount) {\r\n    EnterBuySellAmount = _amount;\r\n\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n    } else {\r\n      var _amount = parseInt(EnterBuySellAmount);\r\n      var _amount = OnceOrShare * _amount;\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*\" + EnterBuySellAmount + \"=\" + _amount);\r\n    }\r\n  },\r\n\r\n  ToggleInvestSellScreen_InvestSell(_state) {\r\n    this.InvestSellScreen.active = _state;\r\n    this.UpdateCash_TurnDecision();\r\n    this.ResetGoldInput();\r\n    this.ResetStockBusinessNameInput();\r\n  },\r\n\r\n  AssignData_InvestSell(_title, _diceResult, _priceTitle, _priceValue, _buyOrSellTitle, _totalAmountTitle, _totalAmountValue, _buttonName, _state) {\r\n    this.CheckReferences();\r\n    this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n    this.InvestSellSetupUI.TitleLabel.string = _title;\r\n    this.InvestSellSetupUI.DiceResultLabel.string = _diceResult;\r\n    this.InvestSellSetupUI.PriceTitleLabel.string = _priceTitle;\r\n    this.InvestSellSetupUI.PriceValueLabel.string = _priceValue;\r\n    this.InvestSellSetupUI.BuyOrSellTitleLabel.string = _buyOrSellTitle;\r\n    this.InvestSellSetupUI.TotalAmountTitleLabel.string = _totalAmountTitle;\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n    this.InvestSellSetupUI.ButtonNameLabel.string = _buttonName;\r\n  },\r\n\r\n  UpdateData_InvestSell(_totalAmountValue) {\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n  },\r\n\r\n  ApplyButton_InvestSell() {\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      InvestSellInfo = \"\";\r\n\r\n      if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount += _amount;\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" ounces of GOLD\", LongMessageTime);\r\n\r\n          InvestSellInfo = \"Buying GOLD:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per Ounce price: $\" + OnceOrShare + \"\\n\" + \"Purchased Ounces: \" + _amount + \"\\n\" + \"Total Payment for Ounces: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        if (_amount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount -= _amount;\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" ounces of GOLD for  $\" + _TotalAmount, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Selling GOLD:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per Ounce price: $\" + OnceOrShare + \"\\n\" + \"Sold Ounces: \" + _amount + \"\\n\" + \"Total Payment for Ounces: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"you don't have enough GOLD ounces, you own \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount + \" of GOLD ounces\", LongMessageTime);\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount += _amount;\r\n          //can add multiple stocks with business name in object if required\r\n\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" shares of business \" + StockBusinessName, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Buying STOCK:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per share price: $\" + OnceOrShare + \"\\n\" + \"Purchased shares: \" + _amount + \"\\n\" + \"Total Payment for shares: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n\r\n        if (_amount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount -= _amount;\r\n\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" shares of stock for  $\" + _TotalAmount, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Selling STOCK:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per share price: $\" + OnceOrShare + \"\\n\" + \"Sold shares: \" + _amount + \"\\n\" + \"Total Payment for shares: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"you don't have enough stocks shares, you own \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount + \" of stock shares\", LongMessageTime);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ExitButton_InvestSell() {\r\n    this.ToggleInvestSellScreen_InvestSell(false);\r\n\r\n    if (TurnOverForInvest) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      TurnOverForInvest = false;\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Payday or Double pay Day\r\n  TogglePayDayScreen_PayDay(_state) {\r\n    this.PayDayScreen.active = _state;\r\n  },\r\n\r\n  ToggleResultPanelScreen_PayDay(_state) {\r\n    this.PayDaySetupUI.ResultPanelNode.active = _state;\r\n  },\r\n\r\n  UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken) {\r\n    if (HMAmount == 0) {\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      HomeBasedPaymentCompleted = false;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (BMAmount == 0) {\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      BrickMortarPaymentCompleted = false;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (!loanTaken) {\r\n      LoanPayed = true;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      LoanPayed = false;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n  },\r\n\r\n  GetLoanAmount_PayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    var _loan = 0;\r\n    for (let index = 0; index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n      if (_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loan = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n        break;\r\n      }\r\n    }\r\n    return _loan;\r\n  },\r\n\r\n  AssignData_PayDay(_title, _isDoublePayDay = false, _skipHM = false, _skipBM = false, _isBot = false, _forSelectedBusiness = false, _SelectedBusinessIndex = 0, _hMAmount = 0, _bmAmount = 0, _bmLocation = 0, PaydayCounter = 1, DoublePayCounter = 0, _halfPayday = false) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex];\r\n    TotalPayDay = 0;\r\n\r\n    GiveProfitUserID = \"\";\r\n    if (_manager.PlayerGameInfo[_playerIndex].CanGiveProfitOnPayDay) {\r\n      GiveProfitUserID = _manager.PlayerGameInfo[_playerIndex].UserIDForProfitPayDay;\r\n      _manager.PlayerGameInfo[_playerIndex].CanGiveProfitOnPayDay = false;\r\n      _manager.PlayerGameInfo[_playerIndex].UserIDForProfitPayDay = \"\";\r\n    }\r\n\r\n    console.log(GiveProfitUserID);\r\n    console.log(_manager.PlayerGameInfo[_playerIndex].UserIDForProfitPayDay);\r\n\r\n    if (GiveProfitUserID != \"\") {\r\n      this.ShowToast(\"your whole profit will be transferred to other player this turn.\", 1200);\r\n    }\r\n\r\n    HBDiceCounter = 0;\r\n    BMDiceCounter = 0;\r\n    NextHalfPayDay = _halfPayday;\r\n    //   if (DoublePayCounter == 0) DoublePayCounter = 1;\r\n\r\n    //  if (DoublePayDay) DoublePayCounter = DoublePayCounter * 2;\r\n\r\n    DoubleDayBusinessHB = 0;\r\n    DoubleDayBusinessBM = 0;\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        if (_tempData.NoOfBusiness[index].ReceiveDoublePayDay) {\r\n          DoubleDayBusinessHB++;\r\n        }\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        if (_tempData.NoOfBusiness[index].ReceiveDoublePayDay) {\r\n          DoubleDayBusinessBM++;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (DoubleDayBusinessHB > 0 || DoubleDayBusinessBM > 0) {\r\n      this.ShowToast(\"your will receive double profits on \" + (DoubleDayBusinessHB + DoubleDayBusinessBM) + \" business/es.\", 1200);\r\n    }\r\n\r\n    var _res = PaydayCounter + DoublePayCounter;\r\n    PayDayInfo = \"PayDay Result with multiplier: \" + _res;\r\n    this.IsBotTurn = _isBot;\r\n    this.PayDayCount = PaydayCounter;\r\n    this.DoublePayDayCount = DoublePayCounter;\r\n    DoublePayDay = _isDoublePayDay;\r\n    this.TogglePayDayScreen_PayDay(true);\r\n    this.PayDaySetupUI.TitleLabel.string = _title;\r\n    var _time = 1800;\r\n    SelectedBusinessPayDay = _forSelectedBusiness;\r\n    SelectedBusinessIndex = _SelectedBusinessIndex;\r\n    HMAmount = _hMAmount;\r\n    BMAmount = _bmAmount;\r\n    BMLocations = _bmLocation;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      if (_isBot == false) {\r\n        if (NextHalfPayDay) {\r\n          this.ShowToast(\"your will receive half profits this payday.\", _time);\r\n        }\r\n\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM) this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\", _time);\r\n        else if (_skipHM) this.ShowToast(\"your payday on home based businessess will be skipped.\", _time);\r\n        else if (_skipBM) this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\", _time);\r\n      } else {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM) console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n        else if (_skipHM) console.log(\"your payday on home based businessess will be skipped.\");\r\n        else if (_skipBM) console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n      }\r\n    }\r\n\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n      BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n    }\r\n\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var loanTaken = false;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      loanTaken = _loanTaken;\r\n    }\r\n\r\n    this.PayDaySetupUI.HomeBasedNumberLabel.string = HMAmount;\r\n    this.PayDaySetupUI.BMNumberLabel.string = BMAmount;\r\n    this.PayDaySetupUI.BMNumberLocationLabel.string = BMLocations;\r\n    this.PayDaySetupUI.PassedPayDayCountLabel.string = this.PayDayCount;\r\n\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    //check if loan was skipped previously\r\n    if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) {\r\n      var _loan = this.GetLoanAmount_PayDay();\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $\" + _loan;\r\n    } else {\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $5000\";\r\n    }\r\n\r\n    //check skip payday variables\r\n    if (_skipHM && _skipBM) this.UpdateButtons_PayDay(0, 0, loanTaken);\r\n    else if (_skipHM) this.UpdateButtons_PayDay(0, BMAmount, loanTaken);\r\n    else if (_skipBM) this.UpdateButtons_PayDay(HMAmount, 0, loanTaken);\r\n    else this.UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken);\r\n\r\n    if (_skipBM || _skipHM) {\r\n      setTimeout(() => {\r\n        this.PayDayCompleted();\r\n      }, _time + 200);\r\n    }\r\n\r\n    if (_isBot) {\r\n      setTimeout(() => {\r\n        this.OnHomeBasedPaymentClicked_PayDay();\r\n        this.OnBMPaymentClicked_PayDay();\r\n        this.OnLoanPaymentClicked_PayDay();\r\n      }, 0);\r\n    }\r\n  },\r\n\r\n  OnHomeBasedPaymentClicked_PayDay() {\r\n    if (!HomeBasedPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n      var _halfPayday = NextHalfPayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay) this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      }\r\n\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n\r\n      if (_halfPayday) _multiplier = _multiplier / 2;\r\n\r\n      //partnership code\r\n      if (_doublePayDay) {\r\n        if (this.DoublePayDayCount != 0) {\r\n          _multiplier *= 2 * this.DoublePayDayCount;\r\n        } else {\r\n          _multiplier *= 2;\r\n        }\r\n      }\r\n\r\n      var doublePayDayAdded = _multiplier * _paydaymultiplier * DoubleDayBusinessHB * _dice * 1000;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 1) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _payment = _paydaymultiplier * _multiplier * _dice * 1000 + doublePayDayAdded;\r\n              _amountToBeSend = _payment / 2;\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 1) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _payment = _paydaymultiplier * _multiplier * _dice * 1000 + doublePayDayAdded;\r\n            _amountToBeSend = _payment / 2;\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted > 0) {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n      //partnership code\r\n\r\n      if (!_doublePayDay) TotalPayDayAmount = _multiplier * _paydaymultiplier * HMAmount * _dice * 1000 - _amountToBeAdjusted + doublePayDayAdded;\r\n      else TotalPayDayAmount = _paydaymultiplier * _multiplier * (HMAmount * _dice) * 1000 - _amountToBeAdjusted + doublePayDayAdded;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = HMAmount;\r\n\r\n      if (!_doublePayDay) this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + HMAmount + \"*\" + \"1000)-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n      else this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + HMAmount + \"*\" + \"1000*\" + _multiplier + \")-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo += \"\\n\" + \"\\n\" + \"Home Based Business: \" + HMAmount + \"\\n\" + \"Dice Rolled: \" + _dice + \"\\n\" + \"Amount Received: $\" + TotalPayDayAmount;\r\n      TotalPayDay += TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnBMPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!BrickMortarPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n      var _halfPayday = NextHalfPayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay) this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n      }\r\n\r\n      var _amount = BMAmount + BMLocations;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      if (_halfPayday) _multiplier = _multiplier / 2;\r\n\r\n      if (_doublePayDay) {\r\n        if (this.DoublePayDayCount != 0) {\r\n          _multiplier *= 2 * this.DoublePayDayCount;\r\n        } else {\r\n          _multiplier *= 2;\r\n        }\r\n      }\r\n\r\n      var doublePayDayAdded = _paydaymultiplier * _multiplier * DoubleDayBusinessBM * _dice * 2000;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 2) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _locations = _tempData[index].LocationsName.length + 1;\r\n              var _payment = _paydaymultiplier * _locations * _multiplier * _dice * 2000 + doublePayDayAdded;\r\n              _amountToBeSend = _payment / 2;\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 2) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _locations = _tempData[SelectedBusinessIndex].LocationsName.length + 1;\r\n            var _payment = _paydaymultiplier * _locations * _multiplier * _dice * 2000 + doublePayDayAdded;\r\n            _amountToBeSend = _payment / 2;\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted > 0) {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n\r\n      if (!_doublePayDay) TotalPayDayAmount = _multiplier * _paydaymultiplier * _amount * _dice * 2000 - _amountToBeAdjusted + doublePayDayAdded;\r\n      else TotalPayDayAmount = _paydaymultiplier * _multiplier * (_amount * _dice) * 2000 - _amountToBeAdjusted + doublePayDayAdded;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = _amount;\r\n\r\n      if (!_doublePayDay) this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + _amount + \"*\" + \"2000)-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n      else this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + _amount + \"*\" + \"2000*\" + _multiplier + \")-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo += \"\\n\" + \"\\n\" + \"Brick & Mortar Business: \" + _amount + \"\\n\" + \"Dice Rolled: \" + _dice + \"\\n\" + \"Amount Received: $\" + TotalPayDayAmount;\r\n      TotalPayDay += TotalPayDayAmount;\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnLoanPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!LoanPayed) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _EstimateLoan = 0;\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n        //if player had skippped loan previously call all amount due\r\n        _EstimateLoan = this.GetLoanAmount_PayDay();\r\n      else _EstimateLoan = 5000;\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= _EstimateLoan) {\r\n        LoanPayed = true;\r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - _EstimateLoan;\r\n\r\n        var _loanTaken = false;\r\n        var _businessIndex = 0;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n          if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            _loanTaken = true;\r\n            _businessIndex = index;\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount - _EstimateLoan;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount <= 0) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = 0;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken = false;\r\n        }\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = false;\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        this.PayDayCompleted();\r\n      } else {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = false;\r\n        else this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = true;\r\n\r\n        this.PayDaySetupUI.LoanResultPanelNode.active = true;\r\n        console.error(\"out of money\");\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceivePayment_PayDay() {\r\n    //all\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + TotalPayDayAmount;\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    if (!this.IsBotTurn) {\r\n      this.ShowToast(\"Amount $\" + TotalPayDayAmount + \" has been added to your cash amount, Total Cash has become $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n      setTimeout(() => {\r\n        this.ToggleResultPanelScreen_PayDay(false);\r\n        this.PayDayCompleted();\r\n      }, 100);\r\n    } else {\r\n      console.log(\"Amount $\" + TotalPayDayAmount + \" has been added to your cash amount, Total Cash has become $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n      this.ToggleResultPanelScreen_PayDay(false);\r\n      this.PayDayCompleted();\r\n    }\r\n  },\r\n\r\n  SkipLoanOneTime_PayDay() {\r\n    this.ShowToast(\"You have skipped the loan payment, bank will call upon complete loan amount on next payday\");\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = true;\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    LoanPayed = true;\r\n    this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    this.PayDayCompleted();\r\n    LoanPayed = true;\r\n  },\r\n\r\n  SellBusiness_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    this.EnableSellScreen__SellBusinessUISetup(false);\r\n  },\r\n\r\n  UpdateCash_PayDay(_amount) {\r\n    this.PayDaySetupUI.CashLabel.string = \"$\" + _amount;\r\n  },\r\n\r\n  ExitLoanScreen_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n  },\r\n\r\n  ProcessBankrupt(_showText = true, _txt, _time) {\r\n    if (_showText) {\r\n      this.ShowToast(_txt, _time, false);\r\n    }\r\n    setTimeout(() => {\r\n      this.Exit_SelectPlayerGeneric();\r\n      this.ExitScreen__BusinessGenric();\r\n      this.ToggleDiceResultScreen_DamageDecision(false);\r\n      this.ToggleMainScreen_DamageDecision(false);\r\n      this.ExitLoanScreen_PayDay();\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      this.Exit___InsufficientBalance();\r\n      this.ToggleScreen_BuyHalfBusiness(false);\r\n      cc.systemEvent.emit(\"ShowCard\", \"\", false);\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false, false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n    }, _time + 10);\r\n  },\r\n  StartNewGame_PayDay() {\r\n    //if bankrupted you can start new game\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    if (mode == 2) {\r\n      if (BankRuptedCard) {\r\n        BankRuptedCard = false;\r\n        this.ToggleDiceResultScreen_DamageDecision(false);\r\n        this.ToggleMainScreen_DamageDecision(false);\r\n        this.Exit___InsufficientBalance();\r\n        this.Exit_SelectPlayerGeneric();\r\n        this.ExitScreen__BusinessGenric();\r\n        this.ExitLoanScreen_PayDay();\r\n        var _sendingData = { ID: SenderDamagingID, Cash: DamageDecisionResult, IsDiceRolled: true, IsBankRupted: true };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(25, _sendingData);\r\n\r\n        var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var playerData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n        for (let index = 0; index < playerData.length; index++) {\r\n          if (playerData[index].PlayerUID == _myActor.PlayerUID) {\r\n            playerData[index].CardFunctionality.BankruptedNextTurn = true;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", playerData[index]);\r\n            break;\r\n          }\r\n        }\r\n\r\n        this.ShowToast(\"You will lose all progress and start new game from the start next turn.\", 3000, false);\r\n      } else {\r\n        this.ProcessBankrupt(true, \"You will lose all progress and start new game from the start.\", 3000);\r\n      }\r\n    } else if (mode == 1) {\r\n      this.ProcessBankrupt(true, \"You will lose all progress and start new game from the start.\", 3000);\r\n    }\r\n  },\r\n\r\n  StartNewGame_BankRupted(_txt) {\r\n    //if bankrupted you can start new game\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    this.ProcessBankrupt(true, _txt, 3000);\r\n  },\r\n\r\n  ShowInfo(_data) {\r\n    this.ShowToast(_data.info, 2000, true);\r\n  },\r\n\r\n  PayDayCompleted() {\r\n    if (HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      console.log(\"all payday done\");\r\n      this.TogglePayDayScreen_PayDay(false);\r\n\r\n      if (GiveProfitUserID != \"\") {\r\n        this.ShowToast(\"Your whole Payday amount $\" + TotalPayDay + \" will be transferred to other player now.\", 2200);\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= TotalPayDay;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().SendProfit_Partner_TurnDecision(TotalPayDay, GiveProfitUserID);\r\n\r\n        setTimeout(() => {\r\n          this.RaiseEventForCompletion();\r\n        }, 3200);\r\n      } else {\r\n        this.RaiseEventForCompletion();\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventForCompletion() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      _manager.ToggleSkipPayDay_Whole(false);\r\n      _manager.ToggleSkipPayDay_HomeBased(false);\r\n      _manager.ToggleSkipPayDay_BrickAndMortar(false);\r\n      _manager.TogglePayDay(false, false);\r\n      _manager.ToggleDoublePayNextTurn(false);\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].CardFunctionality.NextTurnHalfPayDayCounter > 0) {\r\n        _manager.PlayerGameInfo[_playerIndex].CardFunctionality.NextTurnHalfPayDayCounter--;\r\n      } else {\r\n        _manager.ToggleHalfPayNextTurn(false);\r\n      }\r\n      _manager.callUponCard();\r\n    } else {\r\n      _manager.completeCardTurn();\r\n    }\r\n\r\n    this.RaiseEventToSyncInfo(PayDayInfo);\r\n  },\r\n  //#endregion\r\n\r\n  //#region Sell & manipulate Business UI\r\n  ToggleSellBusinessScreen_SellBusinessUISetup(_state) {\r\n    this.SellBusinessScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_SellBusinessUISetup(_sellAmount = 0) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    this.SellBusinessSetupUI.TitleLabel.string = \"SELL\";\r\n    this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (_sellAmount != 0) {\r\n        node.getComponent(\"BusinessDetail\").SetSellingAmount(_sellAmount);\r\n      }\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].LocationsName.length == 0) node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      else node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n\r\n  SetBusinessUI_BusinessManipulationUISetup(_isBot = false) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (!_isBot) {\r\n      this.SellBusinessSetupUI.TitleLabel.string = \"BUSINESS\";\r\n      this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n      this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n      this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n    }\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessManipulationPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_isBot) {\r\n        node.getComponent(\"BusinessDetail\").SelectBusinessforPayDay();\r\n        break;\r\n      }\r\n      // if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      // else\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n  Reset_SellBusinessUISetup() {\r\n    for (let index = 0; index < businessDetailNodes.length; index++) {\r\n      businessDetailNodes[index].destroy();\r\n    }\r\n\r\n    businessDetailNodes = [];\r\n  },\r\n\r\n  EnableSellScreen__SellBusinessUISetup(_isTurnover = false, _sellAmount = 0) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    this.SetBusinessUI_SellBusinessUISetup(_sellAmount);\r\n  },\r\n\r\n  EnableManipilationScreen__BusinessManipulationUISetup(_isTurnover = false, _isBot = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n\r\n    if (!_isBot) this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n\r\n    this.SetBusinessUI_BusinessManipulationUISetup(_isBot);\r\n  },\r\n\r\n  ExitSellScreen__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n  },\r\n\r\n  ExitSellScreenAlongTurnOver__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Invest UI\r\n  ToggleInvestScreen_InvestSetupUI(_state) {\r\n    this.InvestScreen.active = _state;\r\n  },\r\n\r\n  EnableInvest_InvestSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleInvestScreen_InvestSetupUI(true);\r\n    this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n  },\r\n  SetInvestUI_InvestSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.InvestSetupUI.TitleLabel.string = \"INVEST\";\r\n    this.InvestSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.InvestSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.InvestSetupUI.ExitButton.active = false;\r\n      this.InvestSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.InvestSetupUI.ExitButton.active = true;\r\n      this.InvestSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitInvest_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n  },\r\n\r\n  ExitInvestAlongTurnOver_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region BuyORSell UI\r\n  ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state) {\r\n    this.BuyOrSellScreen.active = _state;\r\n  },\r\n\r\n  EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n    this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n  },\r\n  SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.BuyOrSellSetupUI.TitleLabel.string = \"BUY OR SELL\";\r\n    this.BuyOrSellSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.BuyOrSellSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.BuyOrSellSetupUI.ExitButton.active = false;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.BuyOrSellSetupUI.ExitButton.active = true;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitSellOrBuy_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n  },\r\n\r\n  ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region One Question setup Ui\r\n  ToggleDecisionScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionDecisionScreen.active = _state;\r\n  },\r\n\r\n  ToggleSpaceScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSpaceScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSetupUI.WaitingScreen.active = _state;\r\n  },\r\n\r\n  ShowQuestionToast(_msg) {\r\n    this.OneQuestionSetupUI.WaitingScreenLabel.string = _msg;\r\n  },\r\n\r\n  SetUpSpaceScreen_OneQuestionSetupUI(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    this.ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n    this.OneQuestionSetupUI.TitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n            node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n            oneQuestionNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n          node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          oneQuestionNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.OneQuestionSetupUI.ExitButton.active = false;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.OneQuestionSetupUI.ExitButton.active = true;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_OneQuestionSetupUI() {\r\n    for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n      oneQuestionNodes[index].destroy();\r\n    }\r\n    oneQuestionNodes = [];\r\n  },\r\n\r\n  Exit_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  SetUpDecisionScreen_OneQuestionSetupUI(_msg) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.OneQuestionSetupUI.DecisionTitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.DecisionCashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.DecisionPlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.DecisionQuestionLabel.string = _msg;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Select Business for double payday setup\r\n  ToggleScreen_BusinessPayDayUISetup(_state) {\r\n    this.BusinessDoublePayScreen.active = _state;\r\n  },\r\n\r\n  EditTitle_BusinessPayDayUISetup(_mainTitle, _tileContent) {\r\n    this.BusinessPayDayUISetup.TitleName.string = _mainTitle;\r\n    this.BusinessPayDayUISetup.TitleContentLabel.string = _tileContent;\r\n  },\r\n\r\n  ExitScreen_BusinessPayDayUISetup() {\r\n    this.ClearBusiness_BusinessPayDayUISetup();\r\n    this.ToggleScreen_BusinessPayDayUISetup(false);\r\n  },\r\n\r\n  ExitScreen_AlongTurnOver_BusinessPayDayUISetup() {\r\n    this.ClearBusiness_BusinessPayDayUISetup();\r\n    this.ToggleScreen_BusinessPayDayUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  ClearBusiness_BusinessPayDayUISetup() {\r\n    for (let index = 0; index < businessDetailPayDayNodes.length; index++) {\r\n      businessDetailPayDayNodes[index].destroy();\r\n    }\r\n    businessDetailPayDayNodes = [];\r\n  },\r\n  ProcessBusiness_BusinessPayDayUISetup(_tempData, _businessType) {\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == _businessType) {\r\n        var node = cc.instantiate(this.BusinessPayDayUISetup.BusinessPrefab);\r\n        node.parent = this.BusinessPayDayUISetup.ScrollContent;\r\n        node.getComponent(\"BusinessDetail\").CheckReferences();\r\n        node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n        node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n        node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n        var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n        if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n          node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n          node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n          node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n          node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n        } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n          node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n          node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n          var _allLocationsAmount = _totalLocations * 25000;\r\n          var _finalAmount = 50000 + _allLocationsAmount;\r\n          node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n          node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n        }\r\n\r\n        node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n        node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n        if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n          node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n          node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n        } else {\r\n          node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n          node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n        }\r\n\r\n        businessDetailPayDayNodes.push(node);\r\n      }\r\n    }\r\n  },\r\n\r\n  EnableSeletiveDoublePayDay_BusinessPayDayUISetup(_isHomeBased = false, _isBrickAndMortar = false) {\r\n    this.ClearBusiness_BusinessPayDayUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.EditTitle_BusinessPayDayUISetup(\"BUSINESS\", \"*Select a business to receive double payday profits through out game on that business.\");\r\n    this.ToggleScreen_BusinessPayDayUISetup(true);\r\n    this.BusinessPayDayUISetup.PlayerName.string = _tempData.PlayerName;\r\n    this.BusinessPayDayUISetup.PlayerCash.string = \"$\" + _tempData.Cash;\r\n\r\n    if (_isBrickAndMortar) {\r\n      this.ProcessBusiness_BusinessPayDayUISetup(_tempData, 2);\r\n    }\r\n\r\n    if (_isHomeBased) {\r\n      this.ProcessBusiness_BusinessPayDayUISetup(_tempData, 1);\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Select Player for profit\r\n  ToggleScreen_SelectPlayerForProfit(_state) {\r\n    this.SelectPlayerForProfitScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_SelectPlayerForProfit(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    this.SelectPlayerForProfitUI.TitleLabel.string = \"SELECT PLAYER\";\r\n    this.SelectPlayerForProfitUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.SelectPlayerForProfitUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.SelectPlayerForProfitUI.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.SelectPlayerForProfitUI.DetailsPrefab);\r\n            node.parent = this.SelectPlayerForProfitUI.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n            selectPlayerProfitNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.SelectPlayerForProfitUI.DetailsPrefab);\r\n          node.parent = this.SelectPlayerForProfitUI.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          selectPlayerProfitNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.SelectPlayerForProfitUI.ExitButton.active = false;\r\n      this.SelectPlayerForProfitUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectPlayerForProfitUI.ExitButton.active = true;\r\n      this.SelectPlayerForProfitUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_SelectPlayerForProfit() {\r\n    for (let index = 0; index < selectPlayerProfitNodes.length; index++) {\r\n      selectPlayerProfitNodes[index].destroy();\r\n    }\r\n    selectPlayerProfitNodes = [];\r\n  },\r\n\r\n  Exit_SelectPlayerForProfit() {\r\n    this.ToggleScreen_SelectPlayerForProfit(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_SelectPlayerForProfit() {\r\n    this.ToggleScreen_SelectPlayerForProfit(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Select Player to Take over business\r\n  ToggleScreen_SelectPlayerTakeOver(_state) {\r\n    this.SelectPlayerTakeOverScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_SelectPlayerTakeOver(_myData, _actorsData, _isTurnOver, _modeIndex = 0, _buyHalfBusiness = false) {\r\n    this.SelectPlayerTakeOverSetup.TitleLabel.string = \"SELECT PLAYER\";\r\n    this.SelectPlayerTakeOverSetup.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.SelectPlayerTakeOverSetup.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.SelectPlayerTakeOverSetup.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    var _mainData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.SelectPlayerTakeOverSetup.DetailsPrefab);\r\n            node.parent = this.SelectPlayerTakeOverSetup.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n\r\n            if (_buyHalfBusiness) {\r\n              node.getComponent(\"PlayerDetails\").setBuyHalf(true);\r\n            }\r\n\r\n            for (let k = 0; k < _mainData.length; k++) {\r\n              if (_mainData[k].PlayerUID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n                node.getComponent(\"PlayerDetails\").setPlayerIndex(k);\r\n                break;\r\n              }\r\n            }\r\n\r\n            selectedPlayerTakeOver.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.SelectPlayerTakeOverSetup.DetailsPrefab);\r\n          node.parent = this.SelectPlayerTakeOverSetup.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          selectedPlayerTakeOver.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.SelectPlayerTakeOverSetup.ExitButton.active = false;\r\n      this.SelectPlayerTakeOverSetup.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectPlayerTakeOverSetup.ExitButton.active = true;\r\n      this.SelectPlayerTakeOverSetup.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_SelectPlayerTakeOver() {\r\n    for (let index = 0; index < selectedPlayerTakeOver.length; index++) {\r\n      selectedPlayerTakeOver[index].destroy();\r\n    }\r\n    selectedPlayerTakeOver = [];\r\n  },\r\n\r\n  Exit_SelectPlayerGeneric() {\r\n    this.ResetSpaceScreen_SelectPlayerDamaging();\r\n    this.ResetSpaceScreen_SelectPlayerTakeOver();\r\n    this.ToggleScreen_SelectPlayerTakeOver(false);\r\n    this.ToggleScreen_SelectPlayerDamaging(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_SelectPlayerGeneric() {\r\n    this.ResetSpaceScreen_SelectPlayerDamaging();\r\n    this.ResetSpaceScreen_SelectPlayerTakeOver();\r\n    this.ToggleScreen_SelectPlayerTakeOver(false);\r\n    this.ToggleScreen_SelectPlayerDamaging(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n  //\r\n  //#region Select Business to take over\r\n  ToggleScreen_BusinessTakeOver(_state) {\r\n    this.SelectBusinessTakeOverScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_BusinessTakeOver(_playerData, _OtherPlayerIndex = 0, _buyHalfBusiness = false) {\r\n    this.Reset_BusinessTakeOver();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _playerData;\r\n    console.log(_tempData);\r\n\r\n    this.SelectBusinessTakeOver.TitleLabel.string = \"BUSINESS\";\r\n    this.SelectBusinessTakeOver.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SelectBusinessTakeOver.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SelectBusinessTakeOver.BusinessCountLabel.string = \"No of Businesses : \" + _playerData.NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SelectBusinessTakeOver.BusinessPrefab);\r\n      node.parent = this.SelectBusinessTakeOver.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerObject(_playerData);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerIndex(_OtherPlayerIndex);\r\n\r\n      if (_buyHalfBusiness) {\r\n        node.getComponent(\"BusinessDetail\").setHalfBusiness(true);\r\n      }\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      businessTakeOverNodes.push(node);\r\n    }\r\n  },\r\n\r\n  Reset_BusinessTakeOver() {\r\n    for (let index = 0; index < businessTakeOverNodes.length; index++) {\r\n      businessTakeOverNodes[index].destroy();\r\n    }\r\n\r\n    businessTakeOverNodes = [];\r\n  },\r\n\r\n  EnableScreen__BusinessTakeOver(_isTurnover = false, _playerData = null, _playerIndex = 0, _buyHalfBusiness = false) {\r\n    if (_isTurnover) {\r\n      this.SelectBusinessTakeOver.ExitButton.active = false;\r\n      this.SelectBusinessTakeOver.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectBusinessTakeOver.ExitButton.active = true;\r\n      this.SelectBusinessTakeOver.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleScreen_BusinessTakeOver(true);\r\n    this.SetBusinessUI_BusinessTakeOver(_playerData, _playerIndex, _buyHalfBusiness);\r\n  },\r\n\r\n  ExitScreen__BusinessGenric() {\r\n    this.Reset__DamageDecision();\r\n    this.Reset_BusinessTakeOver();\r\n    this.ToggleBusinessScreen_DamageDecision();\r\n    this.ToggleScreen_BusinessTakeOver(false);\r\n  },\r\n\r\n  ExitScreenAlongTurnOver__BusinessGenric() {\r\n    this.Reset__DamageDecision();\r\n    this.Reset_BusinessTakeOver();\r\n    this.ToggleScreen_BusinessTakeOver(false);\r\n    this.ToggleBusinessScreen_DamageDecision();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region Select Player whome you have received damaging information and want to give them choice\r\n  ToggleScreen_SelectPlayerDamaging(_state) {\r\n    this.SelectPlayerDamagingScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_SelectPlayerDamaging(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    this.SelectPlayerDamagingSetup.TitleLabel.string = \"SELECT PLAYER\";\r\n    this.SelectPlayerDamagingSetup.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.SelectPlayerDamagingSetup.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.SelectPlayerDamagingSetup.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    var _mainData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.SelectPlayerDamagingSetup.DetailsPrefab);\r\n            node.parent = this.SelectPlayerDamagingSetup.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n\r\n            for (let k = 0; k < _mainData.length; k++) {\r\n              if (_mainData[k].PlayerUID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n                node.getComponent(\"PlayerDetails\").setPlayerIndex(k);\r\n                break;\r\n              }\r\n            }\r\n            selectedPlayerDamaging.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.SelectPlayerDamagingSetup.DetailsPrefab);\r\n          node.parent = this.SelectPlayerDamagingSetup.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          selectedPlayerDamaging.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.SelectPlayerDamagingSetup.ExitButton.active = false;\r\n      this.SelectPlayerDamagingSetup.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectPlayerDamagingSetup.ExitButton.active = true;\r\n      this.SelectPlayerDamagingSetup.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_SelectPlayerDamaging() {\r\n    for (let index = 0; index < selectedPlayerDamaging.length; index++) {\r\n      selectedPlayerDamaging[index].destroy();\r\n    }\r\n    selectedPlayerDamaging = [];\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Damaging information card decison setup\r\n  ToggleMainScreen_DamageDecision(_state) {\r\n    this.DecisionDamagingSetup.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleDiceResultScreen_DamageDecision(_state) {\r\n    this.DecisionDamagingSetup.DiceResultScreen.active = _state;\r\n  },\r\n\r\n  ToggleBusinessScreen_DamageDecision(_state) {\r\n    this.DecisionDamagingSetup.BusinessSelectScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_DamageDecision(_playerData, _OtherPlayerIndex = 0) {\r\n    this.Reset__DamageDecision();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _playerData;\r\n    console.log(_tempData);\r\n\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.TitleLabel.string = \"BUSINESS\";\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.CashLabel.string = _playerData.Cash;\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.PlayerNameLabel.string = _playerData.PlayerName;\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.BusinessCountLabel.string = \"No of Businesses : \" + _playerData.NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.DecisionDamagingSetup.DamageBusinessSelect.BusinessPrefab);\r\n      node.parent = this.DecisionDamagingSetup.DamageBusinessSelect.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerObject(_playerData);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerIndex(_OtherPlayerIndex);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      businessDamagingNodes.push(node);\r\n    }\r\n  },\r\n\r\n  Reset__DamageDecision() {\r\n    for (let index = 0; index < businessDamagingNodes.length; index++) {\r\n      businessDamagingNodes[index].destroy();\r\n    }\r\n\r\n    businessDamagingNodes = [];\r\n  },\r\n\r\n  EnableBusinessScreen_DamageDecision(_isTurnover = false, _playerData = null, _playerIndex = 0, _noButton = false) {\r\n    if (_noButton == false) {\r\n      if (_isTurnover) {\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.ExitButton.active = false;\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.TurnOverExitButton.active = true;\r\n      } else {\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.ExitButton.active = true;\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.TurnOverExitButton.active = false;\r\n      }\r\n    }\r\n    this.ToggleBusinessScreen_DamageDecision(true);\r\n    this.SetBusinessUI_DamageDecision(_playerData, _playerIndex);\r\n  },\r\n\r\n  SetMesageText_DamageDecision(_txt) {\r\n    this.DecisionDamagingSetup.DiceResultLabel.string = _txt;\r\n  },\r\n\r\n  EnableDiceResult_DamageDecision() {\r\n    this.ToggleDiceResultScreen_DamageDecision(true);\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _diceResult = _manager.RollTwoDices();\r\n    var _fineMultiplier = 3000;\r\n    DamageDecisionResult = _diceResult * _fineMultiplier;\r\n\r\n    var _text = \"\\n\" + \"Dice Result : \" + _diceResult + \"\\n\" + \"\\n\" + \"Amount : \" + _diceResult + \" * \" + _fineMultiplier + \" = \" + DamageDecisionResult;\r\n    this.SetMesageText_DamageDecision(_text);\r\n  },\r\n\r\n  SetSenderID_DamageDecision(ID) {\r\n    SenderDamagingID = ID;\r\n  },\r\n\r\n  ReceiveEvent_DamageDecision(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n      var _reciverID = _data.ID;\r\n      var _cashReceived = _data.Cash;\r\n      var _isDiceRolled = _data.IsDiceRolled;\r\n      var _isBankrupted = _data.IsBankRupted;\r\n\r\n      var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n      if (_myActor.PlayerUID == _reciverID) {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(false);\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().Exit_SelectPlayerGeneric();\r\n        if (_isDiceRolled) {\r\n          if (!_isBankrupted) {\r\n            _manager.PlayerGameInfo[_manager.GetTurnNumber()].Cash += _cashReceived;\r\n            this.ShowToast(\"You have received cash of $\" + _cashReceived + \", total cash becomes $\" + _manager.PlayerGameInfo[_manager.GetTurnNumber()].Cash);\r\n            _manager.completeCardTurn();\r\n          } else if (_isBankrupted) {\r\n            this.ShowToast(\"other player has been bankrupted, turn will change now.\");\r\n            _manager.completeCardTurn();\r\n          }\r\n        } else {\r\n          this.ShowToast(\"You have been given ownership to one of the business of other player.\");\r\n          _manager.completeCardTurn();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  PayAmount_DamageDecision() {\r\n    var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n    for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n      if (_manager.PlayerGameInfo[index].PlayerUID == _myActor.PlayerUID) {\r\n        if (_manager.PlayerGameInfo[index].Cash >= DamageDecisionResult) {\r\n          _manager.PlayerGameInfo[index].Cash -= DamageDecisionResult;\r\n          this.ToggleDiceResultScreen_DamageDecision(false);\r\n          this.ToggleMainScreen_DamageDecision(false);\r\n          BankRuptedCard = false;\r\n          this.ShowToast(\"You have successfully paid off amount $\" + DamageDecisionResult + \" , remaining cash $\" + _manager.PlayerGameInfo[index].Cash);\r\n\r\n          var _sendingData = { ID: SenderDamagingID, Cash: DamageDecisionResult, IsDiceRolled: true, IsBankRupted: false };\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(25, _sendingData);\r\n        } else {\r\n          BankRuptedCard = true;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_InsufficientBalance(true);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  },\r\n\r\n  SelectBusinessForHalfOwnership_DamagingDecision(_playerData, _businessIndex, _selectedPlayerIndex = 0) {\r\n    this.ExitScreen__BusinessGenric();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playersData = _manager.PlayerGameInfo;\r\n    var _myDataIndex = _manager.GetMyIndex();\r\n    var _turn = _manager.GetTurnNumber();\r\n\r\n    _playersData[_myDataIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n    _playersData[_myDataIndex].NoOfBusiness[_businessIndex].PartnerID = SenderDamagingID;\r\n    _playersData[_myDataIndex].NoOfBusiness[_businessIndex].PartnerName = _playersData[_turn].PlayerName;\r\n\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _playersData[_myDataIndex]);\r\n\r\n    this.ToggleDiceResultScreen_DamageDecision(false);\r\n    this.ToggleMainScreen_DamageDecision(false);\r\n    this.ShowToast(\"You have successfully given ownership of one of your business to other player.\");\r\n    var _sendingData = { ID: SenderDamagingID, Cash: DamageDecisionResult, IsDiceRolled: false, IsBankRupted: false };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(25, _sendingData);\r\n  },\r\n\r\n  GivePartnerShip_DamageDecision() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playersData = _manager.PlayerGameInfo;\r\n    var _myDataIndex = _manager.GetMyIndex();\r\n    var _businessLength = _playersData[_myDataIndex].NoOfBusiness.length;\r\n    var _businessCounter = 0;\r\n\r\n    for (let index = 0; index < _playersData[_myDataIndex].NoOfBusiness.length; index++) {\r\n      if (_playersData[_myDataIndex].NoOfBusiness[index].IsPartnership) {\r\n        _businessCounter++;\r\n      }\r\n    }\r\n\r\n    if (_businessCounter >= _businessLength) {\r\n      this.ShowToast(\"All of your existing businesses are with partnership with someone, you cannot select this option.\");\r\n    } else {\r\n      this.EnableBusinessScreen_DamageDecision(false, _playersData[_myDataIndex], _myDataIndex, true);\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Buy Half business\r\n  ToggleScreen_BuyHalfBusiness(_state) {\r\n    this.BuyHalfBusinessUISetup.MainScreen.active = _state;\r\n  },\r\n\r\n  SetTitleText_BuyHalfBusiness(_txt) {\r\n    this.BuyHalfBusinessUISetup.TitleLabel.string = _txt;\r\n  },\r\n  //#endregion\r\n\r\n  ShowToast: function (message, time = ShortMessageTime, _hasbutton = true) {\r\n    this.PopUpUI.active = true;\r\n    this.PopUpUILabel.string = message;\r\n    var SelfToast = this;\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (mode == 1) {\r\n      //for bot mode only\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length > 0 && GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].IsBot) {\r\n        // if (_hasbutton) {\r\n        //   this.PopUpUIButton.active = true;\r\n        //   clearTimeout(TimeoutRef);\r\n        //   TimeoutRef = setTimeout(() => {\r\n        //     this.CompleteToast();\r\n        //   }, CompletionWindowTime);\r\n        // }\r\n        // else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n        // }\r\n      } else {\r\n        if (_hasbutton) {\r\n          this.PopUpUIButton.active = true;\r\n          clearTimeout(TimeoutRef);\r\n          TimeoutRef = setTimeout(() => {\r\n            this.CompleteToast();\r\n          }, CompletionWindowTime);\r\n        } else {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n        }\r\n      }\r\n    } //for real players\r\n    else {\r\n      if (_hasbutton) {\r\n        this.PopUpUIButton.active = true;\r\n        clearTimeout(TimeoutRef);\r\n        TimeoutRef = setTimeout(() => {\r\n          this.CompleteToast();\r\n        }, CompletionWindowTime);\r\n      } else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n      }\r\n    }\r\n  },\r\n\r\n  CompleteToast() {\r\n    console.error(\"complete toast called\");\r\n    this.PopUpUI.active = false;\r\n    clearTimeout(TimeoutRef);\r\n  },\r\n\r\n  ShowResultScreen: function (_status, _data) {\r\n    this.ResultSetupUI.ResultScreen.active = true;\r\n    this.ResultSetupUI.StatusLabel.string = _status;\r\n    this.ResultSetupUI.BodyLabel.string = _data;\r\n  },\r\n\r\n  RestartTheGame() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n  },\r\n\r\n  RaiseEventToSyncInfo(_dataInfo) {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      var _data = { info: _dataInfo };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data);\r\n    } else if (_mode == 1) {\r\n      //for bot\r\n      if (this.IsBotTurn) {\r\n        var _data = { info: _dataInfo };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data);\r\n      }\r\n    }\r\n  },\r\n});\r\n"]}