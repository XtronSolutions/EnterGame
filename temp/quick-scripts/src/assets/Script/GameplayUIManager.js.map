{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","businessDetailNodes","oneQuestionNodes","businessDetailPartnershipNodes","PartnerShipData","PartnerShipOfferReceived","CancelledID","StartGameCash","SelectedBusinessPayDay","HMAmount","BMAmount","BMLocations","SelectedBusinessIndex","TurnOverForInvest","BusinessSetupCardFunctionality","GivenCashBusiness","StartAnyBusinessWithoutCash","PreviousCash","TimeoutRef","CompletionWindowTime","LongMessageTime","ShortMessageTime","PayDayInfo","InvestSellInfo","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","BusinessManipulationPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","PassedPayDayCountLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PartnershipUI","WaitingStatusScreen","MainScreen","TitleName","PlayerName","PlayerCash","PartnerShipPrefab","DecisionScreen","DecisionPlayerName","DecisionPlayerCash","DecisionDescription","ResultUI","ResultScreen","StatusLabel","BodyLabel","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PartnershipSetupUI","ResultSetupUI","PopUpUI","PopUpUILabel","PopUpUIButton","GameplayUIScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","InsufficientBalanceScreen","TempDiceText","LeaveRoomButton","ResetAllData","HBDiceCounter","BMDiceCounter","onLoad","CheckReferences","GoldInvested","GoldSold","StockInvested","StockSold","IsBotTurn","PayDayCount","IsBankrupted","BankruptedAmount","ResetTurnVariable","require","onEnable","systemEvent","on","SyncData","onDisable","off","ToggleScreen_InsufficientBalance","_state","active","Exit___InsufficientBalance","InitialScreen_SpectateMode","CloseInitialScreen_SpectateMode","console","trace","ToggleLeaveRoomButton_SpectateModeUI","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","Init_BusinessSetup","PlayerData","CardFunctionality","CardDataFunctionality","BusinessInfo","BusinessType","EnumBusinessType","Cash","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","StudentData","userID","PlayerUID","OnChangeName_BusinessSetup","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","GetObj_BusinessSetup","UID","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","ShowToast","Math","abs","parseInt","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","PushDataForPlayerLeft","_data","_mode","GetSelectedMode","_playerDataIntance","PlayerID","AvatarID","HomeBasedAmount","IsActive","_playerBusinessDataIntance","push","RaiseEvent","_ID","_playerLeft","_isSpectate","PhotonActor","getCustomProperty","MaxPlayers","GetRealActors","actorNr","getPhotonRef","myRoom","setCustomProperty","StartTurn","log","PurchaseBusiness","_amount","_businessName","_isHomeBased","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","completeCardTurn","InitialSetup_BusinessSetup","IsBankrupt","BankruptAmount","GetTurnNumber","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","undefined","IsBot","isactive","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","_isTurnOver","ResetStockBusinessNameInput","RollOneDice","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","EnablePartnership_PartnerShipSetup","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ToggleScreen_PartnerShipSetup","ToggleWaitingScreen_PartnerShipSetup","ToggleDecisionScreen_PartnerShipSetup","Reset_PartnerShipSetup","_manager","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","_totalLocations","LocationsName","SetBusinessMode","SetMode","SetBusinessValue","SetFinalBusinessValue","_allLocationsAmount","_finalAmount","SetBalance","SetLocations","IsPartnership","TogglePartnerShipButton","SetPartnerName","PartnerName","EnablePartnershipDecision_PartnerShipSetup","_msg","customProperties","PlayerSessionData","Exit_PartnerShipSetup","destroy","ReceiveEvent_PartnershipSetup","_actor","_turn","Turn","_playerData","_SelectedBusinessIndex","SelectedBusinsessIndex","_businessValue","BusValue","_payAmount","_businessMode","CheckSpectate","AcceptOffer_PartnershipSetup","_allActors","RoomActors","myIndex","GetMyIndex","RaiseEventDecisionAnswer_PartnershipSetup","CancelOffer_PartnershipSetup","_isAccepted","_payment","_isCancelled","_uID","_mainData","Accepted","CashPayment","Cancelled","BusinessIndex","ReceiveEventDecisionAnswer_PartnershipSetup","_accepted","_cash","_cancelled","_uid","PartnerID","includes","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","RaiseEventToSyncInfo","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","loanTaken","Button","interactable","GetLoanAmount_PayDay","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_forSelectedBusiness","_hMAmount","_bmAmount","_bmLocation","PaydayCounter","_time","UpdateCash_PayDay","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_doublePayDay","_dice","_amountToBeSend","_amountToBeAdjusted","_multiplier","_paydaymultiplier","SendProfit_Partner_TurnDecision","ReceivePayment_PayDay","_locations","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","StartNewGame_PayDay","emit","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","ShowInfo","info","ToggleDoublePayNextTurn","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","Reset_SellBusinessUISetup","Amount","ToggleSellLocationButton","SetBusinessUI_BusinessManipulationUISetup","SelectBusinessforPayDay","_isTurnover","EnableManipilationScreen__BusinessManipulationUISetup","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_modeIndex","RoomEssentials","IsSpectate","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","_question","message","time","_hasbutton","SelfToast","mode","clearTimeout","CompleteToast","ShowResultScreen","_status","RestartTheGame","RestartGame","_dataInfo"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager = null;\r\nvar businessDetailNodes = [];\r\nvar oneQuestionNodes = [];\r\nvar businessDetailPartnershipNodes = [];\r\nvar PartnerShipData = null;\r\nvar PartnerShipOfferReceived = false;\r\nvar CancelledID = [];\r\nvar StartGameCash = 20000;\r\nvar SelectedBusinessPayDay = false;\r\nvar HMAmount = 0;\r\nvar BMAmount = 0;\r\nvar BMLocations = 0;\r\nvar SelectedBusinessIndex = 0;\r\nvar TurnOverForInvest = false;\r\nvar BusinessSetupCardFunctionality = false;\r\nvar GivenCashBusiness = 0;\r\nvar StartAnyBusinessWithoutCash = false;\r\nvar PreviousCash = 0;\r\nvar TimeoutRef;\r\nvar CompletionWindowTime = 8000;\r\nvar LongMessageTime = 5000;\r\nvar ShortMessageTime = 2500;\r\n\r\nvar PayDayInfo = \"\";\r\nvar InvestSellInfo = \"\";\r\n\r\n// var CompletionWindowTime = 500;//8000\r\n// var LongMessageTime = 250;//5000\r\n// var ShortMessageTime = 50;//2500\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n  None: 0,\r\n  TenThousand: 10000,\r\n  TentyThousand: 20000,\r\n  ThirtyThousand: 30000,\r\n  FortyThousand: 40000,\r\n  FiftyThousand: 50000,\r\n  Other: 6,\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI = cc.Class({\r\n  name: \"BusinessSetupUI\",\r\n\r\n  properties: {\r\n    PlayerNameUI: {\r\n      displayName: \"PlayerNameUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player name\",\r\n    },\r\n    PlayerCashUI: {\r\n      displayName: \"PlayerCashUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player cash\",\r\n    },\r\n    BusinessTypeTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business type\",\r\n    },\r\n    BusinessNameTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business name\",\r\n    },\r\n    BusinessTypeLabel: {\r\n      displayName: \"BusinessTypeLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"reference for business type editbox\",\r\n    },\r\n    BusinessNameLabel: {\r\n      displayName: \"BusinessNameLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"referece for business name editbox\",\r\n    },\r\n    HomeBasedNodeUI: {\r\n      displayName: \"HomeBasedNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for home based business\",\r\n    },\r\n    BrickAndMortarNodeUI: {\r\n      displayName: \"BrickAndMortarNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for brick and mortar business\",\r\n    },\r\n    TimerUI: {\r\n      displayName: \"TimerUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the label for timer\",\r\n    },\r\n    TimerNode: {\r\n      displayName: \"TimerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for timer node in business setup\",\r\n    },\r\n    BusinessSetupNode: {\r\n      displayName: \"BusinessSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for business setup\",\r\n    },\r\n    LoanSetupNode: {\r\n      displayName: \"LoanSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for loan setup\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: LoanAmountEnum,\r\n      default: LoanAmountEnum.None,\r\n      serializable: true,\r\n      tooltip: \"loan amount taken by player (state machine)\",\r\n    },\r\n    LoanAmountLabel: {\r\n      displayName: \"LoanAmountLabel\",\r\n      type: [cc.Node],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Reference for all labels of amounts in loan UI\",\r\n    },\r\n    WaitingStatusNode: {\r\n      displayName: \"WaitingStatusNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for waiting status screen on initial business setup\",\r\n    },\r\n    ExitButtonNode: {\r\n      displayName: \"ExitButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for exit button node in business setup\",\r\n    },\r\n    \r\n  },\r\n  ctor: function () {\r\n    //constructor//\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI = cc.Class({\r\n  name: \"TurnDecisionSetupUI\",\r\n\r\n  properties: {\r\n    MarketingEditBox: {\r\n      displayName: \"MarketingEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of marketing node\",\r\n    },\r\n    GoldEditBox: {\r\n      displayName: \"GoldEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest gold node\",\r\n    },\r\n    StockEditBox: {\r\n      displayName: \"StockEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest stock node\",\r\n    },\r\n    CashAmountLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to cash node\",\r\n    },\r\n    ExpandBusinessNode: {\r\n      displayName: \"ExpandBusinessNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for expnad business node\",\r\n    },\r\n    ExpandBusinessScrollContent: {\r\n      displayName: \"ExpandBusinessScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"Reference for content node of scroll view of expand business node\",\r\n    },\r\n    ExpandBusinessPrefab: {\r\n      displayName: \"ExpandBusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for prefab of expand business node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n  None: 0,\r\n  StockInvest: 1,\r\n  GoldInvest: 2,\r\n  StockSell: 3,\r\n  GoldSell: 4,\r\n  Other: 5,\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI = cc.Class({\r\n  name: \"InvestSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of invest&sell node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Dice Result of invest&sell node\",\r\n    },\r\n    PriceTitleLabel: {\r\n      displayName: \"PriceTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price Title of invest&sell node\",\r\n    },\r\n    PriceValueLabel: {\r\n      displayName: \"PriceValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price value of invest&sell node\",\r\n    },\r\n    BuyOrSellTitleLabel: {\r\n      displayName: \"BuyOrSellTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of BuyOrSell Title of invest&sell node\",\r\n    },\r\n    TotalAmountTitleLabel: {\r\n      displayName: \"TotalAmountTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Title of invest&sell node\",\r\n    },\r\n    TotalAmountValueLabel: {\r\n      displayName: \"TotalAmountValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Value of invest&sell node\",\r\n    },\r\n    ButtonNameLabel: {\r\n      displayName: \"ButtonName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of button name of invest&sell node\",\r\n    },\r\n    InvestState: {\r\n      displayName: \"InvestState\",\r\n      type: InvestEnum,\r\n      default: InvestEnum.None,\r\n      serializable: true,\r\n    },\r\n    AmountEditBox: {\r\n      displayName: \"AmountEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI = cc.Class({\r\n  name: \"SellBusinessUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessSellPrefab: {\r\n      displayName: \"BusinessSellPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessSellPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI = cc.Class({\r\n  name: \"PayDayUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of PayDay node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of PayDay node\",\r\n    },\r\n    HomeBasedNumberLabel: {\r\n      displayName: \"HomeBasedNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedNumber node\",\r\n    },\r\n    BMNumberLabel: {\r\n      displayName: \"BrickMortarNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarNumber node\",\r\n    },\r\n    BMNumberLocationLabel: {\r\n      displayName: \"BrickMortarLocations\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarLocations node\",\r\n    },\r\n    PassedPayDayCountLabel: {\r\n      displayName: \"PassedPayDayCountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of PassedPayDayCountLabel node\",\r\n    },\r\n    HomeBasedBtn: {\r\n      displayName: \"HomeBasedBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedBtn node\",\r\n    },\r\n    BMBtn: {\r\n      displayName: \"BrickMortarBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarBtn node\",\r\n    },\r\n    LoanBtn: {\r\n      displayName: \"LoanBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanBtn node\",\r\n    },\r\n    MainPanelNode: {\r\n      displayName: \"MainPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of MainPanel node\",\r\n    },\r\n    ResultPanelNode: {\r\n      displayName: \"ResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultPanel node\",\r\n    },\r\n    LoanResultPanelNode: {\r\n      displayName: \"LoanResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanResultPanelNode node\",\r\n    },\r\n    ResultScreenTitleLabel: {\r\n      displayName: \"ResultScreenTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultScreenTitle node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of DiceResult node\",\r\n    },\r\n    TotalBusinessLabel: {\r\n      displayName: \"TotalBusinessLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalBusiness node\",\r\n    },\r\n    TotalAmountLabel: {\r\n      displayName: \"TotalAmountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount node\",\r\n    },\r\n    SkipLoanButton: {\r\n      displayName: \"SkipLoanButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of SkipLoanButton node\",\r\n    },\r\n    LoanFotterLabel: {\r\n      displayName: \"LoanFotterLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanFotterLabel node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI = cc.Class({\r\n  name: \"InvestUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Invest node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Invest node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Invest node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Invest node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of Invest node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI = cc.Class({\r\n  name: \"BuyOrSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of BuyOrSell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of BuyOrSell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of BuyOrSell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of BuyOrSell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI = cc.Class({\r\n  name: \"OneQuestionUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n    WaitingScreen: {\r\n      displayName: \"WaitingScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreen of OneQuestion node\",\r\n    },\r\n    DecisionTitleLabel: {\r\n      displayName: \"DecisionTitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    DecisionCashLabel: {\r\n      displayName: \"DecisionCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    DecisionPlayerNameLabel: {\r\n      displayName: \"DecisionPlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DecisionQuestionLabel: {\r\n      displayName: \"DecisionQuestionLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of player question of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PartnershipUI-------------------------//\r\nvar PartnershipUI = cc.Class({\r\n  name: \"PartnershipUI\",\r\n  properties: {\r\n    WaitingStatusScreen: {\r\n      displayName: \"WaitingStatusScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the waiting screen node of partnership ui\",\r\n    },\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PartnerShipPrefab: {\r\n      displayName: \"PartnerShipPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerName: {\r\n      displayName: \"DecisionPlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerCash: {\r\n      displayName: \"DecisionPlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionDescription: {\r\n      displayName: \"DecisionDescription\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for ResultUI-------------------------//\r\nvar ResultUI = cc.Class({\r\n  name: \"ResultUI\",\r\n  properties: {\r\n    ResultScreen: {\r\n      displayName: \"ResultScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    StatusLabel: {\r\n      displayName: \"StatusLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    BodyLabel: {\r\n      displayName: \"BodyLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount = \"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount = \"\";\r\nvar EnterBuySellAmount = \"\";\r\nvar StockBusinessName = \"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName = \"\";\r\n\r\nvar HomeBasedPaymentCompleted = false;\r\nvar BrickMortarPaymentCompleted = false;\r\nvar LoanPayed = false;\r\nvar TotalPayDayAmount = 0;\r\nvar DoublePayDay = false;\r\n\r\nvar GameplayUIManager = cc.Class({\r\n  name: \"GameplayUIManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    BusinessSetupData: {\r\n      default: null,\r\n      type: BusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessSetupUI class\",\r\n    },\r\n    TurnDecisionSetupUI: {\r\n      default: null,\r\n      type: TurnDecisionSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of TurnDecisionSetupUI class\",\r\n    },\r\n    InvestSellSetupUI: {\r\n      default: null,\r\n      type: InvestSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    PayDaySetupUI: {\r\n      default: null,\r\n      type: PayDayUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    SellBusinessSetupUI: {\r\n      default: {},\r\n      type: SellBusinessUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SellBusinessUI class\",\r\n    },\r\n    InvestSetupUI: {\r\n      default: {},\r\n      type: InvestUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestUI class\",\r\n    },\r\n    BuyOrSellSetupUI: {\r\n      default: {},\r\n      type: BuyOrSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyOrSellUI class\",\r\n    },\r\n    OneQuestionSetupUI: {\r\n      default: {},\r\n      type: OneQuestionUI,\r\n      serializable: true,\r\n      tooltip: \"reference of OneQuestionUI class\",\r\n    },\r\n    PartnershipSetupUI: {\r\n      default: {},\r\n      type: PartnershipUI,\r\n      serializable: true,\r\n      tooltip: \"reference of PartnershipUI class\",\r\n    },\r\n    ResultSetupUI: {\r\n      default: {},\r\n      type: ResultUI,\r\n      serializable: true,\r\n      tooltip: \"reference of ResultUI class\",\r\n    },\r\n    PopUpUI: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    PopUpUILabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for pop up screen\",\r\n    },\r\n    PopUpUIButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    BusinessSetupNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for business setup screen\",\r\n    },\r\n    GameplayUIScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for gameplay ui screen\",\r\n    },\r\n    DecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Decision screen\",\r\n    },\r\n    InvestSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest & sell screen\",\r\n    },\r\n    PayDayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for PayDay screen\",\r\n    },\r\n    SellBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellBusiness screen\",\r\n    },\r\n    InvestScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest screen\",\r\n    },\r\n    BuyOrSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BuyOrSell screen\",\r\n    },\r\n    OneQuestionSpaceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionSpace screen\",\r\n    },\r\n    OneQuestionDecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionDecision screen\",\r\n    },\r\n    InsufficientBalanceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for InsufficientBalanceScreen screen\",\r\n    },\r\n    TempDiceText: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for dice\",\r\n    },\r\n    LeaveRoomButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ResetAllData()\r\n  {\r\n     GameManager = null;\r\n     GamePlayReferenceManager = null;\r\n     businessDetailNodes = [];\r\n     oneQuestionNodes = [];\r\n     businessDetailPartnershipNodes = [];\r\n     PartnerShipData = null;\r\n     PartnerShipOfferReceived = false;\r\n     CancelledID = [];\r\n     SelectedBusinessPayDay = false;\r\n     HMAmount = 0;\r\n     BMAmount = 0;\r\n     BMLocations = 0;\r\n     SelectedBusinessIndex = 0;\r\n     TurnOverForInvest = false;\r\n     BusinessSetupCardFunctionality = false;\r\n     GivenCashBusiness = 0;\r\n     StartAnyBusinessWithoutCash = false;\r\n     PreviousCash = 0;\r\n     TimeoutRef=null;\r\n\r\n     InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n     //turn decisions\r\n     TempMarketingAmount = \"\";\r\n     TempHiringLawyer;\r\n     \r\n     //buyorsell\r\n      GoldCashAmount = \"\";\r\n      EnterBuySellAmount = \"\";\r\n      StockBusinessName = \"\";\r\n      DiceResult=0;\r\n      OnceOrShare;\r\n      LocationName = \"\";\r\n\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      TotalPayDayAmount = 0;\r\n      DoublePayDay = false;\r\n\r\n      HBDiceCounter = 0;\r\n      BMDiceCounter = 0;\r\n      PayDayInfo = \"\";  \r\n      InvestSellInfo = \"\";\r\n  },\r\n\r\n  onLoad() {\r\n    this.ResetAllData();\r\n    this.CheckReferences();\r\n\r\n    //local variables\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n    this.IsBotTurn = false;\r\n    this.PayDayCount = 0;\r\n    this.IsBankrupted = false;\r\n    this.BankruptedAmount = 0;\r\n  },\r\n\r\n  ResetTurnVariable() {\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null)\r\n      GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n\r\n    if (!GameManager || GameManager == null)\r\n      GameManager = require(\"GameManager\");\r\n  },\r\n\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  ToggleScreen_InsufficientBalance(_state)\r\n  {\r\n    this.InsufficientBalanceScreen.active = _state;\r\n  },\r\n\r\n  Exit___InsufficientBalance()\r\n  {\r\n    this.ToggleScreen_InsufficientBalance(false);\r\n  },\r\n  //#region Spectate UI Setup\r\n  InitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = true;\r\n  },\r\n\r\n  CloseInitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = false;\r\n    console.trace(\"closedddddddddddddddddddddddddddddddddddd\");\r\n  },\r\n\r\n  ToggleLeaveRoomButton_SpectateModeUI(_state) {\r\n    this.LeaveRoomButton.active = _state;\r\n  },\r\n\r\n  OnLeaveButtonClicked_SpectateModeUI() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(\r\n      true\r\n    );\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"MainMenu\");\r\n    }, 500);\r\n  },\r\n  //#endregion\r\n\r\n  //#region BusinessSetup with loan\r\n  //Business setup ui//------------------------\r\n  StartNewBusiness_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false,\r\n    _BankruptAmount = 0,\r\n    _isCardFunctionality = false,\r\n    _GivenCash = 0,\r\n    _StartAnyBusinessWithoutCash=false\r\n  ) {\r\n    //called first time form GameManager onload function\r\n    this.CheckReferences();\r\n    this.BusinessSetupNode.active = true;\r\n\r\n     BusinessSetupCardFunctionality = _isCardFunctionality;\r\n     GivenCashBusiness = _GivenCash;\r\n     StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n    \r\n    this.IsBankrupted = _isBankrupted;\r\n    this.BankruptedAmount = _BankruptAmount;\r\n\r\n    if (_isBankrupted) this.ResetTurnVariable();\r\n\r\n    this.Init_BusinessSetup(isFirstTime, insideGame, modeIndex, _isBankrupted);\r\n  },\r\n  Init_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false,\r\n  ) {\r\n    PlayerDataIntance = new GameManager.PlayerData();\r\n    PlayerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n    PlayerBusinessDataIntance = new GameManager.BusinessInfo();\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n\r\n    if (isFirstTime) {\r\n      this.BusinessSetupData.ExitButtonNode.active = false;\r\n      this.BusinessSetupData.TimerNode.active = true;\r\n      PlayerDataIntance.Cash = StartGameCash;\r\n    }\r\n\r\n    this.ResetButtonStates_BusinessSetup();\r\n\r\n    if (insideGame) {\r\n      this.BusinessSetupData.ExitButtonNode.active = true;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n\r\n      for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID == GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID)\r\n        {\r\n          InsideGameBusinessSetup = index;\r\n          PlayerDataIntance = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n          if (BusinessSetupCardFunctionality) {\r\n            if (StartAnyBusinessWithoutCash) {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = 0;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n            }\r\n            else {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = GivenCashBusiness;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n            }\r\n            \r\n          }\r\n          else {\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n            this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      InsideGameBusinessSetup = -1;\r\n      this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n      this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n      this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n    }\r\n  },\r\n  GetObj_BusinessSetup: function () {\r\n    return this.BusinessSetupData;\r\n  },\r\n  OnChangeName_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n    PlayerDataIntance.PlayerName = name;\r\n  },\r\n  OnChangeUID_BusinessSetup: function (UID) {\r\n    PlayerDataIntance.PlayerUID = UID;\r\n  },\r\n  OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessTypeTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessTypeDescription = name;\r\n  },\r\n  OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessNameTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessName = name;\r\n  },\r\n  ResetButtonStates_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BusinessTypeLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameTextUI = \"\";\r\n    this.BusinessSetupData.BusinessTypeTextUI = \"\";\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n  },\r\n  OnHomeBasedSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = true;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =GameManager.EnumBusinessType.HomeBased;\r\n  },\r\n  OnBrickMortarSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = true;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =GameManager.EnumBusinessType.brickAndmortar;\r\n  },\r\n  OnChangeCash_BusinessSetup: function (amount) {\r\n    this.BusinessSetupData.PlayerCashUI.string = \"$\" + amount;\r\n    PlayerDataIntance.Cash = amount;\r\n  },\r\n  CalculateLoan_BusinessSetup: function (amount) {\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    if (!BusinessSetupCardFunctionality) {\r\n      for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n        if (PlayerDataIntance.NoOfBusiness[index].LoanTaken) {\r\n          _loanTaken = true;\r\n          _businessIndex = index;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_loanTaken) {\r\n        this.ShowToast(\"You have already taken loan of $\" +PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount,LongMessageTime);\r\n      } else {\r\n        if (PlayerDataIntance.Cash >= amount) {\r\n          this.ShowToast(\r\n            \"You do not need loan, you have enough cash to buy current selected business.\",LongMessageTime);\r\n        } else {\r\n          this.BusinessSetupData.LoanSetupNode.active = true;\r\n          RequiredCash = Math.abs(parseInt(PlayerDataIntance.Cash) - amount);\r\n          this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(\r\n            cc.Label\r\n          ).string = \"$\" + RequiredCash;\r\n        }\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanButtonClicked_BusinessSetup: function (event) {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar) {\r\n        this.CalculateLoan_BusinessSetup(50000);\r\n      } else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased) {\r\n        this.CalculateLoan_BusinessSetup(10000);\r\n      } else {\r\n        this.ShowToast(\"please select business between Home Based and brick & mortar.\");\r\n      }\r\n    }else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanBackButtonClicked_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanSetupNode.active = false;\r\n  },\r\n  HighLightLoanSelection_BusinessSetup: function (index) {\r\n    for (var i = 0; i < this.BusinessSetupData.LoanAmountLabel.length; i++) {\r\n      if (index == i)\r\n        this.BusinessSetupData.LoanAmountLabel[i].children[0].active = true;\r\n      else this.BusinessSetupData.LoanAmountLabel[i].children[0].active = false;\r\n    }\r\n  },\r\n  OnLoanAmountChoosed_01_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.Other;\r\n    this.HighLightLoanSelection_BusinessSetup(0);\r\n  },\r\n  OnLoanAmountChoosed_02_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TenThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(1);\r\n  },\r\n  OnLoanAmountChoosed_03_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TentyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(2);\r\n  },\r\n  OnLoanAmountChoosed_04_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.ThirtyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(3);\r\n  },\r\n  OnLoanAmountChoosed_05_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FortyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(4);\r\n  },\r\n  OnLoanAmountChoosed_06_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FiftyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(5);\r\n  },\r\n  OnTakenLoanClicked_BusinessSetup: function (event) {\r\n    if (this.BusinessSetupData.LoanAmount == LoanAmountEnum.Other)\r\n      PlayerBusinessDataIntance.LoanAmount = RequiredCash;\r\n    else\r\n      PlayerBusinessDataIntance.LoanAmount = parseInt(\r\n        this.BusinessSetupData.LoanAmount\r\n      );\r\n\r\n    PlayerBusinessDataIntance.LoanTaken = true;\r\n    this.OnLoanBackButtonClicked_BusinessSetup();\r\n    PlayerDataIntance.Cash =\r\n      PlayerDataIntance.Cash + PlayerBusinessDataIntance.LoanAmount;\r\n    this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n  },\r\n\r\n  PushDataForPlayerLeft(_data)\r\n  {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    if (_mode == 2) {\r\n\r\n      _playerDataIntance = new GameManager.PlayerData();\r\n      _playerDataIntance.Cash = 20000;\r\n      _playerDataIntance.PlayerID = _data.userID;\r\n      _playerDataIntance.PlayerName = _data.name;\r\n      _playerDataIntance.AvatarID = 0;\r\n      _playerDataIntance.HomeBasedAmount = 1;\r\n      _playerDataIntance.IsActive = false;\r\n      _playerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n      _playerBusinessDataIntance = new GameManager.BusinessInfo();\r\n      _playerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.HomeBased;\r\n      _playerBusinessDataIntance.BusinessTypeDescription = \"Saloon\";\r\n      _playerBusinessDataIntance.BusinessName = \"Eva Beauty\";\r\n      _playerDataIntance.NoOfBusiness.push(_playerBusinessDataIntance);\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1, _playerDataIntance);\r\n    }\r\n  },\r\n  SyncData: function (_data, _ID,_playerLeft=false) {\r\n\r\n    var _isSpectate = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"];\r\n\r\n    if (_isSpectate)\r\n    {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetRealActors();\r\n    }\r\n    \r\n    if (!_playerLeft) {\r\n      if (_ID != GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr)\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n    }\r\n\r\n   // console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length >=GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers) {\r\n      //setting room property to declare initial setup has been\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\"InitialSetup\", true, true);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\r\n          \"PlayerGameInfo\",\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo,\r\n          true\r\n        );\r\n      this.BusinessSetupData.WaitingStatusNode.active = false;\r\n      this.BusinessSetupNode.active = false;\r\n      this.GameplayUIScreen.active = true;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n      console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n    }\r\n  },\r\n\r\n  PurchaseBusiness: function (_amount, _businessName, _isHomeBased) {\r\n    if (PlayerDataIntance.Cash < _amount && !StartAnyBusinessWithoutCash) {\r\n      this.ShowToast(\"You have not enough cash to buy this \" + _businessName + \" business.\",LongMessageTime);\r\n    } else {\r\n      if (_isHomeBased) {\r\n        if (PlayerDataIntance.HomeBasedAmount < 3) {\r\n\r\n          if (!StartAnyBusinessWithoutCash) {\r\n            PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n            this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n          }\r\n\r\n          this.StartGame = true;\r\n          PlayerDataIntance.HomeBasedAmount++;\r\n        } else {\r\n          this.StartGame = false;\r\n          this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n        }\r\n      } else {\r\n        if (!StartAnyBusinessWithoutCash) {\r\n          PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n          this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n        }\r\n        this.StartGame = true;\r\n        PlayerDataIntance.BrickAndMortarAmount++;\r\n      }\r\n    }\r\n  },\r\n\r\n  Exit_BusinessSetup: function () {\r\n    if(!BusinessSetupCardFunctionality)\r\n    {\r\n      this.BusinessSetupNode.active = false;\r\n\r\n      if (PlayerBusinessDataIntance.LoanTaken) {\r\n        PlayerBusinessDataIntance.LoanTaken = false;\r\n        PlayerDataIntance.Cash =\r\n          PlayerDataIntance.Cash - PlayerBusinessDataIntance.LoanAmount;\r\n        PlayerBusinessDataIntance.LoanAmount = 0;\r\n        this.ShowToast(\"Reverting back loan amount.\");\r\n      }\r\n    } else\r\n    {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  InitialSetup_BusinessSetup: function () {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (this.IsBankrupted) {\r\n      PlayerDataIntance.IsBankrupt = true;\r\n      PlayerDataIntance.BankruptAmount = this.BankruptedAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()] = PlayerDataIntance;\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n    }\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      //setting player current data in custom properties when his/her turn overs\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n\r\n      if (!this.IsBankrupted) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1,PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n\r\n        var _data = {Data: {bankrupted: true,turn: GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(),PlayerDataMain: PlayerDataIntance,},};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(9, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else if (_mode == 1) {\r\n      //for AI\r\n      if (!this.IsBankrupted) {\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n        setTimeout(() => {\r\n          this.BusinessSetupData.WaitingStatusNode.active = false;\r\n          this.BusinessSetupNode.active = false;\r\n          this.GameplayUIScreen.active = true;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n        }, 1600);\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else {\r\n      console.error(\"no mode selected\");\r\n    }\r\n  },\r\n\r\n  StartNewSetup_DuringGame_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      this.ToggleDecision_TurnDecision(true);\r\n    }\r\n    else\r\n    {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;  \r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  PayAmountToPlayGame: function () {\r\n    this.StartGame = false;\r\n\r\n    if (PlayerBusinessDataIntance.BusinessTypeDescription == \"\")\r\n      this.ShowToast(\"please write a business type.\");\r\n    else if (PlayerBusinessDataIntance.BusinessName == \"\")\r\n      this.ShowToast(\"please write a business name.\");\r\n    else {\r\n\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.None || PlayerBusinessDataIntance.BusinessType==undefined)\r\n      {\r\n        this.ShowToast(\"please select a business\");\r\n        return;\r\n      }\r\n      \r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased)\r\n        //if selected business is homebassed\r\n        this.PurchaseBusiness(10000, \"home\", true);\r\n      else if (\r\n        PlayerBusinessDataIntance.BusinessType ==GameManager.EnumBusinessType.brickAndmortar)\r\n        //if selected business is brick and mortar\r\n        this.PurchaseBusiness(50000, \"brick and mortar\", false);\r\n\r\n      if (this.StartGame == true || this.IsBankrupted == true) {\r\n        PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n        if (InsideGameBusinessSetup != -1) {\r\n          //if start new business has not been called from inside game\r\n          this.StartNewSetup_DuringGame_BusinessSetup();\r\n        }\r\n        //if start new business has been called at start of game as initial setup\r\n        else {\r\n          this.InitialSetup_BusinessSetup();\r\n        }\r\n\r\n        //prtinting all values to console\r\n        for (var i = 0;i <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;i++) {\r\n          console.log(\"player name: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n          console.log(\"player ID: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n          console.log(\"Is player bot: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n          console.log(\"no of business of player (see below): \");\r\n          console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n          console.log(\"player cash: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n          console.log(\"player taken loan: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n          console.log(\"taken loan amount: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region TurnDecisionSetupUI\r\n  //TurnDecisionSetupUI//------------------------\r\n  ToggleDecision_TurnDecision: function (isactive) {\r\n    this.DecisionScreen.active = isactive;\r\n    this.UpdateCash_TurnDecision();\r\n  },\r\n\r\n  UpdateCash_TurnDecision: function () {\r\n    this.TurnDecisionSetupUI.CashAmountLabel.string =\r\n      \"$ \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()\r\n      ].Cash;\r\n  },\r\n\r\n  OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    TempMarketingAmount = amount;\r\n  },\r\n\r\n  OnMarketingAmountSelected_TurnDecision: function () {\r\n    if (TempMarketingAmount == \"\" || TempMarketingAmount == null) {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      this.marketingAmount = parseInt(TempMarketingAmount);\r\n      console.log(\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash\r\n      );\r\n\r\n      //if player entered amount is greater than total cash he owns\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= this.marketingAmount\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - this.marketingAmount;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].MarketingAmount =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].MarketingAmount + this.marketingAmount;\r\n        this.ShowToast(\r\n          \"you successfully marketed amount of $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].MarketingAmount +\r\n            \" , remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\",LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you don't have enough money.\");\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      }\r\n    }\r\n  },\r\n\r\n  OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n    // if player has more than 5000$\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    if (\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        _playerIndex\r\n      ].LawyerStatus\r\n    ) {\r\n      this.ShowToast(\"you have already hired a lawyer.\");\r\n    } else {\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= 5000\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].LawyerStatus = true;\r\n        TempHiringLawyer = true;\r\n        console.log(TempHiringLawyer);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - 5000;\r\n        this.ShowToast(\r\n          \"you have successfully hired a lawyer, remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\",LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n      } else {\r\n        this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  onLocationNameChanged_ExpandBusiness_TurnDecision(_name) {\r\n    LocationName = _name;\r\n  },\r\n  OnExpandButtonClicked_TurnDecision: function (event=null,_isCardFunctionality = false,_GivenCash = 0,_StartAnyBusinessWithoutCash=false) {\r\n    //if player has brick and mortar business he could expand it\r\n    console.log(\"expand business\");\r\n    \r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = true;\r\n    var generatedLength = GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision(BusinessSetupCardFunctionality,GivenCashBusiness,StartAnyBusinessWithoutCash);\r\n\r\n    if (generatedLength == 0) {\r\n      this.ShowToast(\"You have no brick and mortar business to expand.\");\r\n      setTimeout(() => {\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      }, 1600);\r\n    }\r\n  },\r\n\r\n  OnExpandButtonExitClicked_TurnDecision: function () {\r\n    if (!BusinessSetupCardFunctionality)\r\n    {\r\n      this.UpdateCash_TurnDecision();\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n    }\r\n    else\r\n    {\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  OnNewBusinessButtonClicked_TurnDecision: function () {\r\n    console.log(\"starting new business\");\r\n    this.StartNewBusiness_BusinessSetup(false, true);\r\n  },\r\n\r\n  OnGoldAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    GoldCashAmount = amount;\r\n  },\r\n\r\n  OnGoldDiceClicked_TurnDecision: function () {\r\n    if (!this.GoldInvested) {\r\n      this.GoldInvested = true;\r\n      EnterBuySellAmount = \"\";\r\n      this.ToggleInvestSellScreen_InvestSell(true);\r\n      this.InvestSellSetupUI.InvestState = InvestEnum.GoldInvest;\r\n      DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n      OnceOrShare = DiceResult * 1000;\r\n\r\n      this.AssignData_InvestSell(\r\n        \"Invest In GOLD\",\r\n        DiceResult,\r\n        \"Each Ounce of GOLD price is:\",\r\n        OnceOrShare + \"/ounce\",\r\n        \"Enter the number of ounce of GOLD you want to BUY\",\r\n        \"Total Buying Amount:\",\r\n        OnceOrShare + \"*0=0\",\r\n        \"BUY\",\r\n        this.InvestSellSetupUI.InvestState\r\n      );\r\n    } else {\r\n      this.ShowToast(\"You can invest in gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n    StockBusinessName = name;\r\n  },\r\n\r\n  OnStockDiceClicked_TurnDecision: function (event=null,_isTurnOver=false) {\r\n    TurnOverForInvest = _isTurnOver;\r\n\r\n    console.error(_isTurnOver);\r\n\r\n    if (TurnOverForInvest)\r\n      StockBusinessName = \"Friend's Business\";\r\n      \r\n    if (!this.StockInvested || TurnOverForInvest) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (StockBusinessName == \"\") {\r\n        this.ResetStockBusinessNameInput();\r\n        this.ShowToast(\"Please enter a business name to invest.\");\r\n      } else {\r\n        this.StockInvested = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockInvest;\r\n\r\n        if(!TurnOverForInvest)\r\n          DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        else\r\n          DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n        \r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Invest in Stock\",\r\n          DiceResult,\r\n          \"Each Share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to BUY\",\r\n          \"Total Buying Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"BUY\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can invest in stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellGoldClicked_TurnDecision: function () {\r\n    if (!this.GoldSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].GoldCount > 0\r\n      ) {\r\n        this.GoldSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.GoldSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell GOLD\",\r\n          DiceResult,\r\n          \"Each Ounce of GOLD price is:\",\r\n          OnceOrShare + \"/ounce\",\r\n          \"Enter the number of ounce of GOLD you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\r\n          \"you have not purchased any GOLD ounces, please buy them.\"\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellStockClicked_TurnDecision: function () {\r\n    if (!this.StockSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].StockCount > 0\r\n      ) {\r\n        this.StockSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell STOCK\",\r\n          DiceResult,\r\n          \"Each share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnPartnershipClicked_TurnDecision: function () {\r\n    console.log(\"go into partner ship\");\r\n    // this.ShowToast(\"work in progress, coming soon...\");\r\n    // var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    this.EnablePartnership_PartnerShipSetup();\r\n  },\r\n\r\n  OnRollDiceClicked_TurnDecision: function () {\r\n    console.log(\"roll the dice\");\r\n    this.ToggleDecision_TurnDecision(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n  },\r\n\r\n  PrintDiceValue_TurnDecision: function (value) {\r\n    //this.TempDiceText.string=value;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Partnership setup\r\n  ToggleScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.WaitingStatusScreen.active = _state;\r\n  },\r\n\r\n  ToggleDecisionScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.DecisionScreen.active = _state;\r\n  },\r\n\r\n  EnablePartnership_PartnerShipSetup() {\r\n    CancelledID = [];\r\n    this.Reset_PartnerShipSetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.ToggleScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.PlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.PlayerCash.string =\"$\"+_tempData.Cash;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.PartnershipSetupUI.PartnerShipPrefab);\r\n      node.parent = this.PartnershipSetupUI.ScrollContent;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n        var _allLocationsAmount = _totalLocations * 25000;\r\n        var _finalAmount = 50000 + _allLocationsAmount;\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n      }\r\n      else {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n      }\r\n\r\n      businessDetailPartnershipNodes.push(node);\r\n      \r\n    }\r\n  },\r\n\r\n  EnablePartnershipDecision_PartnerShipSetup(_msg) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.ToggleDecisionScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.DecisionPlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.DecisionPlayerCash.string =\"$\"+_tempData.Cash;\r\n    this.PartnershipSetupUI.DecisionDescription.string = _msg;\r\n  },\r\n\r\n  Exit_PartnerShipSetup() {\r\n    this.Reset_PartnerShipSetup();\r\n    this.ToggleScreen_PartnerShipSetup(false);\r\n  },\r\n  \r\n  Reset_PartnerShipSetup()\r\n  {\r\n    for (let index = 0; index < businessDetailPartnershipNodes.length; index++) {\r\n      businessDetailPartnershipNodes[index].destroy();\r\n    }\r\n    businessDetailPartnershipNodes = [];\r\n  },\r\n\r\n  ReceiveEvent_PartnershipSetup(_data)\r\n  {\r\n    PartnerShipOfferReceived = true;\r\n    PartnerShipData = _data;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 1)\r\n      _businessMode = \"Home Based\";\r\n    else if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 2)\r\n      _businessMode = \"Brick & Mortar\";\r\n      \r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false)\r\n    {\r\n      var _msg = \"you have received partnership offer by \" + _playerData.PlayerName + \" , following are the details of business: \" + \"\\n\" + \"\\n\" +\r\n        \"Business Name: \" + _playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessName + \"\\n\" +\r\n        \"Business Mode: \" + _businessMode + \"\\n\" +\r\n        \"Business Value: $\" + _businessValue + \"\\n\" +\r\n        \"Cash Payment: $\" + _payAmount + \"\\n\" + \"\\n\" +\r\n        \"if offer is accepted you will receive 50% share of that particular business and will receive profit/lose on that particular business.\";\r\n    \r\n      this.EnablePartnershipDecision_PartnerShipSetup(_msg);\r\n    }\r\n\r\n  },\r\n\r\n  AcceptOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _allActors = GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _data = PartnerShipData;\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    var myIndex = _manager.GetMyIndex();\r\n  \r\n    if (PartnerShipOfferReceived == true) {\r\n      if (_manager.PlayerGameInfo[myIndex].Cash >= _payAmount) {\r\n        _manager.PlayerGameInfo[myIndex].Cash -= _payAmount;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[myIndex]);\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(true, _payAmount, false, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"congratulations! you have started business partnership\");\r\n      } else {\r\n        this.ShowToast(\"Not enough cash.\");\r\n      }\r\n    } else\r\n    {\r\n      this.ShowToast(\"Offer has been accepted by other player.\");\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      }\r\n  },\r\n\r\n  CancelOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _data = PartnerShipData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var myIndex = _manager.GetMyIndex();\r\n    console.log(_manager.PlayerGameInfo[myIndex].PlayerUID);\r\n    if (PartnerShipOfferReceived == true) {\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(false, 0, true, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"you have cancelled the offer.\");\r\n    } else\r\n    {\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    }\r\n  },\r\n\r\n  RaiseEventDecisionAnswer_PartnershipSetup(_isAccepted=false,_payment=0,_isCancelled=false,_uID=\"\",_data=null,_businessIndex=0)\r\n  {\r\n    var _mainData = { Data: { Accepted: _isAccepted, CashPayment:_payment,Cancelled:_isCancelled,PlayerID:_uID,PlayerData:_data,BusinessIndex:_businessIndex} };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(12, _mainData);\r\n  },\r\n\r\n  ReceiveEventDecisionAnswer_PartnershipSetup(_data)\r\n  {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = _manager.GetTurnNumber();\r\n\r\n      console.log(_data);\r\n      var _accepted = _data.Data.Accepted;\r\n      var _cash = _data.Data.CashPayment;\r\n      var _cancelled = _data.Data.Cancelled;\r\n      var _uid = _data.Data.PlayerID;\r\n      var _playerData = _data.Data.PlayerData;\r\n      var _businessIndex = _data.Data.BusinessIndex;\r\n    \r\n      console.log(\"answer received\");\r\n      if(_manager.PlayerGameInfo[_playerIndex].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n      {\r\n        if (_accepted) {\r\n          this.ToggleScreen_PartnerShipSetup(false);\r\n          this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n          _manager.PlayerGameInfo[_playerIndex].Cash += _cash;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerID = _uid;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerName = _playerData.PlayerName;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"offer accepted\");\r\n          this.ShowToast(\"your partnership offer has been accepted by \" + _playerData.PlayerName + \", cash $\" + _cash + \" has been added to your account.\", LongMessageTime);\r\n          this.UpdateCash_TurnDecision();\r\n        } else if (_cancelled) {\r\n          if (CancelledID.includes(_uid) == false)\r\n              CancelledID.push(_uid);\r\n        \r\n          console.log(CancelledID);\r\n          if (CancelledID.length == _manager.PlayerGameInfo.length - 1) {\r\n            this.ToggleScreen_PartnerShipSetup(false);\r\n            this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n            this.ShowToast(\"your partnership offer has been cancelled by all other users.\");\r\n          }\r\n\r\n          console.log(\"offer rejected\");\r\n        }\r\n      } else {\r\n        if (_accepted) {\r\n          PartnerShipOfferReceived = false;\r\n          this.ShowToast(\"Offer has been accepted by other player.\");\r\n          this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        } else if (_cancelled) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Invest and sell moddule\r\n\r\n  ResetGoldInput() {\r\n    this.TurnDecisionSetupUI.GoldEditBox.string = \"\";\r\n    GoldCashAmount = \"\";\r\n  },\r\n\r\n  ResetStockBusinessNameInput() {\r\n    this.TurnDecisionSetupUI.StockEditBox.string = \"\";\r\n    StockBusinessName = \"\";\r\n  },\r\n\r\n  onAmountChanged_InvestSell(_amount) {\r\n    EnterBuySellAmount = _amount;\r\n\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n    } else {\r\n      var _amount = parseInt(EnterBuySellAmount);\r\n      var _amount = OnceOrShare * _amount;\r\n      this.UpdateData_InvestSell(\r\n        OnceOrShare + \"*\" + EnterBuySellAmount + \"=\" + _amount\r\n      );\r\n    }\r\n  },\r\n\r\n  ToggleInvestSellScreen_InvestSell(_state) {\r\n    this.InvestSellScreen.active = _state;\r\n    this.UpdateCash_TurnDecision();\r\n    this.ResetGoldInput();\r\n    this.ResetStockBusinessNameInput();\r\n  },\r\n\r\n  AssignData_InvestSell(\r\n    _title,\r\n    _diceResult,\r\n    _priceTitle,\r\n    _priceValue,\r\n    _buyOrSellTitle,\r\n    _totalAmountTitle,\r\n    _totalAmountValue,\r\n    _buttonName,\r\n    _state\r\n  ) {\r\n    this.CheckReferences();\r\n    this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n    this.InvestSellSetupUI.TitleLabel.string = _title;\r\n    this.InvestSellSetupUI.DiceResultLabel.string = _diceResult;\r\n    this.InvestSellSetupUI.PriceTitleLabel.string = _priceTitle;\r\n    this.InvestSellSetupUI.PriceValueLabel.string = _priceValue;\r\n    this.InvestSellSetupUI.BuyOrSellTitleLabel.string = _buyOrSellTitle;\r\n    this.InvestSellSetupUI.TotalAmountTitleLabel.string = _totalAmountTitle;\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n    this.InvestSellSetupUI.ButtonNameLabel.string = _buttonName;\r\n  },\r\n\r\n  UpdateData_InvestSell(_totalAmountValue) {\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n  },\r\n\r\n  ApplyButton_InvestSell() {\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      InvestSellInfo = \"\";\r\n\r\n      if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount += _amount;\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" ounces of GOLD\", LongMessageTime);\r\n          \r\n          InvestSellInfo = \"Buying GOLD:\" + \"\\n\" + \"\\n\" +\r\n            \"Dice Rolled: \" + (OnceOrShare / 1000) + \"\\n\" +\r\n            \"Per Ounce price: $\" + OnceOrShare + \"\\n\"+\r\n            \"Purchased Ounces: \" + _amount+\"\\n\"+\r\n            \"Total Payment for Ounces: $\" + _TotalAmount;\r\n          \r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n          \r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        if (_amount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash  += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount -= _amount;\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" ounces of GOLD for  $\" + _TotalAmount, LongMessageTime);\r\n          \r\n          InvestSellInfo = \"Selling GOLD:\" + \"\\n\" + \"\\n\" +\r\n            \"Dice Rolled: \" + (OnceOrShare / 1000) + \"\\n\" +\r\n            \"Per Ounce price: $\" + OnceOrShare + \"\\n\"+\r\n            \"Sold Ounces: \" + _amount+\"\\n\"+\r\n            \"Total Payment for Ounces: $\" + _TotalAmount;\r\n          \r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"you don't have enough GOLD ounces, you own \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount +\" of GOLD ounces\",LongMessageTime);\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount += _amount;\r\n          //can add multiple stocks with business name in object if required\r\n\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" shares of business \" + StockBusinessName, LongMessageTime);\r\n          \r\n          InvestSellInfo = \"Buying STOCK:\" + \"\\n\" + \"\\n\" +\r\n          \"Dice Rolled: \" + (OnceOrShare / 1000) + \"\\n\" +\r\n          \"Per share price: $\" + OnceOrShare + \"\\n\"+\r\n          \"Purchased shares: \" + _amount+\"\\n\"+\r\n          \"Total Payment for shares: $\" + _TotalAmount;\r\n        \r\n        this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n\r\n        if (_amount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount -= _amount;\r\n\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" shares of stock for  $\" + _TotalAmount, LongMessageTime);\r\n          \r\n          InvestSellInfo = \"Selling STOCK:\" + \"\\n\" + \"\\n\" +\r\n          \"Dice Rolled: \" + (OnceOrShare / 1000) + \"\\n\" +\r\n          \"Per share price: $\" + OnceOrShare + \"\\n\"+\r\n          \"Sold shares: \" + _amount+\"\\n\"+\r\n          \"Total Payment for shares: $\" + _TotalAmount;\r\n        \r\n        this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\r\n            \"you don't have enough stocks shares, you own \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[_playerIndex].StockCount +\r\n              \" of stock shares\",LongMessageTime\r\n          );\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ExitButton_InvestSell() {\r\n    this.ToggleInvestSellScreen_InvestSell(false);\r\n\r\n    if (TurnOverForInvest)\r\n    {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn(); \r\n      TurnOverForInvest = false; \r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Payday or Double pay Day\r\n  TogglePayDayScreen_PayDay(_state) {\r\n    this.PayDayScreen.active = _state;\r\n  },\r\n\r\n  ToggleResultPanelScreen_PayDay(_state) {\r\n    this.PayDaySetupUI.ResultPanelNode.active = _state;\r\n  },\r\n\r\n  UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken) {\r\n    if (HMAmount == 0) {\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = false;\r\n    } else {\r\n      HomeBasedPaymentCompleted = false;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = true;\r\n    }\r\n\r\n    if (BMAmount == 0) {\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      BrickMortarPaymentCompleted = false;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (!loanTaken) {\r\n      LoanPayed = true;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      LoanPayed = false;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n  },\r\n\r\n  GetLoanAmount_PayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    var _loan = 0;\r\n    for (\r\n      let index = 0;\r\n      index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n      index++\r\n    ) {\r\n      if (_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loan =\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n        break;\r\n      }\r\n    }\r\n    return _loan;\r\n  },\r\n\r\n  AssignData_PayDay(_title,_isDoublePayDay = false,_skipHM = false,_skipBM = false,_isBot = false,_forSelectedBusiness=false,_SelectedBusinessIndex=0,_hMAmount=0,_bmAmount=0,_bmLocation=0,PaydayCounter=1) {\r\n    HBDiceCounter = 0;\r\n    BMDiceCounter = 0;\r\n    PayDayInfo = \"PayDay Result with multiplier: \"+PaydayCounter;\r\n\r\n    this.IsBotTurn = _isBot;\r\n    this.PayDayCount = PaydayCounter;\r\n    DoublePayDay = _isDoublePayDay;\r\n    this.TogglePayDayScreen_PayDay(true);\r\n    this.PayDaySetupUI.TitleLabel.string = _title;\r\n    var _time = 1800;\r\n    SelectedBusinessPayDay = _forSelectedBusiness;\r\n    SelectedBusinessIndex = _SelectedBusinessIndex;\r\n    HMAmount=_hMAmount;\r\n    BMAmount=_bmAmount;\r\n    BMLocations = _bmLocation;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      if (_isBot == false) {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM)\r\n          this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\", _time);\r\n        else if (_skipHM)\r\n          this.ShowToast(\"your payday on home based businessess will be skipped.\", _time);\r\n        else if (_skipBM)\r\n          this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\", _time);\r\n      } else {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM)\r\n          console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n        else if (_skipHM)\r\n          console.log(\"your payday on home based businessess will be skipped.\");\r\n        else if (_skipBM)\r\n          console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n      }\r\n    }\r\n\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    \r\n    if (!SelectedBusinessPayDay) {\r\n       HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n       BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n       BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n    }\r\n\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var loanTaken = false;\r\n    \r\n    if (!SelectedBusinessPayDay) {\r\n      loanTaken = _loanTaken;\r\n    }\r\n\r\n    this.PayDaySetupUI.HomeBasedNumberLabel.string = HMAmount;\r\n    this.PayDaySetupUI.BMNumberLabel.string = BMAmount;\r\n    this.PayDaySetupUI.BMNumberLocationLabel.string = BMLocations;\r\n    this.PayDaySetupUI.PassedPayDayCountLabel.string = this.PayDayCount;\r\n\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    //check if loan was skipped previously\r\n    if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) {\r\n      var _loan = this.GetLoanAmount_PayDay();\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $\" + _loan;\r\n    } else {\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $5000\";\r\n    }\r\n\r\n    //check skip payday variables\r\n    if (_skipHM && _skipBM) this.UpdateButtons_PayDay(0, 0, loanTaken);\r\n    else if (_skipHM) this.UpdateButtons_PayDay(0, BMAmount, loanTaken);\r\n    else if (_skipBM) this.UpdateButtons_PayDay(HMAmount, 0, loanTaken);\r\n    else this.UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken);\r\n\r\n    if (_skipBM || _skipHM) {\r\n      setTimeout(() => {\r\n        this.PayDayCompleted();\r\n      }, _time + 200);\r\n    }\r\n\r\n    if (_isBot) {\r\n      setTimeout(() => {\r\n        this.OnHomeBasedPaymentClicked_PayDay();\r\n        this.OnBMPaymentClicked_PayDay();\r\n        this.OnLoanPaymentClicked_PayDay();  \r\n      }, 0);\r\n    }\r\n  },\r\n\r\n  OnHomeBasedPaymentClicked_PayDay() {\r\n    if (!HomeBasedPaymentCompleted) {\r\n        this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay)\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else\r\n      {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      }\r\n\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n      //partnership code\r\n      if (_doublePayDay)\r\n        _multiplier = 2;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 1) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _payment =_paydaymultiplier* _multiplier * _dice * 1000;\r\n              _amountToBeSend = (_payment / 2);\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else\r\n      {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 1) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _payment = _paydaymultiplier*_multiplier * _dice * 1000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n      //partnership code\r\n\r\n      if (!_doublePayDay)\r\n        TotalPayDayAmount = _paydaymultiplier*HMAmount * _dice * 1000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = _paydaymultiplier*2 * (HMAmount * _dice) * 1000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = HMAmount;\r\n      \r\n      if (!_doublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + HMAmount + \"*\" + \"1000)-\"+_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + HMAmount + \"*\" + \"1000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo +=\"\\n\"+\"\\n\"+\r\n        \"Home Based Business: \" + HMAmount + \"\\n\" +\r\n        \"Dice Rolled: \" + _dice + \"\\n\" +\r\n        \"Amount Received: $\" + TotalPayDayAmount;\r\n      \r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnBMPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!BrickMortarPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay)\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else\r\n      {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      \r\n      if (!SelectedBusinessPayDay) {\r\n        BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n      }\r\n\r\n      var _amount = BMAmount + BMLocations;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      if (_doublePayDay)\r\n        _multiplier = 2;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 2) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _locations = _tempData[index].LocationsName.length + 1;\r\n              var _payment = _paydaymultiplier*_locations * _multiplier * _dice * 2000;\r\n              _amountToBeSend = (_payment / 2);\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else\r\n      {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 2) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _locations = _tempData[SelectedBusinessIndex].LocationsName.length + 1;\r\n            var _payment = _paydaymultiplier*_locations * _multiplier * _dice * 2000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n\r\n      if (!_doublePayDay)\r\n        TotalPayDayAmount = _paydaymultiplier*_amount * _dice * 2000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = _paydaymultiplier*2 * (_amount * _dice) * 2000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = _amount;\r\n\r\n      if (!_doublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + _amount + \"*\" + \"2000)-\" +_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + _amount + \"*\" + \"2000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo +=\"\\n\"+\"\\n\"+\r\n        \"Brick & Mortar Business: \" + _amount + \"\\n\" +\r\n        \"Dice Rolled: \" + _dice + \"\\n\" +\r\n        \"Amount Received: $\" + TotalPayDayAmount;\r\n      \r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnLoanPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!LoanPayed) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _EstimateLoan = 0;\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)//if player had skippped loan previously call all amount due\r\n        _EstimateLoan = this.GetLoanAmount_PayDay();\r\n      else\r\n        _EstimateLoan = 5000;\r\n\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= _EstimateLoan) {\r\n        LoanPayed = true;\r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - _EstimateLoan;\r\n\r\n        var _loanTaken = false;\r\n        var _businessIndex = 0;\r\n\r\n        for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n          if (\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            _loanTaken = true;\r\n            _businessIndex = index;\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount - _EstimateLoan;\r\n        \r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount <= 0) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = 0;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken = false;\r\n        }\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = false;\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        this.PayDayCompleted();\r\n      }\r\n      else {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = false;\r\n        else\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = true;\r\n\r\n        this.PayDaySetupUI.LoanResultPanelNode.active = true;\r\n        console.error(\"out of money\");\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceivePayment_PayDay() {\r\n    //all\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[ _playerIndex].Cash + TotalPayDayAmount;\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    if (!this.IsBotTurn) {\r\n      this.ShowToast(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n      );\r\n      setTimeout(() => {\r\n        this.ToggleResultPanelScreen_PayDay(false);\r\n        this.PayDayCompleted();\r\n      }, 100);\r\n    } else {\r\n      console.log(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n      );\r\n      this.ToggleResultPanelScreen_PayDay(false);\r\n      this.PayDayCompleted();\r\n    }\r\n  },\r\n\r\n  SkipLoanOneTime_PayDay() {\r\n    this.ShowToast(\r\n      \"You have skipped the loan payment, bank will call upon complete loan amount on next payday\"\r\n    );\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = true;\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    LoanPayed = true;\r\n    this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    this.PayDayCompleted();\r\n    LoanPayed = true;\r\n  },\r\n\r\n  SellBusiness_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    this.EnableSellScreen__SellBusinessUISetup(false);\r\n  },\r\n\r\n  UpdateCash_PayDay(_amount) {\r\n    this.PayDaySetupUI.CashLabel.string = \"$\" + _amount;\r\n  },\r\n\r\n  ExitLoanScreen_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n  },\r\n\r\n  StartNewGame_PayDay() {\r\n    //if bankrupted you can start new game\r\n    this.ShowToast(\r\n      \"You will lose all progress and start new game from the start.\",3000,false);\r\n    setTimeout(() => {\r\n      this.ExitLoanScreen_PayDay();\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      this.Exit___InsufficientBalance();\r\n      cc.systemEvent.emit(\"ShowCard\", \"\", false);\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false,false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n    }, 3010);\r\n  },\r\n\r\n  ShowInfo(_data)\r\n  {\r\n    this.ShowToast(_data.info, 2000, true);\r\n  },\r\n\r\n  PayDayCompleted() {\r\n    if (HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      console.log(\"all payday done\");\r\n      this.TogglePayDayScreen_PayDay(false);\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false, false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleDoublePayNextTurn(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n      }\r\n      else\r\n      {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      }\r\n\r\n      this.RaiseEventToSyncInfo(PayDayInfo);\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Sell & manipulate Business UI\r\n  ToggleSellBusinessScreen_SellBusinessUISetup(_state) {\r\n    this.SellBusinessScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    this.SellBusinessSetupUI.TitleLabel.string = \"SELL\";\r\n    this.SellBusinessSetupUI.CashLabel.string =_manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellBusinessSetupUI.PlayerNameLabel.string =_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellBusinessSetupUI.BusinessCountLabel.string =\"No of Businesses : \" +_manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n        node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      else node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n\r\n  SetBusinessUI_BusinessManipulationUISetup(_isBot=false) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (!_isBot) {\r\n      this.SellBusinessSetupUI.TitleLabel.string = \"BUSINESS\";\r\n      this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n      this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n      this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n    }\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessManipulationPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_isBot)\r\n      {\r\n        node.getComponent(\"BusinessDetail\").SelectBusinessforPayDay();\r\n        break;\r\n      }\r\n      // if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      // else\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n  Reset_SellBusinessUISetup() {\r\n    for (let index = 0; index < businessDetailNodes.length; index++) {\r\n      businessDetailNodes[index].destroy();\r\n    }\r\n\r\n    businessDetailNodes = [];\r\n  },\r\n\r\n  EnableSellScreen__SellBusinessUISetup(_isTurnover = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    this.SetBusinessUI_SellBusinessUISetup();\r\n  },\r\n\r\n  EnableManipilationScreen__BusinessManipulationUISetup(_isTurnover = false,_isBot=false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n\r\n    if(!_isBot)\r\n      this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    \r\n    this.SetBusinessUI_BusinessManipulationUISetup(_isBot);\r\n  },\r\n\r\n  ExitSellScreen__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n  },\r\n\r\n  ExitSellScreenAlongTurnOver__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Invest UI\r\n  ToggleInvestScreen_InvestSetupUI(_state) {\r\n    this.InvestScreen.active = _state;\r\n  },\r\n\r\n  EnableInvest_InvestSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleInvestScreen_InvestSetupUI(true);\r\n    this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n  },\r\n  SetInvestUI_InvestSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.InvestSetupUI.TitleLabel.string = \"INVEST\";\r\n    this.InvestSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.InvestSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.InvestSetupUI.ExitButton.active = false;\r\n      this.InvestSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.InvestSetupUI.ExitButton.active = true;\r\n      this.InvestSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitInvest_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n  },\r\n\r\n  ExitInvestAlongTurnOver_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region BuyORSell UI\r\n  ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state) {\r\n    this.BuyOrSellScreen.active = _state;\r\n  },\r\n\r\n  EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n    this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n  },\r\n  SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.BuyOrSellSetupUI.TitleLabel.string = \"BUY OR SELL\";\r\n    this.BuyOrSellSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.BuyOrSellSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.BuyOrSellSetupUI.ExitButton.active = false;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.BuyOrSellSetupUI.ExitButton.active = true;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitSellOrBuy_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n  },\r\n\r\n  ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region One Question setup Ui\r\n  ToggleDecisionScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionDecisionScreen.active = _state;\r\n  },\r\n\r\n  ToggleSpaceScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSpaceScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSetupUI.WaitingScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_OneQuestionSetupUI(\r\n    _myData,\r\n    _actorsData,\r\n    _isTurnOver,\r\n    _modeIndex = 0\r\n  ) {\r\n    this.OneQuestionSetupUI.TitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.PlayerDetailLabel.string =\r\n      \"No of Players: \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (\r\n          _actorsData[index].customProperties.RoomEssentials.IsSpectate == false\r\n        ) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (\r\n            _myData.PlayerUID !=\r\n            _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n          ) {\r\n            var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n            node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerName(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerName\r\n              );\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerUID(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n              );\r\n            oneQuestionNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n          node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerName(_actorsData[index].PlayerName);\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerUID(_actorsData[index].PlayerUID);\r\n          oneQuestionNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.OneQuestionSetupUI.ExitButton.active = false;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.OneQuestionSetupUI.ExitButton.active = true;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_OneQuestionSetupUI() {\r\n    for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n      oneQuestionNodes[index].destroy();\r\n    }\r\n    oneQuestionNodes = [];\r\n  },\r\n\r\n  Exit_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  SetUpDecisionScreen_OneQuestionSetupUI(_question) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor()\r\n      .customProperties.PlayerSessionData;\r\n    this.OneQuestionSetupUI.DecisionTitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.DecisionCashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.DecisionPlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.DecisionQuestionLabel.string =\r\n      \"Player has asked if \" +\r\n      _question +\r\n      \"\\n\" +\r\n      \"\\n\" +\r\n      \"*either answer question or pay $5000 to player whose asking question.\";\r\n  },\r\n  //#endregion\r\n\r\n  ShowToast: function (message, time = ShortMessageTime,_hasbutton=true) {\r\n    this.PopUpUI.active = true;\r\n    this.PopUpUILabel.string = message;\r\n    var SelfToast = this;\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    \r\n    if (mode == 1) //for bot mode only\r\n    {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length>0 && GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].IsBot)\r\n      {\r\n        // if (_hasbutton) {\r\n        //   this.PopUpUIButton.active = true;\r\n        //   clearTimeout(TimeoutRef);\r\n        //   TimeoutRef = setTimeout(() => {\r\n        //     this.CompleteToast();\r\n        //   }, CompletionWindowTime);\r\n        // }\r\n        // else {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n       // }\r\n      }\r\n      else\r\n      {\r\n        if (_hasbutton) {\r\n          this.PopUpUIButton.active = true;\r\n          clearTimeout(TimeoutRef);\r\n          TimeoutRef = setTimeout(() => {\r\n            this.CompleteToast();\r\n          }, CompletionWindowTime);\r\n        }\r\n        else {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n        }\r\n      }\r\n    }\r\n    else //for real players\r\n    {\r\n      if (_hasbutton) {\r\n        this.PopUpUIButton.active = true;\r\n        clearTimeout(TimeoutRef);\r\n        TimeoutRef = setTimeout(() => {\r\n          this.CompleteToast();\r\n        }, CompletionWindowTime);\r\n      }\r\n      else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n      }\r\n    }\r\n  },\r\n\r\n  CompleteToast()\r\n  {\r\n    console.error(\"complete toast called\");\r\n    this.PopUpUI.active = false;\r\n    clearTimeout(TimeoutRef);\r\n  },\r\n\r\n  ShowResultScreen: function (_status,_data) {\r\n    this.ResultSetupUI.ResultScreen.active = true;\r\n    this.ResultSetupUI.StatusLabel.string = _status;\r\n    this.ResultSetupUI.BodyLabel.string = _data;\r\n  },\r\n\r\n  RestartTheGame()\r\n  {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n  },\r\n\r\n  RaiseEventToSyncInfo(_dataInfo)\r\n  {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (_mode == 2) //for real players\r\n    {\r\n      var _data = { info: _dataInfo };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data)\r\n    } else if (_mode == 1) //for bot\r\n    {\r\n      if (this.IsBotTurn)\r\n      {\r\n        var _data = { info: _dataInfo };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data)\r\n      }  \r\n    }\r\n  },\r\n\r\n});\r\n"]}