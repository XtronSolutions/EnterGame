{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","PopUpUI","GameplayUIScreen","DecisionScreen","InvestSellScreen","PayDayScreen","TempDiceText","LeaveRoomButton","onLoad","CheckReferences","require","onEnable","systemEvent","on","SyncData","onDisable","off","start","InitialScreen_SpectateMode","active","ToggleLeaveRoomButton_SpectateModeUI","_state","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","Init_BusinessSetup","PlayerData","BusinessInfo","Cash","ResetButtonStates_BusinessSetup","index","Get_GameManager","PlayerGameInfo","length","StudentData","userID","PlayerUID","OnChangeName_BusinessSetup","PlayerName","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","GetObj_BusinessSetup","UID","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","BusinessType","EnumBusinessType","none","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","ShowToast","Math","abs","parseInt","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","_data","_ID","PhotonActor","actorNr","push","console","log","MaxPlayers","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_amount","_businessName","_isHomeBased","HomeBasedAmount","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","InitialSetup_BusinessSetup","RaiseEvent","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","IsBot","isactive","UpdateCash_TurnDecision","GetTurnNumber","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ResetGoldInput","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","ResetStockBusinessNameInput","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","HMAmount","BMAmount","loanTaken","Button","interactable","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_time","BMLocations","TotalLocationsAmount","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","_dice","RollOneDice","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","ReceivePayment_PayDay","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","callUponCard","message","time","SelfToast"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager=null;\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n    None:0,\r\n    TenThousand: 10000,                  \r\n    TentyThousand: 20000,\r\n    ThirtyThousand: 30000,\r\n    FortyThousand: 40000,\r\n    FiftyThousand: 50000,\r\n    Other:6\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI=cc.Class({\r\n    name:\"BusinessSetupUI\",\r\n\r\n    properties: {\r\n    PlayerNameUI:\r\n    {\r\n       displayName:\"PlayerNameUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label for player name\",},\r\n    PlayerCashUI:\r\n    {\r\n       displayName:\"PlayerCashUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label for player cash\",},\r\n    BusinessTypeTextUI:\r\n    {\r\n       displayName:\"BusinessTypeTextUI\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: false,\r\n       tooltip:\"var to store text for business type\",},\r\n    BusinessNameTextUI:\r\n    {\r\n       displayName:\"BusinessTypeTextUI\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: false,\r\n       tooltip:\"var to store text for business name\",},\r\n    BusinessTypeLabel:\r\n    {\r\n       displayName:\"BusinessTypeLabel\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"reference for business type editbox\",},\r\n    BusinessNameLabel:\r\n    {\r\n       displayName:\"BusinessNameLabel\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"referece for business name editbox\",},\r\n    HomeBasedNodeUI:\r\n    {\r\n       displayName:\"HomeBasedNodeUI\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for home based business\",},\r\n    BrickAndMortarNodeUI:\r\n    {\r\n       displayName:\"BrickAndMortarNodeUI\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for brick and mortar business\",},\r\n    TimerUI:\r\n    {\r\n       displayName:\"TimerUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the label for timer\",},\r\n    TimerNode:\r\n        {\r\n            displayName:\"TimerNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for timer node in business setup\"}, \r\n    BusinessSetupNode:\r\n    {\r\n       displayName:\"BusinessSetupNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for business setup\",},\r\n    LoanSetupNode:\r\n    {\r\n       displayName:\"LoanSetupNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for loan setup\",},\r\n    LoanAmount:\r\n    {\r\n        displayName:\"LoanAmount\",\r\n        type: LoanAmountEnum,\r\n        default: LoanAmountEnum.None,\r\n        serializable: true,\r\n        tooltip:\"loan amount taken by player (state machine)\"}, \r\n    LoanAmountLabel:\r\n        {\r\n            displayName:\"LoanAmountLabel\",\r\n            type: [cc.Node],\r\n            default: [],\r\n            serializable: true,\r\n            tooltip:\"Reference for all labels of amounts in loan UI\"}, \r\n    WaitingStatusNode:\r\n        {\r\n            displayName:\"WaitingStatusNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for waiting status screen on initial business setup\"}, \r\n    ExitButtonNode:\r\n        {\r\n            displayName:\"ExitButtonNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for exit button node in business setup\"}, \r\n},\r\n    ctor: function () {//constructor//\r\n    },\r\n\r\n    ChangeName_BusinessSetup: function (name) {\r\n        this.PlayerNameUI.string=name;\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI=cc.Class({\r\n    name:\"TurnDecisionSetupUI\",\r\n\r\n    properties: {\r\n    MarketingEditBox:\r\n    {\r\n       displayName:\"MarketingEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of marketing node\",},\r\n    GoldEditBox:\r\n    {\r\n       displayName:\"GoldEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of invest gold node\",}, \r\n    StockEditBox:\r\n    {\r\n       displayName:\"StockEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of invest stock node\",},\r\n    CashAmountLabel:\r\n    {\r\n       displayName:\"Cash\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to cash node\",},\r\n    ExpandBusinessNode:\r\n        {\r\n            displayName:\"ExpandBusinessNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for expnad business node\"}, \r\n    ExpandBusinessScrollContent:\r\n        {\r\n            displayName:\"ExpandBusinessScrollContent\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for content node of scroll view of expand business node\"},   \r\n    ExpandBusinessPrefab:\r\n        {\r\n            displayName:\"ExpandBusinessPrefab\",\r\n            type: cc.Prefab,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for prefab of expand business node\"},             \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n\r\n    ChangeName_BusinessSetup: function (name) {\r\n        this.PlayerNameUI.string=name;\r\n    },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n    None:0,\r\n    StockInvest: 1,                  \r\n    GoldInvest: 2,\r\n    StockSell: 3,\r\n    GoldSell: 4,\r\n    Other:5\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI=cc.Class({\r\n    name:\"InvestSellUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of invest&sell node\"},\r\n    DiceResultLabel:\r\n    {\r\n       displayName:\"DiceResult\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Dice Result of invest&sell node\"},\r\n    PriceTitleLabel:\r\n    {\r\n       displayName:\"PriceTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Price Title of invest&sell node\"},\r\n    PriceValueLabel:\r\n    {\r\n       displayName:\"PriceValue\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Price value of invest&sell node\"},\r\n    BuyOrSellTitleLabel:\r\n    {\r\n       displayName:\"BuyOrSellTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BuyOrSell Title of invest&sell node\"},\r\n    TotalAmountTitleLabel:\r\n    {\r\n       displayName:\"TotalAmountTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount Title of invest&sell node\"},\r\n    TotalAmountValueLabel:\r\n    {\r\n       displayName:\"TotalAmountValue\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount Value of invest&sell node\"},\r\n    ButtonNameLabel:\r\n    {\r\n       displayName:\"ButtonName\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of button name of invest&sell node\"},\r\n     InvestState:\r\n    {\r\n       displayName:\"InvestState\",\r\n       type: InvestEnum,\r\n       default: InvestEnum.None,\r\n       serializable: true},\r\n     AmountEditBox:\r\n    {\r\n       displayName:\"AmountEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true},\r\n          \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI=cc.Class({\r\n    name:\"PayDayUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of PayDay node\"},\r\n    HomeBasedNumberLabel:\r\n    {\r\n       displayName:\"HomeBasedNumber\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of HomeBasedNumber node\"},\r\n     BMNumberLabel:\r\n    {\r\n       displayName:\"BrickMortarNumber\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarNumber node\"},\r\n     BMNumberLocationLabel:\r\n    {\r\n       displayName:\"BrickMortarLocations\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarLocations node\"},\r\n    HomeBasedBtn:\r\n    {\r\n       displayName:\"HomeBasedBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of HomeBasedBtn node\"},\r\n    BMBtn:\r\n    {\r\n       displayName:\"BrickMortarBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarBtn node\"},\r\n    LoanBtn:\r\n    {\r\n       displayName:\"LoanBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of LoanBtn node\"},\r\n    MainPanelNode:\r\n    {\r\n       displayName:\"MainPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of MainPanel node\"},\r\n    ResultPanelNode:\r\n    {\r\n       displayName:\"ResultPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ResultPanel node\"},\r\n     ResultScreenTitleLabel:\r\n    {\r\n       displayName:\"ResultScreenTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ResultScreenTitle node\"},\r\n     DiceResultLabel:\r\n    {\r\n       displayName:\"DiceResult\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of DiceResult node\"},\r\n   TotalBusinessLabel:\r\n    {\r\n       displayName:\"TotalBusinessLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalBusiness node\"},\r\n    TotalAmountLabel:\r\n    {\r\n       displayName:\"TotalAmountLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount node\"},\r\n          \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup=-1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount=\"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount=\"\";\r\nvar EnterBuySellAmount=\"\";\r\nvar StockBusinessName=\"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName=\"\";\r\n\r\nvar HomeBasedPaymentCompleted=false;\r\nvar BrickMortarPaymentCompleted=false;\r\nvar LoanPayed=false;\r\nvar TotalPayDayAmount=0;\r\nvar DoublePayDay=false;\r\n\r\nvar GameplayUIManager=cc.Class({\r\n    name:\"GameplayUIManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        BusinessSetupData: {\r\n            default:null,                \r\n            type: BusinessSetupUI,\r\n            serializable: true,\r\n            tooltip:\"reference of BusinessSetupUI class\"},\r\n        TurnDecisionSetupUI: {\r\n            default:null,                \r\n            type: TurnDecisionSetupUI,\r\n            serializable: true,\r\n            tooltip:\"reference of TurnDecisionSetupUI class\"},\r\n        InvestSellSetupUI: {\r\n            default:null,                \r\n            type: InvestSellUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestSellUI class\",},  \r\n        PayDaySetupUI: {\r\n            default:null,                \r\n            type: PayDayUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestSellUI class\",},     \r\n        PopUpUI: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for pop up screen\",},   \r\n        BusinessSetupNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for business setup screen\",},  \r\n        GameplayUIScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for gameplay ui screen\",},   \r\n        DecisionScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Decision screen\",},    \r\n        InvestSellScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Invest & sell screen\",},    \r\n        PayDayScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for PayDay screen\",},    \r\n         TempDiceText: {\r\n            default:null,                \r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip:\"label reference for dice\",},   \r\n         LeaveRoomButton: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,},       \r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n     onLoad () {\r\n         this.CheckReferences(); \r\n     },\r\n\r\n     CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n\r\n        if(!GameManager || GameManager==null)\r\n            GameManager=require('GameManager');\r\n     },\r\n\r\n     onEnable: function () {\r\n        //events subscription to be called \r\n        cc.systemEvent.on('SyncData', this.SyncData, this);\r\n      },\r\n    \r\n    onDisable: function () {\r\n        cc.systemEvent.off('SyncData', this.SyncData, this);\r\n      },\r\n\r\n    start () {\r\n    },\r\n\r\n\r\n\r\n    //#region Spectate UI Setup\r\n    InitialScreen_SpectateMode()\r\n    {\r\n        this.BusinessSetupData.WaitingStatusNode.active=true;\r\n    },\r\n\r\n    ToggleLeaveRoomButton_SpectateModeUI(_state)\r\n    {\r\n        this.LeaveRoomButton.active=_state;\r\n    },\r\n\r\n    OnLeaveButtonClicked_SpectateModeUI()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(true);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.RemovePersistNode();\r\n            cc.director.loadScene(\"Splash\");\r\n        }, 500);\r\n    },\r\n    //#endregion\r\n    \r\n    //#region BusinessSetup with loan\r\n    //Business setup ui//------------------------\r\n    StartNewBusiness_BusinessSetup: function (isFirstTime,insideGame=false) { //called first time form GameManager onload function\r\n        this.CheckReferences();\r\n        this.BusinessSetupNode.active=true;\r\n        this.Init_BusinessSetup(isFirstTime,insideGame);\r\n    },\r\n    Init_BusinessSetup: function (isFirstTime,insideGame=false) {\r\n        PlayerDataIntance=new GameManager.PlayerData();\r\n        PlayerBusinessDataIntance=new GameManager.BusinessInfo();\r\n       \r\n        if(isFirstTime)\r\n        {\r\n            this.BusinessSetupData.ExitButtonNode.active=false;\r\n            this.BusinessSetupData.TimerNode.active=true;\r\n            PlayerDataIntance.Cash=100000;\r\n        }\r\n\r\n        this.ResetButtonStates_BusinessSetup();\r\n\r\n        if(insideGame)\r\n        {\r\n            this.BusinessSetupData.ExitButtonNode.active=true;\r\n            this.BusinessSetupData.TimerNode.active=false;\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; index++) {\r\n                if(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID==GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    InsideGameBusinessSetup=index;\r\n                    PlayerDataIntance=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n                    this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n                    this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n                    this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);  \r\n                }  \r\n            }\r\n        }\r\n        else\r\n        {\r\n            InsideGameBusinessSetup=-1;\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n            this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash); \r\n        } \r\n    }, \r\n    GetObj_BusinessSetup: function () {\r\n        return this.BusinessSetupData;\r\n    },\r\n    OnChangeName_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n        PlayerDataIntance.PlayerName=name;\r\n    },\r\n    OnChangeUID_BusinessSetup: function (UID) {\r\n        PlayerDataIntance.PlayerUID=UID;\r\n    },\r\n    OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.BusinessTypeTextUI=name;\r\n        PlayerBusinessDataIntance.BusinessTypeDescription=name;\r\n       \r\n    },\r\n    OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.BusinessNameTextUI=name;\r\n        PlayerBusinessDataIntance.BusinessName=name;\r\n    },\r\n    ResetButtonStates_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BusinessTypeLabel.string=\"\";\r\n        this.BusinessSetupData.BusinessNameLabel.string=\"\";\r\n        this.BusinessSetupData.BusinessNameTextUI=\"\";\r\n        this.BusinessSetupData.BusinessTypeTextUI=\"\";\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.none;\r\n    },\r\n    \r\n    OnHomeBasedSelected_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=true;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=false;\r\n\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.HomeBased;\r\n    },\r\n    OnBrickMortarSelected_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=true;\r\n\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.brickAndmortar;\r\n    },\r\n    OnChangeCash_BusinessSetup:function(amount)\r\n    {\r\n        this.BusinessSetupData.PlayerCashUI.string=\"$\"+amount;\r\n        PlayerDataIntance.Cash=amount;\r\n    },\r\n    CalculateLoan_BusinessSetup:function(amount)\r\n    {\r\n        var _loanTaken=false;\r\n        var _businessIndex=0;\r\n\r\n        for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n\r\n            if(PlayerDataIntance.NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loanTaken=true;\r\n                _businessIndex=index;\r\n                break;\r\n            }    \r\n        }\r\n\r\n        if(_loanTaken)\r\n        {\r\n            this.ShowToast(\"You have already taken loan of $\"+PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount);\r\n        }\r\n        else\r\n        {\r\n            if(PlayerDataIntance.Cash >=amount)\r\n                {\r\n                    this.ShowToast(\"You do not need loan, you have enough cash to buy current selected business.\")\r\n                }\r\n                else\r\n                {\r\n                    this.BusinessSetupData.LoanSetupNode.active=true;\r\n                    RequiredCash=Math.abs(parseInt(PlayerDataIntance.Cash)-amount);\r\n                    this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(cc.Label).string=\"$\"+RequiredCash;\r\n                }\r\n        }\r\n    },\r\n    OnLoanButtonClicked_BusinessSetup:function(event)\r\n    {\r\n        if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.brickAndmortar)\r\n        {\r\n            this.CalculateLoan_BusinessSetup(50000);\r\n        }else if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.HomeBased)\r\n        {\r\n            this.CalculateLoan_BusinessSetup(10000);\r\n        }\r\n        else\r\n        {\r\n            this.ShowToast(\"please select business between Home Based and brick & mortar. \")\r\n        }\r\n    },\r\n    OnLoanBackButtonClicked_BusinessSetup:function(event)\r\n    {\r\n      this.BusinessSetupData.LoanSetupNode.active=false;  \r\n    },\r\n    HighLightLoanSelection_BusinessSetup:function(index)\r\n    {\r\n        for(var i=0;i<this.BusinessSetupData.LoanAmountLabel.length;i++)\r\n        {\r\n            if(index==i)\r\n                this.BusinessSetupData.LoanAmountLabel[i].children[0].active=true;\r\n            else\r\n                this.BusinessSetupData.LoanAmountLabel[i].children[0].active=false;\r\n        }\r\n    },\r\n    OnLoanAmountChoosed_01_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.Other;\r\n        this.HighLightLoanSelection_BusinessSetup(0);\r\n\r\n    },\r\n    OnLoanAmountChoosed_02_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.TenThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(1);\r\n    },\r\n    OnLoanAmountChoosed_03_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.TentyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(2);\r\n    },\r\n    OnLoanAmountChoosed_04_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.ThirtyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(3);\r\n    },\r\n    OnLoanAmountChoosed_05_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.FortyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(4);\r\n    },\r\n    OnLoanAmountChoosed_06_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.FiftyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(5);\r\n    },\r\n    OnTakenLoanClicked_BusinessSetup:function(event)\r\n    {\r\n        if(this.BusinessSetupData.LoanAmount==LoanAmountEnum.Other)\r\n            PlayerBusinessDataIntance.LoanAmount=RequiredCash;\r\n        else\r\n            PlayerBusinessDataIntance.LoanAmount=parseInt(this.BusinessSetupData.LoanAmount);\r\n\r\n        PlayerBusinessDataIntance.LoanTaken=true;\r\n        this.OnLoanBackButtonClicked_BusinessSetup();\r\n        PlayerDataIntance.Cash=PlayerDataIntance.Cash+PlayerBusinessDataIntance.LoanAmount;\r\n        this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash)\r\n    },\r\n\r\n    SyncData:function(_data,_ID)\r\n    {\r\n        if(_ID!=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr)\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n\r\n        console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length>=GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers)\r\n        {\r\n            //setting room property to declare initial setup has been\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"InitialSetup\",true,true);\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\",GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo,true);\r\n            this.BusinessSetupData.WaitingStatusNode.active=false;\r\n            this.BusinessSetupNode.active=false;\r\n            this.GameplayUIScreen.active=true;\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n            console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n        }\r\n    },\r\n\r\n    PurchaseBusiness:function(_amount,_businessName,_isHomeBased)\r\n    {\r\n        if(PlayerDataIntance.Cash<_amount)\r\n            {\r\n                this.ShowToast(\"You have not enough cash to buy this \"+_businessName+\" business.\");\r\n            }\r\n        else\r\n           {\r\n                if(_isHomeBased)\r\n               {\r\n                   if(PlayerDataIntance.HomeBasedAmount<3)\r\n                   {\r\n                        PlayerDataIntance.Cash=PlayerDataIntance.Cash-_amount;\r\n                        this.BusinessSetupData.PlayerCashUI.string=\"$\"+PlayerDataIntance.Cash;\r\n                        this.StartGame=true;\r\n                        PlayerDataIntance.HomeBasedAmount++;\r\n                   }\r\n                   else{\r\n                        this.StartGame=false;\r\n                        this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n                   }\r\n               }\r\n               else\r\n               {\r\n                    PlayerDataIntance.Cash=PlayerDataIntance.Cash-_amount;\r\n                    this.BusinessSetupData.PlayerCashUI.string=\"$\"+PlayerDataIntance.Cash;\r\n                    this.StartGame=true;\r\n                    PlayerDataIntance.BrickAndMortarAmount++;\r\n               }\r\n           }\r\n    },\r\n\r\n    Exit_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupNode.active=false;\r\n    },\r\n\r\n    InitialSetup_BusinessSetup:function()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n               \r\n        //setting player current data in custom properties when his/her turn overs\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1,PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active=true;\r\n    },\r\n\r\n    StartNewSetup_DuringGame_BusinessSetup:function()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup]=PlayerDataIntance;\r\n        this.BusinessSetupNode.active=false;\r\n        InsideGameBusinessSetup=-1;\r\n        this.ToggleDecision_TurnDecision(true);\r\n    },\r\n\r\n    PayAmountToPlayGame:function()\r\n    {\r\n        this.StartGame=false;\r\n\r\n        if(PlayerBusinessDataIntance.BusinessTypeDescription==\"\")\r\n            this.ShowToast(\"please write a business type.\");\r\n        else if(PlayerBusinessDataIntance.BusinessName==\"\")\r\n            this.ShowToast(\"please write a business name.\");\r\n        else\r\n        {\r\n            if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.HomeBased) //if selected business is homebassed\r\n                this.PurchaseBusiness(10000,\"home\",true);\r\n            else if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.brickAndmortar) //if selected business is brick and mortar\r\n                this.PurchaseBusiness(50000,\"brick and mortar\",false);\r\n\r\n        if(this.StartGame==true)\r\n        {\r\n            PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n            if(InsideGameBusinessSetup!=-1) //if start new business has not been called from inside game\r\n                this.StartNewSetup_DuringGame_BusinessSetup();\r\n            else    //if start new business has been called at start of game as initial setup\r\n                this.InitialSetup_BusinessSetup();\r\n\r\n            //prtinting all values to console\r\n            for(var i=0;i<GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;i++)\r\n            {\r\n                console.log(\"player name: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n                console.log(\"player ID: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n                console.log(\"Is player bot: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n                console.log(\"no of business of player (see below): \");\r\n                console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n                console.log(\"player cash: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n                console.log(\"player taken loan: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n                console.log(\"taken loan amount: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n            }\r\n        }\r\n        }\r\n    },\r\n    //#endregion\r\n\r\n    //#region TurnDecisionSetupUI\r\n    //TurnDecisionSetupUI//------------------------\r\n    ToggleDecision_TurnDecision: function (isactive) {\r\n        this.DecisionScreen.active=isactive;\r\n        this.UpdateCash_TurnDecision();\r\n    },\r\n\r\n    UpdateCash_TurnDecision:function()\r\n    {\r\n        this.TurnDecisionSetupUI.CashAmountLabel.string=\"$ \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].Cash;\r\n    },\r\n\r\n    OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n        //console.log(amount);\r\n        TempMarketingAmount=amount;\r\n    }, \r\n\r\n    OnMarketingAmountSelected_TurnDecision: function () {\r\n        if(TempMarketingAmount==\"\" || TempMarketingAmount==null)\r\n        {\r\n            this.ShowToast(\"Please enter an amount.\");\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            this.marketingAmount=parseInt(TempMarketingAmount);\r\n            console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n            \r\n            //if player entered amount is greater than total cash he owns\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>= this.marketingAmount)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash- this.marketingAmount;\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount+this.marketingAmount;\r\n                this.ShowToast(\"you successfully marketed amount of $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount+\" , remaining cash is $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+\".\");\r\n                this.UpdateCash_TurnDecision();\r\n\r\n                //reseting marketing label and its holding variable\r\n                this.TurnDecisionSetupUI.MarketingEditBox.string=\"\";\r\n                TempMarketingAmount=\"\";\r\n            }\r\n            else\r\n            {\r\n                this.ShowToast(\"you don't have enough money.\");\r\n\r\n                //reseting marketing label and its holding variable\r\n                this.TurnDecisionSetupUI.MarketingEditBox.string=\"\";\r\n                TempMarketingAmount=\"\";\r\n            }\r\n        }\r\n    }, \r\n\r\n    OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n        // if player has more than 5000$\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus)\r\n        {\r\n            this.ShowToast(\"you have already hired a lawyer.\");\r\n        }\r\n        else\r\n        {\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>=5000)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus=true;\r\n            TempHiringLawyer=true;\r\n            console.log(TempHiringLawyer);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-5000;\r\n            this.ShowToast(\"you have successfully hired a lawyer, remaining cash is $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+\".\");\r\n            this.UpdateCash_TurnDecision();\r\n        }else\r\n        {\r\n            this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n        }\r\n    }\r\n    }, \r\n\r\n    onLocationNameChanged_ExpandBusiness_TurnDecision(_name)\r\n    {\r\n        LocationName=_name;\r\n    },\r\n    OnExpandButtonClicked_TurnDecision: function () {\r\n        //if player has brick and mortar business he could expand it\r\n        console.log(\"expand business\");\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active=true;\r\n        var generatedLength=GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision();\r\n\r\n        if(generatedLength==0)\r\n        {\r\n            this.ShowToast(\"You have no brick and mortar business to expand.\",1500);\r\n            setTimeout(() => {\r\n                this.TurnDecisionSetupUI.ExpandBusinessNode.active=false;\r\n            }, 1600);\r\n        }\r\n    },\r\n\r\n    OnExpandButtonExitClicked_TurnDecision: function () {\r\n        this.UpdateCash_TurnDecision();\r\n        this.CheckReferences();\r\n        LocationName=\"\";\r\n        console.log(\"expand business exit called\");\r\n        GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active=false;\r\n    },\r\n\r\n    OnNewBusinessButtonClicked_TurnDecision: function () {\r\n        console.log(\"starting new business\");\r\n        this.StartNewBusiness_BusinessSetup(false,true);\r\n    },\r\n\r\n    OnGoldAmountChanged_TurnDecision: function (amount) {\r\n        //console.log(amount);\r\n        GoldCashAmount=amount;\r\n    }, \r\n\r\n    OnGoldDiceClicked_TurnDecision: function () {\r\n        if(GoldCashAmount==\"\")\r\n        {\r\n            this.ResetGoldInput();\r\n            this.ShowToast(\"Please enter cash amount to invest in GOLD.\");\r\n        }\r\n        else\r\n        {\r\n            EnterBuySellAmount=\"\";\r\n            this.ToggleInvestSellScreen_InvestSell(true);\r\n            this.InvestSellSetupUI.InvestState=InvestEnum.GoldInvest;\r\n            DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n            OnceOrShare=(DiceResult*1000);\r\n\r\n            this.AssignData_InvestSell(\r\n                \"Invest In GOLD\",\r\n                DiceResult,\r\n                \"Each Ounce of GOLD price is:\",\r\n                OnceOrShare+\"/ounce\",\r\n                \"Enter the number of ounce of GOLD you want to BUY\",\r\n                \"Total Buying Amount:\",\r\n                OnceOrShare+\"*0=0\",\r\n                \"BUY\",\r\n                this.InvestSellSetupUI.InvestState\r\n            );\r\n        }\r\n    }, \r\n\r\n    OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n        StockBusinessName=name;\r\n    }, \r\n\r\n    OnStockDiceClicked_TurnDecision: function () {\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        if(StockBusinessName==\"\")\r\n        {\r\n            this.ResetStockBusinessNameInput();\r\n            this.ShowToast(\"Please enter a business name to invest.\");\r\n        }\r\n        else\r\n        {\r\n            EnterBuySellAmount=\"\";\r\n            this.ToggleInvestSellScreen_InvestSell(true);\r\n            this.InvestSellSetupUI.InvestState=InvestEnum.StockInvest;\r\n            DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n            OnceOrShare=(DiceResult*1000);\r\n\r\n            this.AssignData_InvestSell(\r\n                \"Invest in Stock\",\r\n                DiceResult,\r\n                \"Each Share of stock price is:\",\r\n                OnceOrShare+\"/share\",\r\n                \"Enter the number of shares of stock you want to BUY\",\r\n                \"Total Buying Amount:\",\r\n                OnceOrShare+\"*0=0\",\r\n                \"BUY\",\r\n                this.InvestSellSetupUI.InvestState\r\n            );\r\n        }\r\n    }, \r\n\r\n    OnSellGoldClicked_TurnDecision: function () {\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount>0)\r\n        {\r\n            EnterBuySellAmount=\"\";\r\n            this.ToggleInvestSellScreen_InvestSell(true);\r\n            this.InvestSellSetupUI.InvestState=InvestEnum.GoldSell;\r\n            DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n            OnceOrShare=(DiceResult*1000);\r\n\r\n            this.AssignData_InvestSell(\r\n                \"Sell GOLD\",\r\n                DiceResult,\r\n                \"Each Ounce of GOLD price is:\",\r\n                OnceOrShare+\"/ounce\",\r\n                \"Enter the number of ounce of GOLD you want to SELL\",\r\n                \"Total Selling Amount:\",\r\n                OnceOrShare+\"*0=0\",\r\n                \"SELL\",\r\n                this.InvestSellSetupUI.InvestState\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.ShowToast(\"you have not purchased any GOLD ounces, please buy them.\");\r\n        }\r\n    }, \r\n\r\n    OnSellStockClicked_TurnDecision: function () {\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount>0)\r\n        {\r\n            EnterBuySellAmount=\"\";\r\n            this.ToggleInvestSellScreen_InvestSell(true);\r\n            this.InvestSellSetupUI.InvestState=InvestEnum.StockSell;\r\n            DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n            OnceOrShare=(DiceResult*1000);\r\n\r\n            this.AssignData_InvestSell(\r\n                \"Sell STOCK\",\r\n                DiceResult,\r\n                \"Each share of stock price is:\",\r\n                OnceOrShare+\"/share\",\r\n                \"Enter the number of shares of stock you want to SELL\",\r\n                \"Total Selling Amount:\",\r\n                OnceOrShare+\"*0=0\",\r\n                \"SELL\",\r\n                this.InvestSellSetupUI.InvestState\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n        }\r\n    }, \r\n\r\n    OnPartnershipClicked_TurnDecision: function () {\r\n        console.log(\"go into partner ship\");\r\n        this.ShowToast(\"work in progress, coming soon...\");\r\n    }, \r\n\r\n    OnRollDiceClicked_TurnDecision: function () {\r\n        console.log(\"roll the dice\");\r\n        this.ToggleDecision_TurnDecision(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n    }, \r\n\r\n    PrintDiceValue_TurnDecision: function (value) {\r\n        this.TempDiceText.string=value;\r\n    }, \r\n    //#endregion\r\n    \r\n\r\n    //#region Invest and sell moddule\r\n\r\n    ResetGoldInput()\r\n    {\r\n        this.TurnDecisionSetupUI.GoldEditBox.string=\"\";\r\n        GoldCashAmount=\"\";\r\n    },\r\n\r\n    ResetStockBusinessNameInput()\r\n    {\r\n        this.TurnDecisionSetupUI.StockEditBox.string=\"\";\r\n        StockBusinessName=\"\";\r\n    },\r\n\r\n    onAmountChanged_InvestSell(_amount)\r\n    {\r\n        EnterBuySellAmount=_amount;\r\n\r\n        if(EnterBuySellAmount==\"\")\r\n        {\r\n            this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n        }\r\n        else\r\n        {\r\n            var _amount=parseInt(EnterBuySellAmount);\r\n            var _amount=OnceOrShare*_amount;\r\n            this.UpdateData_InvestSell(OnceOrShare+\"*\"+EnterBuySellAmount+\"=\"+_amount);\r\n        }\r\n    },\r\n\r\n    ToggleInvestSellScreen_InvestSell(_state)\r\n    {\r\n        this.InvestSellScreen.active=_state;\r\n        this.UpdateCash_TurnDecision();\r\n        this.ResetGoldInput();\r\n        this.ResetStockBusinessNameInput();\r\n        \r\n    },\r\n\r\n    AssignData_InvestSell(_title,_diceResult,_priceTitle,_priceValue,_buyOrSellTitle,_totalAmountTitle,_totalAmountValue,_buttonName,_state)\r\n    {\r\n        this.CheckReferences();\r\n        this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n        this.InvestSellSetupUI.TitleLabel.string=_title;\r\n        this.InvestSellSetupUI.DiceResultLabel.string=_diceResult;\r\n        this.InvestSellSetupUI.PriceTitleLabel.string=_priceTitle;\r\n        this.InvestSellSetupUI.PriceValueLabel.string=_priceValue;\r\n        this.InvestSellSetupUI.BuyOrSellTitleLabel.string=_buyOrSellTitle;\r\n        this.InvestSellSetupUI.TotalAmountTitleLabel.string=_totalAmountTitle;\r\n        this.InvestSellSetupUI.TotalAmountValueLabel.string=_totalAmountValue;\r\n        this.InvestSellSetupUI.ButtonNameLabel.string=_buttonName;\r\n    },\r\n\r\n    UpdateData_InvestSell(_totalAmountValue)\r\n    {\r\n        this.InvestSellSetupUI.TotalAmountValueLabel.string=_totalAmountValue;\r\n    },\r\n\r\n    ApplyButton_InvestSell()\r\n    {\r\n        if(EnterBuySellAmount==\"\")\r\n        {\r\n            this.ShowToast(\"Please enter an amount.\");\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n            if(this.InvestSellSetupUI.InvestState==InvestEnum.GoldInvest)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                var _TotalAmount=OnceOrShare*_amount;\r\n                if(_TotalAmount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount+_amount;\r\n                    this.ShowToast(\"You have successfully bought \"+_amount+\" ounces of GOLD\",1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"You don't have enough cash.\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.GoldSell)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                if(_amount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount)\r\n                {\r\n                    var _TotalAmount=OnceOrShare*_amount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount-_amount;\r\n                    this.ShowToast(\"You have successfully sold \"+_amount+\" ounces of GOLD for  $\"+_TotalAmount,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"you don't have enough GOLD ounces, you own \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount+\" of GOLD ounces\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.StockInvest)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                var _TotalAmount=OnceOrShare*_amount;\r\n                if(_TotalAmount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount+_amount;\r\n                    //can add multiple stocks with business name in object if required\r\n\r\n                    this.ShowToast(\"You have successfully bought \"+_amount+\" shares of business \"+StockBusinessName,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"You don't have enough cash.\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.StockSell)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                \r\n                if(_amount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount)\r\n                {\r\n                    var _TotalAmount=OnceOrShare*_amount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount-_amount;\r\n\r\n                    this.ShowToast(\"You have successfully sold \"+_amount+\" shares of stock for  $\"+_TotalAmount,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"you don't have enough stocks shares, you own \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount+\" of stock shares\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    ExitButton_InvestSell()\r\n    {\r\n        this.ToggleInvestSellScreen_InvestSell(false);\r\n    },\r\n    //#endregion\r\n   \r\n   \r\n    //#region Payday or Double pay Day\r\n    TogglePayDayScreen_PayDay(_state)\r\n    {\r\n        this.PayDayScreen.active=_state;\r\n    },\r\n\r\n    ToggleResultPanelScreen_PayDay(_state)\r\n    {\r\n        this.PayDaySetupUI.ResultPanelNode.active=_state;\r\n    },\r\n\r\n    UpdateButtons_PayDay(HMAmount,BMAmount,loanTaken)\r\n    {\r\n        if(HMAmount==0)\r\n        {\r\n            HomeBasedPaymentCompleted=true;\r\n            this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=false;\r\n        }\r\n        else\r\n        {\r\n            HomeBasedPaymentCompleted=false;\r\n            this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n\r\n        if(BMAmount==0)\r\n        {\r\n            BrickMortarPaymentCompleted=true;\r\n            this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=false;\r\n        }\r\n        else\r\n        {\r\n            BrickMortarPaymentCompleted=false;\r\n            this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n\r\n        if(!loanTaken)\r\n        {\r\n            LoanPayed=true;\r\n            this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n        }else\r\n        {\r\n            LoanPayed=false;\r\n            this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n    },\r\n\r\n    AssignData_PayDay(_title,_isDoublePayDay=false,_skipHM=false,_skipBM=false)\r\n    {\r\n        DoublePayDay=_isDoublePayDay;\r\n        this.TogglePayDayScreen_PayDay(true);\r\n        this.PayDaySetupUI.TitleLabel.string=_title;\r\n\r\n        var _time=1800;\r\n\r\n        //check skip payday variables\r\n        if(_skipHM && _skipBM)\r\n            this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\",_time);\r\n        else if(_skipHM)\r\n            this.ShowToast(\"your payday on home based businessess will be skipped.\",_time);\r\n        else if(_skipBM)\r\n            this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\",_time);\r\n\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n        var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n        \r\n        var _loanTaken=false;\r\n        var _businessIndex=0;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loanTaken=true;\r\n                _businessIndex=index;\r\n                break;\r\n            }    \r\n        }\r\n\r\n        var loanTaken=_loanTaken;\r\n        \r\n        this.PayDaySetupUI.HomeBasedNumberLabel.string=HMAmount;\r\n        this.PayDaySetupUI.BMNumberLabel.string=BMAmount;\r\n        this.PayDaySetupUI.BMNumberLocationLabel.string=BMLocations;\r\n\r\n        //check skip payday variables\r\n        if(_skipHM && _skipBM)\r\n            this.UpdateButtons_PayDay(0,0,loanTaken);\r\n        else if(_skipHM)\r\n            this.UpdateButtons_PayDay(0,BMAmount,loanTaken);\r\n        else if(_skipBM)\r\n            this.UpdateButtons_PayDay(HMAmount,0,loanTaken);\r\n        else\r\n            this.UpdateButtons_PayDay(HMAmount,BMAmount,loanTaken);\r\n\r\n        if(_skipBM || _skipHM)\r\n        {\r\n            setTimeout(() => {\r\n                this.PayDayCompleted();\r\n            }, (_time+200));\r\n        }\r\n    },\r\n\r\n    OnHomeBasedPaymentClicked_PayDay()\r\n    {\r\n        if(!HomeBasedPaymentCompleted)\r\n        {\r\n           this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"PayDay\";\r\n           else\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"DoublePayDay\";\r\n\r\n           HomeBasedPaymentCompleted=true;\r\n           this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=false;\r\n\r\n           var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n           var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n           var _dice=GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n\r\n           if(!DoublePayDay)\r\n                TotalPayDayAmount=(HMAmount*_dice)*1000;\r\n           else\r\n                TotalPayDayAmount=2*(HMAmount*_dice)*1000;\r\n\r\n\r\n           this.PayDaySetupUI.DiceResultLabel.string=_dice;\r\n           this.PayDaySetupUI.TotalBusinessLabel.string=HMAmount;\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+HMAmount+\"*\"+\"1000=\"+TotalPayDayAmount;\r\n           else\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+HMAmount+\"*\"+\"1000*2=\"+TotalPayDayAmount;\r\n        }\r\n    },\r\n\r\n    OnBMPaymentClicked_PayDay() //brick and mortar\r\n    {\r\n        if(!BrickMortarPaymentCompleted)\r\n        {\r\n            this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n            if(!DoublePayDay)\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"PayDay\";\r\n           else\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"DoublePayDay\";\r\n                \r\n           BrickMortarPaymentCompleted=true;\r\n           this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=false;\r\n\r\n           var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n           var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n           var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n           var _amount=BMAmount+BMLocations;\r\n           var _dice=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n           \r\n           if(!DoublePayDay)\r\n                TotalPayDayAmount=(_amount*_dice)*2000;\r\n           else\r\n                TotalPayDayAmount=2*(_amount*_dice)*2000;\r\n\r\n           this.PayDaySetupUI.DiceResultLabel.string=_dice;\r\n           this.PayDaySetupUI.TotalBusinessLabel.string=_amount;\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+_amount+\"*\"+\"2000=\"+TotalPayDayAmount;\r\n           else\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+_amount+\"*\"+\"2000*2=\"+TotalPayDayAmount;\r\n        }\r\n    },\r\n\r\n    OnLoanPaymentClicked_PayDay() //brick and mortar\r\n    {\r\n        if(!LoanPayed)\r\n        {\r\n            var  _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            LoanPayed=true; \r\n            this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n              \r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>=5000)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-5000;\r\n\r\n                var _loanTaken=false;\r\n                var _businessIndex=0;\r\n\r\n                for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        _loanTaken=true;\r\n                        _businessIndex=index;\r\n                        break;\r\n                    }    \r\n                }\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount-5000;\r\n                if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount<=0)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=0;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken=false;\r\n                }\r\n            }\r\n\r\n                this.PayDayCompleted();\r\n        }\r\n\r\n    },\r\n\r\n    ReceivePayment_PayDay() //all\r\n    {\r\n        var  _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+TotalPayDayAmount;\r\n        this.ShowToast(\"Amount $\"+TotalPayDayAmount+\" has been added to your cash amount, Total Cash has become $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash,1500);\r\n        setTimeout(() => {\r\n            this.ToggleResultPanelScreen_PayDay(false);\r\n            this.PayDayCompleted();\r\n        }, 1550);\r\n    },\r\n\r\n    PayDayCompleted()\r\n    {\r\n        if(HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            console.log(\"all payday done\");\r\n            this.TogglePayDayScreen_PayDay(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false,false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n        }\r\n    },\r\n    //#endregion\r\n    ShowToast:function(message,time=2250)\r\n    {\r\n        this.PopUpUI.active=true;\r\n        this.PopUpUI.children[2].children[1].getComponent(cc.Label).string=message;\r\n        var SelfToast=this;\r\n        setTimeout(function(){  SelfToast.PopUpUI.active=false; }, time);\r\n    },\r\n\r\n});\r\n"]}