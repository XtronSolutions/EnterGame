{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","businessDetailNodes","oneQuestionNodes","businessDetailPartnershipNodes","PartnerShipData","PartnerShipOfferReceived","CancelledID","StartGameCash","SelectedBusinessPayDay","HMAmount","BMAmount","BMLocations","SelectedBusinessIndex","TurnOverForInvest","BusinessSetupCardFunctionality","GivenCashBusiness","StartAnyBusinessWithoutCash","PreviousCash","TimeoutRef","CompletionWindowTime","LongMessageTime","ShortMessageTime","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","BusinessManipulationPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PartnershipUI","WaitingStatusScreen","MainScreen","TitleName","PlayerName","PlayerCash","PartnerShipPrefab","DecisionScreen","DecisionPlayerName","DecisionPlayerCash","DecisionDescription","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PartnershipSetupUI","PopUpUI","PopUpUILabel","PopUpUIButton","GameplayUIScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","InsufficientBalanceScreen","TempDiceText","LeaveRoomButton","onLoad","CheckReferences","GoldInvested","GoldSold","StockInvested","StockSold","IsBotTurn","IsBankrupted","BankruptedAmount","ResetTurnVariable","require","onEnable","systemEvent","on","SyncData","onDisable","off","ToggleScreen_InsufficientBalance","_state","active","Exit___InsufficientBalance","InitialScreen_SpectateMode","CloseInitialScreen_SpectateMode","ToggleLeaveRoomButton_SpectateModeUI","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","Init_BusinessSetup","PlayerData","BusinessInfo","BusinessType","EnumBusinessType","Cash","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","StudentData","userID","PlayerUID","OnChangeName_BusinessSetup","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","GetObj_BusinessSetup","UID","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","ShowToast","Math","abs","parseInt","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","_data","_ID","PhotonActor","actorNr","push","console","log","MaxPlayers","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_amount","_businessName","_isHomeBased","HomeBasedAmount","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","completeCardTurn","InitialSetup_BusinessSetup","_mode","GetSelectedMode","IsBankrupt","BankruptAmount","GetTurnNumber","RaiseEvent","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","undefined","IsBot","isactive","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","_isTurnOver","ResetStockBusinessNameInput","RollOneDice","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","EnablePartnership_PartnerShipSetup","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ToggleScreen_PartnerShipSetup","ToggleWaitingScreen_PartnerShipSetup","ToggleDecisionScreen_PartnerShipSetup","Reset_PartnerShipSetup","_manager","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","_totalLocations","LocationsName","SetBusinessMode","SetMode","SetBusinessValue","SetFinalBusinessValue","_allLocationsAmount","_finalAmount","SetBalance","SetLocations","IsPartnership","TogglePartnerShipButton","SetPartnerName","PartnerName","EnablePartnershipDecision_PartnerShipSetup","_msg","customProperties","PlayerSessionData","Exit_PartnerShipSetup","destroy","ReceiveEvent_PartnershipSetup","_actor","_turn","Turn","_playerData","_SelectedBusinessIndex","SelectedBusinsessIndex","_businessValue","BusValue","_payAmount","_businessMode","CheckSpectate","AcceptOffer_PartnershipSetup","_allActors","RoomActors","myIndex","GetMyIndex","RaiseEventDecisionAnswer_PartnershipSetup","CancelOffer_PartnershipSetup","_isAccepted","_payment","_isCancelled","_uID","_mainData","Accepted","CashPayment","Cancelled","PlayerID","BusinessIndex","ReceiveEventDecisionAnswer_PartnershipSetup","_accepted","_cash","_cancelled","_uid","PartnerID","includes","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","loanTaken","Button","interactable","GetLoanAmount_PayDay","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_forSelectedBusiness","_hMAmount","_bmAmount","_bmLocation","_time","UpdateCash_PayDay","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_doublePayDay","_dice","_amountToBeSend","_amountToBeAdjusted","_multiplier","SendProfit_Partner_TurnDecision","ReceivePayment_PayDay","_locations","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","StartNewGame_PayDay","emit","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","Reset_SellBusinessUISetup","Amount","ToggleSellLocationButton","SetBusinessUI_BusinessManipulationUISetup","SelectBusinessforPayDay","_isTurnover","EnableManipilationScreen__BusinessManipulationUISetup","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_modeIndex","RoomEssentials","IsSpectate","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","_question","message","time","_hasbutton","SelfToast","mode","clearTimeout","CompleteToast"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager = null;\r\nvar businessDetailNodes = [];\r\nvar oneQuestionNodes = [];\r\nvar businessDetailPartnershipNodes = [];\r\nvar PartnerShipData = null;\r\nvar PartnerShipOfferReceived = false;\r\nvar CancelledID = [];\r\nvar StartGameCash = 100000;\r\nvar SelectedBusinessPayDay = false;\r\nvar HMAmount = 0;\r\nvar BMAmount = 0;\r\nvar BMLocations = 0;\r\nvar SelectedBusinessIndex = 0;\r\nvar TurnOverForInvest = false;\r\nvar BusinessSetupCardFunctionality = false;\r\nvar GivenCashBusiness = 0;\r\nvar StartAnyBusinessWithoutCash = false;\r\nvar PreviousCash = 0;\r\nvar TimeoutRef;\r\nvar CompletionWindowTime = 8000;\r\nvar LongMessageTime = 5000;\r\nvar ShortMessageTime = 2500;\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n  None: 0,\r\n  TenThousand: 10000,\r\n  TentyThousand: 20000,\r\n  ThirtyThousand: 30000,\r\n  FortyThousand: 40000,\r\n  FiftyThousand: 50000,\r\n  Other: 6,\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI = cc.Class({\r\n  name: \"BusinessSetupUI\",\r\n\r\n  properties: {\r\n    PlayerNameUI: {\r\n      displayName: \"PlayerNameUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player name\",\r\n    },\r\n    PlayerCashUI: {\r\n      displayName: \"PlayerCashUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player cash\",\r\n    },\r\n    BusinessTypeTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business type\",\r\n    },\r\n    BusinessNameTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business name\",\r\n    },\r\n    BusinessTypeLabel: {\r\n      displayName: \"BusinessTypeLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"reference for business type editbox\",\r\n    },\r\n    BusinessNameLabel: {\r\n      displayName: \"BusinessNameLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"referece for business name editbox\",\r\n    },\r\n    HomeBasedNodeUI: {\r\n      displayName: \"HomeBasedNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for home based business\",\r\n    },\r\n    BrickAndMortarNodeUI: {\r\n      displayName: \"BrickAndMortarNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for brick and mortar business\",\r\n    },\r\n    TimerUI: {\r\n      displayName: \"TimerUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the label for timer\",\r\n    },\r\n    TimerNode: {\r\n      displayName: \"TimerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for timer node in business setup\",\r\n    },\r\n    BusinessSetupNode: {\r\n      displayName: \"BusinessSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for business setup\",\r\n    },\r\n    LoanSetupNode: {\r\n      displayName: \"LoanSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for loan setup\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: LoanAmountEnum,\r\n      default: LoanAmountEnum.None,\r\n      serializable: true,\r\n      tooltip: \"loan amount taken by player (state machine)\",\r\n    },\r\n    LoanAmountLabel: {\r\n      displayName: \"LoanAmountLabel\",\r\n      type: [cc.Node],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Reference for all labels of amounts in loan UI\",\r\n    },\r\n    WaitingStatusNode: {\r\n      displayName: \"WaitingStatusNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for waiting status screen on initial business setup\",\r\n    },\r\n    ExitButtonNode: {\r\n      displayName: \"ExitButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for exit button node in business setup\",\r\n    },\r\n    \r\n  },\r\n  ctor: function () {\r\n    //constructor//\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI = cc.Class({\r\n  name: \"TurnDecisionSetupUI\",\r\n\r\n  properties: {\r\n    MarketingEditBox: {\r\n      displayName: \"MarketingEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of marketing node\",\r\n    },\r\n    GoldEditBox: {\r\n      displayName: \"GoldEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest gold node\",\r\n    },\r\n    StockEditBox: {\r\n      displayName: \"StockEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest stock node\",\r\n    },\r\n    CashAmountLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to cash node\",\r\n    },\r\n    ExpandBusinessNode: {\r\n      displayName: \"ExpandBusinessNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for expnad business node\",\r\n    },\r\n    ExpandBusinessScrollContent: {\r\n      displayName: \"ExpandBusinessScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"Reference for content node of scroll view of expand business node\",\r\n    },\r\n    ExpandBusinessPrefab: {\r\n      displayName: \"ExpandBusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for prefab of expand business node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n  None: 0,\r\n  StockInvest: 1,\r\n  GoldInvest: 2,\r\n  StockSell: 3,\r\n  GoldSell: 4,\r\n  Other: 5,\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI = cc.Class({\r\n  name: \"InvestSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of invest&sell node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Dice Result of invest&sell node\",\r\n    },\r\n    PriceTitleLabel: {\r\n      displayName: \"PriceTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price Title of invest&sell node\",\r\n    },\r\n    PriceValueLabel: {\r\n      displayName: \"PriceValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price value of invest&sell node\",\r\n    },\r\n    BuyOrSellTitleLabel: {\r\n      displayName: \"BuyOrSellTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of BuyOrSell Title of invest&sell node\",\r\n    },\r\n    TotalAmountTitleLabel: {\r\n      displayName: \"TotalAmountTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Title of invest&sell node\",\r\n    },\r\n    TotalAmountValueLabel: {\r\n      displayName: \"TotalAmountValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Value of invest&sell node\",\r\n    },\r\n    ButtonNameLabel: {\r\n      displayName: \"ButtonName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of button name of invest&sell node\",\r\n    },\r\n    InvestState: {\r\n      displayName: \"InvestState\",\r\n      type: InvestEnum,\r\n      default: InvestEnum.None,\r\n      serializable: true,\r\n    },\r\n    AmountEditBox: {\r\n      displayName: \"AmountEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI = cc.Class({\r\n  name: \"SellBusinessUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessSellPrefab: {\r\n      displayName: \"BusinessSellPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessSellPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI = cc.Class({\r\n  name: \"PayDayUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of PayDay node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of PayDay node\",\r\n    },\r\n    HomeBasedNumberLabel: {\r\n      displayName: \"HomeBasedNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedNumber node\",\r\n    },\r\n    BMNumberLabel: {\r\n      displayName: \"BrickMortarNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarNumber node\",\r\n    },\r\n    BMNumberLocationLabel: {\r\n      displayName: \"BrickMortarLocations\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarLocations node\",\r\n    },\r\n    HomeBasedBtn: {\r\n      displayName: \"HomeBasedBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedBtn node\",\r\n    },\r\n    BMBtn: {\r\n      displayName: \"BrickMortarBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarBtn node\",\r\n    },\r\n    LoanBtn: {\r\n      displayName: \"LoanBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanBtn node\",\r\n    },\r\n    MainPanelNode: {\r\n      displayName: \"MainPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of MainPanel node\",\r\n    },\r\n    ResultPanelNode: {\r\n      displayName: \"ResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultPanel node\",\r\n    },\r\n    LoanResultPanelNode: {\r\n      displayName: \"LoanResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanResultPanelNode node\",\r\n    },\r\n    ResultScreenTitleLabel: {\r\n      displayName: \"ResultScreenTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultScreenTitle node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of DiceResult node\",\r\n    },\r\n    TotalBusinessLabel: {\r\n      displayName: \"TotalBusinessLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalBusiness node\",\r\n    },\r\n    TotalAmountLabel: {\r\n      displayName: \"TotalAmountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount node\",\r\n    },\r\n    SkipLoanButton: {\r\n      displayName: \"SkipLoanButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of SkipLoanButton node\",\r\n    },\r\n    LoanFotterLabel: {\r\n      displayName: \"LoanFotterLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanFotterLabel node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI = cc.Class({\r\n  name: \"InvestUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Invest node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Invest node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Invest node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Invest node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of Invest node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI = cc.Class({\r\n  name: \"BuyOrSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of BuyOrSell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of BuyOrSell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of BuyOrSell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of BuyOrSell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI = cc.Class({\r\n  name: \"OneQuestionUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n    WaitingScreen: {\r\n      displayName: \"WaitingScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreen of OneQuestion node\",\r\n    },\r\n    DecisionTitleLabel: {\r\n      displayName: \"DecisionTitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    DecisionCashLabel: {\r\n      displayName: \"DecisionCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    DecisionPlayerNameLabel: {\r\n      displayName: \"DecisionPlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DecisionQuestionLabel: {\r\n      displayName: \"DecisionQuestionLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of player question of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PartnershipUI-------------------------//\r\nvar PartnershipUI = cc.Class({\r\n  name: \"PartnershipUI\",\r\n  properties: {\r\n    WaitingStatusScreen: {\r\n      displayName: \"WaitingStatusScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the waiting screen node of partnership ui\",\r\n    },\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PartnerShipPrefab: {\r\n      displayName: \"PartnerShipPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerName: {\r\n      displayName: \"DecisionPlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerCash: {\r\n      displayName: \"DecisionPlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionDescription: {\r\n      displayName: \"DecisionDescription\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount = \"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount = \"\";\r\nvar EnterBuySellAmount = \"\";\r\nvar StockBusinessName = \"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName = \"\";\r\n\r\nvar HomeBasedPaymentCompleted = false;\r\nvar BrickMortarPaymentCompleted = false;\r\nvar LoanPayed = false;\r\nvar TotalPayDayAmount = 0;\r\nvar DoublePayDay = false;\r\n\r\nvar GameplayUIManager = cc.Class({\r\n  name: \"GameplayUIManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    BusinessSetupData: {\r\n      default: null,\r\n      type: BusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessSetupUI class\",\r\n    },\r\n    TurnDecisionSetupUI: {\r\n      default: null,\r\n      type: TurnDecisionSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of TurnDecisionSetupUI class\",\r\n    },\r\n    InvestSellSetupUI: {\r\n      default: null,\r\n      type: InvestSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    PayDaySetupUI: {\r\n      default: null,\r\n      type: PayDayUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    SellBusinessSetupUI: {\r\n      default: {},\r\n      type: SellBusinessUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SellBusinessUI class\",\r\n    },\r\n    InvestSetupUI: {\r\n      default: {},\r\n      type: InvestUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestUI class\",\r\n    },\r\n    BuyOrSellSetupUI: {\r\n      default: {},\r\n      type: BuyOrSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyOrSellUI class\",\r\n    },\r\n    OneQuestionSetupUI: {\r\n      default: {},\r\n      type: OneQuestionUI,\r\n      serializable: true,\r\n      tooltip: \"reference of OneQuestionUI class\",\r\n    },\r\n    PartnershipSetupUI: {\r\n      default: {},\r\n      type: PartnershipUI,\r\n      serializable: true,\r\n      tooltip: \"reference of PartnershipUI class\",\r\n    },\r\n    PopUpUI: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    PopUpUILabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for pop up screen\",\r\n    },\r\n    PopUpUIButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    BusinessSetupNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for business setup screen\",\r\n    },\r\n    GameplayUIScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for gameplay ui screen\",\r\n    },\r\n    DecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Decision screen\",\r\n    },\r\n    InvestSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest & sell screen\",\r\n    },\r\n    PayDayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for PayDay screen\",\r\n    },\r\n    SellBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellBusiness screen\",\r\n    },\r\n    InvestScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest screen\",\r\n    },\r\n    BuyOrSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BuyOrSell screen\",\r\n    },\r\n    OneQuestionSpaceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionSpace screen\",\r\n    },\r\n    OneQuestionDecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionDecision screen\",\r\n    },\r\n    InsufficientBalanceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for InsufficientBalanceScreen screen\",\r\n    },\r\n    TempDiceText: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for dice\",\r\n    },\r\n    LeaveRoomButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  onLoad() {\r\n    this.CheckReferences();\r\n\r\n    //local variables\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n    this.IsBotTurn = false;\r\n    this.IsBankrupted = false;\r\n    this.BankruptedAmount = 0;\r\n  },\r\n\r\n  ResetTurnVariable() {\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null)\r\n      GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n\r\n    if (!GameManager || GameManager == null)\r\n      GameManager = require(\"GameManager\");\r\n  },\r\n\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  ToggleScreen_InsufficientBalance(_state)\r\n  {\r\n    this.InsufficientBalanceScreen.active = _state;\r\n  },\r\n\r\n  Exit___InsufficientBalance()\r\n  {\r\n    this.ToggleScreen_InsufficientBalance(false);\r\n  },\r\n  //#region Spectate UI Setup\r\n  InitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = true;\r\n  },\r\n\r\n  CloseInitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = false;\r\n  },\r\n\r\n  ToggleLeaveRoomButton_SpectateModeUI(_state) {\r\n    this.LeaveRoomButton.active = _state;\r\n  },\r\n\r\n  OnLeaveButtonClicked_SpectateModeUI() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(\r\n      true\r\n    );\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"Splash\");\r\n    }, 500);\r\n  },\r\n  //#endregion\r\n\r\n  //#region BusinessSetup with loan\r\n  //Business setup ui//------------------------\r\n  StartNewBusiness_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false,\r\n    _BankruptAmount = 0,\r\n    _isCardFunctionality = false,\r\n    _GivenCash = 0,\r\n    _StartAnyBusinessWithoutCash=false\r\n  ) {\r\n    //called first time form GameManager onload function\r\n    this.CheckReferences();\r\n    this.BusinessSetupNode.active = true;\r\n\r\n     BusinessSetupCardFunctionality = _isCardFunctionality;\r\n     GivenCashBusiness = _GivenCash;\r\n     StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n    \r\n    this.IsBankrupted = _isBankrupted;\r\n    this.BankruptedAmount = _BankruptAmount;\r\n\r\n    if (_isBankrupted) this.ResetTurnVariable();\r\n\r\n    this.Init_BusinessSetup(isFirstTime, insideGame, modeIndex, _isBankrupted);\r\n  },\r\n  Init_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false,\r\n  ) {\r\n    PlayerDataIntance = new GameManager.PlayerData();\r\n    PlayerBusinessDataIntance = new GameManager.BusinessInfo();\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n\r\n    if (isFirstTime) {\r\n      this.BusinessSetupData.ExitButtonNode.active = false;\r\n      this.BusinessSetupData.TimerNode.active = true;\r\n      PlayerDataIntance.Cash = StartGameCash;\r\n    }\r\n\r\n    this.ResetButtonStates_BusinessSetup();\r\n\r\n    if (insideGame) {\r\n      this.BusinessSetupData.ExitButtonNode.active = true;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n\r\n      for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID == GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID)\r\n        {\r\n          InsideGameBusinessSetup = index;\r\n          PlayerDataIntance = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n          if (BusinessSetupCardFunctionality) {\r\n            if (StartAnyBusinessWithoutCash) {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = 0;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n            }\r\n            else {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = GivenCashBusiness;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n            }\r\n            \r\n          }\r\n          else {\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n            this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      InsideGameBusinessSetup = -1;\r\n      this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n      this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n      this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n    }\r\n  },\r\n  GetObj_BusinessSetup: function () {\r\n    return this.BusinessSetupData;\r\n  },\r\n  OnChangeName_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n    PlayerDataIntance.PlayerName = name;\r\n  },\r\n  OnChangeUID_BusinessSetup: function (UID) {\r\n    PlayerDataIntance.PlayerUID = UID;\r\n  },\r\n  OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessTypeTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessTypeDescription = name;\r\n  },\r\n  OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessNameTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessName = name;\r\n  },\r\n  ResetButtonStates_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BusinessTypeLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameTextUI = \"\";\r\n    this.BusinessSetupData.BusinessTypeTextUI = \"\";\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n  },\r\n  OnHomeBasedSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = true;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =GameManager.EnumBusinessType.HomeBased;\r\n  },\r\n  OnBrickMortarSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = true;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =GameManager.EnumBusinessType.brickAndmortar;\r\n  },\r\n  OnChangeCash_BusinessSetup: function (amount) {\r\n    this.BusinessSetupData.PlayerCashUI.string = \"$\" + amount;\r\n    PlayerDataIntance.Cash = amount;\r\n  },\r\n  CalculateLoan_BusinessSetup: function (amount) {\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    if (!BusinessSetupCardFunctionality) {\r\n      for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n        if (PlayerDataIntance.NoOfBusiness[index].LoanTaken) {\r\n          _loanTaken = true;\r\n          _businessIndex = index;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_loanTaken) {\r\n        this.ShowToast(\"You have already taken loan of $\" +PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount,LongMessageTime);\r\n      } else {\r\n        if (PlayerDataIntance.Cash >= amount) {\r\n          this.ShowToast(\r\n            \"You do not need loan, you have enough cash to buy current selected business.\",LongMessageTime);\r\n        } else {\r\n          this.BusinessSetupData.LoanSetupNode.active = true;\r\n          RequiredCash = Math.abs(parseInt(PlayerDataIntance.Cash) - amount);\r\n          this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(\r\n            cc.Label\r\n          ).string = \"$\" + RequiredCash;\r\n        }\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanButtonClicked_BusinessSetup: function (event) {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar) {\r\n        this.CalculateLoan_BusinessSetup(50000);\r\n      } else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased) {\r\n        this.CalculateLoan_BusinessSetup(10000);\r\n      } else {\r\n        this.ShowToast(\"please select business between Home Based and brick & mortar.\");\r\n      }\r\n    }else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanBackButtonClicked_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanSetupNode.active = false;\r\n  },\r\n  HighLightLoanSelection_BusinessSetup: function (index) {\r\n    for (var i = 0; i < this.BusinessSetupData.LoanAmountLabel.length; i++) {\r\n      if (index == i)\r\n        this.BusinessSetupData.LoanAmountLabel[i].children[0].active = true;\r\n      else this.BusinessSetupData.LoanAmountLabel[i].children[0].active = false;\r\n    }\r\n  },\r\n  OnLoanAmountChoosed_01_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.Other;\r\n    this.HighLightLoanSelection_BusinessSetup(0);\r\n  },\r\n  OnLoanAmountChoosed_02_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TenThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(1);\r\n  },\r\n  OnLoanAmountChoosed_03_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TentyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(2);\r\n  },\r\n  OnLoanAmountChoosed_04_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.ThirtyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(3);\r\n  },\r\n  OnLoanAmountChoosed_05_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FortyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(4);\r\n  },\r\n  OnLoanAmountChoosed_06_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FiftyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(5);\r\n  },\r\n  OnTakenLoanClicked_BusinessSetup: function (event) {\r\n    if (this.BusinessSetupData.LoanAmount == LoanAmountEnum.Other)\r\n      PlayerBusinessDataIntance.LoanAmount = RequiredCash;\r\n    else\r\n      PlayerBusinessDataIntance.LoanAmount = parseInt(\r\n        this.BusinessSetupData.LoanAmount\r\n      );\r\n\r\n    PlayerBusinessDataIntance.LoanTaken = true;\r\n    this.OnLoanBackButtonClicked_BusinessSetup();\r\n    PlayerDataIntance.Cash =\r\n      PlayerDataIntance.Cash + PlayerBusinessDataIntance.LoanAmount;\r\n    this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n  },\r\n\r\n  SyncData: function (_data, _ID) {\r\n    if (_ID !=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr)\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n\r\n    console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length >=GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers) {\r\n      //setting room property to declare initial setup has been\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\"InitialSetup\", true, true);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\r\n          \"PlayerGameInfo\",\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo,\r\n          true\r\n        );\r\n      this.BusinessSetupData.WaitingStatusNode.active = false;\r\n      this.BusinessSetupNode.active = false;\r\n      this.GameplayUIScreen.active = true;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n      console.log(\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo\r\n      );\r\n    }\r\n  },\r\n\r\n  PurchaseBusiness: function (_amount, _businessName, _isHomeBased) {\r\n    if (PlayerDataIntance.Cash < _amount && !StartAnyBusinessWithoutCash) {\r\n      this.ShowToast(\"You have not enough cash to buy this \" + _businessName + \" business.\",LongMessageTime);\r\n    } else {\r\n      if (_isHomeBased) {\r\n        if (PlayerDataIntance.HomeBasedAmount < 3) {\r\n\r\n          if (!StartAnyBusinessWithoutCash) {\r\n            PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n            this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n          }\r\n\r\n          this.StartGame = true;\r\n          PlayerDataIntance.HomeBasedAmount++;\r\n        } else {\r\n          this.StartGame = false;\r\n          this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n        }\r\n      } else {\r\n        if (!StartAnyBusinessWithoutCash) {\r\n          PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n          this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n        }\r\n        this.StartGame = true;\r\n        PlayerDataIntance.BrickAndMortarAmount++;\r\n      }\r\n    }\r\n  },\r\n\r\n  Exit_BusinessSetup: function () {\r\n    if(!BusinessSetupCardFunctionality)\r\n    {\r\n      this.BusinessSetupNode.active = false;\r\n\r\n      if (PlayerBusinessDataIntance.LoanTaken) {\r\n        PlayerBusinessDataIntance.LoanTaken = false;\r\n        PlayerDataIntance.Cash =\r\n          PlayerDataIntance.Cash - PlayerBusinessDataIntance.LoanAmount;\r\n        PlayerBusinessDataIntance.LoanAmount = 0;\r\n        this.ShowToast(\"Reverting back loan amount.\");\r\n      }\r\n    } else\r\n    {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  InitialSetup_BusinessSetup: function () {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (this.IsBankrupted) {\r\n      PlayerDataIntance.IsBankrupt = true;\r\n      PlayerDataIntance.BankruptAmount = this.BankruptedAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()] = PlayerDataIntance;\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n    }\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      //setting player current data in custom properties when his/her turn overs\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n\r\n      if (!this.IsBankrupted) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1,PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n\r\n        var _data = {Data: {bankrupted: true,turn: GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(),PlayerDataMain: PlayerDataIntance,},};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(9, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else if (_mode == 1) {\r\n      //for AI\r\n      if (!this.IsBankrupted) {\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n        setTimeout(() => {\r\n          this.BusinessSetupData.WaitingStatusNode.active = false;\r\n          this.BusinessSetupNode.active = false;\r\n          this.GameplayUIScreen.active = true;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n        }, 1600);\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else {\r\n      console.error(\"no mode selected\");\r\n    }\r\n  },\r\n\r\n  StartNewSetup_DuringGame_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      this.ToggleDecision_TurnDecision(true);\r\n    }\r\n    else\r\n    {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;  \r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  PayAmountToPlayGame: function () {\r\n    this.StartGame = false;\r\n\r\n    if (PlayerBusinessDataIntance.BusinessTypeDescription == \"\")\r\n      this.ShowToast(\"please write a business type.\");\r\n    else if (PlayerBusinessDataIntance.BusinessName == \"\")\r\n      this.ShowToast(\"please write a business name.\");\r\n    else {\r\n\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.None || PlayerBusinessDataIntance.BusinessType==undefined)\r\n      {\r\n        this.ShowToast(\"please select a business\");\r\n        return;\r\n      }\r\n      \r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased)\r\n        //if selected business is homebassed\r\n        this.PurchaseBusiness(10000, \"home\", true);\r\n      else if (\r\n        PlayerBusinessDataIntance.BusinessType ==GameManager.EnumBusinessType.brickAndmortar)\r\n        //if selected business is brick and mortar\r\n        this.PurchaseBusiness(50000, \"brick and mortar\", false);\r\n\r\n      if (this.StartGame == true || this.IsBankrupted == true) {\r\n        PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n        if (InsideGameBusinessSetup != -1) {\r\n          //if start new business has not been called from inside game\r\n          this.StartNewSetup_DuringGame_BusinessSetup();\r\n        }\r\n        //if start new business has been called at start of game as initial setup\r\n        else {\r\n          this.InitialSetup_BusinessSetup();\r\n        }\r\n\r\n        //prtinting all values to console\r\n        for (var i = 0;i <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;i++) {\r\n          console.log(\"player name: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n          console.log(\"player ID: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n          console.log(\"Is player bot: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n          console.log(\"no of business of player (see below): \");\r\n          console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n          console.log(\"player cash: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n          console.log(\"player taken loan: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n          console.log(\"taken loan amount: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region TurnDecisionSetupUI\r\n  //TurnDecisionSetupUI//------------------------\r\n  ToggleDecision_TurnDecision: function (isactive) {\r\n    this.DecisionScreen.active = isactive;\r\n    this.UpdateCash_TurnDecision();\r\n  },\r\n\r\n  UpdateCash_TurnDecision: function () {\r\n    this.TurnDecisionSetupUI.CashAmountLabel.string =\r\n      \"$ \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()\r\n      ].Cash;\r\n  },\r\n\r\n  OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    TempMarketingAmount = amount;\r\n  },\r\n\r\n  OnMarketingAmountSelected_TurnDecision: function () {\r\n    if (TempMarketingAmount == \"\" || TempMarketingAmount == null) {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      this.marketingAmount = parseInt(TempMarketingAmount);\r\n      console.log(\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash\r\n      );\r\n\r\n      //if player entered amount is greater than total cash he owns\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= this.marketingAmount\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - this.marketingAmount;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].MarketingAmount =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].MarketingAmount + this.marketingAmount;\r\n        this.ShowToast(\r\n          \"you successfully marketed amount of $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].MarketingAmount +\r\n            \" , remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\",LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you don't have enough money.\");\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      }\r\n    }\r\n  },\r\n\r\n  OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n    // if player has more than 5000$\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    if (\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        _playerIndex\r\n      ].LawyerStatus\r\n    ) {\r\n      this.ShowToast(\"you have already hired a lawyer.\");\r\n    } else {\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= 5000\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].LawyerStatus = true;\r\n        TempHiringLawyer = true;\r\n        console.log(TempHiringLawyer);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - 5000;\r\n        this.ShowToast(\r\n          \"you have successfully hired a lawyer, remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\",LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n      } else {\r\n        this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  onLocationNameChanged_ExpandBusiness_TurnDecision(_name) {\r\n    LocationName = _name;\r\n  },\r\n  OnExpandButtonClicked_TurnDecision: function (event=null,_isCardFunctionality = false,_GivenCash = 0,_StartAnyBusinessWithoutCash=false) {\r\n    //if player has brick and mortar business he could expand it\r\n    console.log(\"expand business\");\r\n    \r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = true;\r\n    var generatedLength = GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision(BusinessSetupCardFunctionality,GivenCashBusiness,StartAnyBusinessWithoutCash);\r\n\r\n    if (generatedLength == 0) {\r\n      this.ShowToast(\"You have no brick and mortar business to expand.\");\r\n      setTimeout(() => {\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      }, 1600);\r\n    }\r\n  },\r\n\r\n  OnExpandButtonExitClicked_TurnDecision: function () {\r\n    if (!BusinessSetupCardFunctionality)\r\n    {\r\n      this.UpdateCash_TurnDecision();\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n    }\r\n    else\r\n    {\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  OnNewBusinessButtonClicked_TurnDecision: function () {\r\n    console.log(\"starting new business\");\r\n    this.StartNewBusiness_BusinessSetup(false, true);\r\n  },\r\n\r\n  OnGoldAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    GoldCashAmount = amount;\r\n  },\r\n\r\n  OnGoldDiceClicked_TurnDecision: function () {\r\n    if (!this.GoldInvested) {\r\n      this.GoldInvested = true;\r\n      EnterBuySellAmount = \"\";\r\n      this.ToggleInvestSellScreen_InvestSell(true);\r\n      this.InvestSellSetupUI.InvestState = InvestEnum.GoldInvest;\r\n      DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n      OnceOrShare = DiceResult * 1000;\r\n\r\n      this.AssignData_InvestSell(\r\n        \"Invest In GOLD\",\r\n        DiceResult,\r\n        \"Each Ounce of GOLD price is:\",\r\n        OnceOrShare + \"/ounce\",\r\n        \"Enter the number of ounce of GOLD you want to BUY\",\r\n        \"Total Buying Amount:\",\r\n        OnceOrShare + \"*0=0\",\r\n        \"BUY\",\r\n        this.InvestSellSetupUI.InvestState\r\n      );\r\n    } else {\r\n      this.ShowToast(\"You can invest in gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n    StockBusinessName = name;\r\n  },\r\n\r\n  OnStockDiceClicked_TurnDecision: function (event=null,_isTurnOver=false) {\r\n    TurnOverForInvest = _isTurnOver;\r\n\r\n    console.error(_isTurnOver);\r\n\r\n    if (TurnOverForInvest)\r\n      StockBusinessName = \"Friend's Business\";\r\n      \r\n    if (!this.StockInvested || TurnOverForInvest) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (StockBusinessName == \"\") {\r\n        this.ResetStockBusinessNameInput();\r\n        this.ShowToast(\"Please enter a business name to invest.\");\r\n      } else {\r\n        this.StockInvested = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockInvest;\r\n\r\n        if(!TurnOverForInvest)\r\n          DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        else\r\n          DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n        \r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Invest in Stock\",\r\n          DiceResult,\r\n          \"Each Share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to BUY\",\r\n          \"Total Buying Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"BUY\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can invest in stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellGoldClicked_TurnDecision: function () {\r\n    if (!this.GoldSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].GoldCount > 0\r\n      ) {\r\n        this.GoldSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.GoldSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell GOLD\",\r\n          DiceResult,\r\n          \"Each Ounce of GOLD price is:\",\r\n          OnceOrShare + \"/ounce\",\r\n          \"Enter the number of ounce of GOLD you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\r\n          \"you have not purchased any GOLD ounces, please buy them.\"\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellStockClicked_TurnDecision: function () {\r\n    if (!this.StockSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].StockCount > 0\r\n      ) {\r\n        this.StockSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell STOCK\",\r\n          DiceResult,\r\n          \"Each share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnPartnershipClicked_TurnDecision: function () {\r\n    console.log(\"go into partner ship\");\r\n    // this.ShowToast(\"work in progress, coming soon...\");\r\n    // var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    this.EnablePartnership_PartnerShipSetup();\r\n  },\r\n\r\n  OnRollDiceClicked_TurnDecision: function () {\r\n    console.log(\"roll the dice\");\r\n    this.ToggleDecision_TurnDecision(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n  },\r\n\r\n  PrintDiceValue_TurnDecision: function (value) {\r\n    //this.TempDiceText.string=value;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Partnership setup\r\n  ToggleScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.WaitingStatusScreen.active = _state;\r\n  },\r\n\r\n  ToggleDecisionScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.DecisionScreen.active = _state;\r\n  },\r\n\r\n  EnablePartnership_PartnerShipSetup() {\r\n    CancelledID = [];\r\n    this.Reset_PartnerShipSetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.ToggleScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.PlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.PlayerCash.string =\"$\"+_tempData.Cash;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.PartnershipSetupUI.PartnerShipPrefab);\r\n      node.parent = this.PartnershipSetupUI.ScrollContent;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n        var _allLocationsAmount = _totalLocations * 25000;\r\n        var _finalAmount = 50000 + _allLocationsAmount;\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n      }\r\n      else {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n      }\r\n\r\n      businessDetailPartnershipNodes.push(node);\r\n      \r\n    }\r\n  },\r\n\r\n  EnablePartnershipDecision_PartnerShipSetup(_msg) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.ToggleDecisionScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.DecisionPlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.DecisionPlayerCash.string =\"$\"+_tempData.Cash;\r\n    this.PartnershipSetupUI.DecisionDescription.string = _msg;\r\n  },\r\n\r\n  Exit_PartnerShipSetup() {\r\n    this.Reset_PartnerShipSetup();\r\n    this.ToggleScreen_PartnerShipSetup(false);\r\n  },\r\n  \r\n  Reset_PartnerShipSetup()\r\n  {\r\n    for (let index = 0; index < businessDetailPartnershipNodes.length; index++) {\r\n      businessDetailPartnershipNodes[index].destroy();\r\n    }\r\n    businessDetailPartnershipNodes = [];\r\n  },\r\n\r\n  ReceiveEvent_PartnershipSetup(_data)\r\n  {\r\n    PartnerShipOfferReceived = true;\r\n    PartnerShipData = _data;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 1)\r\n      _businessMode = \"Home Based\";\r\n    else if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 2)\r\n      _businessMode = \"Brick & Mortar\";\r\n      \r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false)\r\n    {\r\n      var _msg = \"you have received partnership offer by \" + _playerData.PlayerName + \" , following are the details of business: \" + \"\\n\" + \"\\n\" +\r\n        \"Business Name: \" + _playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessName + \"\\n\" +\r\n        \"Business Mode: \" + _businessMode + \"\\n\" +\r\n        \"Business Value: $\" + _businessValue + \"\\n\" +\r\n        \"Cash Payment: $\" + _payAmount + \"\\n\" + \"\\n\" +\r\n        \"if offer is accepted you will receive 50% share of that particular business and will receive profit/lose on that particular business.\";\r\n    \r\n      this.EnablePartnershipDecision_PartnerShipSetup(_msg);\r\n    }\r\n\r\n  },\r\n\r\n  AcceptOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _allActors = GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _data = PartnerShipData;\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    var myIndex = _manager.GetMyIndex();\r\n  \r\n    if (PartnerShipOfferReceived == true) {\r\n      if (_manager.PlayerGameInfo[myIndex].Cash >= _payAmount) {\r\n        _manager.PlayerGameInfo[myIndex].Cash -= _payAmount;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[myIndex]);\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(true, _payAmount, false, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"congratulations! you have started business partnership\");\r\n      } else {\r\n        this.ShowToast(\"Not enough cash.\");\r\n      }\r\n    } else\r\n    {\r\n      this.ShowToast(\"Offer has been accepted by other player.\");\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      }\r\n  },\r\n\r\n  CancelOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _data = PartnerShipData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var myIndex = _manager.GetMyIndex();\r\n    console.log(_manager.PlayerGameInfo[myIndex].PlayerUID);\r\n    if (PartnerShipOfferReceived == true) {\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(false, 0, true, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"you have cancelled the offer.\");\r\n    } else\r\n    {\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    }\r\n  },\r\n\r\n  RaiseEventDecisionAnswer_PartnershipSetup(_isAccepted=false,_payment=0,_isCancelled=false,_uID=\"\",_data=null,_businessIndex=0)\r\n  {\r\n    var _mainData = { Data: { Accepted: _isAccepted, CashPayment:_payment,Cancelled:_isCancelled,PlayerID:_uID,PlayerData:_data,BusinessIndex:_businessIndex} };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(12, _mainData);\r\n  },\r\n\r\n  ReceiveEventDecisionAnswer_PartnershipSetup(_data)\r\n  {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = _manager.GetTurnNumber();\r\n\r\n      console.log(_data);\r\n      var _accepted = _data.Data.Accepted;\r\n      var _cash = _data.Data.CashPayment;\r\n      var _cancelled = _data.Data.Cancelled;\r\n      var _uid = _data.Data.PlayerID;\r\n      var _playerData = _data.Data.PlayerData;\r\n      var _businessIndex = _data.Data.BusinessIndex;\r\n    \r\n      console.log(\"answer received\");\r\n      if(_manager.PlayerGameInfo[_playerIndex].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n      {\r\n        if (_accepted) {\r\n          this.ToggleScreen_PartnerShipSetup(false);\r\n          this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n          _manager.PlayerGameInfo[_playerIndex].Cash += _cash;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerID = _uid;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerName = _playerData.PlayerName;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"offer accepted\");\r\n          this.ShowToast(\"your partnership offer has been accepted by \" + _playerData.PlayerName + \", cash $\" + _cash + \" has been added to your account.\", LongMessageTime);\r\n          this.UpdateCash_TurnDecision();\r\n        } else if (_cancelled) {\r\n          if (CancelledID.includes(_uid) == false)\r\n              CancelledID.push(_uid);\r\n        \r\n          console.log(CancelledID);\r\n          if (CancelledID.length == _manager.PlayerGameInfo.length - 1) {\r\n            this.ToggleScreen_PartnerShipSetup(false);\r\n            this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n            this.ShowToast(\"your partnership offer has been cancelled by all other users.\");\r\n          }\r\n\r\n          console.log(\"offer rejected\");\r\n        }\r\n      } else {\r\n        if (_accepted) {\r\n          PartnerShipOfferReceived = false;\r\n          this.ShowToast(\"Offer has been accepted by other player.\");\r\n          this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        } else if (_cancelled) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Invest and sell moddule\r\n\r\n  ResetGoldInput() {\r\n    this.TurnDecisionSetupUI.GoldEditBox.string = \"\";\r\n    GoldCashAmount = \"\";\r\n  },\r\n\r\n  ResetStockBusinessNameInput() {\r\n    this.TurnDecisionSetupUI.StockEditBox.string = \"\";\r\n    StockBusinessName = \"\";\r\n  },\r\n\r\n  onAmountChanged_InvestSell(_amount) {\r\n    EnterBuySellAmount = _amount;\r\n\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n    } else {\r\n      var _amount = parseInt(EnterBuySellAmount);\r\n      var _amount = OnceOrShare * _amount;\r\n      this.UpdateData_InvestSell(\r\n        OnceOrShare + \"*\" + EnterBuySellAmount + \"=\" + _amount\r\n      );\r\n    }\r\n  },\r\n\r\n  ToggleInvestSellScreen_InvestSell(_state) {\r\n    this.InvestSellScreen.active = _state;\r\n    this.UpdateCash_TurnDecision();\r\n    this.ResetGoldInput();\r\n    this.ResetStockBusinessNameInput();\r\n  },\r\n\r\n  AssignData_InvestSell(\r\n    _title,\r\n    _diceResult,\r\n    _priceTitle,\r\n    _priceValue,\r\n    _buyOrSellTitle,\r\n    _totalAmountTitle,\r\n    _totalAmountValue,\r\n    _buttonName,\r\n    _state\r\n  ) {\r\n    this.CheckReferences();\r\n    this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n    this.InvestSellSetupUI.TitleLabel.string = _title;\r\n    this.InvestSellSetupUI.DiceResultLabel.string = _diceResult;\r\n    this.InvestSellSetupUI.PriceTitleLabel.string = _priceTitle;\r\n    this.InvestSellSetupUI.PriceValueLabel.string = _priceValue;\r\n    this.InvestSellSetupUI.BuyOrSellTitleLabel.string = _buyOrSellTitle;\r\n    this.InvestSellSetupUI.TotalAmountTitleLabel.string = _totalAmountTitle;\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n    this.InvestSellSetupUI.ButtonNameLabel.string = _buttonName;\r\n  },\r\n\r\n  UpdateData_InvestSell(_totalAmountValue) {\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n  },\r\n\r\n  ApplyButton_InvestSell() {\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -=_TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex ].GoldCount += _amount;\r\n          this.ShowToast(\r\n            \"You have successfully bought \" + _amount + \" ounces of GOLD\",\r\n            LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        if (_amount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash  += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount -= _amount;\r\n          this.ShowToast(\r\n            \"You have successfully sold \" +\r\n              _amount +\r\n              \" ounces of GOLD for  $\" +\r\n              _TotalAmount,\r\n              LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\r\n            \"you don't have enough GOLD ounces, you own \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[_playerIndex].GoldCount +\r\n              \" of GOLD ounces\",LongMessageTime\r\n          );\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount += _amount;\r\n          //can add multiple stocks with business name in object if required\r\n\r\n          this.ShowToast(\r\n            \"You have successfully bought \" +\r\n              _amount +\r\n              \" shares of business \" +\r\n              StockBusinessName,\r\n              LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n\r\n        if (_amount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount -= _amount;\r\n\r\n          this.ShowToast(\r\n            \"You have successfully sold \" +\r\n              _amount +\r\n              \" shares of stock for  $\" +\r\n              _TotalAmount,\r\n              LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\r\n            \"you don't have enough stocks shares, you own \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[_playerIndex].StockCount +\r\n              \" of stock shares\",LongMessageTime\r\n          );\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ExitButton_InvestSell() {\r\n    this.ToggleInvestSellScreen_InvestSell(false);\r\n\r\n    if (TurnOverForInvest)\r\n    {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn(); \r\n      TurnOverForInvest = false; \r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Payday or Double pay Day\r\n  TogglePayDayScreen_PayDay(_state) {\r\n    this.PayDayScreen.active = _state;\r\n  },\r\n\r\n  ToggleResultPanelScreen_PayDay(_state) {\r\n    this.PayDaySetupUI.ResultPanelNode.active = _state;\r\n  },\r\n\r\n  UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken) {\r\n    if (HMAmount == 0) {\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = false;\r\n    } else {\r\n      HomeBasedPaymentCompleted = false;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = true;\r\n    }\r\n\r\n    if (BMAmount == 0) {\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      BrickMortarPaymentCompleted = false;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (!loanTaken) {\r\n      LoanPayed = true;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      LoanPayed = false;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n  },\r\n\r\n  GetLoanAmount_PayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    var _loan = 0;\r\n    for (\r\n      let index = 0;\r\n      index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n      index++\r\n    ) {\r\n      if (_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loan =\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n        break;\r\n      }\r\n    }\r\n    return _loan;\r\n  },\r\n\r\n  AssignData_PayDay(_title,_isDoublePayDay = false,_skipHM = false,_skipBM = false,_isBot = false,_forSelectedBusiness=false,_SelectedBusinessIndex=0,_hMAmount=0,_bmAmount=0,_bmLocation=0) {\r\n    this.IsBotTurn = _isBot;\r\n    DoublePayDay = _isDoublePayDay;\r\n    this.TogglePayDayScreen_PayDay(true);\r\n    this.PayDaySetupUI.TitleLabel.string = _title;\r\n    var _time = 1800;\r\n    SelectedBusinessPayDay = _forSelectedBusiness;\r\n    SelectedBusinessIndex = _SelectedBusinessIndex;\r\n    HMAmount=_hMAmount;\r\n    BMAmount=_bmAmount;\r\n    BMLocations = _bmLocation;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      if (_isBot == false) {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM)\r\n          this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\", _time);\r\n        else if (_skipHM)\r\n          this.ShowToast(\"your payday on home based businessess will be skipped.\", _time);\r\n        else if (_skipBM)\r\n          this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\", _time);\r\n      } else {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM)\r\n          console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n        else if (_skipHM)\r\n          console.log(\"your payday on home based businessess will be skipped.\");\r\n        else if (_skipBM)\r\n          console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n      }\r\n    }\r\n\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    \r\n    if (!SelectedBusinessPayDay) {\r\n       HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n       BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n       BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n    }\r\n\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var loanTaken = false;\r\n    \r\n    if (!SelectedBusinessPayDay) {\r\n      loanTaken = _loanTaken;\r\n    }\r\n\r\n    this.PayDaySetupUI.HomeBasedNumberLabel.string = HMAmount;\r\n    this.PayDaySetupUI.BMNumberLabel.string = BMAmount;\r\n    this.PayDaySetupUI.BMNumberLocationLabel.string = BMLocations;\r\n\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    //check if loan was skipped previously\r\n    if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) {\r\n      var _loan = this.GetLoanAmount_PayDay();\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $\" + _loan;\r\n    } else {\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $5000\";\r\n    }\r\n\r\n    //check skip payday variables\r\n    if (_skipHM && _skipBM) this.UpdateButtons_PayDay(0, 0, loanTaken);\r\n    else if (_skipHM) this.UpdateButtons_PayDay(0, BMAmount, loanTaken);\r\n    else if (_skipBM) this.UpdateButtons_PayDay(HMAmount, 0, loanTaken);\r\n    else this.UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken);\r\n\r\n    if (_skipBM || _skipHM) {\r\n      setTimeout(() => {\r\n        this.PayDayCompleted();\r\n      }, _time + 200);\r\n    }\r\n\r\n    if (_isBot) {\r\n      this.OnHomeBasedPaymentClicked_PayDay();\r\n      this.OnBMPaymentClicked_PayDay();\r\n      this.OnLoanPaymentClicked_PayDay();\r\n    }\r\n  },\r\n\r\n  OnHomeBasedPaymentClicked_PayDay() {\r\n    if (!HomeBasedPaymentCompleted) {\r\n        this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay)\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else\r\n      {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      }\r\n\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      //partnership code\r\n      if (_doublePayDay)\r\n        _multiplier = 2;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 1) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _payment = _multiplier * _dice * 1000;\r\n              _amountToBeSend = (_payment / 2);\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else\r\n      {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 1) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _payment = _multiplier * _dice * 1000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n      //partnership code\r\n\r\n      if (!_doublePayDay)\r\n        TotalPayDayAmount = HMAmount * _dice * 1000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = 2 * (HMAmount * _dice) * 1000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = HMAmount;\r\n\r\n      if (!_doublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + HMAmount + \"*\" + \"1000)-\"+_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + HMAmount + \"*\" + \"1000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnBMPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!BrickMortarPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay)\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else\r\n      {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      \r\n      if (!SelectedBusinessPayDay) {\r\n        BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n      }\r\n\r\n      var _amount = BMAmount + BMLocations;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      if (_doublePayDay)\r\n        _multiplier = 2;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 2) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _locations = _tempData[index].LocationsName.length + 1;\r\n              var _payment = _locations * _multiplier * _dice * 2000;\r\n              _amountToBeSend = (_payment / 2);\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else\r\n      {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 2) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _locations = _tempData[SelectedBusinessIndex].LocationsName.length + 1;\r\n            var _payment = _locations * _multiplier * _dice * 2000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n\r\n      if (!_doublePayDay)\r\n        TotalPayDayAmount = _amount * _dice * 2000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = 2 * (_amount * _dice) * 2000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = _amount;\r\n\r\n      if (!_doublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + _amount + \"*\" + \"2000)-\" +_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + _amount + \"*\" + \"2000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnLoanPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!LoanPayed) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _EstimateLoan = 0;\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)//if player had skippped loan previously call all amount due\r\n        _EstimateLoan = this.GetLoanAmount_PayDay();\r\n      else\r\n        _EstimateLoan = 5000;\r\n\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= _EstimateLoan) {\r\n        LoanPayed = true;\r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - _EstimateLoan;\r\n\r\n        var _loanTaken = false;\r\n        var _businessIndex = 0;\r\n\r\n        for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n          if (\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            _loanTaken = true;\r\n            _businessIndex = index;\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount - _EstimateLoan;\r\n        \r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount <= 0) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = 0;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken = false;\r\n        }\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = false;\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        this.PayDayCompleted();\r\n      }\r\n      else {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = false;\r\n        else\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = true;\r\n\r\n        this.PayDaySetupUI.LoanResultPanelNode.active = true;\r\n        console.error(\"out of money\");\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceivePayment_PayDay() {\r\n    //all\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[ _playerIndex].Cash + TotalPayDayAmount;\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    if (!this.IsBotTurn) {\r\n      this.ShowToast(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n      );\r\n      setTimeout(() => {\r\n        this.ToggleResultPanelScreen_PayDay(false);\r\n        this.PayDayCompleted();\r\n      }, 1550);\r\n    } else {\r\n      console.log(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n      );\r\n      this.ToggleResultPanelScreen_PayDay(false);\r\n      this.PayDayCompleted();\r\n    }\r\n  },\r\n\r\n  SkipLoanOneTime_PayDay() {\r\n    this.ShowToast(\r\n      \"You have skipped the loan payment, bank will call upon complete loan amount on next payday\"\r\n    );\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = true;\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    LoanPayed = true;\r\n    this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    this.PayDayCompleted();\r\n    LoanPayed = true;\r\n  },\r\n\r\n  SellBusiness_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    this.EnableSellScreen__SellBusinessUISetup(false);\r\n  },\r\n\r\n  UpdateCash_PayDay(_amount) {\r\n    this.PayDaySetupUI.CashLabel.string = \"$\" + _amount;\r\n  },\r\n\r\n  ExitLoanScreen_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n  },\r\n\r\n  StartNewGame_PayDay() {\r\n    //if bankrupted you can start new game\r\n    this.ShowToast(\r\n      \"You will lose all progress and start new game from the start.\");\r\n    setTimeout(() => {\r\n      this.ExitLoanScreen_PayDay();\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      this.Exit___InsufficientBalance();\r\n      cc.systemEvent.emit(\"ShowCard\", \"\", false);\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false,false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n    }, 3010);\r\n  },\r\n\r\n  PayDayCompleted() {\r\n    if (HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      console.log(\"all payday done\");\r\n      this.TogglePayDayScreen_PayDay(false);\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false, false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n      }\r\n      else\r\n      {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Sell & manipulate Business UI\r\n  ToggleSellBusinessScreen_SellBusinessUISetup(_state) {\r\n    this.SellBusinessScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    this.SellBusinessSetupUI.TitleLabel.string = \"SELL\";\r\n    this.SellBusinessSetupUI.CashLabel.string =_manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellBusinessSetupUI.PlayerNameLabel.string =_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellBusinessSetupUI.BusinessCountLabel.string =\"No of Businesses : \" +_manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n        node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      else node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n\r\n  SetBusinessUI_BusinessManipulationUISetup(_isBot=false) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (!_isBot) {\r\n      this.SellBusinessSetupUI.TitleLabel.string = \"BUSINESS\";\r\n      this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n      this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n      this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n    }\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessManipulationPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_isBot)\r\n      {\r\n        node.getComponent(\"BusinessDetail\").SelectBusinessforPayDay();\r\n        break;\r\n      }\r\n      // if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      // else\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n  Reset_SellBusinessUISetup() {\r\n    for (let index = 0; index < businessDetailNodes.length; index++) {\r\n      businessDetailNodes[index].destroy();\r\n    }\r\n\r\n    businessDetailNodes = [];\r\n  },\r\n\r\n  EnableSellScreen__SellBusinessUISetup(_isTurnover = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    this.SetBusinessUI_SellBusinessUISetup();\r\n  },\r\n\r\n  EnableManipilationScreen__BusinessManipulationUISetup(_isTurnover = false,_isBot=false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n\r\n    if(!_isBot)\r\n      this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    \r\n    this.SetBusinessUI_BusinessManipulationUISetup(_isBot);\r\n  },\r\n\r\n  ExitSellScreen__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n  },\r\n\r\n  ExitSellScreenAlongTurnOver__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Invest UI\r\n  ToggleInvestScreen_InvestSetupUI(_state) {\r\n    this.InvestScreen.active = _state;\r\n  },\r\n\r\n  EnableInvest_InvestSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleInvestScreen_InvestSetupUI(true);\r\n    this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n  },\r\n  SetInvestUI_InvestSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.InvestSetupUI.TitleLabel.string = \"INVEST\";\r\n    this.InvestSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.InvestSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.InvestSetupUI.ExitButton.active = false;\r\n      this.InvestSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.InvestSetupUI.ExitButton.active = true;\r\n      this.InvestSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitInvest_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n  },\r\n\r\n  ExitInvestAlongTurnOver_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region BuyORSell UI\r\n  ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state) {\r\n    this.BuyOrSellScreen.active = _state;\r\n  },\r\n\r\n  EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n    this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n  },\r\n  SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.BuyOrSellSetupUI.TitleLabel.string = \"BUY OR SELL\";\r\n    this.BuyOrSellSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.BuyOrSellSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.BuyOrSellSetupUI.ExitButton.active = false;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.BuyOrSellSetupUI.ExitButton.active = true;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitSellOrBuy_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n  },\r\n\r\n  ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region One Question setup Ui\r\n  ToggleDecisionScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionDecisionScreen.active = _state;\r\n  },\r\n\r\n  ToggleSpaceScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSpaceScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSetupUI.WaitingScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_OneQuestionSetupUI(\r\n    _myData,\r\n    _actorsData,\r\n    _isTurnOver,\r\n    _modeIndex = 0\r\n  ) {\r\n    this.OneQuestionSetupUI.TitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.PlayerDetailLabel.string =\r\n      \"No of Players: \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (\r\n          _actorsData[index].customProperties.RoomEssentials.IsSpectate == false\r\n        ) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (\r\n            _myData.PlayerUID !=\r\n            _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n          ) {\r\n            var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n            node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerName(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerName\r\n              );\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerUID(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n              );\r\n            oneQuestionNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n          node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerName(_actorsData[index].PlayerName);\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerUID(_actorsData[index].PlayerUID);\r\n          oneQuestionNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.OneQuestionSetupUI.ExitButton.active = false;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.OneQuestionSetupUI.ExitButton.active = true;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_OneQuestionSetupUI() {\r\n    for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n      oneQuestionNodes[index].destroy();\r\n    }\r\n    oneQuestionNodes = [];\r\n  },\r\n\r\n  Exit_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  SetUpDecisionScreen_OneQuestionSetupUI(_question) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor()\r\n      .customProperties.PlayerSessionData;\r\n    this.OneQuestionSetupUI.DecisionTitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.DecisionCashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.DecisionPlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.DecisionQuestionLabel.string =\r\n      \"Player has asked if \" +\r\n      _question +\r\n      \"\\n\" +\r\n      \"\\n\" +\r\n      \"*either answer question or pay $5000 to player whose asking question.\";\r\n  },\r\n  //#endregion\r\n\r\n  ShowToast: function (message, time = ShortMessageTime,_hasbutton=true) {\r\n    this.PopUpUI.active = true;\r\n    this.PopUpUILabel.string = message;\r\n    var SelfToast = this;\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    \r\n    if (mode == 1) //for bot mode only\r\n    {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length>0 && GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].IsBot)\r\n      {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n      }\r\n      else\r\n      {\r\n        if (_hasbutton) {\r\n          this.PopUpUIButton.active = true;\r\n          clearTimeout(TimeoutRef);\r\n          TimeoutRef = setTimeout(() => {\r\n            this.CompleteToast();\r\n          }, CompletionWindowTime);\r\n        }\r\n        else {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n        }\r\n      }\r\n    }\r\n    else //for real players\r\n    {\r\n      if (_hasbutton) {\r\n        this.PopUpUIButton.active = true;\r\n        clearTimeout(TimeoutRef);\r\n        TimeoutRef = setTimeout(() => {\r\n          this.CompleteToast();\r\n        }, CompletionWindowTime);\r\n      }\r\n      else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n      }\r\n    }\r\n  },\r\n\r\n  CompleteToast()\r\n  {\r\n    console.error(\"complete toast called\");\r\n    this.PopUpUI.active = false;\r\n    clearTimeout(TimeoutRef);\r\n  },\r\n});\r\n"]}