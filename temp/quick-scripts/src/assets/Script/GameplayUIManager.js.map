{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","businessDetailNodes","oneQuestionNodes","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PopUpUI","GameplayUIScreen","DecisionScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","TempDiceText","LeaveRoomButton","onLoad","CheckReferences","GoldInvested","GoldSold","StockInvested","StockSold","IsBotTurn","IsBankrupted","BankruptedAmount","ResetTurnVariable","require","onEnable","systemEvent","on","SyncData","onDisable","off","InitialScreen_SpectateMode","active","CloseInitialScreen_SpectateMode","ToggleLeaveRoomButton_SpectateModeUI","_state","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","Init_BusinessSetup","PlayerData","BusinessInfo","Cash","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","StudentData","userID","PlayerUID","OnChangeName_BusinessSetup","PlayerName","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","GetObj_BusinessSetup","UID","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","BusinessType","EnumBusinessType","none","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","ShowToast","Math","abs","parseInt","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","_data","_ID","PhotonActor","actorNr","push","console","log","MaxPlayers","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_amount","_businessName","_isHomeBased","HomeBasedAmount","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","InitialSetup_BusinessSetup","_mode","GetSelectedMode","IsBankrupt","BankruptAmount","GetTurnNumber","RaiseEvent","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","IsBot","isactive","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","ResetStockBusinessNameInput","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","HMAmount","BMAmount","loanTaken","Button","interactable","GetLoanAmount_PayDay","_manager","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_time","UpdateCash_PayDay","BMLocations","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_dice","RollOneDice","ReceivePayment_PayDay","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","StartNewGame_PayDay","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","Reset_SellBusinessUISetup","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","SetBusinessMode","SetMode","SetBalance","Amount","SetLocations","LocationsName","ToggleSellLocationButton","destroy","_isTurnover","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","completeCardTurn","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_isTurnOver","_modeIndex","customProperties","RoomEssentials","IsSpectate","PlayerSessionData","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","_question","message","time","SelfToast"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager=null;\r\nvar businessDetailNodes=[];\r\nvar oneQuestionNodes=[];\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n    None:0,\r\n    TenThousand: 10000,                  \r\n    TentyThousand: 20000,\r\n    ThirtyThousand: 30000,\r\n    FortyThousand: 40000,\r\n    FiftyThousand: 50000,\r\n    Other:6\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI=cc.Class({\r\n    name:\"BusinessSetupUI\",\r\n\r\n    properties: {\r\n    PlayerNameUI:\r\n    {\r\n       displayName:\"PlayerNameUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label for player name\",},\r\n    PlayerCashUI:\r\n    {\r\n       displayName:\"PlayerCashUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label for player cash\",},\r\n    BusinessTypeTextUI:\r\n    {\r\n       displayName:\"BusinessTypeTextUI\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: false,\r\n       tooltip:\"var to store text for business type\",},\r\n    BusinessNameTextUI:\r\n    {\r\n       displayName:\"BusinessTypeTextUI\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: false,\r\n       tooltip:\"var to store text for business name\",},\r\n    BusinessTypeLabel:\r\n    {\r\n       displayName:\"BusinessTypeLabel\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"reference for business type editbox\",},\r\n    BusinessNameLabel:\r\n    {\r\n       displayName:\"BusinessNameLabel\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"referece for business name editbox\",},\r\n    HomeBasedNodeUI:\r\n    {\r\n       displayName:\"HomeBasedNodeUI\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for home based business\",},\r\n    BrickAndMortarNodeUI:\r\n    {\r\n       displayName:\"BrickAndMortarNodeUI\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for brick and mortar business\",},\r\n    TimerUI:\r\n    {\r\n       displayName:\"TimerUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the label for timer\",},\r\n    TimerNode:\r\n        {\r\n            displayName:\"TimerNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for timer node in business setup\"}, \r\n    BusinessSetupNode:\r\n    {\r\n       displayName:\"BusinessSetupNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for business setup\",},\r\n    LoanSetupNode:\r\n    {\r\n       displayName:\"LoanSetupNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for loan setup\",},\r\n    LoanAmount:\r\n    {\r\n        displayName:\"LoanAmount\",\r\n        type: LoanAmountEnum,\r\n        default: LoanAmountEnum.None,\r\n        serializable: true,\r\n        tooltip:\"loan amount taken by player (state machine)\"}, \r\n    LoanAmountLabel:\r\n        {\r\n            displayName:\"LoanAmountLabel\",\r\n            type: [cc.Node],\r\n            default: [],\r\n            serializable: true,\r\n            tooltip:\"Reference for all labels of amounts in loan UI\"}, \r\n    WaitingStatusNode:\r\n        {\r\n            displayName:\"WaitingStatusNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for waiting status screen on initial business setup\"}, \r\n    ExitButtonNode:\r\n        {\r\n            displayName:\"ExitButtonNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for exit button node in business setup\"}, \r\n},\r\n    ctor: function () {//constructor//\r\n    },\r\n\r\n    ChangeName_BusinessSetup: function (name) {\r\n        this.PlayerNameUI.string=name;\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI=cc.Class({\r\n    name:\"TurnDecisionSetupUI\",\r\n\r\n    properties: {\r\n    MarketingEditBox:\r\n    {\r\n       displayName:\"MarketingEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of marketing node\",},\r\n    GoldEditBox:\r\n    {\r\n       displayName:\"GoldEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of invest gold node\",}, \r\n    StockEditBox:\r\n    {\r\n       displayName:\"StockEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of invest stock node\",},\r\n    CashAmountLabel:\r\n    {\r\n       displayName:\"Cash\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to cash node\",},\r\n    ExpandBusinessNode:\r\n        {\r\n            displayName:\"ExpandBusinessNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for expnad business node\"}, \r\n    ExpandBusinessScrollContent:\r\n        {\r\n            displayName:\"ExpandBusinessScrollContent\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for content node of scroll view of expand business node\"},   \r\n    ExpandBusinessPrefab:\r\n        {\r\n            displayName:\"ExpandBusinessPrefab\",\r\n            type: cc.Prefab,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for prefab of expand business node\"},             \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n\r\n    ChangeName_BusinessSetup: function (name) {\r\n        this.PlayerNameUI.string=name;\r\n    },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n    None:0,\r\n    StockInvest: 1,                  \r\n    GoldInvest: 2,\r\n    StockSell: 3,\r\n    GoldSell: 4,\r\n    Other:5\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI=cc.Class({\r\n    name:\"InvestSellUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of invest&sell node\"},\r\n    DiceResultLabel:\r\n    {\r\n       displayName:\"DiceResult\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Dice Result of invest&sell node\"},\r\n    PriceTitleLabel:\r\n    {\r\n       displayName:\"PriceTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Price Title of invest&sell node\"},\r\n    PriceValueLabel:\r\n    {\r\n       displayName:\"PriceValue\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Price value of invest&sell node\"},\r\n    BuyOrSellTitleLabel:\r\n    {\r\n       displayName:\"BuyOrSellTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BuyOrSell Title of invest&sell node\"},\r\n    TotalAmountTitleLabel:\r\n    {\r\n       displayName:\"TotalAmountTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount Title of invest&sell node\"},\r\n    TotalAmountValueLabel:\r\n    {\r\n       displayName:\"TotalAmountValue\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount Value of invest&sell node\"},\r\n    ButtonNameLabel:\r\n    {\r\n       displayName:\"ButtonName\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of button name of invest&sell node\"},\r\n     InvestState:\r\n    {\r\n       displayName:\"InvestState\",\r\n       type: InvestEnum,\r\n       default: InvestEnum.None,\r\n       serializable: true},\r\n     AmountEditBox:\r\n    {\r\n       displayName:\"AmountEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true},\r\n          \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI=cc.Class({\r\n    name:\"SellBusinessUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of Sell node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of Sell node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of Sell node\"}, \r\n    BusinessCountLabel:\r\n    {\r\n       displayName:\"BusinessCount\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BusinessCount of Sell node\"},  \r\n    ScrollContentNode:\r\n    {\r\n       displayName:\"ScrollContentNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ScrollContentNode of Sell node\"},  \r\n    BusinessSellPrefab:\r\n    {\r\n       displayName:\"BusinessSellPrefab\",\r\n       type: cc.Prefab,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of BusinessSellPrefab of Sell node\"},    \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of Sell node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of Sell node\"},  \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI=cc.Class({\r\n    name:\"PayDayUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of PayDay node\"},\r\n    CashLabel:\r\n    {\r\n       displayName:\"Cash\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of PayDay node\"},\r\n    HomeBasedNumberLabel:\r\n    {\r\n       displayName:\"HomeBasedNumber\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of HomeBasedNumber node\"},\r\n     BMNumberLabel:\r\n    {\r\n       displayName:\"BrickMortarNumber\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarNumber node\"},\r\n     BMNumberLocationLabel:\r\n    {\r\n       displayName:\"BrickMortarLocations\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarLocations node\"},\r\n    HomeBasedBtn:\r\n    {\r\n       displayName:\"HomeBasedBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of HomeBasedBtn node\"},\r\n    BMBtn:\r\n    {\r\n       displayName:\"BrickMortarBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarBtn node\"},\r\n    LoanBtn:\r\n    {\r\n       displayName:\"LoanBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of LoanBtn node\"},\r\n    MainPanelNode:\r\n    {\r\n       displayName:\"MainPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of MainPanel node\"},\r\n    ResultPanelNode:\r\n    {\r\n       displayName:\"ResultPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ResultPanel node\"},\r\n    LoanResultPanelNode:\r\n    {\r\n       displayName:\"LoanResultPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of LoanResultPanelNode node\"},\r\n     ResultScreenTitleLabel:\r\n    {\r\n       displayName:\"ResultScreenTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ResultScreenTitle node\"},\r\n     DiceResultLabel:\r\n    {\r\n       displayName:\"DiceResult\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of DiceResult node\"},\r\n   TotalBusinessLabel:\r\n    {\r\n       displayName:\"TotalBusinessLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalBusiness node\"},\r\n    TotalAmountLabel:\r\n    {\r\n       displayName:\"TotalAmountLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount node\"},\r\n    SkipLoanButton:\r\n    {\r\n       displayName:\"SkipLoanButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of SkipLoanButton node\"},\r\n   LoanFotterLabel:\r\n    {\r\n       displayName:\"LoanFotterLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of LoanFotterLabel node\"},\r\n          \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI=cc.Class({\r\n    name:\"InvestUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of Invest node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of Invest node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of Invest node\"}, \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of Invest node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of Invest node\"},  \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI=cc.Class({\r\n    name:\"BuyOrSellUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of BuyOrSell node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of BuyOrSell node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of BuyOrSell node\"}, \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of BuyOrSell node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\"},  \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI=cc.Class({\r\n    name:\"OneQuestionUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of OneQuestion node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of OneQuestion node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of OneQuestion node\"}, \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of OneQuestion node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of OneQuestion node\"},\r\n   PlayerDetailLabel:\r\n    {\r\n       displayName:\"PlayerDetailLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of OneQuestion node\"}, \r\n    DetailsPrefab:\r\n    {\r\n       displayName:\"DetailsPrefab\",\r\n       type: cc.Prefab,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab DetailsPrefab of OneQuestion node\"},  \r\n    ScrollContent:\r\n    {\r\n       displayName:\"ScrollContent\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab ScrollContent of OneQuestion node\"}, \r\n    WaitingScreen:\r\n    {\r\n       displayName:\"WaitingScreen\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the node WaitingScreen of OneQuestion node\"},  \r\n    DecisionTitleLabel:\r\n    {\r\n       displayName:\"DecisionTitleLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of OneQuestion node\"},   \r\n    DecisionCashLabel:\r\n    {\r\n       displayName:\"DecisionCashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of OneQuestion node\"},   \r\n    DecisionPlayerNameLabel:\r\n    {\r\n       displayName:\"DecisionPlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of OneQuestion node\"},    \r\n    DecisionQuestionLabel:\r\n    {\r\n       displayName:\"DecisionQuestionLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player question of OneQuestion node\"},   \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup=-1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount=\"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount=\"\";\r\nvar EnterBuySellAmount=\"\";\r\nvar StockBusinessName=\"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName=\"\";\r\n\r\nvar HomeBasedPaymentCompleted=false;\r\nvar BrickMortarPaymentCompleted=false;\r\nvar LoanPayed=false;\r\nvar TotalPayDayAmount=0;\r\nvar DoublePayDay=false;\r\n\r\nvar GameplayUIManager=cc.Class({\r\n    name:\"GameplayUIManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        BusinessSetupData: {\r\n            default:null,                \r\n            type: BusinessSetupUI,\r\n            serializable: true,\r\n            tooltip:\"reference of BusinessSetupUI class\"},\r\n        TurnDecisionSetupUI: {\r\n            default:null,                \r\n            type: TurnDecisionSetupUI,\r\n            serializable: true,\r\n            tooltip:\"reference of TurnDecisionSetupUI class\"},\r\n        InvestSellSetupUI: {\r\n            default:null,                \r\n            type: InvestSellUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestSellUI class\",},  \r\n        PayDaySetupUI: {\r\n            default:null,                \r\n            type: PayDayUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestSellUI class\",},  \r\n        SellBusinessSetupUI: {\r\n            default:{},                 \r\n            type: SellBusinessUI,\r\n            serializable: true,\r\n            tooltip:\"reference of SellBusinessUI class\",},  \r\n        InvestSetupUI: {\r\n            default:{},                 \r\n            type: InvestUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestUI class\",},    \r\n        BuyOrSellSetupUI: {\r\n            default:{},                 \r\n            type: BuyOrSellUI,\r\n            serializable: true,\r\n            tooltip:\"reference of BuyOrSellUI class\",},       \r\n        OneQuestionSetupUI: {\r\n            default:{},                 \r\n            type: OneQuestionUI,\r\n            serializable: true,\r\n            tooltip:\"reference of OneQuestionUI class\",},       \r\n        PopUpUI: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for pop up screen\",},   \r\n        BusinessSetupNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for business setup screen\",},  \r\n        GameplayUIScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for gameplay ui screen\",},   \r\n        DecisionScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Decision screen\",},    \r\n        InvestSellScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Invest & sell screen\",},    \r\n        PayDayScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for PayDay screen\",},    \r\n        SellBusinessScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for SellBusiness screen\",},  \r\n        InvestScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Invest screen\",},  \r\n        BuyOrSellScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for BuyOrSell screen\",},  \r\n        OneQuestionSpaceScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for OneQuestionSpace screen\",},  \r\n        OneQuestionDecisionScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for OneQuestionDecision screen\",},  \r\n         TempDiceText: {\r\n            default:null,                \r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip:\"label reference for dice\",},   \r\n         LeaveRoomButton: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,},       \r\n    },\r\n\r\n     onLoad () {\r\n         this.CheckReferences(); \r\n\r\n         //local variables\r\n         this.GoldInvested=false;\r\n         this.GoldSold=false;\r\n         this.StockInvested=false;\r\n         this.StockSold=false;\r\n         this.IsBotTurn=false;\r\n         this.IsBankrupted=false;\r\n         this.BankruptedAmount=0;\r\n\r\n     },\r\n\r\n     ResetTurnVariable()\r\n     {\r\n        this.GoldInvested=false;\r\n        this.GoldSold=false;\r\n        this.StockInvested=false;\r\n        this.StockSold=false;\r\n     },\r\n\r\n     CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n\r\n        if(!GameManager || GameManager==null)\r\n            GameManager=require('GameManager');\r\n     },\r\n\r\n     onEnable: function () {\r\n        //events subscription to be called \r\n        cc.systemEvent.on('SyncData', this.SyncData, this);\r\n      },\r\n    \r\n    onDisable: function () {\r\n        cc.systemEvent.off('SyncData', this.SyncData, this);\r\n      },\r\n\r\n    //#region Spectate UI Setup\r\n    InitialScreen_SpectateMode()\r\n    {\r\n        this.BusinessSetupData.WaitingStatusNode.active=true;\r\n    },\r\n\r\n    CloseInitialScreen_SpectateMode()\r\n    {\r\n        this.BusinessSetupData.WaitingStatusNode.active=false;\r\n    },\r\n\r\n    ToggleLeaveRoomButton_SpectateModeUI(_state)\r\n    {\r\n        this.LeaveRoomButton.active=_state;\r\n    },\r\n\r\n    OnLeaveButtonClicked_SpectateModeUI()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(true);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.RemovePersistNode();\r\n            cc.director.loadScene(\"Splash\");\r\n        }, 500);\r\n    },\r\n    //#endregion\r\n    \r\n    //#region BusinessSetup with loan\r\n    //Business setup ui//------------------------\r\n    StartNewBusiness_BusinessSetup: function (isFirstTime,insideGame=false,modeIndex=0,_isBankrupted=false,_BankruptAmount=0) { //called first time form GameManager onload function\r\n        this.CheckReferences();\r\n        this.BusinessSetupNode.active=true;\r\n\r\n        this.IsBankrupted=_isBankrupted;\r\n        this.BankruptedAmount=_BankruptAmount;\r\n\r\n        if(_isBankrupted)\r\n            this.ResetTurnVariable();\r\n\r\n        this.Init_BusinessSetup(isFirstTime,insideGame,modeIndex,_isBankrupted);\r\n    },\r\n    Init_BusinessSetup: function (isFirstTime,insideGame=false,modeIndex=0,_isBankrupted=false) {\r\n        PlayerDataIntance=new GameManager.PlayerData();\r\n        PlayerBusinessDataIntance=new GameManager.BusinessInfo();\r\n       \r\n        if(isFirstTime)\r\n        {\r\n            this.BusinessSetupData.ExitButtonNode.active=false;\r\n            this.BusinessSetupData.TimerNode.active=true;\r\n            PlayerDataIntance.Cash=20000;\r\n        }\r\n\r\n        this.ResetButtonStates_BusinessSetup();\r\n\r\n        if(insideGame)\r\n        {\r\n            this.BusinessSetupData.ExitButtonNode.active=true;\r\n            this.BusinessSetupData.TimerNode.active=false;\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; index++) {\r\n                if(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID==GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    InsideGameBusinessSetup=index;\r\n                    PlayerDataIntance=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n                    this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n                    this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n                    this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);  \r\n                }  \r\n            }\r\n        }\r\n        else\r\n        {\r\n            InsideGameBusinessSetup=-1;\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n            this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash); \r\n        } \r\n    }, \r\n    GetObj_BusinessSetup: function () {\r\n        return this.BusinessSetupData;\r\n    },\r\n    OnChangeName_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n        PlayerDataIntance.PlayerName=name;\r\n    },\r\n    OnChangeUID_BusinessSetup: function (UID) {\r\n        PlayerDataIntance.PlayerUID=UID;\r\n    },\r\n    OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.BusinessTypeTextUI=name;\r\n        PlayerBusinessDataIntance.BusinessTypeDescription=name;\r\n       \r\n    },\r\n    OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.BusinessNameTextUI=name;\r\n        PlayerBusinessDataIntance.BusinessName=name;\r\n    },\r\n    ResetButtonStates_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BusinessTypeLabel.string=\"\";\r\n        this.BusinessSetupData.BusinessNameLabel.string=\"\";\r\n        this.BusinessSetupData.BusinessNameTextUI=\"\";\r\n        this.BusinessSetupData.BusinessTypeTextUI=\"\";\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.none;\r\n    },\r\n    OnHomeBasedSelected_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=true;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=false;\r\n\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.HomeBased;\r\n    },\r\n    OnBrickMortarSelected_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=true;\r\n\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.brickAndmortar;\r\n    },\r\n    OnChangeCash_BusinessSetup:function(amount)\r\n    {\r\n        this.BusinessSetupData.PlayerCashUI.string=\"$\"+amount;\r\n        PlayerDataIntance.Cash=amount;\r\n    },\r\n    CalculateLoan_BusinessSetup:function(amount)\r\n    {\r\n        var _loanTaken=false;\r\n        var _businessIndex=0;\r\n\r\n        for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n\r\n            if(PlayerDataIntance.NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loanTaken=true;\r\n                _businessIndex=index;\r\n                break;\r\n            }    \r\n        }\r\n\r\n        if(_loanTaken)\r\n        {\r\n            this.ShowToast(\"You have already taken loan of $\"+PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount);\r\n        }\r\n        else\r\n        {\r\n            if(PlayerDataIntance.Cash >=amount)\r\n                {\r\n                    this.ShowToast(\"You do not need loan, you have enough cash to buy current selected business.\")\r\n                }\r\n                else\r\n                {\r\n                    this.BusinessSetupData.LoanSetupNode.active=true;\r\n                    RequiredCash=Math.abs(parseInt(PlayerDataIntance.Cash)-amount);\r\n                    this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(cc.Label).string=\"$\"+RequiredCash;\r\n                }\r\n        }\r\n    },\r\n    OnLoanButtonClicked_BusinessSetup:function(event)\r\n    {\r\n        if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.brickAndmortar)\r\n        {\r\n            this.CalculateLoan_BusinessSetup(50000);\r\n        }else if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.HomeBased)\r\n        {\r\n            this.CalculateLoan_BusinessSetup(10000);\r\n        }\r\n        else\r\n        {\r\n            this.ShowToast(\"please select business between Home Based and brick & mortar. \")\r\n        }\r\n    },\r\n    OnLoanBackButtonClicked_BusinessSetup:function(event)\r\n    {\r\n      this.BusinessSetupData.LoanSetupNode.active=false;  \r\n    },\r\n    HighLightLoanSelection_BusinessSetup:function(index)\r\n    {\r\n        for(var i=0;i<this.BusinessSetupData.LoanAmountLabel.length;i++)\r\n        {\r\n            if(index==i)\r\n                this.BusinessSetupData.LoanAmountLabel[i].children[0].active=true;\r\n            else\r\n                this.BusinessSetupData.LoanAmountLabel[i].children[0].active=false;\r\n        }\r\n    },\r\n    OnLoanAmountChoosed_01_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.Other;\r\n        this.HighLightLoanSelection_BusinessSetup(0);\r\n\r\n    },\r\n    OnLoanAmountChoosed_02_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.TenThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(1);\r\n    },\r\n    OnLoanAmountChoosed_03_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.TentyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(2);\r\n    },\r\n    OnLoanAmountChoosed_04_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.ThirtyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(3);\r\n    },\r\n    OnLoanAmountChoosed_05_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.FortyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(4);\r\n    },\r\n    OnLoanAmountChoosed_06_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.FiftyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(5);\r\n    },\r\n    OnTakenLoanClicked_BusinessSetup:function(event)\r\n    {\r\n        if(this.BusinessSetupData.LoanAmount==LoanAmountEnum.Other)\r\n            PlayerBusinessDataIntance.LoanAmount=RequiredCash;\r\n        else\r\n            PlayerBusinessDataIntance.LoanAmount=parseInt(this.BusinessSetupData.LoanAmount);\r\n\r\n        PlayerBusinessDataIntance.LoanTaken=true;\r\n        this.OnLoanBackButtonClicked_BusinessSetup();\r\n        PlayerDataIntance.Cash=PlayerDataIntance.Cash+PlayerBusinessDataIntance.LoanAmount;\r\n        this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash)\r\n    },\r\n\r\n    SyncData:function(_data,_ID)\r\n    {\r\n        if(_ID!=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr)\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n\r\n        console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length>=GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers)\r\n        {\r\n            //setting room property to declare initial setup has been\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"InitialSetup\",true,true);\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\",GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo,true);\r\n            this.BusinessSetupData.WaitingStatusNode.active=false;\r\n            this.BusinessSetupNode.active=false;\r\n            this.GameplayUIScreen.active=true;\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n            console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n        }\r\n    },\r\n\r\n    PurchaseBusiness:function(_amount,_businessName,_isHomeBased)\r\n    {\r\n        if(PlayerDataIntance.Cash<_amount)\r\n            {\r\n                this.ShowToast(\"You have not enough cash to buy this \"+_businessName+\" business.\");\r\n            }\r\n        else\r\n           {\r\n                if(_isHomeBased)\r\n               {\r\n                   if(PlayerDataIntance.HomeBasedAmount<3)\r\n                   {\r\n                        PlayerDataIntance.Cash=PlayerDataIntance.Cash-_amount;\r\n                        this.BusinessSetupData.PlayerCashUI.string=\"$\"+PlayerDataIntance.Cash;\r\n                        this.StartGame=true;\r\n                        PlayerDataIntance.HomeBasedAmount++;\r\n                   }\r\n                   else{\r\n                        this.StartGame=false;\r\n                        this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n                   }\r\n               }\r\n               else\r\n               {\r\n                    PlayerDataIntance.Cash=PlayerDataIntance.Cash-_amount;\r\n                    this.BusinessSetupData.PlayerCashUI.string=\"$\"+PlayerDataIntance.Cash;\r\n                    this.StartGame=true;\r\n                    PlayerDataIntance.BrickAndMortarAmount++;\r\n               }\r\n           }\r\n    },\r\n\r\n    Exit_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupNode.active=false;\r\n\r\n        if(PlayerBusinessDataIntance.LoanTaken)\r\n        {\r\n            PlayerBusinessDataIntance.LoanTaken=false;\r\n            PlayerDataIntance.Cash=PlayerDataIntance.Cash-PlayerBusinessDataIntance.LoanAmount;\r\n            PlayerBusinessDataIntance.LoanAmount=0;\r\n            this.ShowToast(\"Reverting back loan amount.\",500);\r\n        }\r\n    },\r\n\r\n    InitialSetup_BusinessSetup:function()\r\n    {\r\n        var _mode=GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n        if(this.IsBankrupted)\r\n        {\r\n            PlayerDataIntance.IsBankrupt=true;\r\n            PlayerDataIntance.BankruptAmount=this.BankruptedAmount;\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()]=PlayerDataIntance;\r\n        }    \r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n        }\r\n               \r\n        if(_mode==2)//for real players\r\n        {\r\n            //setting player current data in custom properties when his/her turn overs\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n            \r\n            if(!this.IsBankrupted)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1,PlayerDataIntance);\r\n                this.BusinessSetupData.WaitingStatusNode.active=true;\r\n            }else\r\n            {\r\n                this.BusinessSetupData.WaitingStatusNode.active=false;\r\n                this.BusinessSetupNode.active=false;\r\n                this.GameplayUIScreen.active=true;\r\n\r\n                var _data={Data:{bankrupted:true,turn:GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(),PlayerDataMain:PlayerDataIntance}};\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(9,_data);\r\n                \r\n                GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n            }\r\n        }\r\n        else if(_mode==1)//for AI\r\n        {\r\n            if(!this.IsBankrupted)\r\n            {\r\n                this.BusinessSetupData.WaitingStatusNode.active=true;\r\n                setTimeout(() => {\r\n                    this.BusinessSetupData.WaitingStatusNode.active=false;\r\n                    this.BusinessSetupNode.active=false;\r\n                    this.GameplayUIScreen.active=true;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n                }, 1600);\r\n            }else\r\n            {\r\n                this.BusinessSetupData.WaitingStatusNode.active=false;\r\n                this.BusinessSetupNode.active=false;\r\n                this.GameplayUIScreen.active=true;\r\n                GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n            }\r\n        }\r\n        else{\r\n            console.error(\"no mode selected\");\r\n        }\r\n        \r\n    },\r\n\r\n    StartNewSetup_DuringGame_BusinessSetup:function()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup]=PlayerDataIntance;\r\n        this.BusinessSetupNode.active=false;\r\n        InsideGameBusinessSetup=-1;\r\n        this.ToggleDecision_TurnDecision(true);\r\n    },\r\n\r\n    PayAmountToPlayGame:function()\r\n    {\r\n        this.StartGame=false;\r\n\r\n        if(PlayerBusinessDataIntance.BusinessTypeDescription==\"\")\r\n            this.ShowToast(\"please write a business type.\");\r\n        else if(PlayerBusinessDataIntance.BusinessName==\"\")\r\n            this.ShowToast(\"please write a business name.\");\r\n        else\r\n        {\r\n            if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.HomeBased) //if selected business is homebassed\r\n                this.PurchaseBusiness(10000,\"home\",true);\r\n            else if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.brickAndmortar) //if selected business is brick and mortar\r\n                this.PurchaseBusiness(50000,\"brick and mortar\",false);\r\n\r\n        if(this.StartGame==true || this.IsBankrupted==true)\r\n        {\r\n            PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n            if(InsideGameBusinessSetup!=-1) //if start new business has not been called from inside game\r\n                this.StartNewSetup_DuringGame_BusinessSetup();\r\n            else    //if start new business has been called at start of game as initial setup\r\n                this.InitialSetup_BusinessSetup();\r\n\r\n            //prtinting all values to console\r\n            for(var i=0;i<GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;i++)\r\n            {\r\n                console.log(\"player name: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n                console.log(\"player ID: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n                console.log(\"Is player bot: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n                console.log(\"no of business of player (see below): \");\r\n                console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n                console.log(\"player cash: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n                console.log(\"player taken loan: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n                console.log(\"taken loan amount: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n            }\r\n        }\r\n        }\r\n    },\r\n    //#endregion\r\n\r\n    //#region TurnDecisionSetupUI\r\n    //TurnDecisionSetupUI//------------------------\r\n    ToggleDecision_TurnDecision: function (isactive) {\r\n        this.DecisionScreen.active=isactive;\r\n        this.UpdateCash_TurnDecision();\r\n    },\r\n\r\n    UpdateCash_TurnDecision:function()\r\n    {\r\n        this.TurnDecisionSetupUI.CashAmountLabel.string=\"$ \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].Cash;\r\n    },\r\n\r\n    OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n        //console.log(amount);\r\n        TempMarketingAmount=amount;\r\n    }, \r\n\r\n    OnMarketingAmountSelected_TurnDecision: function () {\r\n        if(TempMarketingAmount==\"\" || TempMarketingAmount==null)\r\n        {\r\n            this.ShowToast(\"Please enter an amount.\");\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            this.marketingAmount=parseInt(TempMarketingAmount);\r\n            console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n            \r\n            //if player entered amount is greater than total cash he owns\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>= this.marketingAmount)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash- this.marketingAmount;\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount+this.marketingAmount;\r\n                this.ShowToast(\"you successfully marketed amount of $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount+\" , remaining cash is $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+\".\");\r\n                this.UpdateCash_TurnDecision();\r\n\r\n                //reseting marketing label and its holding variable\r\n                this.TurnDecisionSetupUI.MarketingEditBox.string=\"\";\r\n                TempMarketingAmount=\"\";\r\n            }\r\n            else\r\n            {\r\n                this.ShowToast(\"you don't have enough money.\");\r\n\r\n                //reseting marketing label and its holding variable\r\n                this.TurnDecisionSetupUI.MarketingEditBox.string=\"\";\r\n                TempMarketingAmount=\"\";\r\n            }\r\n        }\r\n    }, \r\n\r\n    OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n        // if player has more than 5000$\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus)\r\n        {\r\n            this.ShowToast(\"you have already hired a lawyer.\");\r\n        }\r\n        else\r\n        {\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>=5000)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus=true;\r\n            TempHiringLawyer=true;\r\n            console.log(TempHiringLawyer);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-5000;\r\n            this.ShowToast(\"you have successfully hired a lawyer, remaining cash is $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+\".\");\r\n            this.UpdateCash_TurnDecision();\r\n        }else\r\n        {\r\n            this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n        }\r\n    }\r\n    }, \r\n\r\n    onLocationNameChanged_ExpandBusiness_TurnDecision(_name)\r\n    {\r\n        LocationName=_name;\r\n    },\r\n    OnExpandButtonClicked_TurnDecision: function () {\r\n        //if player has brick and mortar business he could expand it\r\n        console.log(\"expand business\");\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active=true;\r\n        var generatedLength=GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision();\r\n\r\n        if(generatedLength==0)\r\n        {\r\n            this.ShowToast(\"You have no brick and mortar business to expand.\",1500);\r\n            setTimeout(() => {\r\n                this.TurnDecisionSetupUI.ExpandBusinessNode.active=false;\r\n            }, 1600);\r\n        }\r\n    },\r\n\r\n    OnExpandButtonExitClicked_TurnDecision: function () {\r\n        this.UpdateCash_TurnDecision();\r\n        this.CheckReferences();\r\n        LocationName=\"\";\r\n        console.log(\"expand business exit called\");\r\n        GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active=false;\r\n    },\r\n\r\n    OnNewBusinessButtonClicked_TurnDecision: function () {\r\n        console.log(\"starting new business\");\r\n        this.StartNewBusiness_BusinessSetup(false,true);\r\n    },\r\n\r\n    OnGoldAmountChanged_TurnDecision: function (amount) {\r\n        //console.log(amount);\r\n        GoldCashAmount=amount;\r\n    }, \r\n\r\n    OnGoldDiceClicked_TurnDecision: function () {\r\n        if(!this.GoldInvested)\r\n        {\r\n            this.GoldInvested=true;\r\n            EnterBuySellAmount=\"\";\r\n            this.ToggleInvestSellScreen_InvestSell(true);\r\n            this.InvestSellSetupUI.InvestState=InvestEnum.GoldInvest;\r\n            DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n            OnceOrShare=(DiceResult*1000);\r\n\r\n            this.AssignData_InvestSell(\r\n                \"Invest In GOLD\",\r\n                DiceResult,\r\n                \"Each Ounce of GOLD price is:\",\r\n                OnceOrShare+\"/ounce\",\r\n                \"Enter the number of ounce of GOLD you want to BUY\",\r\n                \"Total Buying Amount:\",\r\n                OnceOrShare+\"*0=0\",\r\n                \"BUY\",\r\n                this.InvestSellSetupUI.InvestState\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.ShowToast(\"You can invest in gold one time during turn.\",800);\r\n        }\r\n        \r\n    }, \r\n\r\n    OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n        StockBusinessName=name;\r\n    }, \r\n\r\n    OnStockDiceClicked_TurnDecision: function () {\r\n\r\n        if(!this.StockInvested)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            if(StockBusinessName==\"\")\r\n            {\r\n                this.ResetStockBusinessNameInput();\r\n                this.ShowToast(\"Please enter a business name to invest.\");\r\n            }\r\n            else\r\n            {\r\n                this.StockInvested=true;\r\n                EnterBuySellAmount=\"\";\r\n                this.ToggleInvestSellScreen_InvestSell(true);\r\n                this.InvestSellSetupUI.InvestState=InvestEnum.StockInvest;\r\n                DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n                OnceOrShare=(DiceResult*1000);\r\n\r\n                this.AssignData_InvestSell(\r\n                    \"Invest in Stock\",\r\n                    DiceResult,\r\n                    \"Each Share of stock price is:\",\r\n                    OnceOrShare+\"/share\",\r\n                    \"Enter the number of shares of stock you want to BUY\",\r\n                    \"Total Buying Amount:\",\r\n                    OnceOrShare+\"*0=0\",\r\n                    \"BUY\",\r\n                    this.InvestSellSetupUI.InvestState\r\n                );\r\n            }\r\n        }else\r\n        {\r\n            this.ShowToast(\"You can invest in stocks one time during turn.\",800);\r\n        }\r\n    }, \r\n\r\n    OnSellGoldClicked_TurnDecision: function () {\r\n        if(!this.GoldSold)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount>0)\r\n            {\r\n                this.GoldSold=true;\r\n                EnterBuySellAmount=\"\";\r\n                this.ToggleInvestSellScreen_InvestSell(true);\r\n                this.InvestSellSetupUI.InvestState=InvestEnum.GoldSell;\r\n                DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n                OnceOrShare=(DiceResult*1000);\r\n\r\n                this.AssignData_InvestSell(\r\n                    \"Sell GOLD\",\r\n                    DiceResult,\r\n                    \"Each Ounce of GOLD price is:\",\r\n                    OnceOrShare+\"/ounce\",\r\n                    \"Enter the number of ounce of GOLD you want to SELL\",\r\n                    \"Total Selling Amount:\",\r\n                    OnceOrShare+\"*0=0\",\r\n                    \"SELL\",\r\n                    this.InvestSellSetupUI.InvestState\r\n                );\r\n            }\r\n            else\r\n            {\r\n                this.ShowToast(\"you have not purchased any GOLD ounces, please buy them.\");\r\n            }\r\n        }else\r\n        {\r\n            this.ShowToast(\"You can sell gold one time during turn.\",800);\r\n        }\r\n    }, \r\n\r\n    OnSellStockClicked_TurnDecision: function () {\r\n        \r\n        if(!this.StockSold)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount>0)\r\n            {\r\n                this.StockSold=true;\r\n                EnterBuySellAmount=\"\";\r\n                this.ToggleInvestSellScreen_InvestSell(true);\r\n                this.InvestSellSetupUI.InvestState=InvestEnum.StockSell;\r\n                DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n                OnceOrShare=(DiceResult*1000);\r\n\r\n                this.AssignData_InvestSell(\r\n                    \"Sell STOCK\",\r\n                    DiceResult,\r\n                    \"Each share of stock price is:\",\r\n                    OnceOrShare+\"/share\",\r\n                    \"Enter the number of shares of stock you want to SELL\",\r\n                    \"Total Selling Amount:\",\r\n                    OnceOrShare+\"*0=0\",\r\n                    \"SELL\",\r\n                    this.InvestSellSetupUI.InvestState\r\n                );\r\n            }\r\n            else\r\n            {\r\n                this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n            }\r\n        }else\r\n        {\r\n            this.ShowToast(\"You can sell stocks one time during turn.\",800);\r\n        }\r\n    }, \r\n\r\n    OnPartnershipClicked_TurnDecision: function () {\r\n        console.log(\"go into partner ship\");\r\n        this.ShowToast(\"work in progress, coming soon...\");\r\n    }, \r\n\r\n    OnRollDiceClicked_TurnDecision: function () {\r\n        console.log(\"roll the dice\");\r\n        this.ToggleDecision_TurnDecision(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n    }, \r\n\r\n    PrintDiceValue_TurnDecision: function (value) {\r\n        //this.TempDiceText.string=value;\r\n    }, \r\n    //#endregion\r\n    \r\n    //#region Invest and sell moddule\r\n\r\n    ResetGoldInput()\r\n    {\r\n        this.TurnDecisionSetupUI.GoldEditBox.string=\"\";\r\n        GoldCashAmount=\"\";\r\n    },\r\n\r\n    ResetStockBusinessNameInput()\r\n    {\r\n        this.TurnDecisionSetupUI.StockEditBox.string=\"\";\r\n        StockBusinessName=\"\";\r\n    },\r\n\r\n    onAmountChanged_InvestSell(_amount)\r\n    {\r\n        EnterBuySellAmount=_amount;\r\n\r\n        if(EnterBuySellAmount==\"\")\r\n        {\r\n            this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n        }\r\n        else\r\n        {\r\n            var _amount=parseInt(EnterBuySellAmount);\r\n            var _amount=OnceOrShare*_amount;\r\n            this.UpdateData_InvestSell(OnceOrShare+\"*\"+EnterBuySellAmount+\"=\"+_amount);\r\n        }\r\n    },\r\n\r\n    ToggleInvestSellScreen_InvestSell(_state)\r\n    {\r\n        this.InvestSellScreen.active=_state;\r\n        this.UpdateCash_TurnDecision();\r\n        this.ResetGoldInput();\r\n        this.ResetStockBusinessNameInput();\r\n        \r\n    },\r\n\r\n    AssignData_InvestSell(_title,_diceResult,_priceTitle,_priceValue,_buyOrSellTitle,_totalAmountTitle,_totalAmountValue,_buttonName,_state)\r\n    {\r\n        this.CheckReferences();\r\n        this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n        this.InvestSellSetupUI.TitleLabel.string=_title;\r\n        this.InvestSellSetupUI.DiceResultLabel.string=_diceResult;\r\n        this.InvestSellSetupUI.PriceTitleLabel.string=_priceTitle;\r\n        this.InvestSellSetupUI.PriceValueLabel.string=_priceValue;\r\n        this.InvestSellSetupUI.BuyOrSellTitleLabel.string=_buyOrSellTitle;\r\n        this.InvestSellSetupUI.TotalAmountTitleLabel.string=_totalAmountTitle;\r\n        this.InvestSellSetupUI.TotalAmountValueLabel.string=_totalAmountValue;\r\n        this.InvestSellSetupUI.ButtonNameLabel.string=_buttonName;\r\n    },\r\n\r\n    UpdateData_InvestSell(_totalAmountValue)\r\n    {\r\n        this.InvestSellSetupUI.TotalAmountValueLabel.string=_totalAmountValue;\r\n    },\r\n\r\n    ApplyButton_InvestSell()\r\n    {\r\n        if(EnterBuySellAmount==\"\")\r\n        {\r\n            this.ShowToast(\"Please enter an amount.\");\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n            if(this.InvestSellSetupUI.InvestState==InvestEnum.GoldInvest)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                var _TotalAmount=OnceOrShare*_amount;\r\n                if(_TotalAmount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount+_amount;\r\n                    this.ShowToast(\"You have successfully bought \"+_amount+\" ounces of GOLD\",1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"You don't have enough cash.\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.GoldSell)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                if(_amount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount)\r\n                {\r\n                    var _TotalAmount=OnceOrShare*_amount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount-_amount;\r\n                    this.ShowToast(\"You have successfully sold \"+_amount+\" ounces of GOLD for  $\"+_TotalAmount,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"you don't have enough GOLD ounces, you own \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount+\" of GOLD ounces\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.StockInvest)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                var _TotalAmount=OnceOrShare*_amount;\r\n                if(_TotalAmount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount+_amount;\r\n                    //can add multiple stocks with business name in object if required\r\n\r\n                    this.ShowToast(\"You have successfully bought \"+_amount+\" shares of business \"+StockBusinessName,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"You don't have enough cash.\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.StockSell)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                \r\n                if(_amount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount)\r\n                {\r\n                    var _TotalAmount=OnceOrShare*_amount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount-_amount;\r\n\r\n                    this.ShowToast(\"You have successfully sold \"+_amount+\" shares of stock for  $\"+_TotalAmount,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"you don't have enough stocks shares, you own \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount+\" of stock shares\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    ExitButton_InvestSell()\r\n    {\r\n        this.ToggleInvestSellScreen_InvestSell(false);\r\n    },\r\n    //#endregion\r\n    \r\n    //#region Payday or Double pay Day\r\n    TogglePayDayScreen_PayDay(_state)\r\n    {\r\n        this.PayDayScreen.active=_state;\r\n    },\r\n\r\n    ToggleResultPanelScreen_PayDay(_state)\r\n    {\r\n        this.PayDaySetupUI.ResultPanelNode.active=_state;\r\n    },\r\n\r\n    UpdateButtons_PayDay(HMAmount,BMAmount,loanTaken)\r\n    {\r\n        if(HMAmount==0)\r\n        {\r\n            HomeBasedPaymentCompleted=true;\r\n            this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=false;\r\n        }\r\n        else\r\n        {\r\n            HomeBasedPaymentCompleted=false;\r\n            this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n\r\n        if(BMAmount==0)\r\n        {\r\n            BrickMortarPaymentCompleted=true;\r\n            this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=false;\r\n        }\r\n        else\r\n        {\r\n            BrickMortarPaymentCompleted=false;\r\n            this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n\r\n        if(!loanTaken)\r\n        {\r\n            LoanPayed=true;\r\n            this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n        }else\r\n        {\r\n            LoanPayed=false;\r\n            this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n    },\r\n\r\n    GetLoanAmount_PayDay()\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        var _loan=0;\r\n        for (let index = 0; index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n            if(_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loan=_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                break;\r\n            }\r\n        }\r\n        return _loan;\r\n    },\r\n\r\n    AssignData_PayDay(_title,_isDoublePayDay=false,_skipHM=false,_skipBM=false,_isBot=false)\r\n    {\r\n        this.IsBotTurn=_isBot;\r\n        DoublePayDay=_isDoublePayDay;\r\n        this.TogglePayDayScreen_PayDay(true);\r\n        this.PayDaySetupUI.TitleLabel.string=_title;\r\n\r\n        var _time=1800;\r\n\r\n        if(_isBot==false)\r\n        {\r\n            //check skip payday variables\r\n            if(_skipHM && _skipBM)\r\n                this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\",_time);\r\n            else if(_skipHM)\r\n                this.ShowToast(\"your payday on home based businessess will be skipped.\",_time);\r\n            else if(_skipBM)\r\n                this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\",_time);\r\n        }\r\n        else\r\n        {\r\n            //check skip payday variables\r\n            if(_skipHM && _skipBM)\r\n                console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n            else if(_skipHM)\r\n                console.log(\"your payday on home based businessess will be skipped.\");\r\n            else if(_skipBM)\r\n                console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n        }\r\n\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n        var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n        \r\n        var _loanTaken=false;\r\n        var _businessIndex=0;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loanTaken=true;\r\n                _businessIndex=index;\r\n                break;\r\n            }    \r\n        }\r\n\r\n        var loanTaken=_loanTaken;\r\n        \r\n        this.PayDaySetupUI.HomeBasedNumberLabel.string=HMAmount;\r\n        this.PayDaySetupUI.BMNumberLabel.string=BMAmount;\r\n        this.PayDaySetupUI.BMNumberLocationLabel.string=BMLocations;\r\n\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        //check if loan was skipped previously\r\n        if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n        {\r\n            var _loan=this.GetLoanAmount_PayDay();\r\n            this.PayDaySetupUI.LoanFotterLabel.string=\"*pay $\"+_loan;\r\n        }else\r\n        {\r\n            this.PayDaySetupUI.LoanFotterLabel.string=\"*pay $5000\";\r\n        }\r\n\r\n        //check skip payday variables\r\n        if(_skipHM && _skipBM)\r\n            this.UpdateButtons_PayDay(0,0,loanTaken);\r\n        else if(_skipHM)\r\n            this.UpdateButtons_PayDay(0,BMAmount,loanTaken);\r\n        else if(_skipBM)\r\n            this.UpdateButtons_PayDay(HMAmount,0,loanTaken);\r\n        else\r\n            this.UpdateButtons_PayDay(HMAmount,BMAmount,loanTaken);\r\n\r\n        if(_skipBM || _skipHM)\r\n        {\r\n            setTimeout(() => {\r\n                this.PayDayCompleted();\r\n            }, (_time+200));\r\n        }\r\n\r\n        if(_isBot)\r\n        {\r\n            this.OnHomeBasedPaymentClicked_PayDay();\r\n            this.OnBMPaymentClicked_PayDay();\r\n            this.OnLoanPaymentClicked_PayDay();\r\n        }\r\n    },\r\n\r\n    OnHomeBasedPaymentClicked_PayDay()\r\n    {\r\n        if(!HomeBasedPaymentCompleted)\r\n        {\r\n           this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"PayDay\";\r\n           else\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"DoublePayDay\";\r\n\r\n           HomeBasedPaymentCompleted=true;\r\n           this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=false;\r\n\r\n           var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n           var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n           var _dice=GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n\r\n           if(!DoublePayDay)\r\n                TotalPayDayAmount=(HMAmount*_dice)*1000;\r\n           else\r\n                TotalPayDayAmount=2*(HMAmount*_dice)*1000;\r\n\r\n\r\n           this.PayDaySetupUI.DiceResultLabel.string=_dice;\r\n           this.PayDaySetupUI.TotalBusinessLabel.string=HMAmount;\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+HMAmount+\"*\"+\"1000=\"+TotalPayDayAmount;\r\n           else\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+HMAmount+\"*\"+\"1000*2=\"+TotalPayDayAmount;\r\n\r\n            if(this.IsBotTurn)\r\n            {\r\n                this.ReceivePayment_PayDay();\r\n            }\r\n        }\r\n    },\r\n\r\n    OnBMPaymentClicked_PayDay() //brick and mortar\r\n    {\r\n        if(!BrickMortarPaymentCompleted)\r\n        {\r\n            this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n            if(!DoublePayDay)\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"PayDay\";\r\n           else\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"DoublePayDay\";\r\n                \r\n           BrickMortarPaymentCompleted=true;\r\n           this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=false;\r\n\r\n           var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n           var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n           var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n           var _amount=BMAmount+BMLocations;\r\n           var _dice=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n           \r\n           if(!DoublePayDay)\r\n                TotalPayDayAmount=(_amount*_dice)*2000;\r\n           else\r\n                TotalPayDayAmount=2*(_amount*_dice)*2000;\r\n\r\n           this.PayDaySetupUI.DiceResultLabel.string=_dice;\r\n           this.PayDaySetupUI.TotalBusinessLabel.string=_amount;\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+_amount+\"*\"+\"2000=\"+TotalPayDayAmount;\r\n           else\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+_amount+\"*\"+\"2000*2=\"+TotalPayDayAmount;\r\n            \r\n            if(this.IsBotTurn)\r\n            {\r\n                this.ReceivePayment_PayDay();\r\n            }\r\n        }\r\n    },\r\n\r\n    OnLoanPaymentClicked_PayDay() //brick and mortar\r\n    {\r\n        if(!LoanPayed)\r\n        {\r\n            var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n            var  _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();   \r\n            var _EstimateLoan=0;\r\n\r\n            if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)//if player had skippped loan previously call all amount due\r\n                _EstimateLoan=this.GetLoanAmount_PayDay();\r\n            else\r\n                _EstimateLoan=5000;\r\n\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>=_EstimateLoan)\r\n            {\r\n                LoanPayed=true; \r\n                this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_EstimateLoan;\r\n\r\n                var _loanTaken=false;\r\n                var _businessIndex=0;\r\n\r\n                for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        _loanTaken=true;\r\n                        _businessIndex=index;\r\n                        break;\r\n                    }    \r\n                }\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount-_EstimateLoan;\r\n                if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount<=0)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=0;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken=false;\r\n                }\r\n\r\n                if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n                    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment=false;\r\n\r\n                this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n                this.PayDayCompleted();\r\n            }\r\n            else{\r\n\r\n                var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n                var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n                if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n                    this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable=false;\r\n                else\r\n                    this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable=true;\r\n\r\n                this.PayDaySetupUI.LoanResultPanelNode.active=true;\r\n\r\n                console.error(\"out of money\");\r\n            }      \r\n        }\r\n\r\n    },\r\n\r\n    ReceivePayment_PayDay() //all\r\n    {\r\n        var  _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+TotalPayDayAmount;\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        if(!this.IsBotTurn)\r\n        {\r\n            this.ShowToast(\"Amount $\"+TotalPayDayAmount+\" has been added to your cash amount, Total Cash has become $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash,1500);\r\n            setTimeout(() => {\r\n                this.ToggleResultPanelScreen_PayDay(false);\r\n                this.PayDayCompleted();\r\n            }, 1550);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Amount $\"+TotalPayDayAmount+\" has been added to your cash amount, Total Cash has become $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n            this.ToggleResultPanelScreen_PayDay(false);\r\n            this.PayDayCompleted();\r\n        }\r\n    },\r\n\r\n    SkipLoanOneTime_PayDay()\r\n    {\r\n        this.ShowToast(\"You have skipped the loan payment, bank will call upon complete loan amount on next payday\",2000);\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment=true;\r\n        this.PayDaySetupUI.LoanResultPanelNode.active=false;\r\n        LoanPayed=true; \r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n        this.PayDayCompleted();\r\n        LoanPayed=true;\r\n    },\r\n\r\n    SellBusiness_PayDay()\r\n    {\r\n        this.PayDaySetupUI.LoanResultPanelNode.active=false;\r\n        this.EnableSellScreen__SellBusinessUISetup(false);\r\n    },\r\n\r\n    UpdateCash_PayDay(_amount)\r\n    {\r\n        this.PayDaySetupUI.CashLabel.string=\"$\"+_amount;\r\n    },\r\n\r\n    ExitLoanScreen_PayDay()\r\n    {\r\n        this.PayDaySetupUI.LoanResultPanelNode.active=false;\r\n    },\r\n\r\n    StartNewGame_PayDay() //if bankrupted you can start new game\r\n    {\r\n        this.ShowToast(\"You will lose all progress and start new game from the start.\",3000);\r\n        setTimeout(() => {\r\n            this.ExitLoanScreen_PayDay();\r\n            this.TogglePayDayScreen_PayDay(false);\r\n            HomeBasedPaymentCompleted=false;\r\n            BrickMortarPaymentCompleted=false;\r\n            LoanPayed=false;\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false,false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n        }, 3010);\r\n        \r\n    },\r\n\r\n    PayDayCompleted()\r\n    {\r\n        if(HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            console.log(\"all payday done\");\r\n            this.TogglePayDayScreen_PayDay(false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false,false);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n        }\r\n    },\r\n    //#endregion\r\n    \r\n    //#region Sell Business UI\r\n    ToggleSellBusinessScreen_SellBusinessUISetup(_state)\r\n    {\r\n        this.SellBusinessScreen.active=_state;\r\n    },\r\n    \r\n    SetBusinessUI_SellBusinessUISetup()\r\n    {\r\n        this.Reset_SellBusinessUISetup();\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        var _tempData=_manager.PlayerGameInfo[_playerIndex];\r\n\r\n        this.SellBusinessSetupUI.TitleLabel.string=\"SELL\";\r\n        this.SellBusinessSetupUI.CashLabel.string=_manager.PlayerGameInfo[_playerIndex].Cash;\r\n        this.SellBusinessSetupUI.PlayerNameLabel.string=_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n        this.SellBusinessSetupUI.BusinessCountLabel.string=\"No of Businesses : \"+_manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n        for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n            var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n            node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n            node.getComponent('BusinessDetail').CheckReferences();\r\n            node.getComponent('BusinessDetail').SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n            node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n            node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n            node.getComponent('BusinessDetail').SetBusinessIndex(index);\r\n\r\n            if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==1)\r\n            {\r\n                node.getComponent('BusinessDetail').SetBusinessMode(1);\r\n                node.getComponent('BusinessDetail').SetMode(\"Home Based\");\r\n            }\r\n            else if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==2)\r\n            {\r\n                node.getComponent('BusinessDetail').SetBusinessMode(2);\r\n                node.getComponent('BusinessDetail').SetMode(\"Brick & Mortar\");\r\n            }\r\n\r\n            node.getComponent('BusinessDetail').SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n            node.getComponent('BusinessDetail').SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n            if(_tempData.NoOfBusiness[index].LocationsName.length==0)\r\n                node.getComponent('BusinessDetail').ToggleSellLocationButton(false);\r\n            else\r\n                node.getComponent('BusinessDetail').ToggleSellLocationButton(true);\r\n\r\n            businessDetailNodes.push(node);\r\n    }\r\n},\r\n\r\n    Reset_SellBusinessUISetup()\r\n    {\r\n        for (let index = 0; index < businessDetailNodes.length; index++) {\r\n            businessDetailNodes[index].destroy();\r\n        }\r\n\r\n        businessDetailNodes=[];\r\n    },\r\n\r\n    EnableSellScreen__SellBusinessUISetup(_isTurnover=false)\r\n    {\r\n        if(_isTurnover)\r\n        {\r\n            this.SellBusinessSetupUI.ExitButton.active=false;\r\n            this.SellBusinessSetupUI.TurnOverExitButton.active=true;\r\n        }\r\n        else\r\n        {\r\n            this.SellBusinessSetupUI.ExitButton.active=true;\r\n            this.SellBusinessSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n        this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n        this.SetBusinessUI_SellBusinessUISetup();\r\n    },\r\n        \r\n    ExitSellScreen__SellBusinessUISetup()\r\n    {\r\n        this.Reset_SellBusinessUISetup();\r\n        this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    },  \r\n    \r\n    ExitSellScreenAlongTurnOver__SellBusinessUISetup()\r\n    {\r\n        this.Reset_SellBusinessUISetup();\r\n        this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }, \r\n        \r\n    //#endregion\r\n    \r\n    //#region Invest UI\r\n    ToggleInvestScreen_InvestSetupUI(_state)\r\n    {\r\n        this.InvestScreen.active=_state;\r\n    },\r\n\r\n    EnableInvest_InvestSetupUI(_isTurnover=false)\r\n    {\r\n        this.ResetTurnVariable();\r\n        this.ToggleInvestScreen_InvestSetupUI(true);\r\n        this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n    },\r\n    SetInvestUI_InvestSetupUI(_isTurnover)\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        this.InvestSetupUI.TitleLabel.string=\"INVEST\";\r\n        this.InvestSetupUI.CashLabel.string=_manager.PlayerGameInfo[_playerIndex].Cash;\r\n        this.InvestSetupUI.PlayerNameLabel.string=_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n        if(_isTurnover)\r\n        {\r\n            this.InvestSetupUI.ExitButton.active=false;\r\n            this.InvestSetupUI.TurnOverExitButton.active=true;\r\n        }else\r\n        {\r\n            this.InvestSetupUI.ExitButton.active=true;\r\n            this.InvestSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n    },\r\n\r\n    ExitInvest_InvestSetupUI()\r\n    {\r\n        this.ToggleInvestScreen_InvestSetupUI(false);\r\n    },\r\n\r\n    ExitInvestAlongTurnOver_InvestSetupUI()\r\n    {\r\n        this.ToggleInvestScreen_InvestSetupUI(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    },\r\n    //#endregion\r\n    \r\n    //#region BuyORSell UI\r\n    ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state)\r\n    {\r\n        this.BuyOrSellScreen.active=_state;\r\n    },\r\n\r\n    EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover=false)\r\n    {\r\n        this.ResetTurnVariable();\r\n        this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n        this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n    },\r\n    SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover)\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        this.BuyOrSellSetupUI.TitleLabel.string=\"BUY OR SELL\";\r\n        this.BuyOrSellSetupUI.CashLabel.string=_manager.PlayerGameInfo[_playerIndex].Cash;\r\n        this.BuyOrSellSetupUI.PlayerNameLabel.string=_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n        if(_isTurnover)\r\n        {\r\n            this.BuyOrSellSetupUI.ExitButton.active=false;\r\n            this.BuyOrSellSetupUI.TurnOverExitButton.active=true;\r\n        }else\r\n        {\r\n            this.BuyOrSellSetupUI.ExitButton.active=true;\r\n            this.BuyOrSellSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n    },\r\n\r\n    ExitSellOrBuy_BuyOrSellSetupUI()\r\n    {\r\n        this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    },\r\n\r\n    ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI()\r\n    {\r\n        this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    },\r\n    //#endregion\r\n\r\n    //#region One Question setup Ui\r\n    ToggleDecisionScreen_OneQuestionSetupUI(_state)\r\n    {\r\n        this.OneQuestionDecisionScreen.active=_state;\r\n    },\r\n\r\n    ToggleSpaceScreen_OneQuestionSetupUI(_state)\r\n    {\r\n        this.OneQuestionSpaceScreen.active=_state;\r\n    },\r\n    \r\n    ToggleWaitingScreen_OneQuestionSetupUI(_state)\r\n    {\r\n        this.OneQuestionSetupUI.WaitingScreen.active=_state;\r\n    },\r\n\r\n    SetUpSpaceScreen_OneQuestionSetupUI(_myData,_actorsData,_isTurnOver,_modeIndex=0)\r\n    {\r\n        this.OneQuestionSetupUI.TitleLabel.string=\"ONE QUESTION\";\r\n        this.OneQuestionSetupUI.CashLabel.string=\"$\"+_myData.Cash;\r\n        this.OneQuestionSetupUI.PlayerNameLabel.string=_myData.PlayerName;\r\n        this.OneQuestionSetupUI.PlayerDetailLabel.string=\"No of Players: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n        if(_modeIndex==2)\r\n        {\r\n            for (let index = 0; index < _actorsData.length; index++) {\r\n            if(_actorsData[index].customProperties.RoomEssentials.IsSpectate==false) //check if player is spectate or not, dont add any spectates\r\n            {\r\n                    if(_myData.PlayerUID!=_actorsData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n                        node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n                        node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n                        node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n                        oneQuestionNodes.push(node);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(_modeIndex==1)//for bot\r\n        {\r\n            for (let index = 0; index < _actorsData.length; index++) {\r\n                    if(_myData.PlayerUID!=_actorsData[index].PlayerUID)\r\n                    {\r\n                        var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n                        node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n                        node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n                        node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n                        oneQuestionNodes.push(node);\r\n                    }\r\n                }\r\n        }\r\n\r\n        if(_isTurnOver)\r\n        {\r\n            this.OneQuestionSetupUI.ExitButton.active=false;\r\n            this.OneQuestionSetupUI.TurnOverExitButton.active=true;\r\n        }else\r\n        {\r\n            this.OneQuestionSetupUI.ExitButton.active=true;\r\n            this.OneQuestionSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n    },\r\n\r\n    ResetSpaceScreen_OneQuestionSetupUI()\r\n    {\r\n        for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n            oneQuestionNodes[index].destroy();   \r\n        }\r\n        oneQuestionNodes=[];\r\n    },\r\n\r\n    Exit_OneQuestionSetupUI()\r\n    {\r\n        this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    },\r\n\r\n    ExitAlongTurnOver_OneQuestionSetupUI()\r\n    {\r\n        this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    },\r\n    \r\n\r\n    SetUpDecisionScreen_OneQuestionSetupUI(_question)\r\n    {\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        this.OneQuestionSetupUI.DecisionTitleLabel.string=\"ONE QUESTION\";\r\n        this.OneQuestionSetupUI.DecisionCashLabel.string=\"$\"+_myData.Cash;\r\n        this.OneQuestionSetupUI.DecisionPlayerNameLabel.string=_myData.PlayerName;\r\n        this.OneQuestionSetupUI.DecisionQuestionLabel.string=\"Player has asked if \"+_question+\"\\n\"+\"\\n\"+\r\n        \"*either answer question or pay $5000 to player whose asking question.\";\r\n    },\r\n    //#endregion\r\n    \r\n    ShowToast:function(message,time=2250)\r\n    {\r\n        this.PopUpUI.active=true;\r\n        this.PopUpUI.children[2].children[1].getComponent(cc.Label).string=message;\r\n        var SelfToast=this;\r\n        setTimeout(function(){  SelfToast.PopUpUI.active=false; }, time);\r\n    },\r\n\r\n});\r\n"]}