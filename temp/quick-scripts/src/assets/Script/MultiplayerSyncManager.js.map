{"version":3,"sources":["assets\\Script\\MultiplayerSyncManager.js"],"names":["GamePlayReferenceManager","MultiplayerSyncManager","cc","Class","name","Component","properties","statics","Instance","RemovePersistNode","game","removePersistRootNode","node","onLoad","addPersistRootNode","CheckReferences","require","RaiseEvent","_eventCode","_data","Get_MultiplayerController","SendData","StartTurn","DiceRollEvent","SyncTurnCompletion","SendCardData","ReceiveEvent","_senderName","_senderID","console","log","systemEvent","emit","Get_GameManager","TurnHandler","syncDiceRoll","ReceiveEventTurnComplete","ReceiveEventForCard","start"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager=null;\r\n\r\nvar MultiplayerSyncManager=cc.Class({\r\n    name:\"MultiplayerSyncManager\",\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    RemovePersistNode()\r\n    {\r\n        MultiplayerSyncManager.Instance=null;\r\n        cc.game.removePersistRootNode(this.node);\r\n    },\r\n\r\n    onLoad () {\r\n\r\n        if(!MultiplayerSyncManager.Instance)\r\n        {\r\n            cc.game.addPersistRootNode(this.node);\r\n            MultiplayerSyncManager.Instance=this;\r\n        }\r\n        this.CheckReferences();\r\n    },\r\n\r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n    RaiseEvent (_eventCode,_data) {  \r\n        if(_eventCode==1) //sending playerinfo \r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().SendData(_data);\r\n        }\r\n        else if(_eventCode==2) //sending Turn Start Call\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().StartTurn(_data);\r\n        }\r\n        else if(_eventCode==3) //sending Dice Roll Value\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().DiceRollEvent(_data);\r\n        }\r\n        else if(_eventCode==4) //sending userID of player who had completed their turn\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().SyncTurnCompletion(_data);\r\n        }\r\n        else if(_eventCode==5) //sending card data (index) so other users can sync them\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().SendCardData(_data);\r\n        }\r\n    },\r\n\r\n    ReceiveEvent (_eventCode,_senderName,_senderID,_data) {\r\n        if(_eventCode==1) //receiving playerinfo\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            cc.systemEvent.emit(\"SyncData\",_data,_senderID); //function defined in GameplayUIManager\r\n\r\n        }\r\n        else if(_eventCode==2) //receiving start Turn\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().TurnHandler(_data);\r\n        }\r\n        else if(_eventCode==3) //receiving dice roll data\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().syncDiceRoll(_data);\r\n        }\r\n        else if(_eventCode==4) //receiving userid of player who has completed turn\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ReceiveEventTurnComplete(_data);\r\n        }\r\n        else if(_eventCode==5) //receiving card data (index) so other users can sync them\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ReceiveEventForCard(_data);\r\n        }\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n"]}