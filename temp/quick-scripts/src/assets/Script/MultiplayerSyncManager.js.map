{"version":3,"sources":["assets\\Script\\MultiplayerSyncManager.js"],"names":["GamePlayReferenceManager","MultiplayerSyncManager","cc","Class","name","Component","properties","statics","Instance","RemovePersistNode","game","removePersistRootNode","node","onLoad","addPersistRootNode","CheckReferences","SelectedMode","Get_MultiplayerController","GetSelectedMode","require","RaiseEvent","_eventCode","_data","SendData","ReceiveEvent","StartTurn","DiceRollEvent","SyncTurnCompletion","SendCardData","SendGameOver","SendOneQuestionData","SendOneQuestionResponseData","_senderName","_senderID","console","log","systemEvent","emit","Get_GameManager","TurnHandler","syncDiceRoll","ReceiveEventTurnComplete","ReceiveEventForCard","SyncGameOver","QuestionPopUp_OtherUser_OneQuestion","ReceiveEventDecision_OneQuestion"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager=null;\r\n\r\nvar MultiplayerSyncManager=cc.Class({\r\n    name:\"MultiplayerSyncManager\",\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    RemovePersistNode()\r\n    {\r\n        MultiplayerSyncManager.Instance=null;\r\n        cc.game.removePersistRootNode(this.node);\r\n    },\r\n\r\n    onLoad () {\r\n\r\n        if(!MultiplayerSyncManager.Instance)\r\n        {\r\n            cc.game.addPersistRootNode(this.node);\r\n            MultiplayerSyncManager.Instance=this;\r\n        }\r\n        this.CheckReferences();\r\n        this.SelectedMode= GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    },\r\n\r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n    RaiseEvent (_eventCode,_data) {  \r\n        if(_eventCode==1) //sending playerinfo \r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().SendData(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n        }\r\n        else if(_eventCode==2) //sending Turn Start Call\r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().StartTurn(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n        }\r\n        else if(_eventCode==3) //sending Dice Roll Value\r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().DiceRollEvent(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n        }\r\n        else if(_eventCode==4) //sending userID of player who had completed their turn\r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().SyncTurnCompletion(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n        }\r\n        else if(_eventCode==5) //sending card data (index) so other users can sync them\r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().SendCardData(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n\r\n        }else if(_eventCode==6) //sending call to end the game\r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().SendGameOver(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n        }\r\n        else if(_eventCode==7) //sending data for one question space\r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().SendOneQuestionData(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n        }\r\n        else if(_eventCode==8) //sending back data for one question space\r\n        {\r\n            if(this.SelectedMode==2)//for player\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().SendOneQuestionResponseData(_data);\r\n            else if(this.SelectedMode==1)//for bot\r\n                this.ReceiveEvent(_eventCode,\"customName\",\"customID\",_data);\r\n        }\r\n    },\r\n\r\n    ReceiveEvent (_eventCode,_senderName,_senderID,_data) {\r\n        if(_eventCode==1) //receiving playerinfo\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            cc.systemEvent.emit(\"SyncData\",_data,_senderID); //function defined in GameplayUIManager\r\n\r\n        }\r\n        else if(_eventCode==2) //receiving start Turn\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().TurnHandler(_data);\r\n        }\r\n        else if(_eventCode==3) //receiving dice roll data\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().syncDiceRoll(_data);\r\n        }\r\n        else if(_eventCode==4) //receiving userid of player who has completed turn\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ReceiveEventTurnComplete(_data);\r\n        }\r\n        else if(_eventCode==5) //receiving card data (index) so other users can sync them\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ReceiveEventForCard(_data);\r\n        }\r\n        else if(_eventCode==6) //receiving game over call\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().SyncGameOver(_data);\r\n        }else if(_eventCode==7) //receiving one question data\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().QuestionPopUp_OtherUser_OneQuestion(_data);\r\n        }else if(_eventCode==8) //receiving one question response data\r\n        {\r\n            console.log(\"sender name: \"+_senderName);\r\n            console.log(\"sender ID: \"+_senderID);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ReceiveEventDecision_OneQuestion(_data);\r\n        }\r\n    },\r\n\r\n});\r\n"]}