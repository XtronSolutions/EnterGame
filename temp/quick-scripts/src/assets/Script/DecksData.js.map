{"version":3,"sources":["assets\\Script\\DecksData.js"],"names":["GamePlayReferenceManager","CardData","cc","Class","name","properties","ID","displayName","type","Text","serializable","tooltip","Description","ctor","CardUI","ToastNode","Node","ToastLabel","Label","ButtonNode","DecksData","Component","MainUI","BigBusiness","Marketing","Losses","WildCards","onLoad","CheckReferences","SelectedCardIndex","BigBusinessCardFunctionality","require","getRandom","min","max","Math","floor","random","GenerateRandomBigBusinessCard","_isOwner","_randomValue","ShowCardInfo","active","setTimeout","ExitCardInfo","GenerateRandomMarketingCard","MarketingCardFunctionality","GenerateRandomLossesCard","LossesCardFunctionality","GenerateRandomWildCard","WildCardFunctionality","SpaceInvest","_index","InvestFunctionality","SpacePayDay","PayDayFunctionality","SpaceDoublePayDay","DoublePayDayFunctionality","SpaceOneQuestion","OneQuestionFunctionality","SpaceSell","SellFunctionality","SpaceBuyOrSell","BuyOrSellFunctionality","SpaceGoBackSpaces","GoBackFunctionality","message","_state","string","Instance","Get_GameManager","ResetCardDisplay","RaiseEventTurnComplete","_id","Index","parseInt","console","log","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager=null;\r\n//-------------------------------------------class for card data-------------------------//\r\nvar CardData=cc.Class({\r\n    name:\"CardData\",\r\n    properties: {\r\n        ID:\r\n        {\r\n           displayName:\"ID\",\r\n           type: cc.Text,\r\n           default: \"\",\r\n           serializable: true,\r\n           tooltip:\"Id of the card\"},\r\n        Description:\r\n        {\r\n           displayName:\"Description\",\r\n           type: cc.Text,\r\n           default: \"\",\r\n           serializable: true,\r\n           tooltip:\"description of the card\"},\r\n },\r\n\r\n ctor: function () { //constructor\r\n }\r\n\r\n});\r\n\r\n//-------------------------------------------class for card UI-------------------------//\r\nvar CardUI=cc.Class({\r\n   name:\"CardUI\",\r\n   properties: {\r\n       ToastNode:\r\n       {\r\n          displayName:\"ToastNode\",\r\n          type: cc.Node,\r\n          default: null,\r\n          serializable: true,\r\n          tooltip:\"node reference for toast node\"},\r\n       ToastLabel:\r\n       {\r\n          displayName:\"ToastLabel\",\r\n          type: cc.Label,\r\n          default: null,\r\n          serializable: true,\r\n          tooltip:\"label reference for toast node\"},\r\n      ButtonNode:\r\n       {\r\n          displayName:\"ButtonNode\",\r\n          type: cc.Node,\r\n          default: null,\r\n          serializable: true,\r\n          tooltip:\"Button reference for node\"},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//-------------------------------------------class for decks Data-------------------------//\r\nvar DecksData=cc.Class({\r\n    name:\"DecksData\",\r\n    extends: cc.Component,\r\n    properties: {\r\n      MainUI:\r\n      {\r\n         displayName:\"MainUI\",\r\n         default: null,\r\n         type: CardUI,\r\n         serializable: true,\r\n         tooltip:\"UI of decks\"},\r\n      BigBusiness:\r\n      {\r\n         displayName:\"BigBusiness\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for big business\",},\r\n      Marketing:\r\n      {\r\n         displayName:\"Marketing\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for marketing\",},\r\n       Losses:\r\n      {\r\n         displayName:\"Losses\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for losses\",},\r\n       WildCards:\r\n      {\r\n         displayName:\"WildCards\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for WildCards\",},\r\n    },\r\n\r\n    onLoad()\r\n    {\r\n      this.CheckReferences();\r\n      this.SelectedCardIndex=0;\r\n\r\n      this.BigBusinessCardFunctionality(\"1\");\r\n      //for testing\r\n      // this.Counter=0;\r\n      // this.GenerateRandomBigBusinessCard(this.Counter);\r\n    },\r\n\r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    GenerateRandomBigBusinessCard(_isOwner,_randomValue)\r\n    {\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.ShowCardInfo(this.BigBusiness[this.SelectedCardIndex].Description,true);\r\n      this.BigBusinessCardFunctionality(this.BigBusiness[this.SelectedCardIndex].ID);\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    GenerateRandomMarketingCard(_isOwner,_randomValue)\r\n    {\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.ShowCardInfo(this.Marketing[this.SelectedCardIndex].Description,true);\r\n      this.MarketingCardFunctionality(this.Marketing[this.SelectedCardIndex].ID);\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    GenerateRandomLossesCard(_isOwner,_randomValue)\r\n    {\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.ShowCardInfo(this.Losses[this.SelectedCardIndex].Description,true);\r\n      this.LossesCardFunctionality(this.Losses[this.SelectedCardIndex].ID);\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    GenerateRandomWildCard(_isOwner,_randomValue)\r\n    {\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.ShowCardInfo(this.WildCards[this.SelectedCardIndex].Description,true);\r\n      this.WildCardFunctionality(this.WildCards[this.SelectedCardIndex].ID);\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    SpaceInvest(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on investment space.\",true);\r\n      this.InvestFunctionality();\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    SpacePayDay(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on PayDay space.\",true);\r\n      this.PayDayFunctionality();\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    SpaceDoublePayDay(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on DoublePayDay space.\",true);\r\n      this.DoublePayDayFunctionality();\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    SpaceOneQuestion(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on One Question space.\",true);\r\n      this.OneQuestionFunctionality();\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    SpaceSell(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on Sell space.\",true);\r\n      this.SellFunctionality();\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    SpaceBuyOrSell(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on Buy or Sell space.\",true);\r\n      this.BuyOrSellFunctionality();\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    SpaceGoBackSpaces(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on Go Back space.\",true);\r\n      this.GoBackFunctionality();\r\n\r\n      if(_isOwner)\r\n         this.MainUI.ButtonNode.active=true;\r\n      else\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         setTimeout(() => {\r\n            this.ExitCardInfo();\r\n        }, 2000);\r\n      }\r\n    },\r\n\r\n    ShowCardInfo:function(message,_state)\r\n    {\r\n      if(_state)\r\n      {\r\n        this.MainUI.ToastNode.active=true;\r\n        this.MainUI.ToastLabel.string=message;\r\n      }else\r\n      {\r\n         this.MainUI.ToastLabel.string=\"\";\r\n         this.MainUI.ToastNode.active=false;\r\n      }\r\n    },\r\n\r\n    ExitCardInfo()\r\n    {\r\n      this.ShowCardInfo(\"\",false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ResetCardDisplay();  \r\n      GamePlayReferenceManager.Instance.Get_GameManager().RaiseEventTurnComplete();   \r\n\r\n      //for testing\r\n      // this.Counter++;\r\n      // this.GenerateRandomBigBusinessCard(this.Counter);\r\n    },\r\n\r\n    BigBusinessCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"2\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"3\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"4\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"5\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"6\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"7\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"8\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"9\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"10\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"11\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"12\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"14\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    MarketingCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"2\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"3\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"4\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"5\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"6\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"7\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"8\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"9\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"10\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"11\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"12\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"14\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    LossesCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"2\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"3\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"4\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"5\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"6\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"7\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"8\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"9\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"10\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"11\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"12\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"14\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    WildCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"2\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"3\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"4\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"5\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"6\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"7\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"8\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"9\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"10\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"11\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"12\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"14\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    InvestFunctionality()\r\n    {\r\n\r\n    },\r\n    PayDayFunctionality()\r\n    {\r\n\r\n    },\r\n    DoublePayDayFunctionality()\r\n    {\r\n\r\n    },\r\n    OneQuestionFunctionality()\r\n    {\r\n\r\n    },\r\n    SellFunctionality()\r\n    {\r\n\r\n    },\r\n    BuyOrSellFunctionality()\r\n    {\r\n\r\n    },\r\n    GoBackFunctionality()\r\n    {\r\n\r\n    },\r\n});\r\nmodule.exports= DecksData;\r\n"]}