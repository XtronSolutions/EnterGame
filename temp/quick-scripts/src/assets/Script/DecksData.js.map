{"version":3,"sources":["assets\\Script\\DecksData.js"],"names":["GamePlayReferenceManager","EnumSpaceType","cc","Enum","None","WildCard","BigBusiness","Marketing","Invest","Losses","PayDay","DoublePayDay","OneQuestion","Sell","BuyOrSell","GoBackSpaces","CardData","Class","name","properties","ID","displayName","type","Text","serializable","tooltip","Description","HasButton","ButtonName","ctor","CardUI","ToastNode","Node","ToastLabel","Label","ButtonNode","InteractionButtonNode","DecksData","Component","MainUI","WildCards","SpacesType","onLoad","CheckReferences","SelectedCardIndex","CardSelected","IsBotTurn","require","getRandom","min","max","Math","floor","random","ToggleButtons","_isOwner","_hasButton","_isBot","active","setTimeout","ExitCardInfo","GenerateRandomBigBusinessCard","_randomValue","children","getComponent","string","ShowCardInfo","CardFuntionalityButton","GenerateRandomMarketingCard","GenerateRandomLossesCard","GenerateRandomWildCard","SpaceInvest","_index","CompleteTurnWithToast","SpacePayDay","PayDayFunctionality","SpaceDoublePayDay","DoublePayDayFunctionality","SpaceOneQuestion","SpaceSell","SpaceBuyOrSell","SpaceGoBackSpaces","GoBackFunctionality","message","_state","Instance","Get_GameManager","ResetCardDisplay","RaiseEventTurnComplete","BigBusinessCardFunctionality","LossesCardFunctionality","MarketingCardFunctionality","WildCardFunctionality","SellFunctionality","InvestFunctionality","BuyOrSellFunctionality","OneQuestionFunctionality","CheckLoan","_loanTaken","_businessIndex","_manager","_playerIndex","GetTurnNumber","index","PlayerGameInfo","NoOfBusiness","length","LoanTaken","val","Result","v2","_msg","_time","console","log","_delay","Get_GameplayUIManager","ShowToast","_id","Index","parseInt","_result","IsLoanTaken","x","y","LoanAmount","LawyerStatus","ToggleDoublePayNextTurn","Dice1Result","RollTwoDices","Dice2Result","TotalResult","_mode","Get_MultiplayerController","GetSelectedMode","_amount","MarketingAmount","Cash","_actorsArray","getPhotonRef","myRoomActorsArray","customProperties","PlayerSessionData","_loseAmount","LoseAllMarketingMoney","_marketAmount","_multiplier","_increaseAmount","MultiplyMarketingMoney","_profit","GetMarketingMoney","ToggleSkipNextTurn","ToggleSkipPayDay_Whole","_businessType","BusinessType","ToggleSkipPayDay_HomeBased","DiceResult","RollOneDice","CashMulitplier","_loanReset","_type","EnableInvest_InvestSetupUI","OneQuestionScreen_Space_OneQuestion","EnableSellScreen__SellBusinessUISetup","EnableBuyOrSell_BuyOrSellSetupUI","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager=null;\r\n//-------------------------------------------Spaces Data-------------------------//\r\nvar EnumSpaceType = cc.Enum({\r\n    None:0,\r\n    WildCard: 1,\r\n    BigBusiness: 2,\r\n    Marketing: 3,\r\n    Invest: 4,\r\n    Losses:5,\r\n    PayDay: 6,\r\n    DoublePayDay: 7,\r\n    OneQuestion: 8,\r\n    Sell: 9,\r\n    BuyOrSell: 10,\r\n    GoBackSpaces:11,\r\n});\r\n//-------------------------------------------class for card data-------------------------//\r\nvar CardData=cc.Class({\r\n    name:\"CardData\",\r\n    properties: {\r\n        ID:\r\n        {\r\n           displayName:\"ID\",\r\n           type: cc.Text,\r\n           default: \"\",\r\n           serializable: true,\r\n           tooltip:\"Id of the card\"},\r\n        Description:\r\n        {\r\n           displayName:\"Description\",\r\n           type: cc.Text,\r\n           default: \"\",\r\n           serializable: true,\r\n           tooltip:\"description of the card\"},\r\n        HasButton:\r\n        {\r\n           displayName:\"HasButton\",\r\n           type: cc.boolean,\r\n           default: false,\r\n           serializable: true,\r\n           tooltip:\"if this card should have interaction button\"},\r\n        ButtonName:\r\n        {\r\n           displayName:\"ButtonName\",\r\n           type: cc.Text,\r\n           default: \"\",\r\n           serializable: true,\r\n           tooltip:\"button name to show on screen\"},\r\n },\r\n\r\n ctor: function () { //constructor\r\n }\r\n\r\n});\r\n\r\n//-------------------------------------------class for card UI-------------------------//\r\nvar CardUI=cc.Class({\r\n   name:\"CardUI\",\r\n   properties: {\r\n       ToastNode:\r\n       {\r\n          displayName:\"ToastNode\",\r\n          type: cc.Node,\r\n          default: null,\r\n          serializable: true,\r\n          tooltip:\"node reference for toast node\"},\r\n       ToastLabel:\r\n       {\r\n          displayName:\"ToastLabel\",\r\n          type: cc.Label,\r\n          default: null,\r\n          serializable: true,\r\n          tooltip:\"label reference for toast node\"},\r\n      ButtonNode:\r\n       {\r\n          displayName:\"ExitButton\",\r\n          type: cc.Node,\r\n          default: null,\r\n          serializable: true,\r\n          tooltip:\"Button reference for node\"},\r\n        InteractionButtonNode:\r\n       {\r\n          displayName:\"InteractionButton\",\r\n          type: cc.Node,\r\n          default: null,\r\n          serializable: true,\r\n          tooltip:\"interaction Button reference for node\"},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//-------------------------------------------class for decks Data-------------------------//\r\nvar DecksData=cc.Class({\r\n    name:\"DecksData\",\r\n    extends: cc.Component,\r\n    properties: {\r\n      MainUI:\r\n      {\r\n         displayName:\"MainUI\",\r\n         default: null,\r\n         type: CardUI,\r\n         serializable: true,\r\n         tooltip:\"UI of decks\"},\r\n      BigBusiness:\r\n      {\r\n         displayName:\"BigBusiness\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for big business\",},\r\n      Marketing:\r\n      {\r\n         displayName:\"Marketing\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for marketing\",},\r\n       Losses:\r\n      {\r\n         displayName:\"Losses\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for losses\",},\r\n       WildCards:\r\n      {\r\n         displayName:\"WildCards\",\r\n         type: [CardData],\r\n         default: [],\r\n         serializable: true,\r\n         tooltip:\"all cards data for WildCards\",},\r\n        SpacesType:\r\n        {\r\n            type: EnumSpaceType,\r\n            default: EnumSpaceType.None,\r\n            serializable: true,\r\n            tooltip:\"states machines by type of card or spaces on board\",}, \r\n    },\r\n\r\n    onLoad()\r\n    {\r\n      this.CheckReferences();\r\n      this.SelectedCardIndex=-1;\r\n      this.CardSelected=-1;\r\n      this.IsBotTurn=false;\r\n\r\n      //this.BigBusinessCardFunctionality(\"1\");\r\n      //for testing\r\n      // this.Counter=0;\r\n      // this.GenerateRandomBigBusinessCard(this.Counter);\r\n    },\r\n\r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    ToggleButtons(_isOwner,_hasButton=false,_isBot=false)\r\n    {\r\n        if(_isOwner && _hasButton)\r\n      {\r\n         this.MainUI.ButtonNode.active=false;\r\n         this.MainUI.InteractionButtonNode.active=true;\r\n      }\r\n      else  if(_isOwner && !_hasButton)\r\n      {\r\n        this.MainUI.ButtonNode.active=true;\r\n        this.MainUI.InteractionButtonNode.active=false;\r\n      }\r\n      else\r\n      {\r\n        this.MainUI.InteractionButtonNode.active=false;\r\n        this.MainUI.ButtonNode.active=false;\r\n\r\n        if(_isBot==false)\r\n        {\r\n            setTimeout(() => {\r\n            this.ExitCardInfo();\r\n            }, 2500);\r\n        }\r\n      }\r\n    },\r\n\r\n\r\n    GenerateRandomBigBusinessCard(_isOwner,_randomValue,_isBot=false)\r\n    {\r\n      this.IsBotTurn=_isBot;\r\n      this.SpacesType=EnumSpaceType.BigBusiness;\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.CardSelected=this.BigBusiness[this.SelectedCardIndex].ID;\r\n\r\n      if(this.BigBusiness[this.SelectedCardIndex].HasButton)\r\n        this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=this.BigBusiness[this.SelectedCardIndex].ButtonName;\r\n\r\n      this.ShowCardInfo(this.BigBusiness[this.SelectedCardIndex].Description,true);\r\n      this.ToggleButtons(_isOwner,this.BigBusiness[this.SelectedCardIndex].HasButton,_isBot);\r\n\r\n      if(_isBot)\r\n      {\r\n          this.CardFuntionalityButton();\r\n      }\r\n    },\r\n\r\n    GenerateRandomMarketingCard(_isOwner,_randomValue,_isBot=false)\r\n    {\r\n      this.IsBotTurn=_isBot;\r\n      this.SpacesType=EnumSpaceType.Marketing;\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.CardSelected=this.Marketing[this.SelectedCardIndex].ID;\r\n\r\n      if(this.Marketing[this.SelectedCardIndex].HasButton)\r\n        this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=this.Marketing[this.SelectedCardIndex].ButtonName;\r\n    \r\n      this.ShowCardInfo(this.Marketing[this.SelectedCardIndex].Description,true);\r\n      this.ToggleButtons(_isOwner,this.Marketing[this.SelectedCardIndex].HasButton,_isBot);\r\n\r\n      if(_isBot)\r\n      {\r\n          this.CardFuntionalityButton();\r\n      }\r\n    },\r\n\r\n    GenerateRandomLossesCard(_isOwner,_randomValue,_isBot=false)\r\n    {\r\n      this.IsBotTurn=_isBot;\r\n      this.SpacesType=EnumSpaceType.Losses;\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.CardSelected=this.Losses[this.SelectedCardIndex].ID;\r\n\r\n      this.ShowCardInfo(this.Losses[this.SelectedCardIndex].Description,true);\r\n\r\n      if(this.Losses[this.SelectedCardIndex].HasButton)\r\n        this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=this.Losses[this.SelectedCardIndex].ButtonName;\r\n     \r\n      this.ToggleButtons(_isOwner,this.Losses[this.SelectedCardIndex].HasButton,_isBot);\r\n\r\n      if(_isBot)\r\n      {\r\n          this.CardFuntionalityButton();\r\n      }\r\n    },\r\n\r\n    GenerateRandomWildCard(_isOwner,_randomValue,_isBot=false)\r\n    {\r\n      this.IsBotTurn=_isBot;\r\n      this.SpacesType=EnumSpaceType.WildCard;\r\n      this.SelectedCardIndex= _randomValue;\r\n      this.CardSelected=this.WildCards[this.SelectedCardIndex].ID;\r\n\r\n      if(this.WildCards[this.SelectedCardIndex].HasButton)\r\n        this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=this.WildCards[this.SelectedCardIndex].ButtonName;\r\n \r\n      this.ShowCardInfo(this.WildCards[this.SelectedCardIndex].Description,true);\r\n      this.ToggleButtons(_isOwner,this.WildCards[this.SelectedCardIndex].HasButton,_isBot);\r\n\r\n      if(_isBot)\r\n      {\r\n          this.CardFuntionalityButton();\r\n      }\r\n    },\r\n\r\n    SpaceInvest(_isOwner,_index,_isBot=false)\r\n    {\r\n      this.IsBotTurn=_isBot;\r\n      this.SpacesType=EnumSpaceType.Invest;\r\n      this.ShowCardInfo(\"You can invest one more time in Gold or stocks this turn.\",true);\r\n      this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=\"ACCEPT\";\r\n      this.ToggleButtons(_isOwner,true,_isBot);\r\n\r\n      if(_isBot)\r\n      {\r\n        this.CompleteTurnWithToast(\"msg\",2100);\r\n      }\r\n    },\r\n\r\n    SpacePayDay(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on PayDay space.\",true);\r\n      this.PayDayFunctionality();\r\n\r\n      this.ToggleButtons(_isOwner,false);\r\n    },\r\n\r\n    SpaceDoublePayDay(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on DoublePayDay space.\",true);\r\n      this.DoublePayDayFunctionality();\r\n\r\n      this.ToggleButtons(_isOwner,false);\r\n    },\r\n\r\n    SpaceOneQuestion(_isOwner,_index,_isBot=false)\r\n    {\r\n        this.IsBotTurn=_isBot;\r\n        this.SpacesType=EnumSpaceType.OneQuestion;\r\n        this.ShowCardInfo(\"You can ask one question to any other player, if player is unable to answer they will pay you some cash amount.\",true);\r\n        this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=\"ACCEPT\";\r\n        this.ToggleButtons(_isOwner,true,_isBot);\r\n        if(_isBot)\r\n        {\r\n            this.CompleteTurnWithToast(\"msg\",2100);\r\n        }\r\n    },\r\n\r\n    SpaceSell(_isOwner,_index,_isBot=false)\r\n    {\r\n      this.IsBotTurn=_isBot;\r\n      this.SpacesType=EnumSpaceType.Sell;\r\n      this.ShowCardInfo(\"You can sell any one of your business or can skip turn.\",true);\r\n      this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=\"ACCEPT\";\r\n      this.ToggleButtons(_isOwner,true,_isBot);\r\n      if(_isBot)\r\n        {\r\n            this.CompleteTurnWithToast(\"msg\",2100);\r\n        }\r\n    },\r\n\r\n    SpaceBuyOrSell(_isOwner,_index,_isBot=false)\r\n    {\r\n        this.IsBotTurn=_isBot;\r\n        this.SpacesType=EnumSpaceType.BuyOrSell;\r\n        this.ShowCardInfo(\"You can Buy or sell Gold or stocks one more time in this turn.\",true);\r\n        this.MainUI.InteractionButtonNode.children[0].children[0].getComponent(cc.Label).string=\"ACCEPT\";\r\n        this.ToggleButtons(_isOwner,true,_isBot);\r\n        if(_isBot)\r\n        {\r\n            this.CompleteTurnWithToast(\"msg\",2100);\r\n        }\r\n    },\r\n\r\n    SpaceGoBackSpaces(_isOwner,_index)\r\n    {\r\n      this.ShowCardInfo(\"You have landed on Go Back space.\",true);\r\n      this.GoBackFunctionality();\r\n\r\n      this.ToggleButtons(_isOwner,false);\r\n    },\r\n\r\n    ShowCardInfo:function(message,_state)\r\n    {\r\n      if(_state)\r\n      {\r\n        this.MainUI.ToastNode.active=true;\r\n        this.MainUI.ToastLabel.string=message;\r\n      }else\r\n      {\r\n         this.MainUI.ToastLabel.string=\"\";\r\n         this.MainUI.ToastNode.active=false;\r\n      }\r\n    },\r\n\r\n    ExitCardInfo()\r\n    {\r\n      this.ShowCardInfo(\"\",false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ResetCardDisplay();  \r\n      GamePlayReferenceManager.Instance.Get_GameManager().RaiseEventTurnComplete();   \r\n\r\n      //for testing\r\n      // this.Counter++;\r\n      // this.GenerateRandomBigBusinessCard(this.Counter);\r\n    },\r\n\r\n    CardFuntionalityButton()\r\n    {\r\n      if(this.SpacesType==EnumSpaceType.BigBusiness)\r\n      {\r\n        this.BigBusinessCardFunctionality(this.CardSelected);\r\n      }else if(this.SpacesType==EnumSpaceType.Losses)\r\n      {\r\n        this.LossesCardFunctionality(this.CardSelected);\r\n      }\r\n      else if(this.SpacesType==EnumSpaceType.Marketing)\r\n      {\r\n        this.MarketingCardFunctionality(this.CardSelected);\r\n      }\r\n      else if(this.SpacesType==EnumSpaceType.WildCard)\r\n      {\r\n        this.WildCardFunctionality(this.CardSelected);\r\n      }\r\n      else if(this.SpacesType==EnumSpaceType.Sell)\r\n      {\r\n        this.SellFunctionality();\r\n      }\r\n      else if(this.SpacesType==EnumSpaceType.Invest)\r\n      {\r\n        this.InvestFunctionality();\r\n      }\r\n      else if(this.SpacesType==EnumSpaceType.BuyOrSell)\r\n      {\r\n        this.BuyOrSellFunctionality();\r\n      }\r\n      else if(this.SpacesType==EnumSpaceType.OneQuestion)\r\n      {\r\n        this.OneQuestionFunctionality();\r\n      }\r\n    },\r\n\r\n    CheckLoan()\r\n    {\r\n        var _loanTaken=false;\r\n        var _businessIndex=0;\r\n\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        \r\n        for (let index = 0; index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n\r\n            if(_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loanTaken=true;\r\n                _businessIndex=index;\r\n                break;\r\n            }    \r\n        }\r\n\r\n        var val=-1;\r\n        val=_loanTaken==true?1:0;\r\n        var Result=cc.v2(val, _businessIndex)\r\n        return Result;\r\n    },\r\n\r\n    CompleteTurnWithToast(_msg,_time)\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n        if(this.IsBotTurn)\r\n        {\r\n            console.log(_msg);\r\n            var _delay=this.getRandom(1500,2500);\r\n            setTimeout(() => {\r\n            this.ShowCardInfo(\"\",false);\r\n            _manager.ResetCardDisplay();  \r\n            _manager.RaiseEventTurnComplete();   \r\n            }, (_delay));\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(_msg,_time);\r\n            this.ShowCardInfo(\"\",false);\r\n\r\n            setTimeout(() => {\r\n            this.ShowCardInfo(\"\",false);\r\n            _manager.ResetCardDisplay();  \r\n            _manager.RaiseEventTurnComplete();   \r\n            }, (_time+100));\r\n        }\r\n    },\r\n\r\n    BigBusinessCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\"://receive 20000$ gift to payoff loan\r\n             console.log(this.BigBusiness[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n             var _result=this.CheckLoan();\r\n             var IsLoanTaken=_result.x;\r\n             var _businessIndex=_result.y;\r\n\r\n             if(IsLoanTaken==1) //means user has taken loan\r\n             {\r\n                _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount-20000;\r\n                if(_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount<=0)\r\n                {\r\n                    _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=0;\r\n                    _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken=false;\r\n                }\r\n\r\n                this.CompleteTurnWithToast(\"Loan amount of $20000 has been payed off.\",1800);\r\n             }\r\n             else\r\n             {\r\n                this.CompleteTurnWithToast(\"You have not taken any loan, turn will skip now.\",1800);\r\n             }\r\n\r\n             break;\r\n         case \"2\": //hire lawyer\r\n             console.log(this.BigBusiness[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n             if(_manager.PlayerGameInfo[_playerIndex].LawyerStatus)\r\n             {\r\n                this.CompleteTurnWithToast(\"You have already hired laywer, turn will skip now.\",1800);\r\n             }\r\n             else\r\n             {\r\n                _manager.PlayerGameInfo[_playerIndex].LawyerStatus=true;\r\n                this.CompleteTurnWithToast(\"You have successfully hired a lawyer.\",1800);\r\n             }\r\n\r\n             break;\r\n         case \"3\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"4\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"5\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"6\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"7\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"8\"://double pay day on next pay day\r\n             console.log(this.BigBusiness[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n             _manager.ToggleDoublePayNextTurn(true);\r\n             this.CompleteTurnWithToast(\"You will receive double profits on next payday.\",1800);\r\n\r\n             break;\r\n         case \"9\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"10\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"11\"://roll dice twice, if result is >19 then take all money inside marketing.\r\n             console.log(this.BigBusiness[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n             \r\n             var Dice1Result=_manager.RollTwoDices();\r\n             var Dice2Result=_manager.RollTwoDices();\r\n\r\n            //  var Dice1Result=12;\r\n            //  var Dice2Result=12;\r\n\r\n             var TotalResult=Dice1Result+Dice2Result;\r\n\r\n             if(TotalResult>=19)\r\n             {\r\n                var _mode=GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n                 var _amount=0;\r\n                 for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n                    _amount=_amount+_manager.PlayerGameInfo[index].MarketingAmount;\r\n                 }\r\n\r\n                 _manager.PlayerGameInfo[_playerIndex].Cash+=_amount;\r\n                 this.CompleteTurnWithToast(\"Dice 1 Result: \"+Dice1Result+\"\\n\"+\"\\n\"+\r\n                 \"Dice 2 Result: \"+Dice2Result+\"\\n\"+\"\\n\"+\r\n                 \"Total: \"+TotalResult+\"\\n\"+\"\\n\"+\"\\n\"+\r\n                 \"Amount $\"+_amount+\" has successfully added in your cash from marketing amount on table.\"\r\n                 ,4000);\r\n\r\n\r\n                 if(_mode==2)\r\n                 {\r\n                    var _actorsArray=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n                    for (let index = 0; index < _actorsArray.length; index++) {\r\n                        _actorsArray[index].customProperties.PlayerSessionData.MarketingAmount=0;\r\n                    }\r\n                 }\r\n             }\r\n             else\r\n             {\r\n                this.CompleteTurnWithToast(\"Dice 1 Result: \"+Dice1Result+\"\\n\"+\"\\n\"+\r\n                \"Dice 2 Result: \"+Dice2Result+\"\\n\"+\"\\n\"+\r\n                \"Total: \"+TotalResult+\"\\n\"+\"\\n\"+\"\\n\"+\r\n                \"You ran out of luck, turn will skip now\"\r\n                ,4000);\r\n             }\r\n\r\n             break;\r\n         case \"12\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"14\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.BigBusiness[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    MarketingCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\"://lose all your money in marketing account\r\n             console.log(this.Marketing[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _loseAmount=_manager.LoseAllMarketingMoney();\r\n\r\n             if(_loseAmount>0)\r\n                this.CompleteTurnWithToast(\"You have lost your marketing amount of $\"+_loseAmount,2100);\r\n             else\r\n                this.CompleteTurnWithToast(\"You don't have any marketing amount\",2100);\r\n             break;\r\n         case \"2\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"3\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"4\"://Your Marketing Account triples, but you must leave it in the account.\r\n             console.log(this.Marketing[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n             var _marketAmount=_manager.PlayerGameInfo[_playerIndex].MarketingAmount;\r\n             var _multiplier=3;\r\n             var _increaseAmount=_manager.MultiplyMarketingMoney(_multiplier);\r\n\r\n             if(_increaseAmount>0)\r\n             {\r\n                this.CompleteTurnWithToast(\"Marketing Amount: $\"+_marketAmount+\"\\n\"+\"\\n\"+\r\n                \"Total: \"+_marketAmount+\" * \"+_multiplier+\" = \"+_increaseAmount+\"\\n\"+\"\\n\"+\"\\n\"+\r\n                \"your marketing amount has been sucessfully increase to $\"+_increaseAmount\r\n                ,3100);\r\n             }\r\n                else\r\n             {\r\n                this.CompleteTurnWithToast(\"You don't have any marketing amount\",2100);\r\n             }\r\n             break;\r\n         case \"5\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"6\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"7\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"8\"://lose all your money in marketing account\r\n             console.log(this.Marketing[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _loseAmount=_manager.LoseAllMarketingMoney();\r\n\r\n             if(_loseAmount>0)\r\n                this.CompleteTurnWithToast(\"You have lost your marketing amount of $\"+_loseAmount,2100);\r\n             else\r\n                this.CompleteTurnWithToast(\"You don't have any marketing amount\",2100);\r\n             break;\r\n         case \"9\"://lose all your money in marketing account\r\n             console.log(this.Marketing[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _loseAmount=_manager.LoseAllMarketingMoney();\r\n\r\n             if(_loseAmount>0)\r\n                this.CompleteTurnWithToast(\"You have lost your marketing amount of $\"+_loseAmount,2100);\r\n             else\r\n                this.CompleteTurnWithToast(\"You don't have any marketing amount\",2100);\r\n             break;\r\n         case \"10\"://Receive all of your Marketing Budget back, plus 700% profit.\r\n             console.log(this.Marketing[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n             var _marketAmount=_manager.PlayerGameInfo[_playerIndex].MarketingAmount;\r\n             var _profit=700;\r\n             var _amount=_manager.GetMarketingMoney(_profit);\r\n\r\n             if(_amount>0)\r\n             {\r\n                this.CompleteTurnWithToast(\"Marketing Amount: $\"+_marketAmount+\"\\n\"+\"\\n\"+\r\n                \"Total: \"+_marketAmount+\" + (\"+_marketAmount+\"*\"+_profit+\" )/100\"+\" = \"+_amount+\"\\n\"+\"\\n\"+\"\\n\"+\r\n                \"your cash amount has been sucessfully increase by $\"+_amount+\", total cash becomes $\"+_manager.PlayerGameInfo[_playerIndex].Cash\r\n                ,4000);\r\n             }\r\n             else\r\n             {\r\n                    this.CompleteTurnWithToast(\"You don't have any marketing amount\",2100);\r\n             }\r\n             break;\r\n         case \"11\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"12\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n         case \"14\"://lose all your money in marketing account\r\n             console.log(this.Marketing[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _loseAmount=_manager.LoseAllMarketingMoney();\r\n\r\n             if(_loseAmount>0)\r\n                this.CompleteTurnWithToast(\"You have lost your marketing amount of $\"+_loseAmount,2100);\r\n             else\r\n                this.CompleteTurnWithToast(\"You don't have any marketing amount\",2100);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.Marketing[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    LossesCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\"://lose next turn\r\n             console.log(this.Losses[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n             _manager.ToggleSkipNextTurn(true);\r\n             this.CompleteTurnWithToast(\"You will lose your next turn.\",2100);\r\n             break;\r\n         case \"2\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"3\"://lose all your business profits on next Pay Day.\r\n             console.log(this.Losses[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n             _manager.ToggleSkipPayDay_Whole(true);\r\n             this.CompleteTurnWithToast(\"you will lose all your business profits on next Pay Day.\",2100);\r\n             break;\r\n         case \"4\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"5\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"6\":// If Business #1 is Home Based, pay a $5,000 Insurance Deductible; if Brick & Mortar $10,000 deductible.\r\n             console.log(this.Losses[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n             var _businessType=parseInt(_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[0].BusinessType);\r\n             if(_businessType==1) // first business was home based\r\n             {\r\n                 if(_manager.PlayerGameInfo[_playerIndex].Cash>=5000)\r\n                 {\r\n                    _manager.PlayerGameInfo[_playerIndex].Cash-=5000;\r\n                    this.CompleteTurnWithToast(\"You payed $5000 insurance on your first home based business, remaining cash is $\"+_manager.PlayerGameInfo[_playerIndex].Cash,2100);\r\n                 }\r\n                 else\r\n                 {\r\n                    this.CompleteTurnWithToast(\"you don't have enough money.\",1800);\r\n                 }\r\n             }\r\n             else if (_businessType==2) //first busioness was brick & mortar\r\n             {\r\n                if(_manager.PlayerGameInfo[_playerIndex].Cash>=10000)\r\n                {\r\n                   _manager.PlayerGameInfo[_playerIndex].Cash-=10000;\r\n                   this.CompleteTurnWithToast(\"You payed $10000 insurance on your first brick & mortar business, remaining cash is $\"+_manager.PlayerGameInfo[_playerIndex].Cash,2100);\r\n                }\r\n                else\r\n                {\r\n                   this.CompleteTurnWithToast(\"you don't have enough money.\",1800);\r\n                }\r\n             }\r\n             break;\r\n         case \"7\"://lose your next Pay Day for all of your home-based businesses.\r\n             console.log(this.Losses[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n             _manager.ToggleSkipPayDay_HomeBased(true);\r\n             this.CompleteTurnWithToast(\"you will lose your next Pay Day for all of your home-based businesses.\",2100);\r\n             \r\n             break;\r\n         case \"8\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"9\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"10\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"11\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"12\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"14\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.Losses[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    WildCardFunctionality(_id)\r\n    {\r\n      var Index=parseInt(_id);\r\n      Index=Index-1;\r\n\r\n       switch (_id) {\r\n         case \"1\"://doubles your income on the next Pay Day.\r\n             console.log(this.WildCards[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n             _manager.ToggleDoublePayNextTurn(true);\r\n             this.CompleteTurnWithToast(\"You will receive double profits on next payday.\",1800);\r\n             break;\r\n         case \"2\"://Roll 1 die, multiply result by $5,000 and receive your advance from the Bank.\r\n             console.log(this.WildCards[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n             \r\n             var DiceResult=_manager.RollOneDice();\r\n             var CashMulitplier=5000;\r\n             var TotalResult=DiceResult*CashMulitplier;\r\n\r\n             _manager.PlayerGameInfo[_playerIndex].Cash+=TotalResult;\r\n             this.CompleteTurnWithToast(\"Dice Result: \"+DiceResult+\"\\n\"+\"\\n\"+\r\n                \"Total: \"+DiceResult+\" * \"+CashMulitplier+\" = \"+TotalResult+\"\\n\"+\"\\n\"+\"\\n\"+\r\n                \"Amount $\"+TotalResult+\" has been added into your cash.\"\r\n                ,4000);\r\n\r\n             break;\r\n         case \"3\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"4\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"5\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"6\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"7\"://pay off your loan for your Brick & Mortar Business. If you have no loan outstanding, receive $50,000.\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n             var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n             \r\n             var _loanReset=false;\r\n             for (let index = 0; index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                var _type=parseInt(_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].BusinessType);\r\n                if(_type==2 && _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                {\r\n                    _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken=false;\r\n                    _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount=0;\r\n                    _loanReset=true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(_loanReset)\r\n            {\r\n                this.CompleteTurnWithToast(\"your outstanding loan has been payed off.\",2800);\r\n            }else\r\n            {\r\n                _manager.PlayerGameInfo[_playerIndex].Cash+=50000;\r\n                this.CompleteTurnWithToast(\"you had no loan, amount $50000 has been added to your cash\",2800);\r\n            }\r\n\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"8\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"9\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"10\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"11\":// receive double your business profits on all of your businesses.\r\n             console.log(this.WildCards[Index].Description);\r\n             var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n             _manager.ToggleDoublePayNextTurn(true);\r\n             this.CompleteTurnWithToast(\"You will receive double profits on next payday.\",1800);\r\n             break;\r\n         case \"12\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"13\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"14\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n         case \"15\":\r\n             console.log(this.WildCards[Index].Description);\r\n             break;\r\n          default:\r\n             break;\r\n       }\r\n\r\n    },\r\n\r\n    InvestFunctionality()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().EnableInvest_InvestSetupUI(true);\r\n        this.ShowCardInfo(\"\",false);\r\n    },\r\n    PayDayFunctionality()\r\n    {\r\n\r\n    },\r\n    DoublePayDayFunctionality()\r\n    {\r\n\r\n    },\r\n    OneQuestionFunctionality()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().OneQuestionScreen_Space_OneQuestion(true);\r\n        this.ShowCardInfo(\"\",false);\r\n    },\r\n    SellFunctionality()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().EnableSellScreen__SellBusinessUISetup(true);\r\n        this.ShowCardInfo(\"\",false);\r\n    },\r\n    BuyOrSellFunctionality()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().EnableBuyOrSell_BuyOrSellSetupUI(true);\r\n        this.ShowCardInfo(\"\",false);\r\n    },\r\n    GoBackFunctionality()\r\n    {\r\n\r\n    },\r\n});\r\nmodule.exports= DecksData;\r\n"]}