{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["_isTest","_diceinput1","_diceinput2","PreviousDiceRoll1","PreviousDiceRoll2","PreviousDiceRoll3","PreviousDiceRoll4","PreviousDiceRoll5","userGameOver","BotGameOver","TotalCounterReached","PassedPayDayCounter","NoCardFunctionality","PlayerLeft","ForceChangeTimeOut","EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","PartnerName","LocationsName","LoanTaken","LoanAmount","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","BankruptAmount","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","TotalHBCash","TotalBMCash","TotalGoldCash","TotalLoanBalance","TotalStocksCash","GameOver","IsActive","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","Backspaces","isGameOver","OneQuestionIndex","OneQuestions","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","BotGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","SelectedMode","statics","Instance","SetPlayerLeft","_state","ResetAllVariables","InputTestDice1","_val","InputTestDice2","onLoad","TurnNumber","TurnCompleted","CheckReferences","Get_MultiplayerController","GetSelectedMode","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","CheckSpectate","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","GetMyIndex","myIndex","_actor","PhotonActor","customProperties","PlayerSessionData","_allActors","index","SyncDataToPlayerGameInfo","AssignPlayerGameUI","EnablePlayerNodes","CloseInitialScreen_SpectateMode","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","_lastIndex","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","userID","setCustomProperty","ChangeTurn","console","log","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","j","ChangeTurnForcefully","UpdateVisualData","RefreshDataAutomatically","TurnHandler","_turn","_isMaster","CheckCurrentActiveMasterClient","_playerMatched","ToggleTurnProgress","ToggleDecision_TurnDecision","ResetTurnVariable","RollDice","DiceRollScreen","PlayerInfo","RoomActors","ShowToast","ToggleSkipNextTurn","_ind","MainSessionData","MyData","_counter","StartTurn","ReceiveBankruptData","_isBankrupted","bankrupted","turn","_playerData","PlayerDataMain","StartTurnAfterBankrupt","_randomIndex","getRandom","SetName","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","myRoomActorsArray","error","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","Dice1","Dice2","_newRoll","RollOneDice","RollTwoDices","callUponCard","_spaceID","valueIndex","StartDiceRoll","SendingData","isBot","completeCardTurn","AllPlayersGameCompleted","CallGameComplete","_isBot","_forceGameOver","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","_gold","_stocks","_diceRandom","OnceOrShare","GoldCash","StockCash","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","RaiseEventToSyncGameCompleteData","SyncGameOver","_UID","infoText","statusText","DisconnectData","ShowResultScreen","SyncGameCompleteData","Bot","ZoomCameraOutOnly","max","SelectedInd","SessionData","_value","trace","playercompleted","ZoomCameraOut","TweenPlayer","min","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ProcessPayDay_TurnDecision","ToPos","_newpos","TogglePayDay","_st1","_St2","ExpandBusiness_TurnDecision","amount","_locationName","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","SetCardFunctionality","SetGivenCash","SetStartAnyBusinessWithoutCash","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","_forSelectedBusiness","_SelectedBusinessIndex","HBAmount","_title","AssignData_PayDay","ToggleSkipPayDay_Whole","Bankrupt_TurnDecision","SendProfit_Partner_TurnDecision","_amount","_uID","ID","ReceiveProfit_Partner_TurnDecision","_iD","_myIndex","ToggleDoublePayNextTurn","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","QuestionPopUp_OtherUser_OneQuestion","_userID","UserID","_questionIndex","Question","UserIndex","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_questionAsked","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_myData","_roomData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_PayAmount_OneQuestion","RaiseEventDecision_OneQuestion","OneQuestionDecision_AnswerQuestion_OneQuestion","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","ReceiveEventDecision_OneQuestion","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","_loanTaken","ReceiveGoBackSpacesData_spaceFunctionality","_spaces","backspaces","Counter","TweenPlayer_GoBackSpaces","speed","GoBackSpaces_spaceFunctionality","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var _isTest = true;\r\nvar _diceinput1 = \"\";\r\nvar _diceinput2 = \"\";\r\nvar PreviousDiceRoll1 = -1;\r\nvar PreviousDiceRoll2 = -1;\r\n\r\nvar PreviousDiceRoll3 = -1;\r\nvar PreviousDiceRoll4 = -1;\r\n\r\nvar PreviousDiceRoll5 = -1;\r\n\r\nvar userGameOver = false;\r\nvar BotGameOver = false;\r\nvar TotalCounterReached = false;\r\nvar PassedPayDayCounter = 0;\r\nvar NoCardFunctionality = false;\r\nvar PlayerLeft = false;\r\nvar ForceChangeTimeOut = null;\r\n//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n    None:0,\r\n    HomeBased: 1,                   //a business that you operate out of your home\r\n    brickAndmortar: 2               //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n    name: \"BusinessInfo\",\r\nproperties: { \r\n    Name: \"BusinessData\",\r\n    BusinessType:\r\n   {\r\n       displayName:\"Mode\",\r\n       type: EnumBusinessType,\r\n       default: EnumBusinessType.None,\r\n       serializable: true,\r\n       tooltip:\"Business catogory for players\",}, \r\n    BusinessTypeDescription:\r\n   {\r\n       displayName: \"Type\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Type (by name) of business player is opening\",},\r\n    BusinessName:\r\n   {\r\n       displayName: \"Name\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Name of the business player is opening\",},\r\n     Amount:\r\n       {\r\n           displayName: \"Amount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"balance of business\",},\r\n      IsPartnership:\r\n       {\r\n           displayName: \"IsPartnership\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has done partnership with someone with current business\",},\r\n       PartnerID:\r\n           {\r\n               displayName:\"PartnerID\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n        tooltip: \"ID of the partner with whom player has formed partnership\",},\r\n       PartnerName:\r\n           {\r\n               displayName:\"PartnerName\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n               tooltip:\"name of the partner with whom player has formed partnership\",},\r\n        LocationsName:\r\n           {\r\n               displayName:\"LocationsName\",\r\n               type: [cc.Text],\r\n               default: [],\r\n               serializable: true,\r\n               tooltip:\"if player owns brick and mortar he/she can expand to new location\",},\r\n        LoanTaken:\r\n           {\r\n               displayName:\"LoanTaken\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n        LoanAmount:\r\n           {\r\n               displayName:\"LoanAmount\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n    name: \"CardDataFunctionality\",\r\nproperties: { \r\n    NextTurnDoublePay:\r\n   {\r\n       displayName:\"NextTurnDoublePay\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if its going to be double pay day on next payday for current player\"}, \r\n    SkipNextTurn:\r\n   {\r\n       displayName:\"SkipNextTurn\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if turn is going to skipped on next turn for current player\"}, \r\n    SkipNextPayday:\r\n   {\r\n       displayName:\"SkipNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday is going to skipped on next payday for current player\"}, \r\n    SkipHMNextPayday:\r\n   {\r\n       displayName:\"SkipHMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for home based buisiness is going to skipped on next payday for current player\"},\r\n    SkipBMNextPayday:\r\n   {\r\n       displayName:\"SkipBMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\"}, \r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n    name: \"StockInfo\",\r\nproperties: { \r\n    Name: \"StockData\",\r\n    BusinessName:\r\n   {\r\n       displayName:\"BusinessName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the business in which stocks will be held\",}, \r\n    ShareAmount:\r\n   {\r\n       displayName: \"ShareAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip: \"Share amount of the stock\",},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n    name:\"PlayerData\",\r\nproperties: { \r\n    PlayerName:\r\n   {\r\n       displayName:\"PlayerName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the player\",},\r\n    PlayerUID:\r\n   {\r\n       displayName:\"PlayerUID\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"ID of the player\",},\r\n    AvatarID:\r\n       {\r\n           displayName: \"AvatarID\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"id reference for player avatar selection\",},\r\n    IsBot:\r\n       {\r\n           displayName: \"IsBot\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if current player is bot\",}, \r\n    NoOfBusiness:\r\n   {\r\n       displayName:\"Business\",\r\n       type: [BusinessInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of business a player can own\",}, \r\n    CardFunctionality:\r\n   {\r\n       displayName:\"CardFunctionality\",\r\n       type: CardDataFunctionality,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"card functionality stored by player\",}, \r\n    HomeBasedAmount:\r\n   {\r\n       displayName:\"HomeBasedAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of home based business a player owns\",}, \r\n    BrickAndMortarAmount:\r\n   {\r\n       displayName:\"BrickAndMortarAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of brick and mortar business a player owns\",}, \r\n    TotalLocationsAmount:\r\n   {\r\n       displayName:\"TotalLocationsAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of locations of all brick and mortar businessess\",}, \r\n    NoOfStocks:\r\n   {\r\n       displayName:\"Stocks\",\r\n       type: [StockInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of stock a player owns\",}, \r\n    Cash:\r\n       {\r\n           displayName: \"PlayerCash\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of cash player owns\",},\r\n    GoldCount:\r\n       {\r\n           displayName: \"GoldCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of gold a player owns\",},\r\n    StockCount:\r\n       {\r\n           displayName: \"StockCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of stocks a player owns\",},\r\n    LoanTaken:\r\n       {\r\n           displayName: \"LoanTaken\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has taken loan from bank or not\",},\r\n     LoanAmount:\r\n       {\r\n           displayName: \"LoanAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of loan taken from the bank\",},\r\n    MarketingAmount:\r\n       {\r\n           displayName: \"MarketingAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"marketing amount a player owns\",},\r\n    LawyerStatus:\r\n       {\r\n           displayName: \"LawyerStatus\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has hired a lawyer or not\",},\r\n    IsBankrupt:\r\n       {\r\n           displayName: \"IsBankrupt\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has been Bankrupted or not\",},\r\n    BankruptAmount:\r\n       {\r\n           displayName: \"BankruptAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"keep track how much time player has been bankrupted\",},\r\n    SkippedLoanPayment:\r\n       {\r\n           displayName: \"SkippedLoanPayment\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has skipped loan payment\",},\r\n    PlayerRollCounter:\r\n       {\r\n           displayName: \"PlayerRollCounter\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"integer to store roll countor for player\",},\r\n    InitialCounterAssigned:\r\n       {\r\n           displayName: \"InitialCounterAssigned\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,},\r\n     isGameFinished:\r\n           {\r\n               displayName:\"isGameFinished\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n     TotalScore:\r\n           {\r\n               displayName:\"TotalScore\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalHBCash:\r\n           {\r\n               displayName:\"TotalHBCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalBMCash:\r\n           {\r\n               displayName:\"TotalBMCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalGoldCash:\r\n           {\r\n               displayName:\"TotalGoldCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalLoanBalance:\r\n           {\r\n               displayName:\"TotalLoanBalance\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalStocksCash:\r\n           {\r\n               displayName:\"TotalStocksCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n    GameOver:\r\n           {\r\n               displayName:\"GameOver\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n        serializable: true,\r\n    },\r\n    IsActive:\r\n    {\r\n        displayName:\"IsActive\",\r\n        type: cc.Boolean,\r\n        default: true,\r\n        serializable: true,},\r\n},\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter=0;\r\nvar DiceTemp=0;\r\nvar DiceRoll=0;\r\nvar IsTweening=false;\r\nvar GamePlayReferenceManager=null;\r\nvar TurnCheckArray=[];\r\nvar BusinessLocationNodes=[];\r\n\r\nvar PassedPayDay=false;\r\nvar DoublePayDay=false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay=false;\r\nvar _skipNextTurn=false;\r\nvar _skipNextPayday=false; //skip whole pay day\r\nvar _skipHMNextPayday=false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived=false;\r\nvar TurnInProgress=false;\r\n\r\nvar Backspaces=3;\r\nvar isGameOver=false;\r\nvar OneQuestionIndex=-1;\r\nvar OneQuestions=\r\n[\r\n    \"you have skipped loan previous payday?\",\r\n    \"you have taken any loan?\",\r\n    \"you have bankrupted ever?\",\r\n    \"your next turn is going to be skipped?\",\r\n    \"your next payday is going to be double payday?\"\r\n];\r\n\r\nvar CardDisplaySetTimout=null;\r\n\r\nvar GameManager=cc.Class({\r\n    name:\"GameManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PlayerGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n        BotGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all bot's data\"},\r\n        PlayerNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for player\",},    \r\n        CameraNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for camera\",},    \r\n        AllPlayerUI: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of ui of all players\",},      \r\n        AllPlayerNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of node of all players inside gameplay\",},   \r\n        StartLocationNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of attay of locations\",},   \r\n         SelectedMode: {\r\n            default:0,                \r\n            type: cc.Integer,\r\n            serializable: true,\r\n            tooltip: \"integer reference for game mode 1 means bot and 2 means real players\",\r\n        },  \r\n    },\r\n\r\n    statics: {\r\n        PlayerData: PlayerData,\r\n        BusinessInfo:BusinessInfo,\r\n        CardDataFunctionality:CardDataFunctionality,\r\n        EnumBusinessType:EnumBusinessType,\r\n        Instance:null\r\n    },\r\n\r\n    SetPlayerLeft(_state)\r\n    {\r\n        PlayerLeft = _state;\r\n    },\r\n\r\n    ResetAllVariables()\r\n    {\r\n        _diceinput1 = \"\";\r\n        _diceinput2 = \"\";\r\n        PreviousDiceRoll1 = -1;\r\n        PreviousDiceRoll2 = -1;\r\n        PlayerLeft = false;\r\n        PreviousDiceRoll3 = -1;\r\n        PreviousDiceRoll4 = -1;\r\n\r\n        PreviousDiceRoll5 = -1;\r\n\r\n        userGameOver = false;\r\n        BotGameOver = false;\r\n\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;\r\n        IsTweening=false;\r\n        GamePlayReferenceManager=null;\r\n        TurnCheckArray=[];\r\n        BusinessLocationNodes=[];\r\n        ForceChangeTimeOut = null;\r\n        PassedPayDay=false;\r\n        DoublePayDay = false;\r\n        PassedPayDayCounter = 0;\r\n\r\n        //cards functionality\r\n        _nextTurnDoublePay=false;\r\n        _skipNextTurn=false;\r\n        _skipNextPayday=false; //skip whole pay day\r\n        _skipHMNextPayday=false; //skip pay day for home based businessess only\r\n        _skipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\n        CardEventReceived=false;\r\n        TurnInProgress=false;\r\n\r\n        Backspaces=3;\r\n        isGameOver=false;\r\n        OneQuestionIndex=-1;\r\n        OneQuestions=\r\n        [\r\n            \"you have skipped loan previous payday?\",\r\n            \"you have taken any loan?\",\r\n            \"you have bankrupted ever?\",\r\n            \"your next turn is going to be skipped?\",\r\n            \"your next payday is going to be double payday?\"\r\n        ];\r\n                \r\n        CardDisplaySetTimout=null;\r\n        TotalCounterReached = false;\r\n        NoCardFunctionality = false;\r\n\r\n    },\r\n\r\n    InputTestDice1(_val)\r\n    {\r\n        if (_isTest) {\r\n            _diceinput1 = _val;\r\n        }\r\n    },\r\n\r\n    InputTestDice2(_val)\r\n    {\r\n        if (_isTest) {\r\n            _diceinput2 = _val;\r\n        }\r\n    },\r\n\r\n    //#region All Functions of GameManager\r\n    \r\n    /**\r\n    @summary called when instance of class is created\r\n   **/ \r\n    onLoad() {\r\n        this.ResetAllVariables();\r\n        GameManager.Instance=this;\r\n        this.TurnNumber=0;\r\n        this.TurnCompleted=false;\r\n        TurnCheckArray=[];\r\n        this.CheckReferences();\r\n        this.SelectedMode=GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n        this.Init_GameManager();   \r\n        \r\n        this.RandomCardIndex=0;\r\n        this.CardCounter=0;\r\n        this.CardDisplayed=false;\r\n        CardEventReceived=false;\r\n    },\r\n\r\n    /**\r\n    @summary called to assign reference of required classes\r\n   **/ \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    /**\r\n    @summary initial gamemanager essetials\r\n   **/ \r\n    Init_GameManager () {\r\n        this.Camera=this.CameraNode.getComponent(cc.Camera);\r\n        this.isCameraZooming=false;\r\n        this.PlayerGameInfo=[];\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;  \r\n\r\n        if(this.SelectedMode==2) //game is being played by real players\r\n        {\r\n            //if joined player is spectate\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate()==true)\r\n            {\r\n                //console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n                \r\n                //if inital setup has been done and game is under way\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\")==true)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n                    this.PlayerGameInfo=AllData;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n                    this.SyncAllData_SpectateManager();\r\n                    this.TurnNumber=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n                    this.UpdateGameUI(true, this.TurnNumber);    \r\n                    //console.log(this.PlayerGameInfo);\r\n                    //this.SyncDataToPlayerGameInfo(0);\r\n                }\r\n                else\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = 8;\r\n                    //this.EnablePlayerNodes();\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n            }\r\n        }else if(this.SelectedMode==1) //game is being played by bot along with one player\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n        }\r\n    },\r\n\r\n    //#region public functions to get data (accessible from other classes)\r\n    GetTurnNumber () {\r\n        return this.TurnNumber;\r\n    },\r\n\r\n    /**\r\n    @summary get my index in array of PlayerGameInfo \r\n   **/ \r\n    GetMyIndex()\r\n    {\r\n        var myIndex = 0;\r\n        var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _allActors = this.PlayerGameInfo;\r\n\r\n        for (let index = 0; index < _allActors.length; index++) {\r\n          if (_actor.PlayerUID == _allActors[index].PlayerUID)\r\n          {\r\n              myIndex = index;\r\n              break;\r\n          }\r\n        }\r\n\r\n        return myIndex;\r\n    },\r\n    //#endregion\r\n\r\n    //#region SpectateMode Code\r\n\r\n    SyncAllData_SpectateManager()\r\n    {\r\n        var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n        this.PlayerGameInfo = AllData;\r\n        this.SyncDataToPlayerGameInfo(0);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            if (this.PlayerGameInfo[index].PlayerRollCounter > 0 && this.PlayerGameInfo[index].InitialCounterAssigned==true && !this.PlayerGameInfo[index].isGameFinished) {\r\n                var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n                this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n            }\r\n\r\n            if (this.PlayerGameInfo[index].isGameFinished)\r\n            {\r\n                var _lastIndex = GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length - 1;\r\n                var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.y);\r\n                this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n            }\r\n        }\r\n\r\n        //console.log(\"synced playernodes\");\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    CheckTurnOnSpectateLeave_SpectateManager()\r\n    {\r\n      var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region functions related to Turn Mechanism and card mechanism\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n   **/ \r\n  RaiseEventForCard(_data)\r\n  {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5,_data);\r\n  },\r\n\r\n  ClearDisplayTimeout()\r\n  {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers()\r\n  {\r\n      if(this.SelectedMode==2) //for real players\r\n      {\r\n        console.log(\"card event received: \"+CardEventReceived);\r\n        if(CardEventReceived==true)\r\n        {\r\n            clearTimeout(CardDisplaySetTimout);\r\n            //console.error(this.CardCounter);\r\n            CardEventReceived=false;\r\n            if(!this.CardDisplayed)\r\n            {\r\n                this.CardDisplayed=true;\r\n                GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,this.RandomCardIndex);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            CardDisplaySetTimout=setTimeout(() => { //check after every 0.5 seconds\r\n                this.DisplayCardOnOthers();\r\n            }, 1000);\r\n        }\r\n      }\r\n  },\r\n\r\n  ResetCardDisplay()\r\n  {\r\n    this.CardDisplayed=false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data)\r\n  {\r\n    this.CheckReferences();\r\n    console.log(\"Card Data Received:\");\r\n    console.log(_data);\r\n\r\n    var RandomCard=_data.randomCard;\r\n    var counter=_data.counter;\r\n\r\n    this.RandomCardIndex=RandomCard;\r\n    this.CardCounter=counter;\r\n\r\n    if(this.SelectedMode==2)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            CardEventReceived = true;\r\n        \r\n    }else if(this.SelectedMode==1)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,RandomCard,true);\r\n    }\r\n\r\n   // console.error(CardEventReceived);\r\n  },\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n   **/ \r\n  RaiseEventTurnComplete()\r\n  {\r\n      if(this.SelectedMode==2)\r\n      {\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n        }\r\n      }else if(this.SelectedMode==1)\r\n      {\r\n        console.log(\"raised for turn complete\");\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,this.PlayerGameInfo[this.TurnNumber].PlayerUID);\r\n      }\r\n  },\r\n\r\n  SyncAllData()\r\n  {\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n    }  \r\n},\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n   **/ \r\n  ReceiveEventTurnComplete(_uid)\r\n  {\r\n      if(this.SelectedMode==2)//real players\r\n      {\r\n        \r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n\r\n            if(TurnCheckArray.length==0)\r\n                TurnCheckArray.push(_uid); \r\n\r\n            var ArrayLength=TurnCheckArray.length;\r\n            var IDFound=false;\r\n            for (let index = 0; index < ArrayLength; index++) {\r\n                    if(TurnCheckArray[index]==_uid)\r\n                    IDFound=true;\r\n            }\r\n\r\n            if(!IDFound)\r\n            {\r\n                TurnCheckArray.push(_uid);\r\n            }\r\n\r\n            var TotalConnectedPlayers = 0;\r\n            \r\n            for (let j = 0; j < this.PlayerGameInfo.length; j++) {\r\n                if (this.PlayerGameInfo[j].IsActive)\r\n                    TotalConnectedPlayers++;\r\n            }\r\n\r\n            if(TurnCheckArray.length>=TotalConnectedPlayers)\r\n            {\r\n                TurnCheckArray=[];\r\n                this.TurnCompleted=true;\r\n\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n                    //this.SyncAllData();\r\n                    this.ChangeTurn();\r\n                    console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                    console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                }\r\n            }\r\n        }\r\n        }else if(this.SelectedMode==1)\r\n        {\r\n            this.TurnCompleted=true;\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            this.ChangeTurn();\r\n        }\r\n  },\r\n\r\n   /**\r\n    @summary called when dice animation is played on all players\r\n   **/ \r\n    ChangeTurn()\r\n    {\r\n        if(this.SelectedMode==2)\r\n        {\r\n            this.SyncAllData();\r\n        }\r\n\r\n        if(this.TurnNumber<this.PlayerGameInfo.length-1)\r\n            this.TurnNumber=this.TurnNumber+1;\r\n        else\r\n            this.TurnNumber=0;\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    ChangeTurnForcefully()\r\n    {\r\n        if (IsTweening)\r\n        {\r\n            clearTimeout(ForceChangeTimeOut);\r\n            ForceChangeTimeOut=setTimeout(() => {\r\n                this.ChangeTurnForcefully();\r\n            }, 1000);\r\n        }\r\n        else\r\n        {\r\n            clearTimeout(ForceChangeTimeOut);\r\n            this.ChangeTurn();\r\n        }\r\n    },\r\n\r\n    UpdateVisualData()\r\n    {\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n   **/ \r\n    TurnHandler(_turn)\r\n    {\r\n        if (this.SelectedMode == 2) {\r\n            var _isMaster = GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckCurrentActiveMasterClient();\r\n            if (!this.PlayerGameInfo[_turn].IsActive) {\r\n                if (_isMaster) {\r\n                    this.ChangeTurn();\r\n                    return;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        //this.ClearDisplayTimeout();\r\n        this.UpdateVisualData();\r\n        console.log(\"Turn: \"+_turn);\r\n        var _playerMatched=false;\r\n        _skipNextTurn=false;\r\n        if(IsTweening) //check if animation of turn being played on other players \r\n        {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                IsTweening = false;\r\n                \r\n            setTimeout(() => {\r\n                this.TurnHandler(_turn);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            this.TurnNumber=_turn;\r\n            if(this.SelectedMode==2)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {    \r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n                        this.ToggleTurnProgress(true);\r\n                        if (!_skipNextTurn) {\r\n                            setTimeout(() => {\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                            }, 1000);\r\n                            console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.ToggleTurnProgress(false);\r\n                }\r\n                    \r\n            }else if(this.SelectedMode==1)\r\n            {\r\n                // console.log(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                // console.log(this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn);\r\n                // console.log(userGameOver);\r\n                if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n                {\r\n                    _playerMatched = true;\r\n                    _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if (!userGameOver) {\r\n                        this.ToggleTurnProgress(true);\r\n                        if (!_skipNextTurn) {\r\n                            setTimeout(() => {\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                            }, 1000);\r\n                            console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                        }\r\n                    }\r\n                }\r\n                else//turn decisions for bot\r\n                {\r\n                    _playerMatched = true;\r\n                    _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if (!BotGameOver) {\r\n                        this.ToggleTurnProgress(false);\r\n                        if (!_skipNextTurn) {\r\n                            setTimeout(() => {\r\n                                this.RollDice();\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n            for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n            }\r\n\r\n\r\n            if(this.SelectedMode==2)//for real players\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n                console.log(\"Turn Of: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                console.log(this.AllPlayerUI[this.TurnNumber].getComponent('PlayerProfileManager').PlayerInfo);\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n                this.SyncDataToPlayerGameInfo(0);\r\n\r\n\r\n                //force sync spectator after completion of each turn\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                    this.SyncAllData_SpectateManager();\r\n            }\r\n\r\n            //skip this turn as skip turn has been called before\r\n            if(_playerMatched && _skipNextTurn)\r\n            {\r\n                IsTweening=false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\",1200);\r\n                this.ToggleSkipNextTurn(false);\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n            if(_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n            {\r\n                setTimeout(() => {\r\n                    IsTweening=false;\r\n                    this.ChangeTurn();\r\n                    this.ToggleTurnProgress(false);   \r\n                }, 500);\r\n               \r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    SyncDataToPlayerGameInfo(_ind)\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        var _counter=_ind;\r\n       // console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n      //  console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n\r\n        for (let index = 0; index < MainSessionData.length; index++) {\r\n                while (this.PlayerGameInfo[_counter].IsActive == false)\r\n                {\r\n                    _counter++;\r\n                }\r\n            \r\n                if(this.PlayerGameInfo[_counter].PlayerUID==MainSessionData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                {\r\n                    this.PlayerGameInfo[_counter]=MainSessionData[index].customProperties.PlayerSessionData;\r\n                        \r\n                    if(_counter<this.PlayerGameInfo.length-1)\r\n                    {\r\n                        _counter++;\r\n                        //console.log(\"adding counter: \"+_counter);\r\n                        this.SyncDataToPlayerGameInfo(_counter);\r\n                    }\r\n                    else {\r\n                        console.log(\"synced Data:\");\r\n                        console.log(this.PlayerGameInfo);\r\n                    }\r\n                }\r\n            }\r\n    },  \r\n\r\n    /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    StartTurn()\r\n    {\r\n        console.log(this.PlayerGameInfo);\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        this.TurnNumber=0; //reseting the turn number on start of the game\r\n\r\n        //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    ReceiveBankruptData(_data)\r\n    {\r\n        //other player has been bankrupted\r\n        var _isBankrupted=_data.Data.bankrupted;\r\n        var _turn=_data.Data.turn;\r\n        var _playerData=_data.Data.PlayerDataMain;\r\n\r\n        console.log(_data);\r\n        // console.log(_isBankrupted);\r\n        // console.log(_turn);\r\n        // console.log(_playerData);\r\n\r\n        this.PlayerGameInfo[_turn]=_playerData;\r\n\r\n        this.AssignPlayerGameUI(true);\r\n        this.EnablePlayerNodes(true);\r\n\r\n        this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n        \r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n        }\r\n    },\r\n\r\n    StartTurnAfterBankrupt()\r\n    {\r\n        this.AssignPlayerGameUI(true);\r\n        this.EnablePlayerNodes(true);\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n        }, 1000);\r\n\r\n        this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n        \r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n        }\r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region Function for gameplay\r\n     /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    AssignPlayerGameUI(_isBankrupted=false)\r\n    {\r\n        if(this.SelectedMode==1) //for bot\r\n        {\r\n            if(!_isBankrupted)\r\n            {\r\n                var _randomIndex=this.getRandom(0,this.BotGameInfo.length)\r\n                this.PlayerGameInfo.push(this.BotGameInfo[_randomIndex]);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=2;\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerUI[index].active=true;\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[index];\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').SetName(this.PlayerGameInfo[index].PlayerName);\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n    },\r\n\r\n    UpdateGameUI(_toggleHighlight,_index)\r\n    {\r\n        if(_toggleHighlight)\r\n        {\r\n            this.AllPlayerUI[_index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[_index];\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n                if(_index==index)\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n                }\r\n                else\r\n                {\r\n                    this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(false);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    EnablePlayerNodes(_isBankrupted=false)\r\n    {\r\n        if(!_isBankrupted)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(this.PlayerGameInfo[index].HomeBasedAmount==1 && !this.PlayerGameInfo[index].InitialCounterAssigned)   \r\n                    this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n                else if(this.PlayerGameInfo[index].BrickAndMortarAmount==1 && !this.PlayerGameInfo[index].InitialCounterAssigned)   \r\n                    this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n            }\r\n        }else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].HomeBasedAmount==1)   \r\n                this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n            else if(this.PlayerGameInfo[this.TurnNumber].BrickAndMortarAmount==1)   \r\n                this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    SetFollowCameraProperties()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        this.CameraNode.position=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n   \r\n        let ratio=targetPos.y/cc.winSize.height;\r\n        this.Camera.zoomRatio=2;\r\n    },\r\n\r\n    lateUpdate () {\r\n        if(this.isCameraZooming)    \r\n            this.SetFollowCameraProperties();\r\n    },\r\n\r\n    syncDiceRoll(_roll)\r\n    {\r\n        var _dice1=_roll.dice1;\r\n        var _dice2=_roll.dice2;\r\n        var _result=_dice1+_dice2;\r\n\r\n        IsTweening=true;\r\n        this.CardDisplayed=false;\r\n\r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n                {\r\n                    console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n                } \r\n            }\r\n        }\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==2)\r\n            {\r\n                RollCounter=0;\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                console.error(RollCounter);\r\n            }\r\n            else\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                RollCounter=13;\r\n                console.error(RollCounter);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==12)\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+21;  \r\n            else\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+1;\r\n\r\n            RollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n            console.error(RollCounter-1);\r\n        }\r\n        \r\n\r\n        DiceRoll=_result;\r\n        DiceTemp=0;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            if(this.TurnNumber==index)\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=true;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1, _dice2);\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n            }\r\n            else\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n            }  \r\n        }\r\n\r\n        // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        // this.TweenCamera(_pos,true,0.4);   \r\n    },\r\n\r\n    DiceFuntionality()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        this.TweenCamera(_pos,true,0.4);  \r\n    },\r\n\r\n    TempCheckSpace(_rolling)\r\n    {\r\n        var tempcounter=0;\r\n        var tempcounter2=0;\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                tempcounter2=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n      if(tempcounter2-1<0)\r\n      {\r\n        console.error(\"starting from oblivion\");\r\n        tempcounter=tempcounter2+_rolling-1;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n      else\r\n      {\r\n        tempcounter=tempcounter2+_rolling;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n\r\n    },\r\n\r\n    RollDice:function()\r\n    {\r\n        if (!isGameOver) {\r\n            var Dice1;\r\n            var Dice2;\r\n            if (_isTest && this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n                Dice1 = parseInt(_diceinput1);\r\n                Dice2 = parseInt(_diceinput2);\r\n            }\r\n            else if (this.PlayerGameInfo[this.TurnNumber].IsBot == true && _isTest) {\r\n                Dice1 = 5;\r\n                Dice2 = 3;\r\n            }\r\n            else {\r\n                Dice1 = this.getRandom(1, 7);\r\n                Dice2 = this.getRandom(1, 7);\r\n            \r\n                if (PreviousDiceRoll1 == Dice1)\r\n                    Dice1 = this.getRandom(1, 7);\r\n\r\n                if (PreviousDiceRoll2 == Dice2)\r\n                    Dice2 = this.getRandom(1, 7);\r\n                \r\n                PreviousDiceRoll1 = Dice1;\r\n                PreviousDiceRoll2 = Dice2;\r\n            }\r\n         \r\n\r\n            // var Dice1=20;\r\n            // var Dice2=1;\r\n\r\n            DiceRoll = Dice1 + Dice2;\r\n            var _newRoll = { dice1: Dice1, dice2: Dice2 }\r\n            //DiceRoll=23;\r\n            //this.TempCheckSpace(DiceRoll);\r\n            console.log(\"dice number: \" + DiceRoll + \", Dice1:\" + Dice1 + \", Dice2:\" + Dice2);\r\n\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3, _newRoll);\r\n        }\r\n    },\r\n\r\n    RollOneDice()\r\n    {\r\n        var Dice1 = this.getRandom(1, 7);\r\n        \r\n        if (PreviousDiceRoll5 == Dice1)\r\n            Dice1=this.getRandom(1,7);   \r\n                \r\n            PreviousDiceRoll5 = Dice1;\r\n\r\n        return Dice1;\r\n    },\r\n\r\n    RollTwoDices()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2 = this.getRandom(1, 7);\r\n        \r\n        if (PreviousDiceRoll3 == Dice1)\r\n            Dice1=this.getRandom(1,7);   \r\n\r\n        if (PreviousDiceRoll4 == Dice2)\r\n            Dice2 = this.getRandom(1, 7);   \r\n                \r\n            PreviousDiceRoll3 = Dice1;\r\n            PreviousDiceRoll4 = Dice2;\r\n\r\n        return (Dice1+Dice2);\r\n    },\r\n\r\n    callUponCard()\r\n    {\r\n        if (!isGameOver) {\r\n            if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n                var _spaceID = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n                if (_spaceID != 6 && _spaceID != 7) //6 means payday and 7 means double payday, 9 menas sell space\r\n                {\r\n                    var RandomCard = this.getRandom(0, 15);\r\n            \r\n                    //for testing only\r\n                    if (_spaceID == 2) //landed on some big business\r\n                    {\r\n                        var valueIndex = [0, 1, 7, 10, 2, 3, 4, 5, 6, 8];\r\n                        var index = this.getRandom(0, 10);\r\n                        RandomCard = valueIndex[index];\r\n                        //RandomCard = 1;\r\n                    } else if (_spaceID == 5) //landed on some losses cards\r\n                    {\r\n                        var valueIndex = [0, 1, 5, 6, 2, 7, 3, 4, 8, 9];\r\n                        var index = this.getRandom(0, 10);\r\n                        RandomCard = valueIndex[index];\r\n                        //RandomCard = 9;\r\n                    }\r\n                    else if (_spaceID == 3) //landed on some marketing cards\r\n                    {\r\n                        var valueIndex = [0, 7, 3, 8, 13, 9, 1, 2, 4, 5];\r\n                        var index = this.getRandom(0, 10);\r\n                        RandomCard = valueIndex[index];\r\n                        //RandomCard = 5;\r\n                    }\r\n\r\n                    else if (_spaceID == 1) //landed on some wild cards\r\n                    {\r\n                        var valueIndex = [0, 1, 6, 10, 2, 3, 4];\r\n                        var index = this.getRandom(0, 7);\r\n                        RandomCard = valueIndex[index];\r\n                        //RandomCard = 4;\r\n                    }\r\n            \r\n\r\n                    IsTweening = false;\r\n                    console.error(_spaceID);\r\n\r\n                    if (this.SelectedMode == 2) //for real player\r\n                    {\r\n                        if (_spaceID == 12) // if player landed on finish space\r\n                        {\r\n                            RollCounter = RollCounter + 5;\r\n                            this.StartDiceRoll();\r\n                        }\r\n                        else {\r\n                            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                                var SendingData = { \"randomCard\": RandomCard, \"counter\": RollCounter };\r\n                                this.RaiseEventForCard(SendingData);\r\n                            }\r\n                            else {\r\n                                this.DisplayCardOnOthers();\r\n                            }\r\n                        }\r\n                    } else if (this.SelectedMode == 1) //for bot\r\n                    {\r\n                        if (_spaceID == 12) // if player landed on finish space\r\n                        {\r\n                            RollCounter = RollCounter + 5;\r\n                            this.StartDiceRoll();\r\n                        }\r\n                        else {\r\n                            var SendingData = { \"randomCard\": RandomCard, \"counter\": RollCounter };\r\n                            this.RaiseEventForCard(SendingData);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    IsTweening = false;\r\n                    console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n                    this.RaiseEventTurnComplete();\r\n                }\r\n            }\r\n            else {\r\n                if (this.SelectedMode == 1) {\r\n                    if (!isGameOver) {\r\n                        if (this.PlayerGameInfo[this.TurnNumber].isBot && BotGameOver)\r\n                            this.completeCardTurn();\r\n                \r\n                        if (!this.PlayerGameInfo[this.TurnNumber].isBot && userGameOver)\r\n                            this.completeCardTurn();\r\n                    }\r\n                }\r\n                else if (this.SelectedMode == 2) {\r\n                    if (!isGameOver) {\r\n                        if (this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n                            this.completeCardTurn();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (this.SelectedMode == 1) {\r\n                this.AllPlayersGameCompleted(true);\r\n            } else if (this.SelectedMode == 2)\r\n            {\r\n                this.AllPlayersGameCompleted(false); \r\n            }\r\n        \r\n        }\r\n    },\r\n\r\n    completeCardTurn()\r\n    {\r\n        IsTweening=false;\r\n        console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n        this.RaiseEventTurnComplete();\r\n    },\r\n\r\n    CallGameComplete(_isBot=false,_forceGameOver=false)\r\n    {\r\n        if(_isBot==false)\r\n        {\r\n            // if (_forceGameOver) {\r\n            //     this.TurnNumber = this.GetMyIndex();\r\n            // }\r\n\r\n            var _playerIndex = this.GetMyIndex();\r\n                \r\n            if (!this.PlayerGameInfo[_playerIndex].IsActive) {\r\n                this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n                this.PlayerGameInfo[_playerIndex].TotalScore = 0;\r\n                console.error(\"player is not active returning\");\r\n            }\r\n            else {\r\n\r\n                if (this.PlayerGameInfo[_playerIndex].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                    console.error(\"calculating....\");\r\n                    console.log(\"agme is not finished\");\r\n                    this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n\r\n                    var _cash = this.PlayerGameInfo[_playerIndex].Cash;\r\n                    var HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                    var BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                    var BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                    var loanAmount = 0;\r\n                    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n                            loanAmount += GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                        }\r\n                    }\r\n\r\n                    var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n                    var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n                    var _diceRandom = this.RollTwoDices();\r\n                    var OnceOrShare = _diceRandom * 1000;\r\n\r\n                    var GoldCash = OnceOrShare * _gold;\r\n                    var StockCash = OnceOrShare * _stocks;\r\n\r\n\r\n                    var BMCash = (BMAmount + BMLocations) * 150000;\r\n\r\n                    var HMCash = 0;\r\n                    if (HMAmount == 1)\r\n                        HMCash = 60000;\r\n                    else if (HMAmount == 2)\r\n                        HMCash = 25000 + 60000;\r\n                    else if (HMAmount == 3)\r\n                        HMCash = 25000 + 25000 + 60000;\r\n\r\n                    var TotalAssets = _cash + BMCash + HMCash + GoldCash + StockCash - loanAmount;\r\n\r\n                    this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n                    this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_playerIndex]);\r\n                    \r\n                    console.log(\"Data pushed\");\r\n                    \r\n                }\r\n                //console.log(this.PlayerGameInfo[this.TurnNumber])\r\n            }\r\n            \r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=this.TurnNumber;\r\n            if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n            {\r\n                this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                var HMAmount=this.PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                var BMAmount=this.PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                var BMLocations=this.PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                var loanAmount=0;\r\n                for (let index = 0; index < this.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                    } \r\n                }\r\n\r\n                    var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n                    var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n                    var _diceRandom = this.RollTwoDices();\r\n                    var OnceOrShare = _diceRandom * 1000;\r\n\r\n                    var GoldCash = OnceOrShare * _gold;\r\n                    var StockCash = OnceOrShare * _stocks;\r\n\r\n\r\n                    var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                    var HMCash=0;\r\n                    if(HMAmount==1)\r\n                        HMCash=60000;\r\n                    else if(HMAmount==2)\r\n                        HMCash=25000+60000;\r\n                    else if(HMAmount==3)\r\n                        HMCash=25000+25000+60000;\r\n\r\n                    var TotalAssets=_cash+BMCash+HMCash+GoldCash+StockCash-loanAmount;\r\n                \r\n                    this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n                    this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n                }\r\n        }\r\n    },\r\n\r\n   RaiseEventForGameComplete(_data)\r\n   {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6,_data);\r\n   },\r\n\r\n   RaiseEventToSyncGameCompleteData(_data)\r\n   {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(16,_data);\r\n   },\r\n\r\n   SyncGameOver(_UID)\r\n   {\r\n       var infoText = \"\";\r\n       var statusText = \"\";\r\n    if(this.SelectedMode==2)//for real players\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectData();\r\n        isGameOver = true;\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        console.log(_UID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver=true;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n            \r\n            var _index = -1;\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                if (MainSessionData[index].customProperties.PlayerSessionData.PlayerUID == _UID)\r\n                {\r\n                    _index = index;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            statusText = \"Game won by \"+MainSessionData[_index].customProperties.PlayerSessionData.PlayerName; \r\n            infoText =\r\n                \"Current Cash : $\" + MainSessionData[_index].customProperties.PlayerSessionData.Cash + \"\\n\" +\r\n                \"Home Based Businesses Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalHBCash + \"\\n\" +\r\n                \"Brick And Mortar Businesses Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalBMCash + \"\\n\" +\r\n                \"Gold Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalGoldCash + \"\\n\" +\r\n                \"Stocks Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalStocksCash + \"\\n\" +\r\n                \"Loan Balance : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalLoanBalance + \"\\n\" +\r\n                \"Total Cash Earned : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalScore + \"\\n\";\r\n            \r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n        }\r\n        else {\r\n            if (MyData.customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n                \r\n                //you won\r\n                statusText = \"Congrats! you have won the game.\"; \r\n                infoText =\r\n                    \"Current Cash : $\" + MyData.customProperties.PlayerSessionData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.customProperties.PlayerSessionData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.customProperties.PlayerSessionData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.customProperties.PlayerSessionData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.customProperties.PlayerSessionData.TotalScore + \"\\n\";\r\n                \r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n            }\r\n            else {\r\n\r\n                //you lose\r\n                statusText = \"Unfortunately! you have lost the game.\"; \r\n                infoText =\r\n                    \"Current Cash : $\" + MyData.customProperties.PlayerSessionData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.customProperties.PlayerSessionData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.customProperties.PlayerSessionData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.customProperties.PlayerSessionData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.customProperties.PlayerSessionData.TotalScore + \"\\n\";\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n            }\r\n\r\n        }\r\n    }\r\n    else if(this.SelectedMode==1)//with bot\r\n    {\r\n        isGameOver = true;\r\n        var MainSessionData=this.PlayerGameInfo;\r\n        var MyData=this.PlayerGameInfo[0];\r\n        console.log(_UID);\r\n        console.log(MyData.PlayerUID);\r\n        this.PlayerGameInfo[0].GameOver=true;\r\n\r\n        if(MyData.PlayerUID==_UID)\r\n        {\r\n            //you won\r\n            statusText = \"Congrats! you have won the game.\"; \r\n            infoText =\r\n                    \"Current Cash : $\" + MyData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.TotalScore + \"\\n\" +\r\n                    \"Other Player Earned Cash : $\" + this.PlayerGameInfo[1].TotalScore + \"\\n\";\r\n                \r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n\r\n        }\r\n        else\r\n        {\r\n            //you lose\r\n\r\n            statusText = \"Unfortunately! you have lost the game.\"; \r\n            infoText =\r\n                    \"Current Cash : $\" + MyData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.TotalScore + \"\\n\" +\r\n                    \"Other Player Earned Cash : $\" + this.PlayerGameInfo[1].TotalScore + \"\\n\";\r\n                \r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n        }\r\n    }\r\n\r\n   },\r\n\r\n    SyncGameCompleteData(_data)\r\n    {\r\n        var _isBot = _data.Bot;\r\n        if (_isBot) {\r\n            this.CallGameComplete(true, false);\r\n        \r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 4000, false);\r\n                setTimeout(() => {\r\n                    this.ZoomCameraOutOnly();\r\n\r\n                    var max = -1;\r\n                    var SelectedInd = 0;\r\n                    var SessionData = this.PlayerGameInfo;\r\n    \r\n                    for (let index = 0; index < SessionData.length; index++) {\r\n                        if (SessionData[index].IsActive) {\r\n                            var _value = SessionData[index].TotalScore;\r\n    \r\n                            if (_value > max) {\r\n                                SelectedInd = index;\r\n                                max = _value;\r\n                            }\r\n                        }\r\n                    }\r\n    \r\n                    for (let index = 0; index < SessionData.length; index++) {\r\n                        if (SessionData[index].IsActive) {\r\n                            var _value = SessionData[index].TotalScore;\r\n                            console.log(_value);\r\n                        }\r\n                    }\r\n            \r\n                    console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n                    this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n                }, 4000);\r\n        } else {\r\n            if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n                this.CallGameComplete(false, false);\r\n        \r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 4000, false);\r\n                setTimeout(() => {\r\n                    console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n                    this.ZoomCameraOutOnly();\r\n\r\n                    this.SyncDataToPlayerGameInfo(0);\r\n\r\n                    var max = -1;\r\n                    var SelectedInd = 0;\r\n                    var SessionData = this.PlayerGameInfo;\r\n    \r\n                    for (let index = 0; index < SessionData.length; index++) {\r\n                        if (SessionData[index].IsActive) {\r\n                            var _value = SessionData[index].TotalScore;\r\n    \r\n                            if (_value > max) {\r\n                                SelectedInd = index;\r\n                                max = _value;\r\n                            }\r\n                        }\r\n                    }\r\n    \r\n                    for (let index = 0; index < SessionData.length; index++) {\r\n                        if (SessionData[index].IsActive) {\r\n                            var _value = SessionData[index].TotalScore;\r\n                            console.log(_value);\r\n                        }\r\n                    }\r\n            \r\n                    console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n                    this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n                }, 4000);\r\n            }\r\n        }\r\n    },\r\n\r\n    AllPlayersGameCompleted(_isBot=false)\r\n    {\r\n        var _data = { Bot: _isBot };\r\n        this.RaiseEventToSyncGameCompleteData(_data);\r\n    },\r\n\r\n    GameOver(_forceGameOver=false) {\r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            if (_forceGameOver)\r\n            {\r\n                this.ZoomCameraOutOnly();\r\n            }\r\n                \r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n            {\r\n                var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                var playercompleted=0;\r\n                this.PlayerGameInfo[this.TurnNumber].isGameFinished=true;\r\n                    \r\n                for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(MainSessionData[index].customProperties.PlayerSessionData.isGameFinished)\r\n                        playercompleted++;\r\n                }\r\n\r\n                for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                    if (!this.PlayerGameInfo[index].IsActive)\r\n                        playercompleted++;\r\n                }\r\n                \r\n                console.log(\"player completed: \" + playercompleted);\r\n                console.log(\"player gameinfo length: \" + this.PlayerGameInfo.length);\r\n                if(playercompleted>=this.PlayerGameInfo.length || _forceGameOver) //game completed on all system\r\n                {\r\n                    isGameOver = true;\r\n                    if (_forceGameOver)\r\n                    {\r\n                        setTimeout(() => {\r\n                            this.AllPlayersGameCompleted(false);\r\n                        }, 1000);\r\n                    } \r\n                    else if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                            if (!PassedPayDay && !DoublePayDay) {\r\n                                this.AllPlayersGameCompleted(false);\r\n                            }    \r\n                    }\r\n                }else\r\n                {\r\n                    if (!isGameOver) {\r\n                        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                            if (!PassedPayDay && !DoublePayDay) {\r\n                                IsTweening = false;\r\n                                this.completeCardTurn();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if(this.SelectedMode==1)//for bot\r\n        {\r\n            if (this.PlayerGameInfo[this.TurnNumber].IsBot) \r\n                BotGameOver = true;\r\n            else\r\n                userGameOver = true;\r\n                    \r\n            console.log(\"usergameover: \" + userGameOver);\r\n            console.log(\"botgameover: \" + BotGameOver);\r\n            // this.CallGameComplete(true);\r\n            var playercompleted=0;\r\n    \r\n            var MainSessionData=this.PlayerGameInfo;\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                if(MainSessionData[index].isGameFinished)\r\n                    playercompleted++;\r\n            }\r\n                \r\n            if(playercompleted==this.PlayerGameInfo.length) //gamecompleted on all systems\r\n            {\r\n                    BotGameOver = true;\r\n                    userGameOver = true;\r\n                    isGameOver = true;\r\n                        \r\n                if (!PassedPayDay && !DoublePayDay) {\r\n                    this.AllPlayersGameCompleted(true);\r\n                }\r\n            }else\r\n            {\r\n                if (!isGameOver) {\r\n                    if (!PassedPayDay && !DoublePayDay) {\r\n                        IsTweening = false;\r\n                        this.completeCardTurn();\r\n                    }\r\n                }\r\n            }\r\n        } \r\n    },\r\n    StartDiceRoll:function()\r\n    {\r\n        if(RollCounter>=GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length)\r\n        {\r\n            console.log(\"Gameover\"); \r\n            this.ZoomCameraOut();\r\n\r\n            setTimeout(() => {\r\n                this.GameOver(false);\r\n            }, 1500);\r\n        }\r\n        else\r\n        {\r\n            if (!isGameOver) {\r\n                DiceTemp = DiceTemp + 1;\r\n                var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n                this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n            }\r\n        }\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    TweenCamera: function (_pos, isZoom,time) {   \r\n        cc.tween(this.CameraNode)\r\n        .to(time, { position: cc.v2(_pos.x, _pos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(isZoom)\r\n            this.ZoomCameraIn();\r\n        else\r\n            this.ZoomCameraOut();\r\n        })\r\n        .start();\r\n    },\r\n\r\n    ZoomCameraIn () {\r\n        setTimeout(() => {\r\n             if(this.Camera.zoomRatio<2)\r\n             {\r\n                this.Camera.zoomRatio=this.Camera.zoomRatio+0.03;\r\n                this.ZoomCameraIn();\r\n             }\r\n             else\r\n             {\r\n                this.Camera.zoomRatio=2;\r\n                this.isCameraZooming=true;\r\n                this.StartDiceRoll();\r\n             }\r\n          }, 10);\r\n    },\r\n\r\n    CheckPayDayConditions(_isBot=false)\r\n    {\r\n        if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n            if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6) {\r\n                PassedPayDay = true;\r\n                PassedPayDayCounter=PassedPayDayCounter+1;\r\n                console.error(PassedPayDayCounter);\r\n            }\r\n                    \r\n            if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 7) {\r\n                DoublePayDay = true;\r\n                PassedPayDayCounter++;\r\n            }\r\n        }\r\n\r\n        _nextTurnDoublePay=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n        if(PassedPayDay && !DoublePayDay && !_nextTurnDoublePay)\r\n        {\r\n            //this.ToggleDoublePayNextTurn(false);\r\n            //this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(false,_isBot);\r\n        }\r\n        else if((DoublePayDay) || (PassedPayDay && _nextTurnDoublePay))\r\n        {\r\n            //this.ToggleDoublePayNextTurn(false);\r\n            //this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(true,_isBot);\r\n        }\r\n        else\r\n        {\r\n            this.callUponCard();\r\n        }\r\n    },\r\n\r\n    ZoomCameraOutOnly() {\r\n        setTimeout(() => {\r\n            if (this.Camera.zoomRatio >= 1) {\r\n                this.isCameraZooming = false;\r\n                this.Camera.zoomRatio = this.Camera.zoomRatio - 0.03;\r\n                this.ZoomCameraOutOnly();\r\n            }\r\n            else {\r\n                this.CameraNode.position = cc.Vec2(0, 0);\r\n                this.Camera.zoomRatio = 1;\r\n            }\r\n        }, 10);\r\n    },\r\n\r\n    ZoomCameraOut () {\r\n        setTimeout(() => {\r\n            if(this.Camera.zoomRatio>=1)\r\n            {\r\n               this.isCameraZooming=false;\r\n               this.Camera.zoomRatio=this.Camera.zoomRatio-0.03;\r\n               this.ZoomCameraOut();\r\n            }\r\n            else\r\n            {\r\n                this.CameraNode.position=cc.Vec2(0,0);\r\n                this.Camera.zoomRatio=1;\r\n                // IsTweening = false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n                \r\n                if (this.SelectedMode == 1)\r\n                {\r\n                    if (this.PlayerGameInfo[this.TurnNumber].IsBot && !BotGameOver) {\r\n                            this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                    } else {\r\n                        if (!this.PlayerGameInfo[this.TurnNumber].IsBot && !userGameOver) {\r\n                                this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                        }\r\n                    }  \r\n                }\r\n\r\n                if(this.SelectedMode==2) //real player\r\n                {\r\n                    if (PlayerLeft)\r\n                    {\r\n                       // IsTweening = false;  \r\n                        PlayerLeft = false;\r\n                    }\r\n\r\n                    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                        this.CheckPayDayConditions();\r\n                    else\r\n                        this.callUponCard();\r\n                }\r\n                \r\n            }\r\n         }, 10);\r\n         \r\n    },\r\n\r\n    TweenPlayer: function (Node,ToPos) {\r\n        cc.tween(Node) //0.4\r\n            .to(0.04, { position: cc.v2(ToPos.x, ToPos.y) }, { easing: \"quadInOut\" })\r\n            .call(() => {\r\n                if (DiceTemp < DiceRoll) {\r\n                    console.log(DiceTemp + \" \" + RollCounter);\r\n            \r\n                    if (this.SelectedMode == 1) //for bot\r\n                    {\r\n                        if (this.PlayerGameInfo[this.TurnNumber].IsBot) {\r\n                    \r\n                            if (!BotGameOver) {\r\n                                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6 || parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 7) {\r\n                                    PassedPayDay = true;\r\n                                    PassedPayDayCounter++;\r\n                                }\r\n                               \r\n                            } else {\r\n                                console.log(\"bot game is over\");\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (!userGameOver) {\r\n                                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6 || parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 7) {\r\n                                    PassedPayDay = true;\r\n                                    PassedPayDayCounter++;\r\n                                }\r\n                                \r\n                               /// console.error(PassedPayDayCounter);\r\n                    } else\r\n                    {\r\n                        console.log(\"user game is over skipping\");\r\n                    }\r\n                }\r\n\r\n               // console.log(PassedPayDay);\r\n            }\r\n\r\n            if(this.SelectedMode==2)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n                        if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6 || parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 7) {\r\n                            PassedPayDay = true;\r\n                            PassedPayDayCounter++;\r\n                        }\r\n                    } else\r\n                    {\r\n                        console.log(\"Game finished for: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n                if (RollCounter == 12)\r\n                    RollCounter = RollCounter + 21;\r\n                else\r\n                    RollCounter = RollCounter + 1;\r\n            } else {\r\n                    RollCounter = RollCounter + 1;\r\n                    DiceTemp = DiceRoll;\r\n            }\r\n\r\n            //DiceTemp=DiceTemp+1; \r\n            console.log(DiceTemp+\" \"+RollCounter);\r\n            \r\n            this.StartDiceRoll();\r\n            //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n           \r\n        }\r\n        else\r\n        {\r\n            var _newpos=cc.Vec2(0,0);\r\n            this.TweenCamera(_newpos, false, 0.6); //zoomout\r\n        }\r\n\r\n        })\r\n        .start();\r\n    },\r\n\r\n    //rules implmentation during turn (turn decisions)\r\n\r\n    TogglePayDay(_st1,_St2)\r\n    {\r\n        PassedPayDay=_st1;\r\n        DoublePayDay=_St2;\r\n\r\n        if (!_st1)\r\n        {\r\n            PassedPayDayCounter = 0;\r\n        }\r\n    },\r\n\r\n    ExpandBusiness_TurnDecision(amount,_index,_locationName,_isCardFunctionality = false,_GivenCash = 0,_StartAnyBusinessWithoutCash=false)\r\n    {\r\n        if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.length < 3) {\r\n            if (!_isCardFunctionality) {\r\n                if (this.PlayerGameInfo[this.TurnNumber].Cash >= amount) {\r\n                    this.PlayerGameInfo[this.TurnNumber].Cash = this.PlayerGameInfo[this.TurnNumber].Cash - amount;\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n                    this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n                    }, 1200);\r\n                }\r\n                else {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount);\r\n                }\r\n            }\r\n            else {\r\n                if (_GivenCash >= amount) {\r\n                    _GivenCash = _GivenCash - amount;\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n                    this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n                    }, 1200);\r\n                }\r\n                else {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount + \", Cash Given $\" + _GivenCash);\r\n                }\r\n            }\r\n        } else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You cannot own more than three brick and mortar business locations\");\r\n        }\r\n\r\n    },\r\n\r\n    GenerateExpandBusiness_Prefabs_TurnDecision(_isCardFunctionality = false,_GivenCash = 0,_StartAnyBusinessWithoutCash=false)\r\n    {\r\n        BusinessLocationNodes=[];\r\n\r\n        console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n        for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n            if(parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType)==2) //this means there is brick and mortar in list\r\n            {\r\n                var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n                node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n                node.getComponent('ExpandBusinessHandler').SetBusinessIndex(i);\r\n                node.getComponent('ExpandBusinessHandler').SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n                node.getComponent('ExpandBusinessHandler').SetCardFunctionality(_isCardFunctionality);\r\n                node.getComponent('ExpandBusinessHandler').SetGivenCash(_GivenCash);\r\n                node.getComponent('ExpandBusinessHandler').SetStartAnyBusinessWithoutCash(_StartAnyBusinessWithoutCash);\r\n                node.getComponent('ExpandBusinessHandler').ResetEditBox();\r\n                BusinessLocationNodes.push(node);\r\n            } \r\n        }\r\n        console.log(BusinessLocationNodes);\r\n        return BusinessLocationNodes.length;\r\n    },\r\n\r\n    DestroyGeneratedNodes()\r\n    {\r\n        for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n            BusinessLocationNodes[index].destroy();\r\n        }\r\n\r\n        BusinessLocationNodes=[];\r\n    },\r\n\r\n    UpdateStocks_TurnDecision(_name,_ShareAmount,_isAdding)\r\n    {\r\n        if(_isAdding)\r\n        {\r\n            var _stock=new StockInfo();\r\n            _stock.BusinessName=_name;\r\n            _stock.ShareAmount=_ShareAmount;\r\n\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n        }\r\n    },\r\n\r\n    ProcessPayDay_TurnDecision(_isDoublePayDay=false,_isBot=false,_forSelectedBusiness=false,_SelectedBusinessIndex=0,HBAmount=0,BMAmount=0,BMLocations=0)\r\n    {\r\n        if (_forSelectedBusiness) {\r\n            var _title = \"PayDay\";\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title,false, false, false, _isBot,_forSelectedBusiness,_SelectedBusinessIndex,HBAmount,BMAmount,BMLocations,1);\r\n        }\r\n        else {\r\n            _skipNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n            _skipHMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n            _skipBMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n            if (_skipNextPayday) //if previously skip payday was stored by any card\r\n            {\r\n                this.ToggleSkipPayDay_Whole(false);\r\n\r\n                if (!_isBot) {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\", 1600);\r\n                    setTimeout(() => {\r\n                        this.callUponCard();\r\n                    }, 1650);\r\n                } else {\r\n                    console.log(\"Skipping PayDay.\");\r\n                    setTimeout(() => {\r\n                        this.callUponCard();\r\n                    }, 800);\r\n                }\r\n            }\r\n            else {\r\n                var _title = \"\";\r\n\r\n                if (_isDoublePayDay)\r\n                    _title = \"DoublePayDay\";\r\n                else\r\n                    _title = \"PayDay\";\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, _isDoublePayDay, _skipHMNextPayday, _skipBMNextPayday, _isBot,false,0,0,0,0,PassedPayDayCounter);\r\n            }\r\n        }\r\n    },\r\n\r\n    Bankrupt_TurnDecision()\r\n    {\r\n        this.PlayerGameInfo[this.TurnNumber].IsBankrupt=true;\r\n        this.PlayerGameInfo[this.TurnNumber].BankruptAmount+=1;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode,this.PlayerGameInfo[this.TurnNumber].IsBankrupt,this.PlayerGameInfo[this.TurnNumber].BankruptAmount);\r\n    },\r\n\r\n    SendProfit_Partner_TurnDecision(_amount,_uID)\r\n    {\r\n        var _data = { Data: { Cash: _amount, ID: _uID } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(13, _data);\r\n    },\r\n\r\n    ReceiveProfit_Partner_TurnDecision(_data)\r\n    {\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false)\r\n        {\r\n            var _amount = _data.Data.Cash;\r\n            var _iD=_data.Data.ID;\r\n           \r\n            var _myIndex = this.GetMyIndex();\r\n            \r\n            if (this.PlayerGameInfo[_myIndex].PlayerUID == _iD) {\r\n\r\n                if (this.PlayerGameInfo[_myIndex].isGameFinished == true) { \r\n                    this.PlayerGameInfo[_myIndex].TotalScore+=_amount;\r\n                }\r\n\r\n                this.PlayerGameInfo[_myIndex].Cash += _amount;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have received profit of $\" + _amount + \" from your partner.\",2800);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n            }\r\n        }\r\n    },\r\n\r\n//#endregion\r\n   \r\n    //#region Cards Rules\r\n    ToggleDoublePayNextTurn(_state)\r\n    {\r\n        _nextTurnDoublePay=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay=_nextTurnDoublePay;\r\n    },\r\n\r\n    ToggleSkipNextTurn(_state)\r\n    {\r\n        _skipNextTurn=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn=_skipNextTurn;\r\n    },\r\n\r\n    ToggleSkipPayDay_Whole(_state)\r\n    {\r\n        _skipNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday=_skipNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_HomeBased(_state)\r\n    {\r\n        _skipHMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday=_skipHMNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_BrickAndMortar(_state)\r\n    {\r\n        _skipBMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday=_skipBMNextPayday;\r\n    },\r\n\r\n    ToggleTurnProgress(_state)\r\n    {\r\n        TurnInProgress=_state;\r\n    },\r\n\r\n    ReturnTurnProgress()\r\n    {\r\n        return TurnInProgress;\r\n    },\r\n\r\n    LoseAllMarketingMoney()\r\n    {\r\n        var _loseAmount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _loseAmount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n        }\r\n        else\r\n        {\r\n            _loseAmount=0;\r\n        }\r\n\r\n        return _loseAmount\r\n    },\r\n\r\n    MultiplyMarketingMoney(_multiplier)\r\n    {\r\n        var _amountIncreased=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _amountIncreased=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_multiplier;\r\n        }\r\n        else\r\n        {\r\n            _amountIncreased=0;\r\n        }\r\n\r\n        return _amountIncreased\r\n    },\r\n\r\n    GetMarketingMoney(_profit)\r\n    {\r\n        var _amount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _profit=(_profit/100);\r\n            _amount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_profit;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n            this.PlayerGameInfo[this.TurnNumber].Cash+=_amount;\r\n        }\r\n        else\r\n        {\r\n            _amount=0;\r\n        }\r\n\r\n        return _amount\r\n    },\r\n\r\n    QuestionPopUp_OtherUser_OneQuestion(_data)\r\n    {\r\n        var _userID=_data.UserID;\r\n        var _questionIndex=_data.Question;\r\n        var _playerIndex=_data.UserIndex;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        \r\n        if(_userID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID)\r\n        {\r\n            console.log(\"ID matched\");\r\n\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n            OneQuestionIndex=_questionIndex;\r\n            var _questionAsked=OneQuestions[_questionIndex-1];\r\n            _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_questionAsked);\r\n        }\r\n    },\r\n\r\n    OneQuestionScreen_Space_OneQuestion(_isTurnOver=false)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData;\r\n        var _roomData;\r\n        if(this.SelectedMode==2) //for real players\r\n        {\r\n            _roomData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n            _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        }\r\n        else if(this.SelectedMode==1)//for bot\r\n        {\r\n            _myData=this.PlayerGameInfo[0];\r\n            _roomData=this.PlayerGameInfo;\r\n        }\r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n        _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n        _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData,_roomData,_isTurnOver,this.SelectedMode)\r\n    \r\n    },\r\n\r\n    OneQuestionDecision_PayAmount_OneQuestion()\r\n    {\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n        if(_myData.Cash>=5000)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(_myData.PlayerUID==this.PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    this.PlayerGameInfo[index].Cash-=5000;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);                \r\n                    break;\r\n                }\r\n            }\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\",1200);\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n            this.RaiseEventDecision_OneQuestion(true,false,-1,_myData.PlayerUID);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n        }\r\n    },\r\n\r\n    OneQuestionDecision_AnswerQuestion_OneQuestion()\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\",1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false,true,OneQuestionIndex,_myData.PlayerUID);\r\n    },\r\n\r\n    RaiseEventDecision_OneQuestion(_hasDonePayment,_hasAnsweredQuestion,_questionIndex,_UserID)\r\n    {\r\n        var _data={PaymentDone:_hasDonePayment,QuestionAnswered:_hasAnsweredQuestion,QuestionIndex:_questionIndex,ID:_UserID};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8,_data);\r\n    },\r\n\r\n    ReceiveEventDecision_OneQuestion(_data)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            var _hasDonePayment=_data.PaymentDone;\r\n            var _hasAnsweredQuestion=_data.QuestionAnswered;\r\n            var _questionIndex=_data.QuestionIndex;\r\n            var _uID=_data.ID;\r\n            \r\n            if(_hasDonePayment)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n                this.PlayerGameInfo[this.TurnNumber].Cash+=5000;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has refused to answer the question instead payed the cash amount, $5000 added to your cash amount\",2100);\r\n                _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                this.completeCardTurn();\r\n\r\n            }else if(_hasAnsweredQuestion)\r\n            {\r\n                var _selectedPlayerIndex=0;\r\n                var _actorsData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n                for (let index = 0; index < _actorsData.length; index++) {\r\n                    if(_uID==_actorsData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        _selectedPlayerIndex=index;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(_questionIndex==1)//have you skipped loan previous payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have skipped loan payement in previous payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have skipped loan payement in previous payday\",2100);\r\n                    }\r\n                }else if(_questionIndex==2)//Have you taken any loan?\r\n                {\r\n                    var _loanTaken=false;\r\n                    for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n                        if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            _loanTaken=true;\r\n                            break;\r\n                        } \r\n                    }\r\n\r\n                    if(_loanTaken)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have taken some loan\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have taken any loan\",2100);\r\n                    }\r\n                }else if(_questionIndex==3)//Are you bankrupted? if more than once, tell me the amount?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have been bankrupted \"+_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.BankruptAmount+\" time/es.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have been bankrupted\",2100);\r\n                    }\r\n                }else if(_questionIndex==4)//Is your turn going to be skipped next time?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will be skipped.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will not be skipped.\",2100);\r\n                    }\r\n                }\r\n                else if(_questionIndex==5)//Is it going to be double pay day your next payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will be double payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will not be double payday\",2100);\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                    this.completeCardTurn();\r\n                }, 2150);\r\n            }\r\n        }\r\n    },\r\n\r\n    ReceiveGoBackSpacesData_spaceFunctionality(_data)\r\n    {\r\n        if(IsTweening==true)\r\n        {\r\n            setTimeout(() => {\r\n                this.ReceiveGoBackSpacesData_spaceFunctionality(_data);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            var _spaces=_data.Data.backspaces;\r\n            var _counter=_data.Data.Counter;\r\n\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_counter+Backspaces].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos,0.1);\r\n\r\n            RollCounter=_counter;\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n\r\n    TweenPlayer_GoBackSpaces: function (Node,ToPos,speed=0.6) {\r\n        cc.tween(Node)\r\n        .to(speed, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        })\r\n        .start();\r\n    },\r\n\r\n    GoBackSpaces_spaceFunctionality()\r\n    {\r\n        RollCounter-=Backspaces;\r\n        \r\n        if(this.SelectedMode==2)\r\n        {\r\n            var _data={Data:{backspaces:Backspaces,Counter:RollCounter}};\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(10,_data);\r\n        }\r\n        \r\n        var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n        this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        this.completeCardTurn();\r\n    },\r\n\r\n\r\n    //#endregion\r\n    //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports  = GameManager;\r\n//#endregion"]}