{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","LocationsName","LoanTaken","LoanAmount","ctor","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","GameOver","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","CardEventReceived","isGameOver","GameManager","Component","PlayerGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","statics","Instance","onLoad","TurnNumber","TurnCompleted","CheckReferences","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","Get_MultiplayerController","CheckSpectate","console","log","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","SyncDataToPlayerGameInfo","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","AssignPlayerGameUI","index","length","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","MaxPlayers","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","PhotonActor","customProperties","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","DisplayCardOnOthers","error","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","TurnHandler","_turn","_playerMatched","ToggleDecision_TurnDecision","PlayerInfo","RoomActors","ShowToast","_ind","MainSessionData","MyData","_counter","PlayerSessionData","StartTurn","EnablePlayerNodes","SetName","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","myRoomActorsArray","PrintDiceValue_TurnDecision","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","RollDice","Dice1","getRandom","Dice2","RollOneDice","RollTwoDices","callUponCard","_spaceID","valueIndex","SendingData","CallGameComplete","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","SyncGameOver","_UID","RestartGame","StartDiceRoll","ZoomCameraOut","playercompleted","max","SelectedInd","SessionData","_value","TweenPlayer","min","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","ProcessPayDay_TurnDecision","ToPos","_newpos","TogglePayDay","_st1","_St2","ExpandBusiness_TurnDecision","amount","_locationName","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","_title","AssignData_PayDay","ToggleDoublePayNextTurn","_state","ToggleSkipNextTurn","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","_amount","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n    None:0,\r\n    HomeBased: 1,                   //a business that you operate out of your home\r\n    brickAndmortar: 2               //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n    name: \"BusinessInfo\",\r\nproperties: { \r\n    Name: \"BusinessData\",\r\n    BusinessType:\r\n   {\r\n       displayName:\"Mode\",\r\n       type: EnumBusinessType,\r\n       default: EnumBusinessType.None,\r\n       serializable: true,\r\n       tooltip:\"Business catogory for players\",}, \r\n    BusinessTypeDescription:\r\n   {\r\n       displayName: \"Type\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Type (by name) of business player is opening\",},\r\n    BusinessName:\r\n   {\r\n       displayName: \"Name\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Name of the business player is opening\",},\r\n     Amount:\r\n       {\r\n           displayName: \"Amount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"balance of business\",},\r\n      IsPartnership:\r\n       {\r\n           displayName: \"IsPartnership\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has done partnership with someone with current business\",},\r\n       PartnerID:\r\n           {\r\n               displayName:\"PartnerID\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n               tooltip:\"ID of the partner with whom player has formed partnership\",},\r\n        LocationsName:\r\n           {\r\n               displayName:\"LocationsName\",\r\n               type: [cc.Text],\r\n               default: [],\r\n               serializable: true,\r\n               tooltip:\"if player owns brick and mortar he/she can expand to new location\",},\r\n        LoanTaken:\r\n           {\r\n               displayName:\"LoanTaken\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n        LoanAmount:\r\n           {\r\n               displayName:\"LoanAmount\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n    name: \"StockInfo\",\r\nproperties: { \r\n    Name: \"StockData\",\r\n    BusinessName:\r\n   {\r\n       displayName:\"BusinessName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the business in which stocks will be held\",}, \r\n    ShareAmount:\r\n   {\r\n       displayName: \"ShareAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip: \"Share amount of the stock\",},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n    name:\"PlayerData\",\r\nproperties: { \r\n    PlayerName:\r\n   {\r\n       displayName:\"PlayerName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the player\",},\r\n    PlayerUID:\r\n   {\r\n       displayName:\"PlayerUID\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"ID of the player\",},\r\n    AvatarID:\r\n       {\r\n           displayName: \"AvatarID\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"id reference for player avatar selection\",},\r\n    IsBot:\r\n       {\r\n           displayName: \"IsBot\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if current player is bot\",}, \r\n    NoOfBusiness:\r\n   {\r\n       displayName:\"Business\",\r\n       type: [BusinessInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of business a player can own\",}, \r\n    HomeBasedAmount:\r\n   {\r\n       displayName:\"HomeBasedAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of home based business a player owns\",}, \r\n    BrickAndMortarAmount:\r\n   {\r\n       displayName:\"BrickAndMortarAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of brick and mortar business a player owns\",}, \r\n    TotalLocationsAmount:\r\n   {\r\n       displayName:\"TotalLocationsAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of locations of all brick and mortar businessess\",}, \r\n    NoOfStocks:\r\n   {\r\n       displayName:\"Stocks\",\r\n       type: [StockInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of stock a player owns\",}, \r\n    Cash:\r\n       {\r\n           displayName: \"PlayerCash\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of cash player owns\",},\r\n    GoldCount:\r\n       {\r\n           displayName: \"GoldCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of gold a player owns\",},\r\n    StockCount:\r\n       {\r\n           displayName: \"StockCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of stocks a player owns\",},\r\n    LoanTaken:\r\n       {\r\n           displayName: \"LoanTaken\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has taken loan from bank or not\",},\r\n     LoanAmount:\r\n       {\r\n           displayName: \"LoanAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of loan taken from the bank\",},\r\n    MarketingAmount:\r\n       {\r\n           displayName: \"MarketingAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"marketing amount a player owns\",},\r\n    LawyerStatus:\r\n       {\r\n           displayName: \"LawyerStatus\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has hired a lawyer or not\",},\r\n    IsBankrupt:\r\n       {\r\n           displayName: \"IsBankrupt\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has been Bankrupted or not\",},\r\n    PlayerRollCounter:\r\n       {\r\n           displayName: \"PlayerRollCounter\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"integer to store roll countor for player\",},\r\n    InitialCounterAssigned:\r\n       {\r\n           displayName: \"InitialCounterAssigned\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,},\r\n     isGameFinished:\r\n           {\r\n               displayName:\"isGameFinished\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n     TotalScore:\r\n           {\r\n               displayName:\"TotalScore\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n    GameOver:\r\n           {\r\n               displayName:\"GameOver\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n},\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter=0;\r\nvar DiceTemp=0;\r\nvar DiceRoll=0;\r\nvar IsTweening=false;\r\nvar GamePlayReferenceManager=null;\r\nvar TurnCheckArray=[];\r\nvar BusinessLocationNodes=[];\r\n\r\nvar PassedPayDay=false;\r\nvar DoublePayDay=false;\r\n\r\n//cards functionality\r\nvar NextTurnDoublePay=false;\r\nvar SkipNextTurn=false;\r\nvar SkipNextPayday=false; //skip whole pay day\r\nvar SkipHMNextPayday=false; //skip pay day for home based businessess only\r\nvar SkipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived=false;\r\n\r\nvar isGameOver=false;\r\n\r\nvar GameManager=cc.Class({\r\n    name:\"GameManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PlayerGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n        PlayerNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for player\",},    \r\n        CameraNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for camera\",},    \r\n        AllPlayerUI: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of ui of all players\",},      \r\n        AllPlayerNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of node of all players inside gameplay\",},   \r\n        StartLocationNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of attay of locations\",},   \r\n    },\r\n    statics: {\r\n        PlayerData: PlayerData,\r\n        BusinessInfo:BusinessInfo,\r\n        EnumBusinessType:EnumBusinessType,\r\n        Instance:null\r\n    },\r\n\r\n    //#region All Functions of GameManager\r\n    \r\n    /**\r\n    @summary called when instance of class is created\r\n    @method onLoad\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    onLoad () {\r\n        GameManager.Instance=this;\r\n        this.TurnNumber=0;\r\n        this.TurnCompleted=false;\r\n        TurnCheckArray=[];\r\n        this.CheckReferences();\r\n        this.Init_GameManager();   \r\n        \r\n        this.RandomCardIndex=0;\r\n        this.CardCounter=0;\r\n        this.CardDisplayed=false;\r\n        CardEventReceived=false;\r\n    },\r\n\r\n    /**\r\n    @summary called to assign reference of required classes\r\n    @method CheckReferences\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    /**\r\n    @summary initial gamemanager essetials\r\n    @method Init_GameManager\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    Init_GameManager () {\r\n        this.Camera=this.CameraNode.getComponent(cc.Camera);\r\n        this.isCameraZooming=false;\r\n        this.PlayerGameInfo=[];\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;  \r\n\r\n        //if joined player is spectate\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate()==true)\r\n        {\r\n            console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n            //if inital setup has been done and game is under way\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\")==true)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n                this.PlayerGameInfo=AllData;\r\n\r\n                console.log(this.PlayerGameInfo);\r\n\r\n                this.SyncDataToPlayerGameInfo(0);\r\n                this.SyncAllData_SpectateManager();\r\n                this.TurnNumber=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n                this.UpdateGameUI(true,this.TurnNumber);            \r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true);\r\n        }\r\n    },\r\n\r\n    //#region public functions to get data (accessible from other classes)\r\n    GetTurnNumber () {\r\n        return this.TurnNumber;\r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region SpectateMode Code\r\n\r\n    SyncAllData_SpectateManager()\r\n    {\r\n        this.AssignPlayerGameUI();\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n            this.AllPlayerNodes[index].setPosition(_toPos.x,_toPos.y);\r\n        }\r\n\r\n        console.log(\"synced playernodes\");\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    CheckTurnOnSpectateLeave_SpectateManager()\r\n    {\r\n      var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region functions related to Turn Mechanism\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n    @method RaiseEventForCard\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventForCard(_data)\r\n  {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5,_data);\r\n  },\r\n\r\n\r\n  DisplayCardOnOthers()\r\n  {\r\n    console.error(CardEventReceived);\r\n    if(CardEventReceived==true)\r\n    {\r\n        console.error(this.CardCounter);\r\n        CardEventReceived=false;\r\n        if(!this.CardDisplayed)\r\n        {\r\n            this.CardDisplayed=true;\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,this.RandomCardIndex);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        setTimeout(() => { //check after every 0.5 seconds\r\n            this.DisplayCardOnOthers();\r\n        }, 500);\r\n    }\r\n  },\r\n\r\n  ResetCardDisplay()\r\n  {\r\n    this.CardDisplayed=false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data)\r\n  {\r\n\r\n    this.CheckReferences();\r\n    console.log(_data);\r\n\r\n    var RandomCard=_data.randomCard;\r\n    var counter=_data.counter;\r\n\r\n    this.RandomCardIndex=RandomCard;\r\n    this.CardCounter=counter;\r\n\r\n   \r\n    console.error(CardEventReceived);\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n    }\r\n    else\r\n    {\r\n        CardEventReceived=true;\r\n        // if(IsTweening==false && this.CardDisplayed==false)\r\n        // {\r\n        //     GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,RandomCard);\r\n        //     this.CardDisplayed=true;\r\n        // }\r\n    }\r\n\r\n    console.error(CardEventReceived);\r\n\r\n    \r\n  },\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n    @method RaiseEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventTurnComplete()\r\n  {\r\n    if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n    {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n    @method ReceiveEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  ReceiveEventTurnComplete(_uid)\r\n  {\r\n      if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n      {\r\n        console.log(TurnCheckArray.length);\r\n\r\n        if(TurnCheckArray.length==0)\r\n                TurnCheckArray.push(_uid); \r\n\r\n        var ArrayLength=TurnCheckArray.length;\r\n        var IDFound=false;\r\n        for (let index = 0; index < ArrayLength; index++) {\r\n                if(TurnCheckArray[index]==_uid)\r\n                IDFound=true;\r\n        }\r\n\r\n        if(!IDFound)\r\n        {\r\n            TurnCheckArray.push(_uid);\r\n        }\r\n        console.log(TurnCheckArray);\r\n        console.log(TurnCheckArray.length);\r\n\r\n        // var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n        var TotalConnectedPlayers=this.PlayerGameInfo.length;\r\n        if(TurnCheckArray.length==TotalConnectedPlayers)\r\n        {\r\n            TurnCheckArray=[];\r\n            this.TurnCompleted=true;\r\n\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n                this.ChangeTurn();\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n        }\r\n    }\r\n  },\r\n\r\n\r\n   /**\r\n    @summary called when dice animation is played on all players\r\n    @method ChangeTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    ChangeTurn()\r\n    {\r\n        if(this.TurnNumber<this.PlayerGameInfo.length-1)\r\n            this.TurnNumber=this.TurnNumber+1;\r\n        else\r\n            this.TurnNumber=0;\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n    @method TurnHandler\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    TurnHandler(_turn)\r\n    {\r\n        var _playerMatched=false;\r\n        if(IsTweening) //check if animation of turn being played on other players \r\n        {\r\n            setTimeout(() => {\r\n                this.TurnHandler(_turn);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            \r\n            this.TurnNumber=_turn;\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                _playerMatched=true;\r\n\r\n                if(!SkipNextTurn)\r\n                {\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                    }, 1000);\r\n                    console.log(\"its your turn \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                }\r\n            }\r\n\r\n            this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            console.log(\"Turn Of: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            console.log(this.AllPlayerUI[this.TurnNumber].getComponent('PlayerProfileManager').PlayerInfo);\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n\r\n            //skip this turn as skip turn has been called before\r\n            if(_playerMatched && SkipNextTurn)\r\n            {\r\n                IsTweening=false;\r\n                this.ChangeTurn();\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\",1200);\r\n                SkipNextTurn=false;\r\n            }\r\n\r\n            if(_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n            {\r\n                IsTweening=false;\r\n                this.ChangeTurn();\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    SyncDataToPlayerGameInfo(_ind)\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        var _counter=_ind;\r\n        console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        if(this.PlayerGameInfo[_counter].PlayerUID!=MyData.customProperties.PlayerSessionData.PlayerUID) //dont update my own data\r\n        {\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(this.PlayerGameInfo[_counter].PlayerUID==MainSessionData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        this.PlayerGameInfo[_counter]=MainSessionData[index].customProperties.PlayerSessionData;\r\n                        \r\n                        if(_counter<this.PlayerGameInfo.length-1)\r\n                        {\r\n                            _counter++;\r\n                            console.log(\"adding counter: \"+_counter);\r\n                            this.SyncDataToPlayerGameInfo(_counter);\r\n                        }\r\n                        else{\r\n                            console.log(this.PlayerGameInfo);\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        else\r\n            {\r\n                if(_counter<this.PlayerGameInfo.length-1)\r\n                    {\r\n                        _counter++;\r\n                        console.log(\"adding counter: \"+_counter);\r\n                        this.SyncDataToPlayerGameInfo(_counter);\r\n                    }\r\n                else{\r\n                        console.log(this.PlayerGameInfo);\r\n                    }\r\n            }\r\n    },\r\n\r\n    \r\n\r\n    /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    StartTurn()\r\n    {\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        this.TurnNumber=0; //reseting the turn number on start of the game\r\n\r\n        //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region Function for gameplay\r\n     /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    AssignPlayerGameUI()\r\n    {\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerUI[index].active=true;\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[index];\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').SetName(this.PlayerGameInfo[index].PlayerName);\r\n        }\r\n    },\r\n\r\n    UpdateGameUI(_toggleHighlight,_index)\r\n    {\r\n        if(_toggleHighlight)\r\n        {\r\n            this.AllPlayerUI[_index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[_index];\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n                if(_index==index)\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(true);\r\n                }\r\n                else\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(false);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    EnablePlayerNodes()\r\n    {\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            if(this.PlayerGameInfo[index].HomeBasedAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n            else if(this.PlayerGameInfo[index].BrickAndMortarAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    SetFollowCameraProperties()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        this.CameraNode.position=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n   \r\n        let ratio=targetPos.y/cc.winSize.height;\r\n        this.Camera.zoomRatio=2;\r\n    },\r\n\r\n    lateUpdate () {\r\n        if(this.isCameraZooming)    \r\n            this.SetFollowCameraProperties();\r\n    },\r\n\r\n    syncDiceRoll(_roll)\r\n    {\r\n        IsTweening=true;\r\n        this.CardDisplayed=false;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==1)\r\n            {\r\n                RollCounter=0;\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                console.error(RollCounter);\r\n            }\r\n            else\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                RollCounter=13;\r\n                console.error(RollCounter);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==12)\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+21;  \r\n            else\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+1;\r\n\r\n            RollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n            console.error(RollCounter-1);\r\n        }\r\n        \r\n\r\n        DiceRoll=_roll;\r\n        DiceTemp=0;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        this.TweenCamera(_pos,true,0.4);   \r\n    },\r\n\r\n    TempCheckSpace(_rolling)\r\n    {\r\n        var tempcounter=0;\r\n        var tempcounter2=0;\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                tempcounter2=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n        // console.error(tempcounter2+\" \"+_roll);\r\n        // if((tempcounter2+_roll)<33)\r\n        // {\r\n        //     if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==1)\r\n        //     {\r\n        //         tempcounter=0+_roll-1;\r\n        //         console.error(tempcounter);\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         tempcounter=13+_roll-1;\r\n        //         console.error(tempcounter);\r\n        //     }\r\n        // }\r\n        // else\r\n        // {\r\n        //     console.error(tempcounter2+\" \"+_roll);\r\n        //     tempcounter=tempcounter2+_roll;\r\n        // }\r\n\r\n      if(tempcounter2-1<0)\r\n      {\r\n        console.error(\"starting from oblivion\");\r\n        tempcounter=tempcounter2+_rolling-1;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n      else\r\n      {\r\n        tempcounter=tempcounter2+_rolling;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n\r\n    },\r\n\r\n    RollDice:function()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2=this.getRandom(1,7);\r\n\r\n        // var Dice1=this.getRandom(8,25);\r\n        // var Dice2=this.getRandom(8,25);\r\n\r\n        DiceRoll=Dice1+Dice2;\r\n        //this.TempCheckSpace(DiceRoll);\r\n        console.log(\"dice number: \"+DiceRoll);\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3,DiceRoll); \r\n    },\r\n\r\n    RollOneDice()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        return Dice1;\r\n    },\r\n\r\n    RollTwoDices()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2=this.getRandom(1,7);\r\n        return (Dice1+Dice2);\r\n    },\r\n\r\n    callUponCard()\r\n    {\r\n        var _spaceID=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        if(_spaceID!=6 && _spaceID!=7) //6 menas payday and 7 means double payday\r\n        {\r\n            var RandomCard=this.getRandom(0,15);\r\n            \r\n            //for testing only\r\n            if(_spaceID==2) //landed on some big buseinss\r\n            {\r\n                var valueIndex=[0,1,7,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }else if(_spaceID==5) //landed on some losses cards\r\n            {\r\n                var valueIndex=[0,5,6,2];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n            else if(_spaceID==3) //landed on some marketing cards\r\n            {\r\n                var valueIndex=[0,7,3,8,13,9];\r\n                var index=this.getRandom(0,6);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            else if(_spaceID==1) //landed on some marketing cards\r\n            {\r\n                var valueIndex=[0,1,6,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            IsTweening=false;\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {    \r\n                var SendingData={\"randomCard\":RandomCard,\"counter\":RollCounter};    \r\n                this.RaiseEventForCard(SendingData);\r\n            }\r\n            else\r\n            {\r\n                this.DisplayCardOnOthers();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            IsTweening=false;\r\n            console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n            this.RaiseEventTurnComplete();\r\n        }\r\n    },\r\n\r\n    CallGameComplete()\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            var _playerIndex=this.TurnNumber;\r\n            if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n            {\r\n                this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                var loanAmount=0;\r\n                for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                    } \r\n                }\r\n\r\n                var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                var HMCash=0;\r\n                if(HMAmount==1)\r\n                    HMCash=60000;\r\n                else if(HMAmount==2)\r\n                    HMCash=25000+60000;\r\n                else if(HMAmount==3)\r\n                    HMCash=25000+25000+60000;\r\n\r\n                var TotalAssets=_cash+BMCash+HMCash-loanAmount;\r\n\r\n                this.PlayerGameInfo[this.TurnNumber].TotalScore=TotalAssets;\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n                \r\n            }\r\n        }\r\n    },\r\n\r\n   RaiseEventForGameComplete(_data)\r\n   {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6,_data);\r\n   },\r\n\r\n   SyncGameOver(_UID)\r\n   {\r\n    var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    console.log(_UID);\r\n    console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver=true;\r\n\r\n    if(MyData.customProperties.PlayerSessionData.PlayerUID==_UID)\r\n    {\r\n        //you won\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n            \"Congrats! your cash is highest, you have won the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n            \"Game will be restarted automatcally after 15 seconds\",\r\n            15000\r\n        );\r\n    }\r\n    else\r\n    {\r\n        //you lose\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n            \"unfortunately you have lost the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n            \"Game will be restarted automatcally after 15 seconds\",\r\n            15000\r\n        );\r\n    }\r\n\r\n    setTimeout(() => {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n    }, 15060);\r\n\r\n   },\r\n\r\n    StartDiceRoll:function()\r\n    {\r\n        if(RollCounter>=GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length)\r\n        {\r\n            console.log(\"Gameover\");\r\n            isGameOver=true;\r\n            this.ZoomCameraOut();\r\n\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n            {\r\n\r\n                this.CallGameComplete();\r\n                var playercompleted=0;\r\n\r\n                var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(MainSessionData[index].customProperties.PlayerSessionData.isGameFinished)\r\n                    {\r\n                        playercompleted++;\r\n                    }\r\n                }\r\n        \r\n            \r\n                if(playercompleted==this.PlayerGameInfo.length)\r\n                {\r\n                    var max=0;\r\n                    var SelectedInd=0;\r\n                    var SessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                    for (let index = 0; index < SessionData.length; index++) {\r\n                        var _value = SessionData[index].customProperties.PlayerSessionData.TotalScore;\r\n\r\n                        if(_value > max)\r\n                        {\r\n                            SelectedInd=index;\r\n                            max=_value;\r\n                        }\r\n                    }\r\n\r\n                    console.log(\"game won by player id: \"+SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                \r\n\r\n                    this.RaiseEventForGameComplete(SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                    //game completed on all systems\r\n                }else\r\n                {\r\n                    IsTweening=false;\r\n                    this.ChangeTurn();\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            DiceTemp=DiceTemp+1; \r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    TweenCamera: function (_pos, isZoom,time) {   \r\n        cc.tween(this.CameraNode)\r\n        .to(time, { position: cc.v2(_pos.x, _pos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(isZoom)\r\n            this.ZoomCameraIn();\r\n        else\r\n            this.ZoomCameraOut();\r\n        })\r\n        .start();\r\n    },\r\n\r\n    ZoomCameraIn () {\r\n        setTimeout(() => {\r\n             if(this.Camera.zoomRatio<2)\r\n             {\r\n                this.Camera.zoomRatio=this.Camera.zoomRatio+0.03;\r\n                this.ZoomCameraIn();\r\n             }\r\n             else\r\n             {\r\n                this.Camera.zoomRatio=2;\r\n                this.isCameraZooming=true;\r\n                this.StartDiceRoll();\r\n             }\r\n          }, 10);\r\n    },\r\n\r\n    ZoomCameraOut () {\r\n        setTimeout(() => {\r\n            if(this.Camera.zoomRatio>=1)\r\n            {\r\n               this.isCameraZooming=false;\r\n               this.Camera.zoomRatio=this.Camera.zoomRatio-0.03;\r\n               this.ZoomCameraOut();\r\n            }\r\n            else\r\n            {\r\n                this.CameraNode.position=cc.Vec2(0,0);\r\n                this.Camera.zoomRatio=1;\r\n\r\n                //GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n                \r\n                if(!isGameOver)\r\n                {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                        PassedPayDay=true;\r\n                    \r\n                    if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==7)\r\n                        DoublePayDay=true;\r\n                     \r\n                    if(PassedPayDay && !DoublePayDay && !NextTurnDoublePay)\r\n                    {\r\n                        NextTurnDoublePay=false;\r\n                        PassedPayDay=false;\r\n                        DoublePayDay=false;\r\n                        this.ProcessPayDay_TurnDecision(false);\r\n                    }\r\n                    else if( (PassedPayDay && DoublePayDay) || (PassedPayDay && NextTurnDoublePay))\r\n                    {\r\n                        NextTurnDoublePay=false;\r\n                        PassedPayDay=false;\r\n                        DoublePayDay=false;\r\n                        this.ProcessPayDay_TurnDecision(true);\r\n                        \r\n                    }\r\n                    else\r\n                    {\r\n                        this.callUponCard();\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.callUponCard();\r\n                }\r\n            }\r\n            }\r\n         }, 10);\r\n         \r\n    },\r\n\r\n    TweenPlayer: function (Node,ToPos) {\r\n        cc.tween(Node)\r\n        .to(0.4, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(DiceTemp<DiceRoll)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                    PassedPayDay=true;\r\n                \r\n                if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==7)\r\n                    DoublePayDay=true;\r\n            }\r\n\r\n            if(RollCounter==12)\r\n                RollCounter=RollCounter+21;  \r\n            else\r\n                RollCounter=RollCounter+1;\r\n\r\n            //DiceTemp=DiceTemp+1; \r\n            console.log(DiceTemp+\" \"+RollCounter);\r\n            \r\n            this.StartDiceRoll();\r\n            //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n           \r\n        }\r\n        else\r\n        {\r\n            var _newpos=cc.Vec2(0,0);\r\n            this.TweenCamera(_newpos,false,0.6); //zoomout\r\n        }\r\n\r\n        })\r\n        .start();\r\n    },\r\n\r\n    //rules implmentation during turn (turn decisions)\r\n\r\n    TogglePayDay(_st1,_St2)\r\n    {\r\n        PassedPayDay=_st1;\r\n        DoublePayDay=_St2;\r\n    },\r\n\r\n    ExpandBusiness_TurnDecision(amount,_index,_locationName)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].Cash>=amount)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].Cash=this.PlayerGameInfo[this.TurnNumber].Cash-amount;\r\n            this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount=this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount+1;\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\",1000);\r\n            setTimeout(() => {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n            }, 1200);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \"+amount);\r\n        }\r\n\r\n    },\r\n\r\n    GenerateExpandBusiness_Prefabs_TurnDecision()\r\n    {\r\n        BusinessLocationNodes=[];\r\n\r\n        console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n        for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n            if(parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType)==2) //this means there is brick and mortar in list\r\n            {\r\n                var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n                node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n                node.getComponent('ExpandBusinessHandler').SetBusinessIndex(i);\r\n                node.getComponent('ExpandBusinessHandler').SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n                node.getComponent('ExpandBusinessHandler').ResetEditBox();\r\n                BusinessLocationNodes.push(node);\r\n            } \r\n        }\r\n        console.log(BusinessLocationNodes);\r\n        return BusinessLocationNodes.length;\r\n    },\r\n\r\n    DestroyGeneratedNodes()\r\n    {\r\n        for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n            BusinessLocationNodes[index].destroy();\r\n        }\r\n\r\n        BusinessLocationNodes=[];\r\n    },\r\n\r\n    UpdateStocks_TurnDecision(_name,_ShareAmount,_isAdding)\r\n    {\r\n        if(_isAdding)\r\n        {\r\n            var _stock=new StockInfo();\r\n            _stock.BusinessName=_name;\r\n            _stock.ShareAmount=_ShareAmount;\r\n\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n        }\r\n    },\r\n\r\n    ProcessPayDay_TurnDecision(_isDoublePayDay=false)\r\n    {\r\n        if(SkipNextPayday) //if previously skip payday was stored by any card\r\n        {\r\n            SkipNextPayday=false;\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\",1600);\r\n            setTimeout(() => {\r\n                this.callUponCard();\r\n            }, 1650);\r\n        }\r\n        else\r\n        {\r\n            var _title=\"\";\r\n\r\n            if(_isDoublePayDay)\r\n                _title=\"DoublePayDay\";\r\n            else\r\n                _title=\"PayDay\";\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title,_isDoublePayDay,SkipHMNextPayday,SkipBMNextPayday);\r\n        }\r\n    },\r\n\r\n//#endregion\r\n   \r\n    //#region Cards Rules\r\n    ToggleDoublePayNextTurn(_state)\r\n    {\r\n        NextTurnDoublePay=_state;\r\n    },\r\n\r\n    ToggleSkipNextTurn(_state)\r\n    {\r\n        SkipNextTurn=_state;\r\n    },\r\n\r\n    ToggleSkipPayDay_Whole(_state)\r\n    {\r\n        SkipNextPayday=_state;\r\n    },\r\n\r\n    ToggleSkipPayDay_HomeBased(_state)\r\n    {\r\n        SkipHMNextPayday=_state;\r\n    },\r\n\r\n    ToggleSkipPayDay_BrickAndMortar(_state)\r\n    {\r\n        SkipBMNextPayday=_state;\r\n    },\r\n\r\n    LoseAllMarketingMoney()\r\n    {\r\n        var _loseAmount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _loseAmount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n        }\r\n        else\r\n        {\r\n            _loseAmount=0;\r\n        }\r\n\r\n        return _loseAmount\r\n    },\r\n\r\n    MultiplyMarketingMoney(_multiplier)\r\n    {\r\n        var _amountIncreased=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _amountIncreased=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_multiplier;\r\n        }\r\n        else\r\n        {\r\n            _amountIncreased=0;\r\n        }\r\n\r\n        return _amountIncreased\r\n    },\r\n\r\n    GetMarketingMoney(_profit)\r\n    {\r\n        var _amount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _profit=(_profit/100);\r\n            _amount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_profit;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n            this.PlayerGameInfo[this.TurnNumber].Cash+=_amount;\r\n        }\r\n        else\r\n        {\r\n            _amount=0;\r\n        }\r\n\r\n        return _amount\r\n    },\r\n\r\n\r\n    //#endregion\r\n    //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports  = GameManager;\r\n//#endregion"]}