{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","LocationsName","LoanTaken","LoanAmount","ctor","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","PlayerRollCounter","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","GameManager","Component","PlayerGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","statics","Instance","onLoad","TurnNumber","TurnCompleted","CheckReferences","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","Get_MultiplayerController","CheckSpectate","console","log","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","SyncDataToPlayerGameInfo","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","AssignPlayerGameUI","index","length","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","MaxPlayers","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","PhotonActor","customProperties","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","DisplayCardOnOthers","OnLandedOnSpace","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","TurnHandler","_turn","setTimeout","ToggleDecision_TurnDecision","PlayerInfo","RoomActors","_ind","MainSessionData","MyData","_counter","PlayerSessionData","StartTurn","EnablePlayerNodes","SetName","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","myRoomActorsArray","error","PrintDiceValue_TurnDecision","_pos","TweenCamera","RollDice","Dice1","getRandom","Dice2","RollOneDice","RollTwoDices","callUponCard","_spaceID","parseInt","SpaceData","SpacesType","SendingData","StartDiceRoll","ZoomCameraOut","ShowToast","TweenPlayer","min","max","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","ProcessPayDay_TurnDecision","ToPos","_newpos","ExpandBusiness_TurnDecision","amount","_locationName","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","_title","AssignData_PayDay","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n    None:0,\r\n    HomeBased: 1,                   //a business that you operate out of your home\r\n    brickAndmortar: 2               //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n    name: \"BusinessInfo\",\r\nproperties: { \r\n    Name: \"BusinessData\",\r\n    BusinessType:\r\n   {\r\n       displayName:\"Mode\",\r\n       type: EnumBusinessType,\r\n       default: EnumBusinessType.None,\r\n       serializable: true,\r\n       tooltip:\"Business catogory for players\",}, \r\n    BusinessTypeDescription:\r\n   {\r\n       displayName: \"Type\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Type (by name) of business player is opening\",},\r\n    BusinessName:\r\n   {\r\n       displayName: \"Name\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Name of the business player is opening\",},\r\n     Amount:\r\n       {\r\n           displayName: \"Amount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"balance of business\",},\r\n      IsPartnership:\r\n       {\r\n           displayName: \"IsPartnership\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has done partnership with someone with current business\",},\r\n       PartnerID:\r\n           {\r\n               displayName:\"PartnerID\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n               tooltip:\"ID of the partner with whom player has formed partnership\",},\r\n        LocationsName:\r\n           {\r\n               displayName:\"LocationsName\",\r\n               type: [cc.Text],\r\n               default: [],\r\n               serializable: true,\r\n               tooltip:\"if player owns brick and mortar he/she can expand to new location\",},\r\n        LoanTaken:\r\n           {\r\n               displayName:\"LoanTaken\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n        LoanAmount:\r\n           {\r\n               displayName:\"LoanAmount\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n    name: \"StockInfo\",\r\nproperties: { \r\n    Name: \"StockData\",\r\n    BusinessName:\r\n   {\r\n       displayName:\"BusinessName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the business in which stocks will be held\",}, \r\n    ShareAmount:\r\n   {\r\n       displayName: \"ShareAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip: \"Share amount of the stock\",},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n    name:\"PlayerData\",\r\nproperties: { \r\n    PlayerName:\r\n   {\r\n       displayName:\"PlayerName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the player\",},\r\n    PlayerUID:\r\n   {\r\n       displayName:\"PlayerUID\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"ID of the player\",},\r\n    AvatarID:\r\n       {\r\n           displayName: \"AvatarID\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"id reference for player avatar selection\",},\r\n    IsBot:\r\n       {\r\n           displayName: \"IsBot\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if current player is bot\",}, \r\n    NoOfBusiness:\r\n   {\r\n       displayName:\"Business\",\r\n       type: [BusinessInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of business a player can own\",}, \r\n    HomeBasedAmount:\r\n   {\r\n       displayName:\"HomeBasedAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of home based business a player owns\",}, \r\n    BrickAndMortarAmount:\r\n   {\r\n       displayName:\"BrickAndMortarAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of brick and mortar business a player owns\",}, \r\n    TotalLocationsAmount:\r\n   {\r\n       displayName:\"TotalLocationsAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of locations of all brick and mortar businessess\",}, \r\n    NoOfStocks:\r\n   {\r\n       displayName:\"Stocks\",\r\n       type: [StockInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of stock a player owns\",}, \r\n    Cash:\r\n       {\r\n           displayName: \"PlayerCash\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of cash player owns\",},\r\n    GoldCount:\r\n       {\r\n           displayName: \"GoldCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of gold a player owns\",},\r\n    StockCount:\r\n       {\r\n           displayName: \"StockCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of stocks a player owns\",},\r\n    LoanTaken:\r\n       {\r\n           displayName: \"LoanTaken\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has taken loan from bank or not\",},\r\n     LoanAmount:\r\n       {\r\n           displayName: \"LoanAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of loan taken from the bank\",},\r\n    MarketingAmount:\r\n       {\r\n           displayName: \"MarketingAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"marketing amount a player owns\",},\r\n    LawyerStatus:\r\n       {\r\n           displayName: \"LawyerStatus\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has hired a lawyer or not\",},\r\n    IsBankrupt:\r\n       {\r\n           displayName: \"IsBankrupt\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has been Bankrupted or not\",},\r\n    PlayerRollCounter:\r\n       {\r\n           displayName: \"PlayerRollCounter\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"integer to store roll countor for player\",},\r\n},\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter=0;\r\nvar DiceTemp=0;\r\nvar DiceRoll=0;\r\nvar IsTweening=false;\r\nvar GamePlayReferenceManager=null;\r\nvar TurnCheckArray=[];\r\nvar BusinessLocationNodes=[];\r\nvar PassedPayDay=false;\r\nvar DoublePayDay=false;\r\nvar GameManager=cc.Class({\r\n    name:\"GameManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PlayerGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n        PlayerNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for player\",},    \r\n        CameraNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for camera\",},    \r\n        AllPlayerUI: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of ui of all players\",},      \r\n        AllPlayerNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of node of all players inside gameplay\",},   \r\n        StartLocationNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of attay of locations\",},   \r\n    },\r\n    statics: {\r\n        PlayerData: PlayerData,\r\n        BusinessInfo:BusinessInfo,\r\n        EnumBusinessType:EnumBusinessType,\r\n        Instance:null\r\n    },\r\n\r\n    //#region All Functions of GameManager\r\n    \r\n    /**\r\n    @summary called when instance of class is created\r\n    @method onLoad\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    onLoad () {\r\n        GameManager.Instance=this;\r\n        this.TurnNumber=0;\r\n        this.TurnCompleted=false;\r\n        TurnCheckArray=[];\r\n        this.CheckReferences();\r\n        this.Init_GameManager();   \r\n        \r\n        this.RandomCardIndex=0;\r\n        this.CardCounter=0;\r\n        this.CardDisplayed=false;\r\n    },\r\n\r\n    /**\r\n    @summary called to assign reference of required classes\r\n    @method CheckReferences\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    /**\r\n    @summary initial gamemanager essetials\r\n    @method Init_GameManager\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    Init_GameManager () {\r\n        this.Camera=this.CameraNode.getComponent(cc.Camera);\r\n        this.isCameraZooming=false;\r\n        this.PlayerGameInfo=[];\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;  \r\n\r\n        //if joined player is spectate\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate()==true)\r\n        {\r\n            console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n            //if inital setup has been done and game is under way\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\")==true)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n                this.PlayerGameInfo=AllData;\r\n\r\n                console.log(this.PlayerGameInfo);\r\n\r\n                this.SyncDataToPlayerGameInfo(0);\r\n                this.SyncAllData_SpectateManager();\r\n                this.TurnNumber=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n                this.UpdateGameUI(true,this.TurnNumber);            \r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true);\r\n        }\r\n    },\r\n\r\n    //#region public functions to get data (accessible from other classes)\r\n    GetTurnNumber () {\r\n        return this.TurnNumber;\r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region SpectateMode Code\r\n\r\n    SyncAllData_SpectateManager()\r\n    {\r\n        this.AssignPlayerGameUI();\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n            this.AllPlayerNodes[index].setPosition(_toPos.x,_toPos.y);\r\n        }\r\n\r\n        console.log(\"synced playernodes\");\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    CheckTurnOnSpectateLeave_SpectateManager()\r\n    {\r\n      var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //#endregion\r\n\r\n\r\n   //#region functions related to Turn Mechanism\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n    @method RaiseEventForCard\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventForCard(_data)\r\n  {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5,_data);\r\n  },\r\n\r\n\r\n  DisplayCardOnOthers()\r\n  {\r\n    if(!this.CardDisplayed)\r\n    {\r\n        this.CardDisplayed=true;\r\n        GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,this.RandomCardIndex);\r\n    }\r\n  },\r\n\r\n  ResetCardDisplay()\r\n  {\r\n    this.CardDisplayed=false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data)\r\n  {\r\n\r\n    this.CheckReferences();\r\n    console.log(_data);\r\n\r\n    var RandomCard=_data.randomCard;\r\n    var counter=_data.counter;\r\n\r\n    this.RandomCardIndex=RandomCard;\r\n    this.CardCounter=counter;\r\n\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        }\r\n    else\r\n        {\r\n            if(IsTweening==false && this.CardDisplayed==false)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,RandomCard);\r\n                this.CardDisplayed=true;\r\n            }\r\n        }\r\n  },\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n    @method RaiseEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventTurnComplete()\r\n  {\r\n    if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n    {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n    @method ReceiveEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  ReceiveEventTurnComplete(_uid)\r\n  {\r\n      if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n      {\r\n      console.log(TurnCheckArray.length);\r\n\r\n      if(TurnCheckArray.length==0)\r\n            TurnCheckArray.push(_uid); \r\n\r\n      var ArrayLength=TurnCheckArray.length;\r\n      var IDFound=false;\r\n      for (let index = 0; index < ArrayLength; index++) {\r\n            if(TurnCheckArray[index]==_uid)\r\n               IDFound=true;\r\n      }\r\n\r\n      if(!IDFound)\r\n      {\r\n        TurnCheckArray.push(_uid);\r\n      }\r\n      console.log(TurnCheckArray);\r\n      console.log(TurnCheckArray.length);\r\n\r\n     // var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      var TotalConnectedPlayers=this.PlayerGameInfo.length;\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n   /**\r\n    @summary called when dice animation is played on all players\r\n    @method ChangeTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    ChangeTurn()\r\n    {\r\n        if(this.TurnNumber<this.PlayerGameInfo.length-1)\r\n            this.TurnNumber=this.TurnNumber+1;\r\n        else\r\n            this.TurnNumber=0;\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n    @method TurnHandler\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    TurnHandler(_turn)\r\n    {\r\n        \r\n        if(IsTweening) //check if animation of turn being played on other players \r\n        {\r\n            setTimeout(() => {\r\n                this.TurnHandler(_turn);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            \r\n            this.TurnNumber=_turn;\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                setTimeout(() => {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                }, 1000);\r\n                console.log(\"its your turn \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n\r\n            this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            console.log(\"Turn Of: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            console.log(this.AllPlayerUI[this.TurnNumber].getComponent('PlayerProfileManager').PlayerInfo);\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n\r\n            //force sync spectator after completion of eaach turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n            {\r\n                this.SyncAllData_SpectateManager();\r\n            }\r\n        }\r\n    },\r\n\r\n    SyncDataToPlayerGameInfo(_ind)\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        var _counter=_ind;\r\n        console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        if(this.PlayerGameInfo[_counter].PlayerUID!=MyData.customProperties.PlayerSessionData.PlayerUID) //dont update my own data\r\n        {\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(this.PlayerGameInfo[_counter].PlayerUID==MainSessionData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        this.PlayerGameInfo[_counter]=MainSessionData[index].customProperties.PlayerSessionData;\r\n                        \r\n                        if(_counter<this.PlayerGameInfo.length-1)\r\n                        {\r\n                            _counter++;\r\n                            console.log(\"adding counter: \"+_counter);\r\n                            this.SyncDataToPlayerGameInfo(_counter);\r\n                        }\r\n                        else{\r\n                            console.log(this.PlayerGameInfo);\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        else\r\n            {\r\n                if(_counter<this.PlayerGameInfo.length-1)\r\n                    {\r\n                        _counter++;\r\n                        console.log(\"adding counter: \"+_counter);\r\n                        this.SyncDataToPlayerGameInfo(_counter);\r\n                    }\r\n                else{\r\n                        console.log(this.PlayerGameInfo);\r\n                    }\r\n            }\r\n    },\r\n\r\n    \r\n\r\n    /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    StartTurn()\r\n    {\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        this.TurnNumber=0; //reseting the turn number on start of the game\r\n\r\n        //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n    //#endregion\r\n\r\n     /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    AssignPlayerGameUI()\r\n    {\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerUI[index].active=true;\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[index];\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').SetName(this.PlayerGameInfo[index].PlayerName);\r\n        }\r\n    },\r\n\r\n    UpdateGameUI(_toggleHighlight,_index)\r\n    {\r\n        if(_toggleHighlight)\r\n        {\r\n            this.AllPlayerUI[_index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[_index];\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n                if(_index==index)\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(true);\r\n                }\r\n                else\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(false);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    EnablePlayerNodes()\r\n    {\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            if(this.PlayerGameInfo[index].HomeBasedAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n            else if(this.PlayerGameInfo[index].BrickAndMortarAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    SetFollowCameraProperties()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        this.CameraNode.position=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n   \r\n        let ratio=targetPos.y/cc.winSize.height;\r\n        this.Camera.zoomRatio=2;\r\n    },\r\n    lateUpdate () {\r\n        if(this.isCameraZooming)    \r\n            this.SetFollowCameraProperties();\r\n    },\r\n\r\n    syncDiceRoll(_roll)\r\n    {\r\n        IsTweening=true;\r\n        this.CardDisplayed=false;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==0)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==1)\r\n            {\r\n                RollCounter=0;\r\n                console.error(RollCounter);\r\n            }\r\n            else\r\n            {\r\n                RollCounter=13;\r\n                console.error(RollCounter);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==12)\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+21;  \r\n            else\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+1;\r\n\r\n            RollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n            console.error(RollCounter-1);\r\n        }\r\n        \r\n\r\n        DiceRoll=_roll;\r\n        DiceTemp=0;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        this.TweenCamera(_pos,true,0.4);   \r\n    },\r\n\r\n    RollDice:function()\r\n    {\r\n         var Dice1=this.getRandom(1,7);\r\n         var Dice2=this.getRandom(1,7);\r\n         DiceRoll=Dice1+Dice2;\r\n        //DiceRoll=59;\r\n        console.log(\"dice number: \"+DiceRoll);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3,DiceRoll); \r\n    },\r\n\r\n    RollOneDice()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        return Dice1;\r\n    },\r\n\r\n    RollTwoDices()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2=this.getRandom(1,7);\r\n        return (Dice1+Dice2);\r\n    },\r\n\r\n    callUponCard()\r\n    {\r\n        var _spaceID=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        if(_spaceID!=6 && _spaceID!=7) //6 menas payday and 7 means double payday\r\n        {\r\n            var RandomCard=this.getRandom(0,15);\r\n            IsTweening=false;\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {    \r\n                var SendingData={\"randomCard\":RandomCard,\"counter\":RollCounter};    \r\n                this.RaiseEventForCard(SendingData);\r\n            }\r\n            else\r\n            {\r\n                this.DisplayCardOnOthers();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            IsTweening=false;\r\n            console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n            this.RaiseEventTurnComplete();\r\n        }\r\n    },\r\n\r\n    StartDiceRoll:function()\r\n    {\r\n        if(RollCounter>=GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length)\r\n        {\r\n            console.log(\"Gameover\");\r\n            this.ZoomCameraOut();\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, restart to play again.\")\r\n        }\r\n        else\r\n        {\r\n            DiceTemp=DiceTemp+1; \r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n    TweenCamera: function (_pos, isZoom,time) {   \r\n        cc.tween(this.CameraNode)\r\n        .to(time, { position: cc.v2(_pos.x, _pos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(isZoom)\r\n            this.ZoomCameraIn();\r\n        else\r\n            this.ZoomCameraOut();\r\n        })\r\n        .start();\r\n    },\r\n    ZoomCameraIn () {\r\n        setTimeout(() => {\r\n             if(this.Camera.zoomRatio<2)\r\n             {\r\n                this.Camera.zoomRatio=this.Camera.zoomRatio+0.03;\r\n                this.ZoomCameraIn();\r\n             }\r\n             else\r\n             {\r\n                this.Camera.zoomRatio=2;\r\n                this.isCameraZooming=true;\r\n                this.StartDiceRoll();\r\n             }\r\n          }, 10);\r\n    },\r\n    ZoomCameraOut () {\r\n        setTimeout(() => {\r\n            if(this.Camera.zoomRatio>=1)\r\n            {\r\n               this.isCameraZooming=false;\r\n               this.Camera.zoomRatio=this.Camera.zoomRatio-0.03;\r\n               this.ZoomCameraOut();\r\n            }\r\n            else\r\n            {\r\n                this.CameraNode.position=cc.Vec2(0,0);\r\n                this.Camera.zoomRatio=1;\r\n\r\n                //GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n                \r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                        PassedPayDay=true;\r\n                    \r\n                    if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==7)\r\n                        DoublePayDay=true;\r\n                     \r\n                    if(PassedPayDay && !DoublePayDay)\r\n                    {\r\n                        PassedPayDay=false;\r\n                        this.ProcessPayDay_TurnDecision(false);\r\n                    }\r\n                    else if(DoublePayDay)\r\n                    {\r\n                        PassedPayDay=false;\r\n                        DoublePayDay=false;\r\n                        this.ProcessPayDay_TurnDecision(true);\r\n                        \r\n                    }\r\n                    else\r\n                    {\r\n                        this.callUponCard();\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.callUponCard();\r\n                }\r\n            }\r\n         }, 10);\r\n    },\r\n    TweenPlayer: function (Node,ToPos) {\r\n        cc.tween(Node)\r\n        .to(0.4, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(DiceTemp<DiceRoll)\r\n        {\r\n            if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                PassedPayDay=true;\r\n            \r\n            if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==7)\r\n                DoublePayDay=true;\r\n\r\n            if(RollCounter==12)\r\n                RollCounter=RollCounter+21;  \r\n            else\r\n                RollCounter=RollCounter+1;\r\n\r\n            //DiceTemp=DiceTemp+1; \r\n            console.log(DiceTemp+\" \"+RollCounter);\r\n            \r\n            this.StartDiceRoll();\r\n            //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n           \r\n        }\r\n        else\r\n        {\r\n            var _newpos=cc.Vec2(0,0);\r\n            this.TweenCamera(_newpos,false,0.6); //zoomout\r\n        }\r\n\r\n        })\r\n        .start();\r\n    },\r\n\r\n\r\n    //rules implmentation during turn (turn decisions)\r\n    ExpandBusiness_TurnDecision(amount,_index,_locationName)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].Cash>=amount)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].Cash=this.PlayerGameInfo[this.TurnNumber].Cash-amount;\r\n            this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount=this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount+1;\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\",1000);\r\n            setTimeout(() => {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n            }, 1200);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \"+amount);\r\n        }\r\n\r\n    },\r\n\r\n    GenerateExpandBusiness_Prefabs_TurnDecision()\r\n    {\r\n        BusinessLocationNodes=[];\r\n\r\n        console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n        for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n            if(parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType)==2) //this means there is brick and mortar in list\r\n            {\r\n                var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n                node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n                node.getComponent('ExpandBusinessHandler').SetBusinessIndex(i);\r\n                node.getComponent('ExpandBusinessHandler').SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n                node.getComponent('ExpandBusinessHandler').ResetEditBox();\r\n                BusinessLocationNodes.push(node);\r\n            } \r\n        }\r\n        console.log(BusinessLocationNodes);\r\n        return BusinessLocationNodes.length;\r\n    },\r\n\r\n    DestroyGeneratedNodes()\r\n    {\r\n        for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n            BusinessLocationNodes[index].destroy();\r\n        }\r\n\r\n        BusinessLocationNodes=[];\r\n    },\r\n\r\n    UpdateStocks_TurnDecision(_name,_ShareAmount,_isAdding)\r\n    {\r\n        if(_isAdding)\r\n        {\r\n            var _stock=new StockInfo();\r\n            _stock.BusinessName=_name;\r\n            _stock.ShareAmount=_ShareAmount;\r\n\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n        }\r\n    },\r\n\r\n    ProcessPayDay_TurnDecision(_isDoublePayDay=false)\r\n    {\r\n        var _title=\"\";\r\n\r\n        if(_isDoublePayDay)\r\n            _title=\"DoublePayDay\";\r\n        else\r\n            _title=\"PayDay\";\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title,_isDoublePayDay);\r\n    },\r\n    //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports  = GameManager;\r\n//#endregion"]}