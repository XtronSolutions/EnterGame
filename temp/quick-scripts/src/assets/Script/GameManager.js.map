{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["_isTest","_diceinput1","_diceinput2","PreviousDiceRoll1","PreviousDiceRoll2","PreviousDiceRoll3","PreviousDiceRoll4","PreviousDiceRoll5","userGameOver","BotGameOver","TotalCounterReached","PassedPayDayCounter","DoublePayDayCounter","NoCardFunctionality","PlayerLeft","ForceChangeTimeOut","GameCompleted","CorrectAnswer","EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","PartnerName","LocationsName","LoanTaken","LoanAmount","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","BankruptAmount","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","TotalHBCash","TotalBMCash","TotalGoldCash","TotalLoanBalance","TotalStocksCash","GameOver","IsActive","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","Backspaces","isGameOver","OneQuestionIndex","OneQuestions","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","BotGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","SelectedMode","statics","Instance","SetPlayerLeft","_state","ResetAllVariables","InputTestDice1","_val","InputTestDice2","onLoad","TurnNumber","TurnCompleted","CheckReferences","Get_MultiplayerController","GetSelectedMode","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","CheckSpectate","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","GetMyIndex","myIndex","_actor","PhotonActor","customProperties","PlayerSessionData","_allActors","index","SyncDataToPlayerGameInfo","AssignPlayerGameUI","EnablePlayerNodes","CloseInitialScreen_SpectateMode","console","log","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","_lastIndex","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","j","ResetSomeValues","ChangeTurnForcefully","UpdateVisualData","RefreshDataAutomatically","TurnHandler","_turn","_isMaster","CheckCurrentActiveMasterClient","_playerMatched","ToggleTurnProgress","ToggleDecision_TurnDecision","ResetTurnVariable","RollDice","DiceRollScreen","PlayerInfo","myRoomActorsArray","ShowToast","ToggleSkipNextTurn","_ind","MainSessionData","MyData","_counter","StartTurn","ReceiveBankruptData","_isBankrupted","bankrupted","turn","_playerData","PlayerDataMain","StartTurnAfterBankrupt","_randomIndex","getRandom","SetName","SetAvatar","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","children","Sprite","spriteFrame","AvatarSprites","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","error","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","Dice1","Dice2","_newRoll","RollOneDice","RollTwoDices","callUponCard","_spaceID","valueIndex","StartDiceRoll","SendingData","isBot","completeCardTurn","AllPlayersGameCompleted","CallGameComplete","_isBot","_forceGameOver","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","_gold","_stocks","_diceRandom","OnceOrShare","GoldCash","StockCash","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","RaiseEventToSyncGameCompleteData","SyncGameOver","_UID","infoText","statusText","DisconnectData","ShowResultScreen","_currentCash","Get_ServerBackend","StudentData","gameCash","_total","toString","_won","gamesWon","UpdateUserData","SyncGameCompleteData","Bot","ZoomCameraOutOnly","max","SelectedInd","SessionData","_value","trace","playercompleted","ZoomCameraOut","TweenPlayer","min","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ProcessPayDay_TurnDecision","ToPos","_newpos","TogglePayDay","_st1","_St2","IncreaseDoublePayDay","ExpandBusiness_TurnDecision","amount","_locationName","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","SetCardFunctionality","SetGivenCash","SetStartAnyBusinessWithoutCash","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","_forSelectedBusiness","_SelectedBusinessIndex","HBAmount","_title","AssignData_PayDay","ToggleSkipPayDay_Whole","Bankrupt_TurnDecision","SendProfit_Partner_TurnDecision","_amount","_uID","ID","ReceiveProfit_Partner_TurnDecision","_iD","_myIndex","ToggleDoublePayNextTurn","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","QuestionPopUp_OtherUser_OneQuestion","_questionRef","Get_QuestionsData","_userID","UserID","_questionIndex","Question","UserIndex","_isVoc","IsVoc","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_Qdata","VocabularyQuestions","EstablishmentQuestions","CorrectOption","_message","Option1","Option2","Option3","Option4","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_myData","_roomData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_SelectOption_OneQuestion","event","_selection","currentTarget","split","RaiseEventDecision_OneQuestion","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","ReceiveEventDecision_OneQuestion","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","ReceiveGoBackSpacesData_spaceFunctionality","_spaces","backspaces","Counter","TweenPlayer_GoBackSpaces","speed","GoBackSpaces_spaceFunctionality","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var _isTest = false;\r\nvar _diceinput1 = \"\";\r\nvar _diceinput2 = \"\";\r\nvar PreviousDiceRoll1 = -1;\r\nvar PreviousDiceRoll2 = -1;\r\n\r\nvar PreviousDiceRoll3 = -1;\r\nvar PreviousDiceRoll4 = -1;\r\n\r\nvar PreviousDiceRoll5 = -1;\r\n\r\nvar userGameOver = false;\r\nvar BotGameOver = false;\r\nvar TotalCounterReached = false;\r\nvar PassedPayDayCounter = 0;\r\nvar DoublePayDayCounter = 0;\r\nvar NoCardFunctionality = false;\r\nvar PlayerLeft = false;\r\nvar ForceChangeTimeOut = null;\r\nvar GameCompleted = false;\r\nvar CorrectAnswer = 0;\r\n//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n  None: 0,\r\n  HomeBased: 1, //a business that you operate out of your home\r\n  brickAndmortar: 2, //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n  name: \"BusinessInfo\",\r\n  properties: {\r\n    Name: \"BusinessData\",\r\n    BusinessType: {\r\n      displayName: \"Mode\",\r\n      type: EnumBusinessType,\r\n      default: EnumBusinessType.None,\r\n      serializable: true,\r\n      tooltip: \"Business catogory for players\",\r\n    },\r\n    BusinessTypeDescription: {\r\n      displayName: \"Type\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"Type (by name) of business player is opening\",\r\n    },\r\n    BusinessName: {\r\n      displayName: \"Name\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"Name of the business player is opening\",\r\n    },\r\n    Amount: {\r\n      displayName: \"Amount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"balance of business\",\r\n    },\r\n    IsPartnership: {\r\n      displayName: \"IsPartnership\",\r\n      default: false,\r\n      typw: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has done partnership with someone with current business\",\r\n    },\r\n    PartnerID: {\r\n      displayName: \"PartnerID\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"ID of the partner with whom player has formed partnership\",\r\n    },\r\n    PartnerName: {\r\n      displayName: \"PartnerName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the partner with whom player has formed partnership\",\r\n    },\r\n    LocationsName: {\r\n      displayName: \"LocationsName\",\r\n      type: [cc.Text],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"if player owns brick and mortar he/she can expand to new location\",\r\n    },\r\n    LoanTaken: {\r\n      displayName: \"LoanTaken\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n  name: \"CardDataFunctionality\",\r\n  properties: {\r\n    NextTurnDoublePay: {\r\n      displayName: \"NextTurnDoublePay\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if its going to be double pay day on next payday for current player\",\r\n    },\r\n    SkipNextTurn: {\r\n      displayName: \"SkipNextTurn\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if turn is going to skipped on next turn for current player\",\r\n    },\r\n    SkipNextPayday: {\r\n      displayName: \"SkipNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday is going to skipped on next payday for current player\",\r\n    },\r\n    SkipHMNextPayday: {\r\n      displayName: \"SkipHMNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday for home based buisiness is going to skipped on next payday for current player\",\r\n    },\r\n    SkipBMNextPayday: {\r\n      displayName: \"SkipBMNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\",\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n  name: \"StockInfo\",\r\n  properties: {\r\n    Name: \"StockData\",\r\n    BusinessName: {\r\n      displayName: \"BusinessName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the business in which stocks will be held\",\r\n    },\r\n    ShareAmount: {\r\n      displayName: \"ShareAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"Share amount of the stock\",\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n  name: \"PlayerData\",\r\n  properties: {\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the player\",\r\n    },\r\n    PlayerUID: {\r\n      displayName: \"PlayerUID\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"ID of the player\",\r\n    },\r\n    AvatarID: {\r\n      displayName: \"AvatarID\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"id reference for player avatar selection\",\r\n    },\r\n    IsBot: {\r\n      displayName: \"IsBot\",\r\n      default: false,\r\n      typw: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if current player is bot\",\r\n    },\r\n    NoOfBusiness: {\r\n      displayName: \"Business\",\r\n      type: [BusinessInfo],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Number of business a player can own\",\r\n    },\r\n    CardFunctionality: {\r\n      displayName: \"CardFunctionality\",\r\n      type: CardDataFunctionality,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"card functionality stored by player\",\r\n    },\r\n    HomeBasedAmount: {\r\n      displayName: \"HomeBasedAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of home based business a player owns\",\r\n    },\r\n    BrickAndMortarAmount: {\r\n      displayName: \"BrickAndMortarAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of brick and mortar business a player owns\",\r\n    },\r\n    TotalLocationsAmount: {\r\n      displayName: \"TotalLocationsAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of locations of all brick and mortar businessess\",\r\n    },\r\n    NoOfStocks: {\r\n      displayName: \"Stocks\",\r\n      type: [StockInfo],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Number of stock a player owns\",\r\n    },\r\n    Cash: {\r\n      displayName: \"PlayerCash\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"Amount of cash player owns\",\r\n    },\r\n    GoldCount: {\r\n      displayName: \"GoldCount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"count of gold a player owns\",\r\n    },\r\n    StockCount: {\r\n      displayName: \"StockCount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"count of stocks a player owns\",\r\n    },\r\n    LoanTaken: {\r\n      displayName: \"LoanTaken\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has taken loan from bank or not\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"Amount of loan taken from the bank\",\r\n    },\r\n    MarketingAmount: {\r\n      displayName: \"MarketingAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"marketing amount a player owns\",\r\n    },\r\n    LawyerStatus: {\r\n      displayName: \"LawyerStatus\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has hired a lawyer or not\",\r\n    },\r\n    IsBankrupt: {\r\n      displayName: \"IsBankrupt\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has been Bankrupted or not\",\r\n    },\r\n    BankruptAmount: {\r\n      displayName: \"BankruptAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"keep track how much time player has been bankrupted\",\r\n    },\r\n    SkippedLoanPayment: {\r\n      displayName: \"SkippedLoanPayment\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has skipped loan payment\",\r\n    },\r\n    PlayerRollCounter: {\r\n      displayName: \"PlayerRollCounter\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"integer to store roll countor for player\",\r\n    },\r\n    InitialCounterAssigned: {\r\n      displayName: \"InitialCounterAssigned\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n    isGameFinished: {\r\n      displayName: \"isGameFinished\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    TotalScore: {\r\n      displayName: \"TotalScore\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalHBCash: {\r\n      displayName: \"TotalHBCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalBMCash: {\r\n      displayName: \"TotalBMCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalGoldCash: {\r\n      displayName: \"TotalGoldCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalLoanBalance: {\r\n      displayName: \"TotalLoanBalance\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalStocksCash: {\r\n      displayName: \"TotalStocksCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    GameOver: {\r\n      displayName: \"GameOver\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    IsActive: {\r\n      displayName: \"IsActive\",\r\n      type: cc.Boolean,\r\n      default: true,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter = 0;\r\nvar DiceTemp = 0;\r\nvar DiceRoll = 0;\r\nvar IsTweening = false;\r\nvar GamePlayReferenceManager = null;\r\nvar TurnCheckArray = [];\r\nvar BusinessLocationNodes = [];\r\n\r\nvar PassedPayDay = false;\r\nvar DoublePayDay = false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay = false;\r\nvar _skipNextTurn = false;\r\nvar _skipNextPayday = false; //skip whole pay day\r\nvar _skipHMNextPayday = false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday = false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived = false;\r\nvar TurnInProgress = false;\r\n\r\nvar Backspaces = 3;\r\nvar isGameOver = false;\r\nvar OneQuestionIndex = -1;\r\nvar OneQuestions = [\"you have skipped loan previous payday?\", \"you have taken any loan?\", \"you have bankrupted ever?\", \"your next turn is going to be skipped?\", \"your next payday is going to be double payday?\"];\r\n\r\nvar CardDisplaySetTimout = null;\r\n\r\nvar GameManager = cc.Class({\r\n  name: \"GameManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    PlayerGameInfo: {\r\n      default: [],\r\n      type: [PlayerData],\r\n      serializable: true,\r\n      tooltip: \"all player's data\",\r\n    },\r\n    BotGameInfo: {\r\n      default: [],\r\n      type: [PlayerData],\r\n      serializable: true,\r\n      tooltip: \"all bot's data\",\r\n    },\r\n    PlayerNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for player\",\r\n    },\r\n    CameraNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for camera\",\r\n    },\r\n    AllPlayerUI: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of ui of all players\",\r\n    },\r\n    AllPlayerNodes: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of node of all players inside gameplay\",\r\n    },\r\n    StartLocationNodes: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of attay of locations\",\r\n    },\r\n    SelectedMode: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"integer reference for game mode 1 means bot and 2 means real players\",\r\n    },\r\n  },\r\n\r\n  statics: {\r\n    PlayerData: PlayerData,\r\n    BusinessInfo: BusinessInfo,\r\n    CardDataFunctionality: CardDataFunctionality,\r\n    EnumBusinessType: EnumBusinessType,\r\n    Instance: null,\r\n  },\r\n\r\n  SetPlayerLeft(_state) {\r\n    PlayerLeft = _state;\r\n  },\r\n\r\n  ResetAllVariables() {\r\n    _diceinput1 = \"\";\r\n    _diceinput2 = \"\";\r\n    PreviousDiceRoll1 = -1;\r\n    PreviousDiceRoll2 = -1;\r\n    PlayerLeft = false;\r\n    PreviousDiceRoll3 = -1;\r\n    PreviousDiceRoll4 = -1;\r\n\r\n    PreviousDiceRoll5 = -1;\r\n    GameCompleted = false;\r\n    userGameOver = false;\r\n    BotGameOver = false;\r\n    CorrectAnswer = 0;\r\n    RollCounter = 0;\r\n    DiceTemp = 0;\r\n    DiceRoll = 0;\r\n    IsTweening = false;\r\n    GamePlayReferenceManager = null;\r\n    TurnCheckArray = [];\r\n    BusinessLocationNodes = [];\r\n    ForceChangeTimeOut = null;\r\n    PassedPayDay = false;\r\n    DoublePayDay = false;\r\n    PassedPayDayCounter = 0;\r\n    DoublePayDayCounter = 0;\r\n\r\n    //cards functionality\r\n    _nextTurnDoublePay = false;\r\n    _skipNextTurn = false;\r\n    _skipNextPayday = false; //skip whole pay day\r\n    _skipHMNextPayday = false; //skip pay day for home based businessess only\r\n    _skipBMNextPayday = false; //skip pay day for brick & mortar businessess only\r\n    CardEventReceived = false;\r\n    TurnInProgress = false;\r\n\r\n    Backspaces = 3;\r\n    isGameOver = false;\r\n    OneQuestionIndex = -1;\r\n    OneQuestions = [\"you have skipped loan previous payday?\", \"you have taken any loan?\", \"you have bankrupted ever?\", \"your next turn is going to be skipped?\", \"your next payday is going to be double payday?\"];\r\n\r\n    CardDisplaySetTimout = null;\r\n    TotalCounterReached = false;\r\n    NoCardFunctionality = false;\r\n  },\r\n\r\n  InputTestDice1(_val) {\r\n    if (_isTest) {\r\n      _diceinput1 = _val;\r\n    }\r\n  },\r\n\r\n  InputTestDice2(_val) {\r\n    if (_isTest) {\r\n      _diceinput2 = _val;\r\n    }\r\n  },\r\n\r\n  //#region All Functions of GameManager\r\n\r\n  /**\r\n    @summary called when instance of class is created\r\n   **/\r\n  onLoad() {\r\n    this.ResetAllVariables();\r\n    GameManager.Instance = this;\r\n    this.TurnNumber = 0;\r\n    this.TurnCompleted = false;\r\n    TurnCheckArray = [];\r\n    this.CheckReferences();\r\n    this.SelectedMode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    this.Init_GameManager();\r\n\r\n    this.RandomCardIndex = 0;\r\n    this.CardCounter = 0;\r\n    this.CardDisplayed = false;\r\n    CardEventReceived = false;\r\n  },\r\n\r\n  /**\r\n    @summary called to assign reference of required classes\r\n   **/\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  /**\r\n    @summary initial gamemanager essetials\r\n   **/\r\n  Init_GameManager() {\r\n    this.Camera = this.CameraNode.getComponent(cc.Camera);\r\n    this.isCameraZooming = false;\r\n    this.PlayerGameInfo = [];\r\n    RollCounter = 0;\r\n    DiceTemp = 0;\r\n    DiceRoll = 0;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //game is being played by real players\r\n      //if joined player is spectate\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == true) {\r\n        //console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n\r\n        //if inital setup has been done and game is under way\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\") == true) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n          var AllData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n          this.PlayerGameInfo = AllData;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = this.PlayerGameInfo.length;\r\n          this.SyncAllData_SpectateManager();\r\n          this.TurnNumber = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n          this.UpdateGameUI(true, this.TurnNumber);\r\n          //console.log(this.PlayerGameInfo);\r\n          //this.SyncDataToPlayerGameInfo(0);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = 8;\r\n          //this.EnablePlayerNodes();\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n        }\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode);\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //game is being played by bot along with one player\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode);\r\n    }\r\n  },\r\n\r\n  //#region public functions to get data (accessible from other classes)\r\n  GetTurnNumber() {\r\n    return this.TurnNumber;\r\n  },\r\n\r\n  /**\r\n    @summary get my index in array of PlayerGameInfo \r\n   **/\r\n  GetMyIndex() {\r\n    var myIndex = 0;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _allActors = this.PlayerGameInfo;\r\n\r\n    for (let index = 0; index < _allActors.length; index++) {\r\n      if (_actor.PlayerUID == _allActors[index].PlayerUID) {\r\n        myIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return myIndex;\r\n  },\r\n  //#endregion\r\n\r\n  //#region SpectateMode Code\r\n\r\n  SyncAllData_SpectateManager() {\r\n    var AllData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n    this.PlayerGameInfo = AllData;\r\n    this.SyncDataToPlayerGameInfo(0);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = this.PlayerGameInfo.length;\r\n    this.AssignPlayerGameUI();\r\n    this.EnablePlayerNodes();\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n    console.log(\"syncing all data for spectate\");\r\n    for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n      if (this.PlayerGameInfo[index].PlayerRollCounter > 0 && this.PlayerGameInfo[index].InitialCounterAssigned == true && !this.PlayerGameInfo[index].isGameFinished) {\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n        this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n        console.log(\"setting pos1\");\r\n      } else {\r\n        console.log(\"player counter: \" + this.PlayerGameInfo[index].PlayerRollCounter);\r\n        console.log(\"Initial Counter Assigned: \" + this.PlayerGameInfo[index].InitialCounterAssigned);\r\n        console.log(\"game finished : \" + this.PlayerGameInfo[index].isGameFinished);\r\n      }\r\n\r\n      if (this.PlayerGameInfo[index].isGameFinished) {\r\n        var _lastIndex = GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length - 1;\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.y);\r\n        this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n        console.log(\"setting pos2\");\r\n      }\r\n    }\r\n\r\n    //console.log(\"synced playernodes\");\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerNodes[index].active = true;\r\n    }\r\n  },\r\n\r\n  CheckTurnOnSpectateLeave_SpectateManager() {\r\n    var TotalConnectedPlayers = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n    if (TurnCheckArray.length == TotalConnectedPlayers) {\r\n      TurnCheckArray = [];\r\n      this.TurnCompleted = true;\r\n\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n        this.ChangeTurn();\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(\"Change Turn is called by: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region functions related to Turn Mechanism and card mechanism\r\n\r\n  /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n   **/\r\n  RaiseEventForCard(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5, _data);\r\n  },\r\n\r\n  ClearDisplayTimeout() {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers() {\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      console.log(\"card event received: \" + CardEventReceived);\r\n      if (CardEventReceived == true) {\r\n        clearTimeout(CardDisplaySetTimout);\r\n        //console.error(this.CardCounter);\r\n        CardEventReceived = false;\r\n        if (!this.CardDisplayed) {\r\n          this.CardDisplayed = true;\r\n          GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(false, this.RandomCardIndex);\r\n        }\r\n      } else {\r\n        CardDisplaySetTimout = setTimeout(() => {\r\n          //check after every 0.5 seconds\r\n          this.DisplayCardOnOthers();\r\n        }, 1000);\r\n      }\r\n    }\r\n  },\r\n\r\n  ResetCardDisplay() {\r\n    this.CardDisplayed = false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data) {\r\n    this.CheckReferences();\r\n    console.log(\"Card Data Received:\");\r\n    console.log(_data);\r\n\r\n    var RandomCard = _data.randomCard;\r\n    var counter = _data.counter;\r\n\r\n    this.RandomCardIndex = RandomCard;\r\n    this.CardCounter = counter;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(true, RandomCard);\r\n      else CardEventReceived = true;\r\n    } else if (this.SelectedMode == 1) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].IsBot == false) GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(true, RandomCard);\r\n      else GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(false, RandomCard, true);\r\n    }\r\n\r\n    // console.error(CardEventReceived);\r\n  },\r\n\r\n  /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n   **/\r\n  RaiseEventTurnComplete() {\r\n    if (this.SelectedMode == 2) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4, GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      console.log(\"raised for turn complete\");\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4, this.PlayerGameInfo[this.TurnNumber].PlayerUID);\r\n    }\r\n  },\r\n\r\n  SyncAllData() {\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", this.PlayerGameInfo, true);\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n   **/\r\n  ReceiveEventTurnComplete(_uid) {\r\n    if (this.SelectedMode == 2) {\r\n      //real players\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        if (TurnCheckArray.length == 0) TurnCheckArray.push(_uid);\r\n\r\n        var ArrayLength = TurnCheckArray.length;\r\n        var IDFound = false;\r\n        for (let index = 0; index < ArrayLength; index++) {\r\n          if (TurnCheckArray[index] == _uid) IDFound = true;\r\n        }\r\n\r\n        if (!IDFound) {\r\n          TurnCheckArray.push(_uid);\r\n        }\r\n\r\n        var TotalConnectedPlayers = 0;\r\n\r\n        for (let j = 0; j < this.PlayerGameInfo.length; j++) {\r\n          if (this.PlayerGameInfo[j].IsActive) TotalConnectedPlayers++;\r\n        }\r\n\r\n        console.log(\"Turn Check: \" + TurnCheckArray.length);\r\n        console.log(\"Total Connected Players: \" + TotalConnectedPlayers);\r\n\r\n        if (TurnCheckArray.length >= TotalConnectedPlayers) {\r\n          TurnCheckArray = [];\r\n          this.TurnCompleted = true;\r\n\r\n          if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n            //this.SyncAllData();\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n          }\r\n        }\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      this.TurnCompleted = true;\r\n      this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n      this.ChangeTurn();\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called when dice animation is played on all players\r\n   **/\r\n  ChangeTurn() {\r\n    if (this.SelectedMode == 2) {\r\n      this.SyncAllData();\r\n    }\r\n\r\n    if (this.TurnNumber < this.PlayerGameInfo.length - 1) this.TurnNumber = this.TurnNumber + 1;\r\n    else this.TurnNumber = 0;\r\n\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2, this.TurnNumber);\r\n  },\r\n\r\n  ResetSomeValues() {\r\n    TurnCheckArray = [];\r\n    this.TurnCompleted = true;\r\n  },\r\n\r\n  ChangeTurnForcefully() {\r\n    if (IsTweening) {\r\n      clearTimeout(ForceChangeTimeOut);\r\n      ForceChangeTimeOut = setTimeout(() => {\r\n        this.ChangeTurnForcefully();\r\n      }, 1000);\r\n    } else {\r\n      clearTimeout(ForceChangeTimeOut);\r\n      this.ChangeTurn();\r\n    }\r\n  },\r\n\r\n  UpdateVisualData() {\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n   **/\r\n  TurnHandler(_turn) {\r\n    if (this.SelectedMode == 2) {\r\n      var _isMaster = GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckCurrentActiveMasterClient();\r\n      if (!this.PlayerGameInfo[_turn].IsActive) {\r\n        if (_isMaster) {\r\n          this.ChangeTurn();\r\n          return;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    //this.ClearDisplayTimeout();\r\n    this.UpdateVisualData();\r\n    console.log(\"Turn: \" + _turn);\r\n    var _playerMatched = false;\r\n    _skipNextTurn = false;\r\n    if (IsTweening) {\r\n      //check if animation of turn being played on other players\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n        IsTweening = false;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        if (!isGameOver) {\r\n          this.TurnHandler(_turn);\r\n        }\r\n      }, 800);\r\n    } else {\r\n      this.TurnNumber = _turn;\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n            this.ToggleTurnProgress(true);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                IsTweening = false;\r\n              }, 1000);\r\n              console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n          }\r\n        } else {\r\n          this.ToggleTurnProgress(false);\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        // console.log(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n        // console.log(this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn);\r\n        // console.log(userGameOver);\r\n        if (this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!userGameOver) {\r\n            this.ToggleTurnProgress(true);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                IsTweening = false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n              }, 1000);\r\n              console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n          }\r\n        } //turn decisions for bot\r\n        else {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!BotGameOver) {\r\n            this.ToggleTurnProgress(false);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                IsTweening = false;\r\n                this.RollDice();\r\n              }, 1000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n      for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      }\r\n\r\n      if (this.SelectedMode == 2) {\r\n        //for real players\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n        console.log(\"Turn Of: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        console.log(this.AllPlayerUI[this.TurnNumber].getComponent(\"PlayerProfileManager\").PlayerInfo);\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray());\r\n        this.SyncDataToPlayerGameInfo(0);\r\n\r\n        //force sync spectator after completion of each turn\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n      }\r\n\r\n      //skip this turn as skip turn has been called before\r\n      if (_playerMatched && _skipNextTurn) {\r\n        IsTweening = false;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\", 1200);\r\n        this.ToggleSkipNextTurn(false);\r\n        this.ChangeTurn();\r\n        this.ToggleTurnProgress(false);\r\n        return;\r\n      }\r\n\r\n      if (_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n        setTimeout(() => {\r\n          IsTweening = false;\r\n          this.ChangeTurn();\r\n          this.ToggleTurnProgress(false);\r\n          return;\r\n        }, 500);\r\n      }\r\n    }\r\n  },\r\n\r\n  SyncDataToPlayerGameInfo(_ind) {\r\n    var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n    var MyData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _counter = _ind;\r\n    // console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n    //  console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n\r\n    for (let index = 0; index < MainSessionData.length; index++) {\r\n      if (this.PlayerGameInfo[_counter].IsActive == false) {\r\n        if (_counter < this.PlayerGameInfo.length - 1) {\r\n          _counter++;\r\n          this.SyncDataToPlayerGameInfo(_counter);\r\n        } else {\r\n          console.log(\"synced Data:\");\r\n          console.log(this.PlayerGameInfo);\r\n        }\r\n      } else {\r\n        if (this.PlayerGameInfo[_counter].PlayerUID == MainSessionData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n          this.PlayerGameInfo[_counter] = MainSessionData[index].customProperties.PlayerSessionData;\r\n\r\n          if (_counter < this.PlayerGameInfo.length - 1) {\r\n            _counter++;\r\n            //console.log(\"adding counter: \"+_counter);\r\n            this.SyncDataToPlayerGameInfo(_counter);\r\n          } else {\r\n            console.log(\"synced Data:\");\r\n            console.log(this.PlayerGameInfo);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  StartTurn() {\r\n    console.log(this.PlayerGameInfo);\r\n    this.AssignPlayerGameUI();\r\n    this.EnablePlayerNodes();\r\n    this.TurnNumber = 0; //reseting the turn number on start of the game\r\n\r\n    //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2, this.TurnNumber);\r\n  },\r\n\r\n  ReceiveBankruptData(_data) {\r\n    //other player has been bankrupted\r\n    var _isBankrupted = _data.Data.bankrupted;\r\n    var _turn = _data.Data.turn;\r\n    var _playerData = _data.Data.PlayerDataMain;\r\n\r\n    console.log(_data);\r\n    // console.log(_isBankrupted);\r\n    // console.log(_turn);\r\n    // console.log(_playerData);\r\n\r\n    this.PlayerGameInfo[_turn] = _playerData;\r\n\r\n    this.AssignPlayerGameUI(true);\r\n    this.EnablePlayerNodes(true);\r\n\r\n    this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n      this.SyncDataToPlayerGameInfo(0);\r\n\r\n      //force sync spectator after completion of each turn\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n    }\r\n  },\r\n\r\n  StartTurnAfterBankrupt() {\r\n    this.AssignPlayerGameUI(true);\r\n    this.EnablePlayerNodes(true);\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n    }, 1000);\r\n\r\n    this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n      this.SyncDataToPlayerGameInfo(0);\r\n\r\n      //force sync spectator after completion of each turn\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Function for gameplay\r\n  /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  AssignPlayerGameUI(_isBankrupted = false) {\r\n    if (this.SelectedMode == 1) {\r\n      //for bot\r\n      if (!_isBankrupted) {\r\n        var _randomIndex = this.getRandom(0, this.BotGameInfo.length);\r\n        this.PlayerGameInfo.push(this.BotGameInfo[_randomIndex]);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = 2;\r\n      }\r\n    }\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerUI[index].active = true;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").PlayerInfo = this.PlayerGameInfo[index];\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").SetName(this.PlayerGameInfo[index].PlayerName);\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").SetAvatar(this.PlayerGameInfo[index].AvatarID);\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n  },\r\n\r\n  UpdateGameUI(_toggleHighlight, _index) {\r\n    if (_toggleHighlight) {\r\n      this.AllPlayerUI[_index].getComponent(\"PlayerProfileManager\").PlayerInfo = this.PlayerGameInfo[_index];\r\n\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n        if (_index == index) {\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleBGHighlighter(true);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleTextighlighter(true);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        } else {\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleBGHighlighter(false);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleTextighlighter(false);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  EnablePlayerNodes(_isBankrupted = false) {\r\n    if (!_isBankrupted) {\r\n      for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n        if (this.PlayerGameInfo[index].HomeBasedAmount == 1 && !this.PlayerGameInfo[index].InitialCounterAssigned) this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x, this.StartLocationNodes[0].position.y);\r\n        else if (this.PlayerGameInfo[index].BrickAndMortarAmount == 1 && !this.PlayerGameInfo[index].InitialCounterAssigned) this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x, this.StartLocationNodes[1].position.y);\r\n      }\r\n    } else {\r\n      if (this.PlayerGameInfo[this.TurnNumber].HomeBasedAmount == 1) this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[0].position.x, this.StartLocationNodes[0].position.y);\r\n      else if (this.PlayerGameInfo[this.TurnNumber].BrickAndMortarAmount == 1) this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[1].position.x, this.StartLocationNodes[1].position.y);\r\n    }\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerNodes[index].active = true;\r\n    }\r\n\r\n    for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n      this.AllPlayerNodes[index].children[0].getComponent(cc.Sprite).spriteFrame = GamePlayReferenceManager.Instance.Get_GameplayUIManager().AvatarSprites[this.PlayerGameInfo[index].AvatarID];\r\n    }\r\n  },\r\n\r\n  SetFollowCameraProperties() {\r\n    let targetPos = this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0, 120));\r\n    this.CameraNode.position = this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n\r\n    let ratio = targetPos.y / cc.winSize.height;\r\n    this.Camera.zoomRatio = 2;\r\n  },\r\n\r\n  lateUpdate() {\r\n    if (this.isCameraZooming) this.SetFollowCameraProperties();\r\n  },\r\n\r\n  syncDiceRoll(_roll) {\r\n    var _dice1 = _roll.dice1;\r\n    var _dice2 = _roll.dice2;\r\n    var _result = _dice1 + _dice2;\r\n\r\n    IsTweening = true;\r\n    this.CardDisplayed = false;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID == this.PlayerGameInfo[this.TurnNumber].PlayerUID) {\r\n          console.log(\"player matched:\" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n          this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter == 0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType == 2) {\r\n        RollCounter = 0;\r\n        this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned = true;\r\n        console.error(RollCounter);\r\n      } else {\r\n        this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned = true;\r\n        RollCounter = 13;\r\n        console.error(RollCounter);\r\n      }\r\n    } else {\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter == 12) this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter + 21;\r\n      else this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter + 1;\r\n\r\n      RollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n      console.error(RollCounter - 1);\r\n    }\r\n\r\n    DiceRoll = _result;\r\n    DiceTemp = 0;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      if (this.TurnNumber == index) {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = true;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1, _dice2);\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      } else {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      }\r\n    }\r\n\r\n    // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n    // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n    // this.TweenCamera(_pos,true,0.4);\r\n  },\r\n\r\n  DiceFuntionality() {\r\n    let targetPos = this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0, 120));\r\n    var _pos = this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n    this.TweenCamera(_pos, true, 0.4);\r\n  },\r\n\r\n  TempCheckSpace(_rolling) {\r\n    var tempcounter = 0;\r\n    var tempcounter2 = 0;\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID == this.PlayerGameInfo[this.TurnNumber].PlayerUID) {\r\n        //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        tempcounter2 = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n      }\r\n    }\r\n\r\n    if (tempcounter2 - 1 < 0) {\r\n      console.error(\"starting from oblivion\");\r\n      tempcounter = tempcounter2 + _rolling - 1;\r\n      var dicetobe = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n      console.error(\"to be: \" + dicetobe);\r\n    } else {\r\n      tempcounter = tempcounter2 + _rolling;\r\n      var dicetobe = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n      console.error(\"to be: \" + dicetobe);\r\n    }\r\n  },\r\n\r\n  RollDice: function () {\r\n    if (!isGameOver) {\r\n      var Dice1;\r\n      var Dice2;\r\n      if (_isTest && this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n        Dice1 = parseInt(_diceinput1);\r\n        Dice2 = parseInt(_diceinput2);\r\n      } else if (this.PlayerGameInfo[this.TurnNumber].IsBot == true && _isTest) {\r\n        Dice1 = 50;\r\n        Dice2 = 3;\r\n      } else {\r\n        Dice1 = this.getRandom(1, 7);\r\n        Dice2 = this.getRandom(1, 7);\r\n\r\n        if (PreviousDiceRoll1 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n        if (PreviousDiceRoll2 == Dice2) Dice2 = this.getRandom(1, 7);\r\n\r\n        PreviousDiceRoll1 = Dice1;\r\n        PreviousDiceRoll2 = Dice2;\r\n      }\r\n\r\n      // var Dice1=20;\r\n      // var Dice2=1;\r\n\r\n      DiceRoll = Dice1 + Dice2;\r\n      var _newRoll = { dice1: Dice1, dice2: Dice2 };\r\n      //DiceRoll=23;\r\n      //this.TempCheckSpace(DiceRoll);\r\n      console.log(\"dice number: \" + DiceRoll + \", Dice1:\" + Dice1 + \", Dice2:\" + Dice2);\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3, _newRoll);\r\n    }\r\n  },\r\n\r\n  RollOneDice() {\r\n    var Dice1 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll5 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n    PreviousDiceRoll5 = Dice1;\r\n\r\n    return Dice1;\r\n  },\r\n\r\n  RollTwoDices() {\r\n    var Dice1 = this.getRandom(1, 7);\r\n    var Dice2 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll3 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll4 == Dice2) Dice2 = this.getRandom(1, 7);\r\n\r\n    PreviousDiceRoll3 = Dice1;\r\n    PreviousDiceRoll4 = Dice2;\r\n\r\n    return Dice1 + Dice2;\r\n  },\r\n\r\n  callUponCard() {\r\n    if (!isGameOver) {\r\n      if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n        var _spaceID = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        if (_spaceID != 6 && _spaceID != 7) {\r\n          //6 means payday and 7 means double payday, 9 menas sell space\r\n          var RandomCard = this.getRandom(0, 15);\r\n\r\n          //for testing only\r\n          if (_spaceID == 2) {\r\n            //landed on some big business\r\n            var valueIndex = [0, 1, 7, 10, 2, 3, 4, 5, 6, 8];\r\n            var index = this.getRandom(0, 10);\r\n            RandomCard = valueIndex[index];\r\n            //RandomCard = 1;\r\n          } else if (_spaceID == 5) {\r\n            //landed on some losses cards\r\n            var valueIndex = [0, 1, 5, 6, 2, 7, 3, 4, 8, 9];\r\n            var index = this.getRandom(0, 10);\r\n            RandomCard = valueIndex[index];\r\n            // RandomCard = 0;\r\n          } else if (_spaceID == 3) {\r\n            //landed on some marketing cards\r\n            var valueIndex = [0, 7, 3, 8, 13, 9, 1, 2, 4, 5];\r\n            var index = this.getRandom(0, 10);\r\n            RandomCard = valueIndex[index];\r\n            //RandomCard = 5;\r\n          } else if (_spaceID == 1) {\r\n            //landed on some wild cards\r\n            var valueIndex = [0, 1, 6, 10, 2, 3, 4];\r\n            var index = this.getRandom(0, 7);\r\n            RandomCard = valueIndex[index];\r\n            //RandomCard = 0;\r\n          }\r\n\r\n          IsTweening = false;\r\n          console.error(_spaceID);\r\n\r\n          if (this.SelectedMode == 2) {\r\n            //for real player\r\n            if (_spaceID == 12) {\r\n              // if player landed on finish space\r\n              RollCounter = RollCounter + 5;\r\n              this.StartDiceRoll();\r\n            } else {\r\n              if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                var SendingData = { randomCard: RandomCard, counter: RollCounter };\r\n                this.RaiseEventForCard(SendingData);\r\n              } else {\r\n                this.DisplayCardOnOthers();\r\n              }\r\n            }\r\n          } else if (this.SelectedMode == 1) {\r\n            //for bot\r\n            if (_spaceID == 12) {\r\n              // if player landed on finish space\r\n              RollCounter = RollCounter + 5;\r\n              this.StartDiceRoll();\r\n            } else {\r\n              var SendingData = { randomCard: RandomCard, counter: RollCounter };\r\n              this.RaiseEventForCard(SendingData);\r\n            }\r\n          }\r\n        } else {\r\n          IsTweening = false;\r\n          console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n          this.RaiseEventTurnComplete();\r\n        }\r\n      } else {\r\n        if (this.SelectedMode == 1) {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].isBot && BotGameOver) this.completeCardTurn();\r\n\r\n            if (!this.PlayerGameInfo[this.TurnNumber].isBot && userGameOver) this.completeCardTurn();\r\n          }\r\n        } else if (this.SelectedMode == 2) {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n              this.completeCardTurn();\r\n              console.error(\"complete turn is called\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (this.SelectedMode == 1) {\r\n        this.AllPlayersGameCompleted(true);\r\n      } else if (this.SelectedMode == 2) {\r\n        this.AllPlayersGameCompleted(false);\r\n      }\r\n    }\r\n  },\r\n\r\n  completeCardTurn() {\r\n    IsTweening = false;\r\n    console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n    this.RaiseEventTurnComplete();\r\n  },\r\n\r\n  CallGameComplete(_isBot = false, _forceGameOver = false) {\r\n    if (_isBot == false) {\r\n      // if (_forceGameOver) {\r\n      //     this.TurnNumber = this.GetMyIndex();\r\n      // }\r\n\r\n      var _playerIndex = this.GetMyIndex();\r\n\r\n      if (!this.PlayerGameInfo[_playerIndex].IsActive) {\r\n        this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n        this.PlayerGameInfo[_playerIndex].TotalScore = 0;\r\n        console.error(\"player is not active returning\");\r\n      } else {\r\n        if (this.PlayerGameInfo[_playerIndex].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          console.error(\"calculating....\");\r\n          console.log(\"agme is not finished\");\r\n          this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n\r\n          var _cash = this.PlayerGameInfo[_playerIndex].Cash;\r\n          var HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n          var BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n          var BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n          var loanAmount = 0;\r\n          for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n            if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n              loanAmount += GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n            }\r\n          }\r\n\r\n          var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n          var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n          var _diceRandom = this.RollTwoDices();\r\n          var OnceOrShare = _diceRandom * 1000;\r\n\r\n          var GoldCash = OnceOrShare * _gold;\r\n          var StockCash = OnceOrShare * _stocks;\r\n\r\n          var BMCash = (BMAmount + BMLocations) * 150000;\r\n\r\n          var HMCash = 0;\r\n          if (HMAmount == 1) HMCash = 60000;\r\n          else if (HMAmount == 2) HMCash = 25000 + 60000;\r\n          else if (HMAmount == 3) HMCash = 25000 + 25000 + 60000;\r\n\r\n          var TotalAssets = _cash + BMCash + HMCash + GoldCash + StockCash - loanAmount;\r\n\r\n          this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n          this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"Data pushed\");\r\n        }\r\n        //console.log(this.PlayerGameInfo[this.TurnNumber])\r\n      }\r\n    } else {\r\n      for (let _playerIndex = 0; _playerIndex < this.PlayerGameInfo.length; _playerIndex++) {\r\n        this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n\r\n        var _cash = this.PlayerGameInfo[_playerIndex].Cash;\r\n        var HMAmount = this.PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n        var BMAmount = this.PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        var BMLocations = this.PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n        var loanAmount = 0;\r\n        for (let index = 0; index < this.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n          if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            loanAmount += GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n          }\r\n        }\r\n\r\n        var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n        var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n        var _diceRandom = this.RollTwoDices();\r\n        var OnceOrShare = _diceRandom * 1000;\r\n\r\n        var GoldCash = OnceOrShare * _gold;\r\n        var StockCash = OnceOrShare * _stocks;\r\n\r\n        var BMCash = (BMAmount + BMLocations) * 150000;\r\n\r\n        var HMCash = 0;\r\n        if (HMAmount == 1) HMCash = 60000;\r\n        else if (HMAmount == 2) HMCash = 25000 + 60000;\r\n        else if (HMAmount == 3) HMCash = 25000 + 25000 + 60000;\r\n\r\n        var TotalAssets = _cash + BMCash + HMCash + GoldCash + StockCash - loanAmount;\r\n\r\n        this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n        this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventForGameComplete(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6, _data);\r\n  },\r\n\r\n  RaiseEventToSyncGameCompleteData(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(16, _data);\r\n  },\r\n\r\n  SyncGameOver(_UID) {\r\n    var infoText = \"\";\r\n    var statusText = \"\";\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      if (!GameCompleted) {\r\n        GameCompleted = true;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectData();\r\n        isGameOver = true;\r\n        var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var MyData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        console.log(_UID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver = true;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n          var _index = -1;\r\n          for (let index = 0; index < MainSessionData.length; index++) {\r\n            if (MainSessionData[index].customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n              _index = index;\r\n              break;\r\n            }\r\n          }\r\n\r\n          statusText = \"Game won by \" + MainSessionData[_index].customProperties.PlayerSessionData.PlayerName;\r\n          infoText =\r\n            \"Current Cash : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.Cash +\r\n            \"\\n\" +\r\n            \"Home Based Businesses Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalHBCash +\r\n            \"\\n\" +\r\n            \"Brick And Mortar Businesses Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalBMCash +\r\n            \"\\n\" +\r\n            \"Gold Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalGoldCash +\r\n            \"\\n\" +\r\n            \"Stocks Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalStocksCash +\r\n            \"\\n\" +\r\n            \"Loan Balance : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalLoanBalance +\r\n            \"\\n\" +\r\n            \"Total Cash Earned : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalScore +\r\n            \"\\n\";\r\n\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n        } else {\r\n          if (MyData.customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n            //you won\r\n            statusText = \"Congrats! you have won the game.\";\r\n            infoText =\r\n              \"Current Cash : $\" +\r\n              MyData.customProperties.PlayerSessionData.Cash +\r\n              \"\\n\" +\r\n              \"Home Based Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalHBCash +\r\n              \"\\n\" +\r\n              \"Brick And Mortar Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalBMCash +\r\n              \"\\n\" +\r\n              \"Gold Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalGoldCash +\r\n              \"\\n\" +\r\n              \"Stocks Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalStocksCash +\r\n              \"\\n\" +\r\n              \"Loan Balance : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalLoanBalance +\r\n              \"\\n\" +\r\n              \"Total Cash Earned : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalScore +\r\n              \"\\n\";\r\n\r\n            var _currentCash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n            var _total = _currentCash + parseInt(MyData.customProperties.PlayerSessionData.TotalScore);\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _total.toString();\r\n\r\n            var _won = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon);\r\n            _won = _won + 1;\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon = _won.toString();\r\n\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(_total, _won, -1);\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n          } else {\r\n            //you lose\r\n            statusText = \"Unfortunately! you have lost the game.\";\r\n            infoText =\r\n              \"Current Cash : $\" +\r\n              MyData.customProperties.PlayerSessionData.Cash +\r\n              \"\\n\" +\r\n              \"Home Based Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalHBCash +\r\n              \"\\n\" +\r\n              \"Brick And Mortar Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalBMCash +\r\n              \"\\n\" +\r\n              \"Gold Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalGoldCash +\r\n              \"\\n\" +\r\n              \"Stocks Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalStocksCash +\r\n              \"\\n\" +\r\n              \"Loan Balance : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalLoanBalance +\r\n              \"\\n\" +\r\n              \"Total Cash Earned : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalScore +\r\n              \"\\n\";\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n          }\r\n        }\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //with bot\r\n      isGameOver = true;\r\n      var MainSessionData = this.PlayerGameInfo;\r\n      var MyData = this.PlayerGameInfo[0];\r\n      console.log(_UID);\r\n      console.log(MyData.PlayerUID);\r\n      this.PlayerGameInfo[0].GameOver = true;\r\n\r\n      if (MyData.PlayerUID == _UID) {\r\n        //you won\r\n        statusText = \"Congrats! you have won the game.\";\r\n        infoText =\r\n          \"Current Cash : $\" +\r\n          MyData.Cash +\r\n          \"\\n\" +\r\n          \"Home Based Businesses Value : $\" +\r\n          MyData.TotalHBCash +\r\n          \"\\n\" +\r\n          \"Brick And Mortar Businesses Value : $\" +\r\n          MyData.TotalBMCash +\r\n          \"\\n\" +\r\n          \"Gold Value : $\" +\r\n          MyData.TotalGoldCash +\r\n          \"\\n\" +\r\n          \"Stocks Value : $\" +\r\n          MyData.TotalStocksCash +\r\n          \"\\n\" +\r\n          \"Loan Balance : $\" +\r\n          MyData.TotalLoanBalance +\r\n          \"\\n\" +\r\n          \"Total Cash Earned : $\" +\r\n          MyData.TotalScore +\r\n          \"\\n\" +\r\n          \"Other Player Earned Cash : $\" +\r\n          this.PlayerGameInfo[1].TotalScore +\r\n          \"\\n\";\r\n\r\n        var _currentCash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n        var _total = _currentCash + parseInt(MyData.TotalScore);\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _total.toString();\r\n\r\n        var _won = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon);\r\n        _won = _won + 1;\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon = _won.toString();\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(_total, _won, -1);\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n      } else {\r\n        //you lose\r\n\r\n        statusText = \"Unfortunately! you have lost the game.\";\r\n        infoText =\r\n          \"Current Cash : $\" +\r\n          MyData.Cash +\r\n          \"\\n\" +\r\n          \"Home Based Businesses Value : $\" +\r\n          MyData.TotalHBCash +\r\n          \"\\n\" +\r\n          \"Brick And Mortar Businesses Value : $\" +\r\n          MyData.TotalBMCash +\r\n          \"\\n\" +\r\n          \"Gold Value : $\" +\r\n          MyData.TotalGoldCash +\r\n          \"\\n\" +\r\n          \"Stocks Value : $\" +\r\n          MyData.TotalStocksCash +\r\n          \"\\n\" +\r\n          \"Loan Balance : $\" +\r\n          MyData.TotalLoanBalance +\r\n          \"\\n\" +\r\n          \"Total Cash Earned : $\" +\r\n          MyData.TotalScore +\r\n          \"\\n\" +\r\n          \"Other Player Earned Cash : $\" +\r\n          this.PlayerGameInfo[1].TotalScore +\r\n          \"\\n\";\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n      }\r\n    }\r\n  },\r\n\r\n  SyncGameCompleteData(_data) {\r\n    var _isBot = _data.Bot;\r\n    if (_isBot) {\r\n      this.CallGameComplete(true, false);\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 1500, false);\r\n      setTimeout(() => {\r\n        this.ZoomCameraOutOnly();\r\n\r\n        var max = -1;\r\n        var SelectedInd = 0;\r\n        var SessionData = this.PlayerGameInfo;\r\n\r\n        for (let index = 0; index < SessionData.length; index++) {\r\n          var _value = SessionData[index].TotalScore;\r\n\r\n          if (_value > max) {\r\n            SelectedInd = index;\r\n            max = _value;\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < SessionData.length; index++) {\r\n          if (SessionData[index].IsActive) {\r\n            var _value = SessionData[index].TotalScore;\r\n            console.log(_value);\r\n          }\r\n        }\r\n\r\n        console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n        this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n      }, 1500);\r\n    } else {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        this.CallGameComplete(false, false);\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 1500, false);\r\n        setTimeout(() => {\r\n          console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray());\r\n          this.ZoomCameraOutOnly();\r\n\r\n          this.SyncDataToPlayerGameInfo(0);\r\n\r\n          var max = -1;\r\n          var SelectedInd = 0;\r\n          var SessionData = this.PlayerGameInfo;\r\n          console.log(SessionData);\r\n\r\n          for (let index = 0; index < SessionData.length; index++) {\r\n            if (SessionData[index].IsActive) {\r\n              var _value = SessionData[index].TotalScore;\r\n\r\n              if (_value > max) {\r\n                SelectedInd = index;\r\n                max = _value;\r\n              }\r\n            }\r\n          }\r\n\r\n          for (let index = 0; index < SessionData.length; index++) {\r\n            if (SessionData[index].IsActive) {\r\n              var _value = SessionData[index].TotalScore;\r\n              console.log(_value);\r\n            }\r\n          }\r\n\r\n          console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n          this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n        }, 1500);\r\n      }\r\n    }\r\n  },\r\n\r\n  AllPlayersGameCompleted(_isBot = false) {\r\n    var _data = { Bot: _isBot };\r\n    this.RaiseEventToSyncGameCompleteData(_data);\r\n  },\r\n\r\n  GameOver(_forceGameOver = false) {\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      if (_forceGameOver) {\r\n        this.ZoomCameraOutOnly();\r\n      }\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        this.SyncDataToPlayerGameInfo(0);\r\n\r\n        var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var playercompleted = 0;\r\n\r\n        this.PlayerGameInfo[this.TurnNumber].isGameFinished = true;\r\n\r\n        // for (let index = 0; index < MainSessionData.length; index++) {\r\n        //   if (MainSessionData[index].customProperties.PlayerSessionData.isGameFinished) playercompleted++;\r\n        // }\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n          if (this.PlayerGameInfo[index].IsActive == false || this.PlayerGameInfo[index].isGameFinished) playercompleted++;\r\n        }\r\n\r\n        console.log(\"player completed: \" + playercompleted);\r\n        console.log(\"player gameinfo length: \" + this.PlayerGameInfo.length);\r\n        if (playercompleted >= this.PlayerGameInfo.length || _forceGameOver) {\r\n          //game completed on all system\r\n          isGameOver = true;\r\n          if (_forceGameOver) {\r\n            setTimeout(() => {\r\n              this.AllPlayersGameCompleted(false);\r\n            }, 1000);\r\n          } else if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n            if (!PassedPayDay && !DoublePayDay) {\r\n              this.AllPlayersGameCompleted(false);\r\n            } else {\r\n              IsTweening = false;\r\n              this.completeCardTurn();\r\n            }\r\n          }\r\n        } else {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n              if (!PassedPayDay && !DoublePayDay) {\r\n                IsTweening = false;\r\n                this.completeCardTurn();\r\n              }\r\n            } else {\r\n              IsTweening = false;\r\n              this.completeCardTurn();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      if (this.PlayerGameInfo[this.TurnNumber].IsBot) BotGameOver = true;\r\n      else userGameOver = true;\r\n\r\n      console.log(\"usergameover: \" + userGameOver);\r\n      console.log(\"botgameover: \" + BotGameOver);\r\n      // this.CallGameComplete(true);\r\n      var playercompleted = 0;\r\n      this.PlayerGameInfo[this.TurnNumber].isGameFinished = true;\r\n\r\n      var MainSessionData = this.PlayerGameInfo;\r\n      for (let index = 0; index < MainSessionData.length; index++) {\r\n        if (MainSessionData[index].isGameFinished) playercompleted++;\r\n      }\r\n\r\n      if (playercompleted == this.PlayerGameInfo.length) {\r\n        //gamecompleted on all systems\r\n        BotGameOver = true;\r\n        userGameOver = true;\r\n        isGameOver = true;\r\n\r\n        if (!PassedPayDay && !DoublePayDay) {\r\n          this.AllPlayersGameCompleted(true);\r\n        }\r\n      } else {\r\n        if (!isGameOver) {\r\n          if (!PassedPayDay && !DoublePayDay) {\r\n            IsTweening = false;\r\n            this.completeCardTurn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  StartDiceRoll: function () {\r\n    if (RollCounter >= GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n      console.log(\"Gameover\");\r\n      this.ZoomCameraOut();\r\n\r\n      setTimeout(() => {\r\n        this.GameOver(false);\r\n      }, 1500);\r\n    } else {\r\n      if (!isGameOver) {\r\n        DiceTemp = DiceTemp + 1;\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n        this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n      }\r\n    }\r\n  },\r\n\r\n  getRandom: function (min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min; // min included and max excluded\r\n  },\r\n\r\n  TweenCamera: function (_pos, isZoom, time) {\r\n    cc.tween(this.CameraNode)\r\n      .to(time, { position: cc.v2(_pos.x, _pos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        if (isZoom) this.ZoomCameraIn();\r\n        else this.ZoomCameraOut();\r\n      })\r\n      .start();\r\n  },\r\n\r\n  ZoomCameraIn() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio < 2) {\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio + 0.03;\r\n        this.ZoomCameraIn();\r\n      } else {\r\n        this.Camera.zoomRatio = 2;\r\n        this.isCameraZooming = true;\r\n        this.StartDiceRoll();\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  CheckPayDayConditions(_isBot = false) {\r\n    if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n      if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6) {\r\n        PassedPayDay = true;\r\n        PassedPayDayCounter = PassedPayDayCounter + 1;\r\n      }\r\n\r\n      if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7) {\r\n        DoublePayDay = true;\r\n        DoublePayDayCounter++;\r\n        PassedPayDayCounter++;\r\n      }\r\n    }\r\n\r\n    _nextTurnDoublePay = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n    if (PassedPayDay && !DoublePayDay && !_nextTurnDoublePay) {\r\n      //this.ToggleDoublePayNextTurn(false);\r\n      //this.TogglePayDay(false,false);\r\n      this.ProcessPayDay_TurnDecision(false, _isBot);\r\n    } else if (DoublePayDay || (PassedPayDay && _nextTurnDoublePay)) {\r\n      //this.ToggleDoublePayNextTurn(false);\r\n      //this.TogglePayDay(false,false);\r\n      this.ProcessPayDay_TurnDecision(true, _isBot);\r\n    } else {\r\n      this.callUponCard();\r\n    }\r\n  },\r\n\r\n  ZoomCameraOutOnly() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio >= 1) {\r\n        this.isCameraZooming = false;\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio - 0.03;\r\n        this.ZoomCameraOutOnly();\r\n      } else {\r\n        this.CameraNode.position = cc.Vec2(0, 0);\r\n        this.Camera.zoomRatio = 1;\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  ZoomCameraOut() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio >= 1) {\r\n        this.isCameraZooming = false;\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio - 0.03;\r\n        this.ZoomCameraOut();\r\n      } else {\r\n        this.CameraNode.position = cc.Vec2(0, 0);\r\n        this.Camera.zoomRatio = 1;\r\n        // IsTweening = false;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n\r\n        if (this.SelectedMode == 1) {\r\n          if (this.PlayerGameInfo[this.TurnNumber].IsBot && !BotGameOver) {\r\n            this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n          } else {\r\n            if (!this.PlayerGameInfo[this.TurnNumber].IsBot && !userGameOver) {\r\n              this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.SelectedMode == 2) {\r\n          //real player\r\n          if (PlayerLeft) {\r\n            // IsTweening = false;\r\n            PlayerLeft = false;\r\n          }\r\n\r\n          if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) this.CheckPayDayConditions();\r\n          else this.callUponCard();\r\n        }\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  TweenPlayer: function (Node, ToPos) {\r\n    cc.tween(Node) //0.4\r\n      .to(0.4, { position: cc.v2(ToPos.x, ToPos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        if (DiceTemp < DiceRoll) {\r\n          // console.log(DiceTemp + \" \" + RollCounter);\r\n\r\n          if (this.SelectedMode == 1) {\r\n            //for bot\r\n            if (this.PlayerGameInfo[this.TurnNumber].IsBot) {\r\n              if (!BotGameOver) {\r\n                if (\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6 ||\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7\r\n                ) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n              } else {\r\n                console.log(\"bot game is over\");\r\n              }\r\n            } else {\r\n              if (!userGameOver) {\r\n                if (\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6 ||\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7\r\n                ) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n\r\n                /// console.error(PassedPayDayCounter);\r\n              } else {\r\n                console.log(\"user game is over skipping\");\r\n              }\r\n            }\r\n\r\n            // console.log(PassedPayDay);\r\n          }\r\n\r\n          if (this.SelectedMode == 2) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n              if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n\r\n                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7) {\r\n                  DoublePayDay = true;\r\n                  DoublePayDayCounter++;\r\n                  PassedPayDayCounter++;\r\n                }\r\n              } else {\r\n                console.log(\"Game finished for: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n            if (RollCounter == 12) RollCounter = RollCounter + 21;\r\n            else RollCounter = RollCounter + 1;\r\n          } else {\r\n            RollCounter = RollCounter + 1;\r\n            DiceTemp = DiceRoll;\r\n          }\r\n\r\n          //DiceTemp=DiceTemp+1;\r\n          //  console.log(DiceTemp + \" \" + RollCounter);\r\n\r\n          this.StartDiceRoll();\r\n          //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n        } else {\r\n          var _newpos = cc.Vec2(0, 0);\r\n          this.TweenCamera(_newpos, false, 0.6); //zoomout\r\n        }\r\n      })\r\n      .start();\r\n  },\r\n\r\n  //rules implmentation during turn (turn decisions)\r\n\r\n  TogglePayDay(_st1, _St2) {\r\n    PassedPayDay = _st1;\r\n    DoublePayDay = _St2;\r\n\r\n    if (!_st1) {\r\n      PassedPayDayCounter = 0;\r\n    }\r\n\r\n    if (!_St2) {\r\n      DoublePayDayCounter = 0;\r\n    }\r\n  },\r\n\r\n  IncreaseDoublePayDay() {\r\n    DoublePayDayCounter++;\r\n  },\r\n\r\n  ExpandBusiness_TurnDecision(amount, _index, _locationName, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.length < 3) {\r\n      if (!_isCardFunctionality) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].Cash >= amount) {\r\n          this.PlayerGameInfo[this.TurnNumber].Cash = this.PlayerGameInfo[this.TurnNumber].Cash - amount;\r\n          this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n          this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n          }, 1200);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount);\r\n        }\r\n      } else {\r\n        if (_GivenCash >= amount) {\r\n          _GivenCash = _GivenCash - amount;\r\n          this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n          this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n          }, 1200);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount + \", Cash Given $\" + _GivenCash);\r\n        }\r\n      }\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You cannot own more than three brick and mortar business locations\");\r\n    }\r\n  },\r\n\r\n  GenerateExpandBusiness_Prefabs_TurnDecision(_isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    BusinessLocationNodes = [];\r\n\r\n    console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n    for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n      if (parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType) == 2) {\r\n        //this means there is brick and mortar in list\r\n        var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n        node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n        node.getComponent(\"ExpandBusinessHandler\").SetBusinessIndex(i);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetCardFunctionality(_isCardFunctionality);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetGivenCash(_GivenCash);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetStartAnyBusinessWithoutCash(_StartAnyBusinessWithoutCash);\r\n        node.getComponent(\"ExpandBusinessHandler\").ResetEditBox();\r\n        BusinessLocationNodes.push(node);\r\n      }\r\n    }\r\n    console.log(BusinessLocationNodes);\r\n    return BusinessLocationNodes.length;\r\n  },\r\n\r\n  DestroyGeneratedNodes() {\r\n    for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n      BusinessLocationNodes[index].destroy();\r\n    }\r\n\r\n    BusinessLocationNodes = [];\r\n  },\r\n\r\n  UpdateStocks_TurnDecision(_name, _ShareAmount, _isAdding) {\r\n    if (_isAdding) {\r\n      var _stock = new StockInfo();\r\n      _stock.BusinessName = _name;\r\n      _stock.ShareAmount = _ShareAmount;\r\n\r\n      this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n    }\r\n  },\r\n\r\n  ProcessPayDay_TurnDecision(_isDoublePayDay = false, _isBot = false, _forSelectedBusiness = false, _SelectedBusinessIndex = 0, HBAmount = 0, BMAmount = 0, BMLocations = 0) {\r\n    if (_forSelectedBusiness) {\r\n      var _title = \"PayDay\";\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, false, false, false, _isBot, _forSelectedBusiness, _SelectedBusinessIndex, HBAmount, BMAmount, BMLocations, 1, 0);\r\n    } else {\r\n      if (DoublePayDay && PassedPayDay && _nextTurnDoublePay) {\r\n        DoublePayDayCounter = 2;\r\n      }\r\n\r\n      _skipNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n      _skipHMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n      _skipBMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n      if (_skipNextPayday) {\r\n        //if previously skip payday was stored by any card\r\n        this.ToggleSkipPayDay_Whole(false);\r\n\r\n        if (!_isBot) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\", 1600);\r\n          setTimeout(() => {\r\n            this.callUponCard();\r\n          }, 1650);\r\n        } else {\r\n          console.log(\"Skipping PayDay.\");\r\n          setTimeout(() => {\r\n            this.callUponCard();\r\n          }, 800);\r\n        }\r\n      } else {\r\n        var _title = \"\";\r\n\r\n        if (_isDoublePayDay) _title = \"DoublePayDay\";\r\n        else _title = \"PayDay\";\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, _isDoublePayDay, _skipHMNextPayday, _skipBMNextPayday, _isBot, false, 0, 0, 0, 0, PassedPayDayCounter, DoublePayDayCounter);\r\n      }\r\n    }\r\n  },\r\n\r\n  Bankrupt_TurnDecision() {\r\n    this.PlayerGameInfo[this.TurnNumber].IsBankrupt = true;\r\n    this.PlayerGameInfo[this.TurnNumber].BankruptAmount += 1;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode, this.PlayerGameInfo[this.TurnNumber].IsBankrupt, this.PlayerGameInfo[this.TurnNumber].BankruptAmount);\r\n  },\r\n\r\n  SendProfit_Partner_TurnDecision(_amount, _uID) {\r\n    var _data = { Data: { Cash: _amount, ID: _uID } };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(13, _data);\r\n  },\r\n\r\n  ReceiveProfit_Partner_TurnDecision(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _amount = _data.Data.Cash;\r\n      var _iD = _data.Data.ID;\r\n\r\n      var _myIndex = this.GetMyIndex();\r\n\r\n      if (this.PlayerGameInfo[_myIndex].PlayerUID == _iD) {\r\n        if (this.PlayerGameInfo[_myIndex].isGameFinished == true) {\r\n          this.PlayerGameInfo[_myIndex].TotalScore += _amount;\r\n        }\r\n\r\n        this.PlayerGameInfo[_myIndex].Cash += _amount;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have received profit of $\" + _amount + \" from your partner.\", 2800);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Cards Rules\r\n  ToggleDoublePayNextTurn(_state) {\r\n    _nextTurnDoublePay = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay = _nextTurnDoublePay;\r\n  },\r\n\r\n  ToggleSkipNextTurn(_state) {\r\n    _skipNextTurn = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn = _skipNextTurn;\r\n  },\r\n\r\n  ToggleSkipPayDay_Whole(_state) {\r\n    _skipNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday = _skipNextPayday;\r\n  },\r\n\r\n  ToggleSkipPayDay_HomeBased(_state) {\r\n    _skipHMNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday = _skipHMNextPayday;\r\n  },\r\n\r\n  ToggleSkipPayDay_BrickAndMortar(_state) {\r\n    _skipBMNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday = _skipBMNextPayday;\r\n  },\r\n\r\n  ToggleTurnProgress(_state) {\r\n    TurnInProgress = _state;\r\n  },\r\n\r\n  ReturnTurnProgress() {\r\n    return TurnInProgress;\r\n  },\r\n\r\n  LoseAllMarketingMoney() {\r\n    var _loseAmount = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _loseAmount = this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n      this.PlayerGameInfo[this.TurnNumber].MarketingAmount = 0;\r\n    } else {\r\n      _loseAmount = 0;\r\n    }\r\n\r\n    return _loseAmount;\r\n  },\r\n\r\n  MultiplyMarketingMoney(_multiplier) {\r\n    var _amountIncreased = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _amountIncreased = this.PlayerGameInfo[this.TurnNumber].MarketingAmount *= _multiplier;\r\n    } else {\r\n      _amountIncreased = 0;\r\n    }\r\n\r\n    return _amountIncreased;\r\n  },\r\n\r\n  GetMarketingMoney(_profit) {\r\n    var _amount = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _profit = _profit / 100;\r\n      _amount = this.PlayerGameInfo[this.TurnNumber].MarketingAmount *= _profit;\r\n      this.PlayerGameInfo[this.TurnNumber].MarketingAmount = 0;\r\n      this.PlayerGameInfo[this.TurnNumber].Cash += _amount;\r\n    } else {\r\n      _amount = 0;\r\n    }\r\n\r\n    return _amount;\r\n  },\r\n\r\n  QuestionPopUp_OtherUser_OneQuestion(_data) {\r\n    var _questionRef = GamePlayReferenceManager.Instance.Get_QuestionsData();\r\n    var _userID = _data.UserID;\r\n    var _questionIndex = _data.Question;\r\n    var _playerIndex = _data.UserIndex;\r\n    var _isVoc = _data.IsVoc;\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n    if (_userID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID) {\r\n      console.log(\"ID matched\");\r\n\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n      var _Qdata;\r\n      if (_isVoc) {\r\n        console.log(\"voc\");\r\n        _Qdata = _questionRef.VocabularyQuestions[_questionIndex];\r\n      } else {\r\n        console.log(\"est\");\r\n        _Qdata = _questionRef.EstablishmentQuestions[_questionIndex];\r\n      }\r\n\r\n      CorrectAnswer = _Qdata.CorrectOption;\r\n      var _message = \"Choose the correct answer.\" + \"\\n\" + \"*wrong answer will cost you a fine of $5000.\" + \"\\n\" + \"\\n\" + _Qdata.Question + \"\\n\" + \"A. \" + _Qdata.Option1 + \"\\n\" + \"B. \" + _Qdata.Option2 + \"\\n\" + \"C. \" + _Qdata.Option3 + \"\\n\" + \"D. \" + _Qdata.Option4;\r\n\r\n      // var _questionAsked = OneQuestions[_questionIndex - 1];\r\n      _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_message);\r\n    }\r\n  },\r\n\r\n  OneQuestionScreen_Space_OneQuestion(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n    _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n    _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData, _roomData, _isTurnOver, this.SelectedMode);\r\n  },\r\n\r\n  OneQuestionDecision_SelectOption_OneQuestion(event = null) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _selection = parseInt(event.currentTarget.name.split(\"_\")[1]);\r\n\r\n    console.log(\"option selected: \" + _selection);\r\n    console.log(\"CorrectAnswer: \" + CorrectAnswer);\r\n    if (_selection == CorrectAnswer) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your answer was correct!.\", 1200);\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n      this.RaiseEventDecision_OneQuestion(false, true, -1, _myData.PlayerUID);\r\n    } else {\r\n      if (_myData.Cash >= 5000) {\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n          if (_myData.PlayerUID == this.PlayerGameInfo[index].PlayerUID) {\r\n            this.PlayerGameInfo[index].Cash -= 5000;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have answered wrong, fine amount was payed to the player.\", 1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(true, false, -1, _myData.PlayerUID);\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash, Skipping question\");\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false, false, 0, _myData.PlayerUID);\r\n        //GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_InsufficientBalance(true);\r\n      }\r\n    }\r\n  },\r\n\r\n  // OneQuestionDecision_PayAmount_OneQuestion() {\r\n  //   var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n  //   var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n  //   if (_myData.Cash >= 5000) {\r\n  //     for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n  //       if (_myData.PlayerUID == this.PlayerGameInfo[index].PlayerUID) {\r\n  //         this.PlayerGameInfo[index].Cash -= 5000;\r\n  //         GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n  //         break;\r\n  //       }\r\n  //     }\r\n\r\n  //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\", 1200);\r\n  //     _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n  //     this.RaiseEventDecision_OneQuestion(true, false, -1, _myData.PlayerUID);\r\n  //   } else {\r\n  //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n  //   }\r\n  // },\r\n\r\n  // OneQuestionDecision_AnswerQuestion_OneQuestion() {\r\n  //   var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n  //   var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n  //   GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\", 1200);\r\n  //   _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n  //   this.RaiseEventDecision_OneQuestion(false, true, OneQuestionIndex, _myData.PlayerUID);\r\n  // },\r\n\r\n  RaiseEventDecision_OneQuestion(_hasDonePayment, _hasAnsweredQuestion, _questionIndex, _UserID) {\r\n    var _data = { PaymentDone: _hasDonePayment, QuestionAnswered: _hasAnsweredQuestion, QuestionIndex: _questionIndex, ID: _UserID };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8, _data);\r\n  },\r\n\r\n  ReceiveEventDecision_OneQuestion(_data) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      var _hasDonePayment = _data.PaymentDone;\r\n      var _hasAnsweredQuestion = _data.QuestionAnswered;\r\n      var _questionIndex = _data.QuestionIndex;\r\n      var _uID = _data.ID;\r\n\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n      if (_questionIndex == 0) {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player does not have enough cash, so questions were skipped.\", 2100);\r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n        this.completeCardTurn();\r\n      } else {\r\n        if (_hasDonePayment) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n          this.PlayerGameInfo[this.TurnNumber].Cash += 5000;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player has given wrong answer, cash $5000 has been added.\", 2100);\r\n          _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n          this.completeCardTurn();\r\n        } else if (_hasAnsweredQuestion) {\r\n          var _selectedPlayerIndex = 0;\r\n          var _actorsData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n          for (let index = 0; index < _actorsData.length; index++) {\r\n            if (_uID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n              _selectedPlayerIndex = index;\r\n              break;\r\n            }\r\n          }\r\n\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player has given correct answer, no cash was received.\", 2100);\r\n\r\n          // if (_questionIndex == 1) {\r\n          //   //have you skipped loan previous payday?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have skipped loan payement in previous payday\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have skipped loan payement in previous payday\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 2) {\r\n          //   //Have you taken any loan?\r\n          //   var _loanTaken = false;\r\n          //   for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n          //     if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken) {\r\n          //       _loanTaken = true;\r\n          //       break;\r\n          //     }\r\n          //   }\r\n\r\n          //   if (_loanTaken) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have taken some loan\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have taken any loan\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 3) {\r\n          //   //Are you bankrupted? if more than once, tell me the amount?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have been bankrupted \" + _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.BankruptAmount + \" time/es.\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have been bankrupted\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 4) {\r\n          //   //Is your turn going to be skipped next time?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next turn will be skipped.\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next turn will not be skipped.\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 5) {\r\n          //   //Is it going to be double pay day your next payday?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next payday will be double payday\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next payday will not be double payday\", 2100);\r\n          //   }\r\n          // }\r\n\r\n          setTimeout(() => {\r\n            _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n            this.completeCardTurn();\r\n          }, 200);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceiveGoBackSpacesData_spaceFunctionality(_data) {\r\n    if (IsTweening == true) {\r\n      setTimeout(() => {\r\n        this.ReceiveGoBackSpacesData_spaceFunctionality(_data);\r\n      }, 800);\r\n    } else {\r\n      var _spaces = _data.Data.backspaces;\r\n      var _counter = _data.Data.Counter;\r\n\r\n      var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_counter + Backspaces].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n      this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos, 0.1);\r\n\r\n      RollCounter = _counter;\r\n      var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n      this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n    }\r\n  },\r\n\r\n  TweenPlayer_GoBackSpaces: function (Node, ToPos, speed = 0.6) {\r\n    cc.tween(Node)\r\n      .to(speed, { position: cc.v2(ToPos.x, ToPos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {})\r\n      .start();\r\n  },\r\n\r\n  GoBackSpaces_spaceFunctionality() {\r\n    RollCounter -= Backspaces;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      var _data = { Data: { backspaces: Backspaces, Counter: RollCounter } };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(10, _data);\r\n    }\r\n\r\n    var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n    this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n    this.completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n  //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports = GameManager;\r\n//#endregion\r\n"]}