{"version":3,"sources":["assets\\Script\\MultiplayerController.js"],"names":["PhotonRef","stateText","GamePlayReferenceManager","ShowRoom","GameFinished","IsMasterClient","TotalTimer","TimerStarted","Schedular","MaxStudents","RestartSpectate","IsGameStarted","Timeouts","RoomProperty","cc","Class","name","properties","Player","type","Integer","serializable","InitialSetup","Boolean","PlayerGameInfo","Text","TurnNumber","App_Info","AppID","tooltip","AppVersion","Wss","displayName","MasterServer","FbAppID","MultiplayerController","Component","PhotonAppInfo","MaxPlayers","MaxSpectators","ModeSelection","statics","Instance","ResetAllData","ResetRoomValues","onLoad","Init_MultiplayerController","ToggleModeSelection","_val","GetSelectedMode","game","addPersistRootNode","node","InitializePhoton","console","log","AppInfo","DemoLoadBalancing","LeaveRoom","RoomName","Message","JoinedRoom","CheckReferences","require","RemovePersistNode","removePersistRootNode","getSceneName","sceneName","_sceneInfos","i","length","uuid","director","_scene","_id","url","substring","lastIndexOf","match","ToggleShowRoom_Bool","_state","ToggleLeaveRoom_Bool","getPhotonRef","PhotonActor","myActor","RoomActors","myRoomActorsArray","CheckSpectate","customProperties","RoomEssentials","IsSpectate","AppId","FbAppId","RequestConnection","state","isConnectedToMaster","isInLobby","start","DisconnectPhoton","isJoinedToRoom","disconnect","ResetState","OnRoomNameChange","OnMessageChange","msg","UpdateRoomCustomProperites","_playerUpdate","_playerValue","_initialSetupUpdate","_initialSetupValue","_playerGameInfoUpdate","_playerGameInfoValue","_turnNumberUpdate","_turnNumbervalue","myRoom","setCustomProperty","CreateRoom","_data","roomOptions","Get_MultiplayerController","Get_ServerBackend","StudentData","Counter","setUserId","userID","RoomID","Math","floor","random","Date","now","createRoom","JoinRoom","_roomName","joinRoom","JoinRandomRoom","joinRandomRoom","SendCardData","raiseEvent","CardData","senderName","senderID","actorNr","receivers","Photon","LoadBalancing","Constants","ReceiverGroup","All","err","error","message","SendGameOver","Data","SendGameOverData","SendBankruptData","Others","SendData","PlayerInfo","SendOneQuestionData","SendPartnerProfitLoss","SendOneQuestionResponseData","DiceRollEvent","DiceCount","SendGoBackSpaceData","SendPartnerShipOfferData","SendPartnerShipAnswerData","SendInfo","SyncTurnCompletion","UID","StartTurn","trace","ShowToast","CallRecieveEvent","_eventCode","_senderName","_senderID","InstanceNull","Get_MultiplayerSyncManager","setTimeout","ReceiveEvent","DisconnectData","RestartGame","_timer","index","clearTimeout","Get_GameManager","ClearDisplayTimeout","loadScene","CheckMasterClient","_isMaster","myRoomMasterActorNr","CheckCurrentActiveMasterClient","GetRealActors","_realPlayer","AllPlayers","getCustomProperty","RoomCounter","SendRoomCompletedData","systemEvent","emit","ProcessCounter","_master","_counter","RoomCompleted","push","UpdateActorActiveData","_actor","_actorsArray","PlayerSessionData","PlayerUID","IsActive","HandlePlayerLeave","actor","PhotonReferece","_manager","_playerTurn","_initialSetupDone","_isSpectate","ReceiveEventTurnComplete","ChangeTurnForcefully","SetPlayerLeft","_playerfound","splice","Get_GameplayUIManager","SyncData","update","dt","onStateChange","LBC","LoadBalancingClient","StateToName","Get_UIManager","ToggleProfileScreen_SpectateUI","ToggleRoomScreen_SpectateUI","logger","debug","mess","info","param","warn","param1","param2","param3","ToggleLoadingNode","exception","format","onRoomList","rooms","ResetRoomList","UpdateRoomsList_SpectateUI","playerCount","onRoomListUpdate","roomsUpdated","roomsAdded","roomsRemoved","onJoinRoom","loadBalancingClient","userId","_customProperties","onActorJoin","myRoomActorCount","onActorLeave","GameOver","CheckTurnOnSpectateLeave_SpectateManager","GetTurnNumber","_uIGameManager","onActorPropertiesChange","onMyRoomPropertiesChange","onError","errorCode","errorMsg","onEvent","code","content","PlayerInfoData","_Turn","_dice","_ID","_card","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//Global Variables\r\nvar PhotonRef;\r\nvar stateText=\"\";\r\nvar GamePlayReferenceManager=null;\r\nvar ShowRoom = false;\r\nvar GameFinished = false;\r\nvar IsMasterClient = false;\r\nvar TotalTimer = 30;\r\nvar TimerStarted = false;\r\nvar Schedular = null;\r\nvar MaxStudents = 6;\r\nvar RestartSpectate = false;\r\nvar IsGameStarted = false;\r\nvar Timeouts = [];\r\n//---------------------------------------class data related to RoomProperty------------------------------------------------//\r\nvar RoomProperty=cc.Class({\r\n    name:\"RoomProperty\",\r\n    properties: {\r\n        Player: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        },\r\n        InitialSetup: {\r\n            default: false,        \r\n            type: cc.Boolean,\r\n            serializable: true,\r\n        },\r\n        PlayerGameInfo: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n        },\r\n        TurnNumber: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        }\r\n    },\r\n});\r\n//---------------------------------------class data related to App_Info------------------------------------------------//\r\nvar App_Info=cc.Class({\r\n    name:\"App_Info\",\r\n    properties: {\r\n        AppID: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"App id form photon dashboard\"\r\n        },\r\n        AppVersion: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"App version for photon\"\r\n        },\r\n        Wss: {\r\n            displayName:\"IsSecure\",\r\n            default: false,        \r\n            type: cc.Boolean,\r\n            serializable: true,\r\n            tooltip:\"If photon should use secure and reliable protocols\"\r\n        },\r\n        MasterServer: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"master server for photon to connect\"\r\n        },\r\n        FbAppID: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"FB app id used for FB autherization\"\r\n        },\r\n    },\r\n});\r\n//---------------------------------------class data related to MultiplayerController----------------------------------//\r\nvar MultiplayerController=cc.Class({\r\n    name:\"MultiplayerController\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PhotonAppInfo: {\r\n            default: null,        \r\n            type: App_Info,\r\n            serializable: true,},\r\n        MaxPlayers: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n        MaxSpectators: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n        ModeSelection: { // 1 means bot , 2 means real players\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n\r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    ResetAllData()\r\n    {\r\n        Timeouts = [];\r\n        IsGameStarted = false;\r\n        PhotonRef=null;\r\n        stateText=\"\";\r\n        GamePlayReferenceManager=null;\r\n        ShowRoom = false;\r\n        GameFinished = false;\r\n        IsMasterClient = false;\r\n        TotalTimer = 5;\r\n        TimerStarted = false;\r\n        Schedular = null;\r\n        this.ResetRoomValues();\r\n        MaxStudents = 6;\r\n        RestartSpectate = false;\r\n    },\r\n    //this function is called when instance of this class is created\r\n    onLoad() {\r\n        this.ResetAllData();\r\n        this.Init_MultiplayerController();\r\n    },\r\n\r\n    ToggleModeSelection(_val)// 1 means bot , 2 means real players\r\n    {\r\n        this.ModeSelection=_val;\r\n    },\r\n\r\n    GetSelectedMode()\r\n    {\r\n        return this.ModeSelection;\r\n    },\r\n\r\n    /**\r\n    @summary Initialize some essentails data for multiplayer controller class\r\n    @method Init_MultiplayerController\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    Init_MultiplayerController()\r\n    {\r\n        if(!MultiplayerController.Instance)\r\n        {\r\n            cc.game.addPersistRootNode(this.node);\r\n            this.InitializePhoton();\r\n            console.log(AppInfo);\r\n            PhotonRef = new DemoLoadBalancing();\r\n            MultiplayerController.Instance=this;\r\n        }\r\n\r\n        this.LeaveRoom=false;\r\n        this.RoomName=\"\";\r\n        this.Message=\"\";\r\n        ShowRoom=false;\r\n        this.JoinedRoom=false;\r\n        this.CheckReferences();\r\n    },\r\n\r\n    /**\r\n    @summary check reference to some variables and classes\r\n    @method CheckReferences\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n      /**\r\n    @summary remove persist node when want to restart scene\r\n    @method RemovePersistNode\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    RemovePersistNode()\r\n    {\r\n        MultiplayerController.Instance=null;\r\n        cc.game.removePersistRootNode(this.node);\r\n    },\r\n\r\n    /**\r\n    @summary function to get name of current opened scene\r\n    @method getSceneName\r\n    @param none\r\n    @returns {string} sceneName\r\n    **/ \r\n    getSceneName: function() {\r\n        var sceneName;\r\n        var _sceneInfos = cc.game._sceneInfos;\r\n        for (var i = 0; i < _sceneInfos.length; i++) {\r\n            if(_sceneInfos[i].uuid == cc.director._scene._id) {\r\n                sceneName = _sceneInfos[i].url;\r\n                sceneName = sceneName.substring(sceneName.lastIndexOf('/')+1).match(/[^\\.]+/)[0];\r\n            }\r\n    \r\n        }\r\n        return sceneName;\r\n    },\r\n\r\n    /**\r\n    @summary function to set \"ShowRoom\" bool value\r\n    @method ToggleShowRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/ \r\n    ToggleShowRoom_Bool(_state)\r\n    {\r\n        ShowRoom=_state;\r\n    },\r\n\r\n    /**\r\n    @summary function to set \"LeaveRoom\" bool value\r\n    @method ToggleLeaveRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/ \r\n    ToggleLeaveRoom_Bool(_state)\r\n    {\r\n        this.LeaveRoom=_state;\r\n    },\r\n     \r\n    /**\r\n    @summary returns Photon \"PhotonRef\" instance created by multiplayer class\r\n    @method getPhotonRef\r\n    @param none\r\n    @returns {object} PhotonRef\r\n    **/ \r\n    getPhotonRef()\r\n    {\r\n        return PhotonRef;\r\n    },\r\n\r\n    /**\r\n    @summary returns myActor instance created by photon\r\n    @method PhotonActor\r\n    @param none\r\n    @returns {object} Actor\r\n    **/ \r\n    PhotonActor()\r\n    {\r\n        return PhotonRef.myActor();\r\n    },\r\n\r\n    /**\r\n    @summary returns myRoomActorsArray created by photon\r\n    @method RoomActors\r\n    @param none\r\n    @returns {object} Actor\r\n    **/ \r\n    RoomActors()\r\n    {\r\n        return PhotonRef.myRoomActorsArray();\r\n    },\r\n\r\n    /**\r\n    @summary returns isSpectate variable from custom property of current actor\r\n    @method CheckSpectate\r\n    @param none\r\n    @returns {boolean} isSpectate\r\n    **/ \r\n    CheckSpectate()\r\n    {\r\n         return PhotonRef.myActor().customProperties.RoomEssentials.IsSpectate;\r\n    },\r\n\r\n     /**\r\n    @summary Initialize photon with appid,app version, Wss etc\r\n    @method InitializePhoton\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    InitializePhoton()\r\n    {\r\n        AppInfo.AppId=this.PhotonAppInfo.AppID;\r\n        AppInfo.AppVersion=this.PhotonAppInfo.AppVersion;\r\n        AppInfo.Wss=this.PhotonAppInfo.Wss;\r\n        AppInfo.MasterServer=this.PhotonAppInfo.MasterServer;\r\n        AppInfo.FbAppId=this.PhotonAppInfo.FbAppID;  \r\n    },\r\n\r\n   /**\r\n    @summary send connection request to photon\r\n    @method RequestConnection\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    RequestConnection () {\r\n        if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true)\r\n            console.log(\"already connected\");\r\n        else\r\n            PhotonRef.start();       \r\n    },\r\n\r\n    /**\r\n    @summary Disconnect from photon\r\n    @method DisconnectPhoton\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    DisconnectPhoton () {\r\n    if(PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true  ||PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n        PhotonRef.disconnect();   \r\n        this.JoinedRoom=false;\r\n        //PhotonRef.leaveRoom();\r\n        this.ResetState();\r\n        }\r\n        else\r\n        {\r\n            console.log(\"not inside any room or lobby or connected to photon\");\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary reseting few values\r\n    @method ResetState\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    ResetState()\r\n    {\r\n        IsGameStarted = false;\r\n        this.LeaveRoom=false;    \r\n        this.JoinedRoom=false;\r\n        ShowRoom=false;\r\n        stateText = \"\";\r\n        this.ResetRoomValues();\r\n    },\r\n\r\n    /**\r\n    @summary called when room name got input from game\r\n    @method OnRoomNameChange\r\n    @param {string} name\r\n    @returns no return\r\n   **/ \r\n    OnRoomNameChange(name)\r\n    {\r\n        this.RoomName=name;\r\n    },\r\n\r\n    /**\r\n    @summary called when message window got input from game\r\n    @method OnMessageChange\r\n    @param {string} msg\r\n    @returns no return\r\n   **/ \r\n    OnMessageChange(msg)\r\n    {\r\n        this.Message=msg;\r\n    },\r\n\r\n    /**\r\n    @summary update custom room properties\r\n    @method UpdateRoomCustomProperites\r\n    @returns no return\r\n   **/ \r\n    UpdateRoomCustomProperites(_playerUpdate=false,_playerValue=0,_initialSetupUpdate=false,_initialSetupValue=false,_playerGameInfoUpdate=false,_playerGameInfoValue=null,_turnNumberUpdate=false,_turnNumbervalue=0)\r\n    {\r\n        if(_playerUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"Player\",_playerValue,true);\r\n\r\n        if(_initialSetupUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"InitialSetup\",_initialSetupValue,true);\r\n        \r\n        if(_playerGameInfoUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"PlayerGameInfo\",_playerGameInfoValue,true);\r\n        \r\n        if(_turnNumberUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"TurnNumber\",_turnNumbervalue,true);\r\n    },\r\n\r\n    /**\r\n    @summary create room request\r\n    @method CreateRoom\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    CreateRoom () {\r\n        if(PhotonRef.isConnectedToMaster()==true ||PhotonRef.isInLobby()==true || PhotonRef.state==8)\r\n        {\r\n            if(PhotonRef.isJoinedToRoom()==false)\r\n            {\r\n                    var _data=new RoomProperty();\r\n                    _data.Player=0;\r\n\r\n                    var roomOptions ={\r\n                      \"isVisible\":true, \r\n                      \"isOpen\":true,\r\n                      \"maxPlayers\":this.MaxPlayers+this.MaxSpectators,\r\n                      \"customGameProperties\":_data\r\n                    };\r\n\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n                    PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n                    PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n                    PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n                    PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: false });\r\n                    PhotonRef.myActor().setCustomProperty(\"RoomCounter\", {Counter:TotalTimer});\r\n                    PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n                    var RoomID=Math.floor(Math.random() * Date.now());\r\n\r\n                    PhotonRef.createRoom(\"Room_\"+RoomID,roomOptions); \r\n            }\r\n            else\r\n            {\r\n                console.log(\"already joined the room\");\r\n            }\r\n\r\n        }else\r\n        {\r\n            console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n        }\r\n            \r\n    },\r\n\r\n    /**\r\n    @summary join room request by name\r\n    @method JoinRoom\r\n    @param {string} _roomName\r\n    @returns no return\r\n   **/ \r\n    JoinRoom (_roomName) {\r\n        if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true ||PhotonRef.state==8)\r\n        {\r\n            if(PhotonRef.isJoinedToRoom()==false || PhotonRef.state!=8)\r\n            {\r\n                var roomOptions ={\r\n                    \"isVisible\":true, \r\n                    \"isOpen\":false,\r\n                    \"maxPlayers\":this.MaxPlayers+this.MaxSpectators\r\n                    //\"customGameProperties\":{\"RoomEssentials\": {IsSpectate:true}}\r\n                  };\r\n\r\n                  GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n                  PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n                  PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n                  PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n                  PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: true });\r\n                  PhotonRef.myActor().setCustomProperty(\"RoomCounter\", {Counter:TotalTimer});\r\n                  PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n                  PhotonRef.joinRoom(_roomName,roomOptions);\r\n            }\r\n            else\r\n            {\r\n                console.log(\"already joined the room\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n        }\r\n            \r\n    },\r\n\r\n     /**\r\n    @summary join random room\r\n    @method JoinRandomRoom\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n  JoinRandomRoom () {\r\n    if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true ||PhotonRef.state==8)\r\n    {\r\n        if(PhotonRef.isJoinedToRoom()==false || PhotonRef.state!=8)\r\n        {  \r\n            var _data=new RoomProperty();\r\n            _data.Player=0;\r\n            \r\n            var roomOptions ={\r\n                //\"expectedMaxPlayers\":this.MaxPlayers+MaxSpectators,\r\n                \"expectedCustomRoomProperties\":_data\r\n              };\r\n            \r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n            PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n            PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n            PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n            PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: false });\r\n            PhotonRef.myActor().setCustomProperty(\"RoomCounter\", {Counter:TotalTimer});\r\n            PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n            PhotonRef.joinRandomRoom(roomOptions);\r\n            \r\n        }\r\n        else\r\n        {\r\n            console.log(\"already joined the room\");\r\n        }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n    }\r\n        \r\n},\r\n\r\n\r\n    /**\r\n    @summary Send card index over network\r\n    @method SendCardData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendCardData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending card data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(5, { CardData: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n   /**\r\n    @summary Send game over call\r\n    @method SendGameOver\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendGameOver (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending game over call\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(6, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n    },\r\n  \r\n    SendGameOverData (_data) {\r\n        if(PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n            console.log(\"sending game over data to sync\");\r\n            console.log(_data);\r\n                try {\r\n                    PhotonRef.raiseEvent(16, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n                }\r\n                catch (err) {\r\n                    console.error(\"error: \" + err.message);\r\n                }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not in room.\");\r\n        }\r\n      },\r\n\r\n    /**\r\n    @summary Send backrupt data\r\n    @method SendBankruptData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendBankruptData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending bankrupcy data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(9, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n    /**\r\n    @summary Send Player Data over network\r\n    @method SendData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending player data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(1, { PlayerInfo: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question Data over network\r\n    @method SendOneQuestionData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendOneQuestionData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(7, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n    },\r\n  \r\n  /**\r\n    @summary Send profit or loss to your pasrtner\r\n    @method SendPartnerProfitLoss\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendPartnerProfitLoss (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(13, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question response over network\r\n    @method SendOneQuestionResponseData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendOneQuestionResponseData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question response data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(8, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send dice data\r\n    @method DiceRollEvent\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  DiceRollEvent (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending dice count\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(3, { DiceCount: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n   /**\r\n    @summary send go back spaces data\r\n    @method SendGoBackSpaceData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendGoBackSpaceData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"send go back spaces data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(10, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary sending open invitation to all players for partner ship\r\n    @method SendPartnerShipOfferData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendPartnerShipOfferData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending partner ship offer\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(11, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n    },\r\n  \r\n  /**\r\n    @summary sending partner answer data (accept or reject)\r\n    @method SendPartnerShipAnswerData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendPartnerShipAnswerData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending partenrship answer data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(12, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendInfo (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending info\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(15, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n    @summary send user id of player to all other who had completed their turn\r\n    @method SyncTurnCompletion\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n    SyncTurnCompletion (_data) {\r\n        if(PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n            console.log(\"sending turn completion data\");\r\n            console.log(_data);\r\n                try {\r\n                    PhotonRef.raiseEvent(4, { UID: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n                }\r\n                catch (err) {\r\n                    console.error(\"error: \" + err.message);\r\n                }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not in room.\");\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary Start Turn for initial turn\r\n    @method StartTurn\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n    StartTurn (_data) {\r\n        if(PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n            console.trace(\"Starting Turn\");\r\n            console.log(_data);\r\n                try {\r\n                    PhotonRef.raiseEvent(2, { TurnNumber: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n                }\r\n                catch (err) {\r\n                    console.error(\"error: \" + err.message);\r\n                }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not in room.\");\r\n        }\r\n\r\n    },\r\n  \r\n     /**\r\n    @summary Show toast message on the console\r\n    @method ShowToast\r\n    @param {string} message message to be shown \r\n    @returns no return\r\n   **/ \r\n    ShowToast:function(msg)\r\n    {\r\n        console.log(\"toast message: \"+msg);\r\n    },\r\n\r\n     /**\r\n    @summary Receive event from photon raise on \r\n    @method CallRecieveEvent\r\n    @returns no return\r\n   **/ \r\n    CallRecieveEvent:function(_eventCode,_senderName,_senderID,_data)\r\n    {\r\n        var InstanceNull=true;\r\n\r\n        //to check if instance is null in case class instance is not loaded and its receives callback\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager()==null)\r\n        {\r\n            InstanceNull=true;\r\n            setTimeout(() => {\r\n                this.CallRecieveEvent(_eventCode,_senderName,_senderID,_data);\r\n            }, 50);\r\n        }\r\n        else\r\n        {\r\n            InstanceNull=false;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().ReceiveEvent(_eventCode,_senderName,_senderID,_data);\r\n        }\r\n    },\r\n\r\n    DisconnectData()\r\n    {\r\n        GameFinished = true;\r\n        // MultiplayerController.Instance.JoinedRoom=false;\r\n        // MultiplayerController.Instance.ResetState();\r\n        // MultiplayerController.Instance.DisconnectPhoton();\r\n    },\r\n\r\n    RestartGame(_timer=0)\r\n    {\r\n            IsGameStarted = false;\r\n            MultiplayerController.Instance.JoinedRoom=false;\r\n            MultiplayerController.Instance.ResetState();\r\n        MultiplayerController.Instance.DisconnectPhoton();\r\n        \r\n        for (let index = 0; index < Timeouts.length; index++) {\r\n            clearTimeout(Timeouts[index]);   \r\n        }\r\n        \r\n        setTimeout(() => {\r\n                if (GamePlayReferenceManager.Instance.Get_GameManager()) {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n                }\r\n\r\n                if (GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager()) {\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n                }\r\n\r\n                if (GamePlayReferenceManager.Instance.Get_ServerBackend()) {\r\n                    GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n                }\r\n            \r\n                GamePlayReferenceManager.Instance.RemovePersistNode();\r\n                MultiplayerController.Instance.RemovePersistNode();\r\n                cc.director.loadScene(\"MainMenu\");\r\n            }, _timer);\r\n           // GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode()\r\n        },\r\n\r\n    CheckMasterClient(_id)\r\n    {\r\n        var _isMaster = false;\r\n        if (PhotonRef.myRoomMasterActorNr() == _id && PhotonRef.myActor().actorNr == _id) {\r\n            _isMaster = true;\r\n            IsMasterClient = true;\r\n        }\r\n\r\n        //console.error(_isMaster);\r\n        return _isMaster;\r\n    },\r\n\r\n    CheckCurrentActiveMasterClient()\r\n    {\r\n        var _isMaster = false;\r\n        if (PhotonRef.myActor().actorNr == PhotonRef.myRoomMasterActorNr()) {\r\n            _isMaster = true;\r\n            IsMasterClient = true;\r\n        } else\r\n        {\r\n            IsMasterClient = false;\r\n        }\r\n\r\n        //console.error(_isMaster);\r\n        return _isMaster;\r\n    },\r\n\r\n    ResetRoomValues()\r\n    {\r\n        clearTimeout(Schedular);\r\n\r\n        setTimeout(() => {\r\n            IsMasterClient = false;\r\n            TimerStarted = false;\r\n        }, 1000);\r\n      \r\n    },\r\n\r\n    GetRealActors()\r\n    {\r\n        var _realPlayer = 0;\r\n        var AllPlayers = PhotonRef.myRoomActorsArray();\r\n        for (let index = 0; index < AllPlayers.length; index++) {\r\n            if (AllPlayers[index].getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false)\r\n            {\r\n                _realPlayer++;\r\n            }  \r\n        }\r\n        return _realPlayer;\r\n    },\r\n\r\n    RoomCounter(_timer)\r\n    {\r\n        clearTimeout(Schedular);\r\n        var _data = null;\r\n        Schedular = setTimeout(() => {\r\n            if (IsMasterClient) {\r\n                if (_timer > 0) {\r\n                    _timer--;\r\n                    this.RoomCounter(_timer);\r\n                } else {\r\n                    console.error(\"timer completed\");\r\n                    if (this.GetRealActors() > 1) { //if has more than one player start real game\r\n                        this.SendRoomCompletedData();\r\n                    } else //start game with bot\r\n                    {\r\n                        MultiplayerController.Instance.ResetRoomValues();\r\n                        MultiplayerController.Instance.DisconnectPhoton();\r\n                        \r\n                        MultiplayerController.Instance.ToggleModeSelection(1);\r\n                        MultiplayerController.Instance.ToggleShowRoom_Bool(false);\r\n                        \r\n                        MultiplayerController.Instance.MaxPlayers=2;\r\n                        cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n                        cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n                \r\n                        setTimeout(() => {\r\n                            GamePlayReferenceManager.Instance.Get_MultiplayerController().JoinedRoom=true;\r\n                            cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\"); //function in ui manager\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            } else\r\n            {\r\n                clearTimeout(Schedular); \r\n            }\r\n        }, 1000);\r\n    },\r\n\r\n    ProcessCounter()\r\n    {\r\n        var _master = MultiplayerController.Instance.CheckCurrentActiveMasterClient();\r\n        if (_master) { \r\n            if (!TimerStarted)\r\n            {\r\n                TimerStarted = true;\r\n                var _counter = PhotonRef.myActor().getCustomProperty(\"RoomCounter\")[\"Counter\"];\r\n                MultiplayerController.Instance.RoomCounter(_counter);\r\n            }\r\n        }\r\n    },\r\n\r\n      /**\r\n    @summary Send room completed data\r\n    @method SendRoomCompletedData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendRoomCompletedData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending RoomCompletedData\");\r\n      //  console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(14, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n    },\r\n  \r\n    RoomCompleted() {\r\n        \r\n        if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false)\r\n        {\r\n            var _realPlayer = this.GetRealActors();\r\n            IsGameStarted = true;\r\n            MultiplayerController.Instance.MaxPlayers = _realPlayer;\r\n            console.log(\"all required players joined, starting the game..\")\r\n            cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n            cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n            MultiplayerController.Instance.JoinedRoom = true;\r\n            Timeouts.push(setTimeout(() => { cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\"); }, 1000)); //function in ui manager\r\n            MultiplayerController.Instance.UpdateRoomCustomProperites(true, _realPlayer, false, false, false, null, false, 0);\r\n        \r\n        } \r\n    },\r\n\r\n    UpdateActorActiveData(_actor)\r\n    {\r\n        var _actorsArray = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var _data = null;\r\n        for (let index = 0; index < _actorsArray.length; index++) {  \r\n            _data = _actorsArray[index].customProperties.PlayerSessionData;\r\n            if (_data.PlayerUID == _actor.customProperties.Data.userID) {\r\n                _data.IsActive = false;\r\n                _actorsArray[index].setCustomProperty(\"PlayerSessionData\", _data);\r\n            }\r\n        }\r\n    },\r\n   \r\n    HandlePlayerLeave(actor=null,PhotonReferece = null, _manager = null, _playerTurn = 0, _initialSetupDone = false,_isSpectate=false) {\r\n        if (_initialSetupDone) {\r\n            for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n                if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n                  \r\n                    _manager.PlayerGameInfo[index].IsActive = false;\r\n                    MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n                    if (!_isSpectate) {\r\n                        _manager.ReceiveEventTurnComplete(_manager.PlayerGameInfo[index].PlayerUID);\r\n                        if (_playerTurn == index && PhotonReferece.myActor().actorNr == PhotonReferece.myRoomMasterActorNr()) {\r\n                            _manager.ChangeTurnForcefully();\r\n                            _manager.SetPlayerLeft(true);\r\n                        }\r\n                    }\r\n\r\n                    break;\r\n                }\r\n            }\r\n           \r\n        } else\r\n        {\r\n           // _uIManager.ShowToast(\"player \" + actor.name + \" has left\", 1000);\r\n            var _playerfound = false;\r\n            for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n                if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n                    _manager.PlayerGameInfo[index].IsActive = false;\r\n                    _manager.PlayerGameInfo.splice(index, 1);\r\n                    MultiplayerController.Instance.MaxPlayers--;\r\n                    _playerfound = true;\r\n                    MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!_playerfound) {\r\n                MultiplayerController.Instance.MaxPlayers--;\r\n                if (!_isSpectate) {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().SyncData(null, actor.customProperties.Data.userID, true);\r\n                }\r\n            }\r\n\r\n            console.log(_manager.PlayerGameInfo);\r\n            console.log(MultiplayerController.Instance.MaxPlayers);\r\n        }\r\n    },\r\n    //called every frame\r\n    update (dt) {\r\n\r\n        /**\r\n            @summary function called by photon whenever there is some change in connection state\r\n            @method onStateChange\r\n            @param {object} state\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onStateChange=function(state)\r\n        {\r\n            //#region Connection States\r\n            //state 1 : connectingToNameServer\r\n            //State 2 : ConnectedToNameServer\r\n            //State 3 : ConnectingToMasterServer\r\n            //State 4 : ConnectedToMasterServer\r\n            //State 5:  JoinedLobby\r\n            //State 6 : ConnectingToGameserver\r\n            //State 7 : ConnectedToGameserver\r\n            //State 8 : Joined\r\n            //State 10: Disconnected \r\n            //#endregion\r\n\r\n            var LBC = Photon.LoadBalancing.LoadBalancingClient;\r\n            console.log(\"StateCode: \"+state+\" \"+LBC.StateToName(state));\r\n\r\n            if(state==1)\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"connecting to server...\");\r\n            else if(state==4)\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"connected to server\");\r\n            else if(state==5) //has joined lobby\r\n            {\r\n                if(ShowRoom==false)\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"waiting for other players...\");\r\n                    MultiplayerController.Instance.JoinRandomRoom();\r\n                }\r\n                else if(ShowRoom==true)\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"showing rooms list...\");\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_UIManager().ToggleProfileScreen_SpectateUI(false);\r\n                        GamePlayReferenceManager.Instance.Get_UIManager().ToggleRoomScreen_SpectateUI(true);\r\n                    }, 1000);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives debug\r\n            @method debug\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.debug=function(mess)\r\n        {\r\n            console.log(mess);\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives info\r\n            @method info\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.info = function (mess,param) {\r\n           console.log(mess+param);\r\n           stateText+= mess+\" \"+param+\"\\n\";\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives warn\r\n            @method warn\r\n            @param {object} mess\r\n            @param {object} param1\r\n            @param {object} param2\r\n            @param {object} param3\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.warn = function (mess,param1,param2,param3) {\r\n            console.log(mess+\" \"+param1+\" \"+param2+\" \"+param3);\r\n\r\n            if(param1==225) //no room found\r\n            {\r\n                console.log(\"no random room was found, creating one\");\r\n                MultiplayerController.Instance.CreateRoom();\r\n            }\r\n\r\n            if(param1==226) //room does not exists or is full\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ToggleLoadingNode(false);\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ShowToast(\"Room is full, please select any other room to spectate.\");\r\n            }\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever its logger receives error\r\n            @method error\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.error = function (mess,param) {\r\n            console.log(mess);\r\n         }\r\n\r\n          /**\r\n            @summary function called by photon whenever its logger receives exception\r\n            @method exception\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.exception = function (mess) {\r\n            console.log(mess);\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever its logger receives some format\r\n            @method format\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.format = function (mess) {\r\n            console.log(mess);\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever player joins lobby\r\n            @method onRoomList\r\n            @param {object} rooms\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.onRoomList = function (rooms) {\r\n            stateText+=\"\\n\"+\"Rooms List:\"+\"\\n\";\r\n\r\n            if(rooms.length==0)\r\n            {\r\n                stateText+=\"No rooms in lobby.\"+\"\\n\";\r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n\r\n                for (var i = 0; i < rooms.length; ++i) {\r\n                    GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name,rooms[i].playerCount);\r\n                    console.log(\"Room name: \"+rooms[i].name);\r\n                    stateText+=\"Room: \"+rooms[i].name+\"\\n\";\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever there is change in rooms list (room added,updated,removed etc)\r\n            @method onRoomListUpdate\r\n            @param {object} rooms\r\n            @param {object} roomsUpdated\r\n            @param {object} roomsAdded\r\n            @param {object} roomsRemoved\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onRoomListUpdate = function (rooms, roomsUpdated, roomsAdded, roomsRemoved) {\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n       \r\n            for (var i = 0; i < rooms.length; ++i) {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name,rooms[i].playerCount);\r\n                console.log(\"Room name: \"+rooms[i].name);\r\n                stateText+=\"Room: \"+rooms[i].name+\"\\n\";\r\n            }\r\n            console.log(\"Rooms List updated: \" + roomsUpdated.length + \" updated, \" + roomsAdded.length + \" added, \" + roomsRemoved.length + \" removed\");\r\n        }\r\n\r\n        /**\r\n            @summary function called locally by photon when even player joins room\r\n            @method onJoinRoom\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onJoinRoom = function () {\r\n            //#region Logs for game\r\n            console.log(\"Game \" + this.myRoom().name + \" joined\");           \r\n            console.log(PhotonRef.myActor());\r\n            console.log(PhotonRef.myRoom());\r\n            console.log(PhotonRef.myRoomActorsArray());\r\n            console.log(PhotonRef.myRoomActorsArray().length);\r\n            console.log(PhotonRef.myRoomActorsArray()[0].loadBalancingClient.userId);\r\n            console.log(PhotonRef.myRoom()._customProperties);\r\n            console.log(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]);\r\n            //#endregion\r\n\r\n           if(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]==true) //check if player who joined is spectate\r\n           {\r\n               MultiplayerController.Instance.JoinedRoom = true;\r\n               setTimeout(() => {cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\");}, 1000); //function in UIManager\r\n           }\r\n\r\n            if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false)\r\n            {\r\n                MultiplayerController.Instance.ProcessCounter();\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called remotely by photon when even player joins room\r\n            @method onActorJoin\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onActorJoin = function (actor) {\r\n\r\n            var _realPlayer = MultiplayerController.Instance.GetRealActors();\r\n\r\n            if(_realPlayer==MaxStudents) //when max player required to start game has been added\r\n            {\r\n                MultiplayerController.Instance.ResetRoomValues();\r\n                console.log(\"all required players joined, starting the game..\")\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"players found\");\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"starting game...\");\r\n                MultiplayerController.Instance.JoinedRoom=true;\r\n                setTimeout(() => {cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\");}, 1000); //function in ui manager\r\n                MultiplayerController.Instance.UpdateRoomCustomProperites(true,PhotonRef.myRoomActorCount(),false,false,false,null,false,0);\r\n                //PhotonRef.myRoom().setCustomProperty(\"Player\",PhotonRef.myRoomActorCount(),true);  \r\n            }\r\n            \r\n            // MultiplayerController.Instance.CheckCurrentActiveMasterClient(actor.actorNr);\r\n            // console.log(\"actor \" + actor.actorNr + \" joined\");\r\n            // console.error(\"Total Players: \"+PhotonRef.myRoomActorCount());\r\n            // console.log(PhotonRef.myRoom());\r\n        },\r\n\r\n        \r\n\r\n        /**\r\n            @summary function called remotely by photon when even player leaves a room\r\n            @method onActorLeave\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n            PhotonRef.onActorLeave = function (actor) {\r\n            if (!GameFinished && !RestartSpectate) {\r\n                if (MultiplayerController.Instance.JoinedRoom == true) {\r\n                    if (!actor.customProperties.PlayerSessionData.GameOver) {\r\n                        if (!MultiplayerController.Instance.LeaveRoom) {\r\n                            if (actor.customProperties.RoomEssentials.IsSpectate) {\r\n                                console.log(\"spectator left, so dont mind, cont game\");\r\n                                console.log(\"actor \" + actor.actorNr + \" left\");\r\n                                GamePlayReferenceManager.Instance.Get_GameManager().CheckTurnOnSpectateLeave_SpectateManager();\r\n                            }\r\n                            else{\r\n                                \r\n                                var PhotonReferece = MultiplayerController.Instance.getPhotonRef();\r\n                                var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n                                if (_manager) {\r\n                                    var _playerTurn = _manager.GetTurnNumber();\r\n                                }\r\n                                var _uIGameManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n                                \r\n                                var _realPlayer = MultiplayerController.Instance.GetRealActors();\r\n                                var _initialSetupDone = PhotonReferece.myRoom().getCustomProperty(\"InitialSetup\");\r\n\r\n                                if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n                                    console.log(\"actor \" + actor.actorNr + \" left\");\r\n                                    if (_realPlayer > 1) {\r\n                                        MultiplayerController.Instance.HandlePlayerLeave(actor, PhotonReferece, _manager, _playerTurn, _initialSetupDone,false);\r\n                                        if (_uIGameManager) {\r\n                                            _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n                                        }\r\n                                    } else\r\n                                    {\r\n                                        if (_initialSetupDone) {\r\n                                            for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n                                                if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n                                                    _manager.PlayerGameInfo[index].IsActive = false;\r\n                                                    MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n                                            _manager.GameOver(true);\r\n                                        } else\r\n                                        {\r\n                                            if(_uIGameManager)\r\n                                                MultiplayerController.Instance.RestartGame(1200);\r\n                                            else\r\n                                                MultiplayerController.Instance.RestartGame(0);\r\n                                        }\r\n\r\n                                        if (_uIGameManager) {\r\n                                            _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n                                        }\r\n                                    }\r\n                                \r\n                                    // MultiplayerController.Instance.JoinedRoom = false;\r\n                                    // MultiplayerController.Instance.ResetState();\r\n                                    // MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n                                    // if (MultiplayerController.Instance != null) {\r\n                                    //     if (MultiplayerController.Instance.getSceneName() == \"GamePlay\") //if scene is gameplay let player finish game forcefully\r\n                                    //     {\r\n                                    //         GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"other player \" + actor.name + \" has left\", 2000);\r\n                                    //         setTimeout(() => {\r\n                                    //             GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n                                    //             GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n                                    //             GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n                                    //             GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n                                    //             GamePlayReferenceManager.Instance.RemovePersistNode();\r\n                                    //             cc.director.loadScene(\"MainMenu\");\r\n                                    //         }, 2100);\r\n                                    //     }\r\n                                    // }\r\n                                } else\r\n                                {\r\n                                    _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n                                    \r\n                                    if (_realPlayer > 1) {\r\n                                        MultiplayerController.Instance.HandlePlayerLeave(actor, PhotonReferece, _manager, _playerTurn, _initialSetupDone,true);\r\n                                    }\r\n                                    else {\r\n                                        if (_initialSetupDone) {\r\n                                            _manager.GameOver(true);\r\n                                        }\r\n                                    }\r\n                                }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n                if (MultiplayerController.Instance.JoinedRoom == true && !IsGameStarted) {\r\n                    if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n                        MultiplayerController.Instance.ProcessCounter();\r\n                    }\r\n\r\n                    if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == true) {\r\n                        if (PhotonRef.myRoomActorCount() == 1 && !RestartSpectate) {\r\n                            RestartSpectate = true;\r\n                            MultiplayerController.Instance.RestartGame(1500);\r\n                            console.error(\"reatrted\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon when even player own properties got changed\r\n            @method onActorPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onActorPropertiesChange = function (actor) {\r\n            \r\n        }\r\n\r\n        /**\r\n            @summary function called by photon when even player room properties got changed\r\n            @method onMyRoomPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onMyRoomPropertiesChange = function (_data) {\r\n           // console.log(_data);\r\n        }\r\n\r\n         /**\r\n            @summary function called by photon to handle errors\r\n            @method onError\r\n            @param {object} errorCode\r\n             @param {object} errorMsg\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onError = function (errorCode, errorMsg) {\r\n           console.log(\"Error \" + errorCode + \": \" + errorMsg);\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever an event is received with some data\r\n            @method onEvent\r\n            @param {object} code\r\n            @param {object} content\r\n            @param {object} actorNr\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onEvent = function (code, content, actorNr) {\r\n            MultiplayerController.Instance.CheckReferences();\r\n            switch (code) {\r\n                case 1://receving playerdata info\r\n                    console.log(\"received player data\")\r\n                    var PlayerInfoData = content.PlayerInfo;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(1,senderName,senderID,PlayerInfoData);\r\n                   \r\n                    break;\r\n                case 2: //start turn raise event\r\n                    console.log(\"received start turn event\")\r\n                    var _Turn = content.TurnNumber;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(2,senderName,senderID,_Turn);\r\n                          \r\n                    break;\r\n                case 3: // dice count\r\n                    console.log(\"received dice count\")\r\n                    var _dice = content.DiceCount;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(3,senderName,senderID,_dice);\r\n\r\n                    break;\r\n                case 4: //receing user id of player who has completed turn\r\n                    console.log(\"received player turn completed\")\r\n                    var _ID = content.UID;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(4,senderName,senderID,_ID);\r\n\r\n                    break;\r\n                case 5: //receiving card data (index) so other users can sync them\r\n                    console.log(\"received card data\")\r\n                    var _card = content.CardData;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(5,senderName,senderID,_card);\r\n\r\n                    break;\r\n                case 6: //receive game over data\r\n                    console.log(\"received game over call\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(6,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 7: //receive one Question data\r\n                    console.log(\"received one question data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(7,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 8: //receive one Question response data\r\n                    console.log(\"received one questio response data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(8,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 9: //receive bankrupt data\r\n                    console.log(\"received bankrupt data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(9,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 10: //receive backspace data\r\n                    console.log(\"received backspace data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(10,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 11: //receiveing partnership offer\r\n                    console.log(\"received partnership offer data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(11,senderName,senderID,_data);\r\n\r\n                    break;\r\n                 case 12: //receiveing partnership answer data\r\n                    console.log(\"received partnership anwser data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(12,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 13: //receiving profit/loss data for partner\r\n                    console.log(\"received partnership anwser data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(13,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 14: //receiving room complete data to start Game\r\n                    console.log(\"received partnership anwser data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.RoomCompleted();\r\n\r\n                    break;\r\n                case 15: //receiving payday info\r\n                    console.log(\"received info\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(15,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 16: //receiving game over data to sync\r\n                    console.log(\"received game over sync data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(16,senderName,senderID,_data);\r\n\r\n                    break;\r\n                default:\r\n            }\r\n        }    \r\n     },\r\n     \r\n});\r\n\r\nmodule.exports=MultiplayerController;"]}