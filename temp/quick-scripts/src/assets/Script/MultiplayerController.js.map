{"version":3,"sources":["assets\\Script\\MultiplayerController.js"],"names":["PhotonRef","stateText","GamePlayReferenceManager","ShowRoom","GameFinished","RoomProperty","cc","Class","name","properties","Player","type","Integer","serializable","InitialSetup","Boolean","PlayerGameInfo","Text","TurnNumber","App_Info","AppID","tooltip","AppVersion","Wss","displayName","MasterServer","FbAppID","MultiplayerController","Component","PhotonAppInfo","MaxPlayers","MaxSpectators","ModeSelection","statics","Instance","ResetAllData","onLoad","Init_MultiplayerController","ToggleModeSelection","_val","GetSelectedMode","game","addPersistRootNode","node","InitializePhoton","console","log","AppInfo","DemoLoadBalancing","LeaveRoom","RoomName","Message","JoinedRoom","CheckReferences","require","RemovePersistNode","removePersistRootNode","getSceneName","sceneName","_sceneInfos","i","length","uuid","director","_scene","_id","url","substring","lastIndexOf","match","ToggleShowRoom_Bool","_state","ToggleLeaveRoom_Bool","getPhotonRef","PhotonActor","myActor","RoomActors","myRoomActorsArray","CheckSpectate","customProperties","RoomEssentials","IsSpectate","AppId","FbAppId","RequestConnection","state","isConnectedToMaster","isInLobby","start","DisconnectPhoton","isJoinedToRoom","disconnect","ResetState","OnRoomNameChange","OnMessageChange","msg","UpdateRoomCustomProperites","_playerUpdate","_playerValue","_initialSetupUpdate","_initialSetupValue","_playerGameInfoUpdate","_playerGameInfoValue","_turnNumberUpdate","_turnNumbervalue","myRoom","setCustomProperty","CreateRoom","_data","roomOptions","Get_MultiplayerController","Get_ServerBackend","StudentData","setUserId","userID","RoomID","Math","floor","random","Date","now","createRoom","JoinRoom","_roomName","joinRoom","JoinRandomRoom","joinRandomRoom","SendCardData","raiseEvent","CardData","senderName","senderID","actorNr","receivers","Photon","LoadBalancing","Constants","ReceiverGroup","All","err","error","message","SendGameOver","Data","SendBankruptData","Others","SendData","PlayerInfo","SendOneQuestionData","SendPartnerProfitLoss","SendOneQuestionResponseData","DiceRollEvent","DiceCount","SendGoBackSpaceData","SendPartnerShipOfferData","SendPartnerShipAnswerData","SyncTurnCompletion","UID","StartTurn","ShowToast","CallRecieveEvent","_eventCode","_senderName","_senderID","InstanceNull","Get_MultiplayerSyncManager","setTimeout","ReceiveEvent","DisconnectData","RestartGame","Get_GameManager","ClearDisplayTimeout","loadScene","update","dt","onStateChange","LBC","LoadBalancingClient","StateToName","systemEvent","emit","Get_UIManager","ToggleProfileScreen_SpectateUI","ToggleRoomScreen_SpectateUI","logger","debug","mess","info","param","warn","param1","param2","param3","ToggleLoadingNode","exception","format","onRoomList","rooms","ResetRoomList","UpdateRoomsList_SpectateUI","playerCount","onRoomListUpdate","roomsUpdated","roomsAdded","roomsRemoved","onJoinRoom","loadBalancingClient","userId","_customProperties","getCustomProperty","onActorJoin","actor","myRoomActorCount","onActorLeave","PlayerSessionData","GameOver","CheckTurnOnSpectateLeave_SpectateManager","Get_GameplayUIManager","onActorPropertiesChange","onMyRoomPropertiesChange","onError","errorCode","errorMsg","onEvent","code","content","PlayerInfoData","_Turn","_dice","_ID","_card","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//Global Variables\r\nvar PhotonRef;\r\nvar stateText=\"\";\r\nvar GamePlayReferenceManager=null;\r\nvar ShowRoom = false;\r\nvar GameFinished = false;\r\n\r\n//---------------------------------------class data related to RoomProperty------------------------------------------------//\r\nvar RoomProperty=cc.Class({\r\n    name:\"RoomProperty\",\r\n    properties: {\r\n        Player: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        },\r\n        InitialSetup: {\r\n            default: false,        \r\n            type: cc.Boolean,\r\n            serializable: true,\r\n        },\r\n        PlayerGameInfo: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n        },\r\n        TurnNumber: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        }\r\n    },\r\n});\r\n//---------------------------------------class data related to App_Info------------------------------------------------//\r\nvar App_Info=cc.Class({\r\n    name:\"App_Info\",\r\n    properties: {\r\n        AppID: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"App id form photon dashboard\"\r\n        },\r\n        AppVersion: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"App version for photon\"\r\n        },\r\n        Wss: {\r\n            displayName:\"IsSecure\",\r\n            default: false,        \r\n            type: cc.Boolean,\r\n            serializable: true,\r\n            tooltip:\"If photon should use secure and reliable protocols\"\r\n        },\r\n        MasterServer: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"master server for photon to connect\"\r\n        },\r\n        FbAppID: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"FB app id used for FB autherization\"\r\n        },\r\n    },\r\n});\r\n//---------------------------------------class data related to MultiplayerController----------------------------------//\r\nvar MultiplayerController=cc.Class({\r\n    name:\"MultiplayerController\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PhotonAppInfo: {\r\n            default: null,        \r\n            type: App_Info,\r\n            serializable: true,},\r\n        MaxPlayers: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n        MaxSpectators: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n        ModeSelection: { // 1 means bot , 2 means real players\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n\r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    ResetAllData()\r\n    {\r\n         PhotonRef=null;\r\n         stateText=\"\";\r\n         GamePlayReferenceManager=null;\r\n        ShowRoom = false;\r\n        GameFinished = false;\r\n    },\r\n    //this function is called when instance of this class is created\r\n    onLoad() {\r\n        this.ResetAllData();\r\n        this.Init_MultiplayerController();\r\n    },\r\n\r\n    ToggleModeSelection(_val)// 1 means bot , 2 means real players\r\n    {\r\n        this.ModeSelection=_val;\r\n    },\r\n\r\n    GetSelectedMode()\r\n    {\r\n        return this.ModeSelection;\r\n    },\r\n\r\n    /**\r\n    @summary Initialize some essentails data for multiplayer controller class\r\n    @method Init_MultiplayerController\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    Init_MultiplayerController()\r\n    {\r\n        if(!MultiplayerController.Instance)\r\n        {\r\n            cc.game.addPersistRootNode(this.node);\r\n            this.InitializePhoton();\r\n            console.log(AppInfo);\r\n            PhotonRef = new DemoLoadBalancing();\r\n            MultiplayerController.Instance=this;\r\n        }\r\n\r\n        this.LeaveRoom=false;\r\n        this.RoomName=\"\";\r\n        this.Message=\"\";\r\n        ShowRoom=false;\r\n        this.JoinedRoom=false;\r\n        this.CheckReferences();\r\n    },\r\n\r\n    /**\r\n    @summary check reference to some variables and classes\r\n    @method CheckReferences\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n      /**\r\n    @summary remove persist node when want to restart scene\r\n    @method RemovePersistNode\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    RemovePersistNode()\r\n    {\r\n        MultiplayerController.Instance=null;\r\n        cc.game.removePersistRootNode(this.node);\r\n    },\r\n\r\n    /**\r\n    @summary function to get name of current opened scene\r\n    @method getSceneName\r\n    @param none\r\n    @returns {string} sceneName\r\n    **/ \r\n    getSceneName: function() {\r\n        var sceneName;\r\n        var _sceneInfos = cc.game._sceneInfos;\r\n        for (var i = 0; i < _sceneInfos.length; i++) {\r\n            if(_sceneInfos[i].uuid == cc.director._scene._id) {\r\n                sceneName = _sceneInfos[i].url;\r\n                sceneName = sceneName.substring(sceneName.lastIndexOf('/')+1).match(/[^\\.]+/)[0];\r\n            }\r\n    \r\n        }\r\n        return sceneName;\r\n    },\r\n\r\n    /**\r\n    @summary function to set \"ShowRoom\" bool value\r\n    @method ToggleShowRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/ \r\n    ToggleShowRoom_Bool(_state)\r\n    {\r\n        ShowRoom=_state;\r\n    },\r\n\r\n    /**\r\n    @summary function to set \"LeaveRoom\" bool value\r\n    @method ToggleLeaveRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/ \r\n    ToggleLeaveRoom_Bool(_state)\r\n    {\r\n        this.LeaveRoom=_state;\r\n    },\r\n     \r\n    /**\r\n    @summary returns Photon \"PhotonRef\" instance created by multiplayer class\r\n    @method getPhotonRef\r\n    @param none\r\n    @returns {object} PhotonRef\r\n    **/ \r\n    getPhotonRef()\r\n    {\r\n        return PhotonRef;\r\n    },\r\n\r\n    /**\r\n    @summary returns myActor instance created by photon\r\n    @method PhotonActor\r\n    @param none\r\n    @returns {object} Actor\r\n    **/ \r\n    PhotonActor()\r\n    {\r\n        return PhotonRef.myActor();\r\n    },\r\n\r\n    /**\r\n    @summary returns myRoomActorsArray created by photon\r\n    @method RoomActors\r\n    @param none\r\n    @returns {object} Actor\r\n    **/ \r\n    RoomActors()\r\n    {\r\n        return PhotonRef.myRoomActorsArray();\r\n    },\r\n\r\n    /**\r\n    @summary returns isSpectate variable from custom property of current actor\r\n    @method CheckSpectate\r\n    @param none\r\n    @returns {boolean} isSpectate\r\n    **/ \r\n    CheckSpectate()\r\n    {\r\n         return PhotonRef.myActor().customProperties.RoomEssentials.IsSpectate;\r\n    },\r\n\r\n     /**\r\n    @summary Initialize photon with appid,app version, Wss etc\r\n    @method InitializePhoton\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    InitializePhoton()\r\n    {\r\n        AppInfo.AppId=this.PhotonAppInfo.AppID;\r\n        AppInfo.AppVersion=this.PhotonAppInfo.AppVersion;\r\n        AppInfo.Wss=this.PhotonAppInfo.Wss;\r\n        AppInfo.MasterServer=this.PhotonAppInfo.MasterServer;\r\n        AppInfo.FbAppId=this.PhotonAppInfo.FbAppID;  \r\n    },\r\n\r\n   /**\r\n    @summary send connection request to photon\r\n    @method RequestConnection\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    RequestConnection () {\r\n        if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true)\r\n            console.log(\"already connected\");\r\n        else\r\n            PhotonRef.start();       \r\n    },\r\n\r\n    /**\r\n    @summary Disconnect from photon\r\n    @method DisconnectPhoton\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    DisconnectPhoton () {\r\n    if(PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true  ||PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n        PhotonRef.disconnect();   \r\n        this.JoinedRoom=false;\r\n        //PhotonRef.leaveRoom();\r\n        this.ResetState();\r\n        }\r\n        else\r\n        {\r\n            console.log(\"not inside any room or lobby or connected to photon\");\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary reseting few values\r\n    @method ResetState\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    ResetState()\r\n    {\r\n        this.LeaveRoom=false;    \r\n        this.JoinedRoom=false;\r\n        ShowRoom=false;\r\n        stateText=\"\";\r\n    },\r\n\r\n    /**\r\n    @summary called when room name got input from game\r\n    @method OnRoomNameChange\r\n    @param {string} name\r\n    @returns no return\r\n   **/ \r\n    OnRoomNameChange(name)\r\n    {\r\n        this.RoomName=name;\r\n    },\r\n\r\n    /**\r\n    @summary called when message window got input from game\r\n    @method OnMessageChange\r\n    @param {string} msg\r\n    @returns no return\r\n   **/ \r\n    OnMessageChange(msg)\r\n    {\r\n        this.Message=msg;\r\n    },\r\n\r\n    /**\r\n    @summary update custom room properties\r\n    @method UpdateRoomCustomProperites\r\n    @returns no return\r\n   **/ \r\n    UpdateRoomCustomProperites(_playerUpdate=false,_playerValue=0,_initialSetupUpdate=false,_initialSetupValue=false,_playerGameInfoUpdate=false,_playerGameInfoValue=null,_turnNumberUpdate=false,_turnNumbervalue=0)\r\n    {\r\n        if(_playerUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"Player\",_playerValue,true);\r\n\r\n        if(_initialSetupUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"InitialSetup\",_initialSetupValue,true);\r\n        \r\n        if(_playerGameInfoUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"PlayerGameInfo\",_playerGameInfoValue,true);\r\n        \r\n        if(_turnNumberUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"TurnNumber\",_turnNumbervalue,true);\r\n    },\r\n\r\n    /**\r\n    @summary create room request\r\n    @method CreateRoom\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    CreateRoom () {\r\n        if(PhotonRef.isConnectedToMaster()==true ||PhotonRef.isInLobby()==true || PhotonRef.state==8)\r\n        {\r\n            if(PhotonRef.isJoinedToRoom()==false)\r\n            {\r\n                    var _data=new RoomProperty();\r\n                    _data.Player=0;\r\n\r\n                    var roomOptions ={\r\n                      \"isVisible\":true, \r\n                      \"isOpen\":true,\r\n                      \"maxPlayers\":this.MaxPlayers+this.MaxSpectators,\r\n                      \"customGameProperties\":_data\r\n                    };\r\n\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n                    PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n                    PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n                    PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n                    PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", {IsSpectate:false});\r\n                    PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n                    var RoomID=Math.floor(Math.random() * Date.now());\r\n\r\n                    PhotonRef.createRoom(\"Room_\"+RoomID,roomOptions); \r\n            }\r\n            else\r\n            {\r\n                console.log(\"already joined the room\");\r\n            }\r\n\r\n        }else\r\n        {\r\n            console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n        }\r\n            \r\n    },\r\n\r\n    /**\r\n    @summary join room request by name\r\n    @method JoinRoom\r\n    @param {string} _roomName\r\n    @returns no return\r\n   **/ \r\n    JoinRoom (_roomName) {\r\n        if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true ||PhotonRef.state==8)\r\n        {\r\n            if(PhotonRef.isJoinedToRoom()==false || PhotonRef.state!=8)\r\n            {\r\n                var roomOptions ={\r\n                    \"isVisible\":true, \r\n                    \"isOpen\":false,\r\n                    \"maxPlayers\":this.MaxPlayers+this.MaxSpectators\r\n                    //\"customGameProperties\":{\"RoomEssentials\": {IsSpectate:true}}\r\n                  };\r\n\r\n                  GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n                  PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n                  PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n                  PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n                  PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", {IsSpectate:true});\r\n                  PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n                  PhotonRef.joinRoom(_roomName,roomOptions);\r\n            }\r\n            else\r\n            {\r\n                console.log(\"already joined the room\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n        }\r\n            \r\n    },\r\n\r\n     /**\r\n    @summary join random room\r\n    @method JoinRandomRoom\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n  JoinRandomRoom () {\r\n    if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true ||PhotonRef.state==8)\r\n    {\r\n        if(PhotonRef.isJoinedToRoom()==false || PhotonRef.state!=8)\r\n        {  \r\n            var _data=new RoomProperty();\r\n            _data.Player=0;\r\n            \r\n            var roomOptions ={\r\n                //\"expectedMaxPlayers\":this.MaxPlayers+MaxSpectators,\r\n                \"expectedCustomRoomProperties\":_data\r\n              };\r\n            \r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n            PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n            PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n            PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n            PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", {IsSpectate:false});\r\n            PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n            PhotonRef.joinRandomRoom(roomOptions);\r\n            \r\n        }\r\n        else\r\n        {\r\n            console.log(\"already joined the room\");\r\n        }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n    }\r\n        \r\n},\r\n\r\n\r\n    /**\r\n    @summary Send card index over network\r\n    @method SendCardData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendCardData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending card data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(5, { CardData: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n   /**\r\n    @summary Send game over call\r\n    @method SendGameOver\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendGameOver (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending game over call\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(6, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n    /**\r\n    @summary Send backrupt data\r\n    @method SendBankruptData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendBankruptData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending bankrupcy data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(9, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n    /**\r\n    @summary Send Player Data over network\r\n    @method SendData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending player data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(1, { PlayerInfo: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question Data over network\r\n    @method SendOneQuestionData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendOneQuestionData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(7, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n    },\r\n  \r\n  /**\r\n    @summary Send profit or loss to your pasrtner\r\n    @method SendPartnerProfitLoss\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendPartnerProfitLoss (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(13, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question response over network\r\n    @method SendOneQuestionResponseData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendOneQuestionResponseData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question response data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(8, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send dice data\r\n    @method DiceRollEvent\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  DiceRollEvent (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending dice count\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(3, { DiceCount: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n   /**\r\n    @summary send go back spaces data\r\n    @method SendGoBackSpaceData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendGoBackSpaceData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"send go back spaces data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(10, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary sending open invitation to all players for partner ship\r\n    @method SendPartnerShipOfferData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendPartnerShipOfferData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending partner ship offer\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(11, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n    },\r\n  \r\n  /**\r\n    @summary sending partner answer data (accept or reject)\r\n    @method SendPartnerShipAnswerData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendPartnerShipAnswerData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending partenrship answer data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(12, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send user id of player to all other who had completed their turn\r\n    @method SyncTurnCompletion\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n    SyncTurnCompletion (_data) {\r\n        if(PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n            console.log(\"sending turn completion data\");\r\n            console.log(_data);\r\n                try {\r\n                    PhotonRef.raiseEvent(4, { UID: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n                }\r\n                catch (err) {\r\n                    console.error(\"error: \" + err.message);\r\n                }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not in room.\");\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary Start Turn for initial turn\r\n    @method StartTurn\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n    StartTurn (_data) {\r\n        if(PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n            console.log(\"Starting Turn\");\r\n            console.log(_data);\r\n                try {\r\n                    PhotonRef.raiseEvent(2, { TurnNumber: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n                }\r\n                catch (err) {\r\n                    console.error(\"error: \" + err.message);\r\n                }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not in room.\");\r\n        }\r\n\r\n    },\r\n  \r\n     /**\r\n    @summary Show toast message on the console\r\n    @method ShowToast\r\n    @param {string} message message to be shown \r\n    @returns no return\r\n   **/ \r\n    ShowToast:function(msg)\r\n    {\r\n        console.log(\"toast message: \"+msg);\r\n    },\r\n\r\n     /**\r\n    @summary Receive event from photon raise on \r\n    @method CallRecieveEvent\r\n    @returns no return\r\n   **/ \r\n    CallRecieveEvent:function(_eventCode,_senderName,_senderID,_data)\r\n    {\r\n        var InstanceNull=true;\r\n\r\n        //to check if instance is null in case class instance is not loaded and its receives callback\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager()==null)\r\n        {\r\n            InstanceNull=true;\r\n            setTimeout(() => {\r\n                this.CallRecieveEvent(_eventCode,_senderName,_senderID,_data);\r\n            }, 50);\r\n        }\r\n        else\r\n        {\r\n            InstanceNull=false;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().ReceiveEvent(_eventCode,_senderName,_senderID,_data);\r\n        }\r\n    },\r\n\r\n    DisconnectData()\r\n    {\r\n        GameFinished = true;\r\n        // MultiplayerController.Instance.JoinedRoom=false;\r\n        // MultiplayerController.Instance.ResetState();\r\n        // MultiplayerController.Instance.DisconnectPhoton();\r\n    },\r\n\r\n    RestartGame()\r\n        {\r\n            MultiplayerController.Instance.JoinedRoom=false;\r\n            MultiplayerController.Instance.ResetState();\r\n            MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.RemovePersistNode();\r\n            MultiplayerController.Instance.RemovePersistNode();\r\n           // GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n            cc.director.loadScene(\"MainMenu\");\r\n        },\r\n    //called every frame\r\n    update (dt) {\r\n\r\n        /**\r\n            @summary function called by photon whenever there is some change in connection state\r\n            @method onStateChange\r\n            @param {object} state\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onStateChange=function(state)\r\n        {\r\n            //#region Connection States\r\n            //state 1 : connectingToNameServer\r\n            //State 2 : ConnectedToNameServer\r\n            //State 3 : ConnectingToMasterServer\r\n            //State 4 : ConnectedToMasterServer\r\n            //State 5:  JoinedLobby\r\n            //State 6 : ConnectingToGameserver\r\n            //State 7 : ConnectedToGameserver\r\n            //State 8 : Joined\r\n            //State 10: Disconnected \r\n            //#endregion\r\n\r\n            var LBC = Photon.LoadBalancing.LoadBalancingClient;\r\n            console.log(\"StateCode: \"+state+\" \"+LBC.StateToName(state));\r\n\r\n            if(state==1)\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"connecting to server...\");\r\n            else if(state==4)\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"connected to server\");\r\n            else if(state==5) //has joined lobby\r\n            {\r\n                if(ShowRoom==false)\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"waiting for other players...\");\r\n                    MultiplayerController.Instance.JoinRandomRoom();\r\n                }\r\n                else if(ShowRoom==true)\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"showing rooms list...\");\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_UIManager().ToggleProfileScreen_SpectateUI(false);\r\n                        GamePlayReferenceManager.Instance.Get_UIManager().ToggleRoomScreen_SpectateUI(true);\r\n                    }, 1000);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives debug\r\n            @method debug\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.debug=function(mess)\r\n        {\r\n            console.log(mess);\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives info\r\n            @method info\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.info = function (mess,param) {\r\n           console.log(mess+param);\r\n           stateText+= mess+\" \"+param+\"\\n\";\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives warn\r\n            @method warn\r\n            @param {object} mess\r\n            @param {object} param1\r\n            @param {object} param2\r\n            @param {object} param3\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.warn = function (mess,param1,param2,param3) {\r\n            console.log(mess+\" \"+param1+\" \"+param2+\" \"+param3);\r\n\r\n            if(param1==225) //no room found\r\n            {\r\n                console.log(\"no random room was found, creating one\");\r\n                MultiplayerController.Instance.CreateRoom();\r\n            }\r\n\r\n            if(param1==226) //room does not exists or is full\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ToggleLoadingNode(false);\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ShowToast(\"Room is full, please select any other room to spectate.\");\r\n            }\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever its logger receives error\r\n            @method error\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.error = function (mess,param) {\r\n            console.log(mess);\r\n         }\r\n\r\n          /**\r\n            @summary function called by photon whenever its logger receives exception\r\n            @method exception\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.exception = function (mess) {\r\n            console.log(mess);\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever its logger receives some format\r\n            @method format\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.format = function (mess) {\r\n            console.log(mess);\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever player joins lobby\r\n            @method onRoomList\r\n            @param {object} rooms\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.onRoomList = function (rooms) {\r\n            stateText+=\"\\n\"+\"Rooms List:\"+\"\\n\";\r\n\r\n            if(rooms.length==0)\r\n            {\r\n                stateText+=\"No rooms in lobby.\"+\"\\n\";\r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n\r\n                for (var i = 0; i < rooms.length; ++i) {\r\n                    GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name,rooms[i].playerCount);\r\n                    console.log(\"Room name: \"+rooms[i].name);\r\n                    stateText+=\"Room: \"+rooms[i].name+\"\\n\";\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever there is change in rooms list (room added,updated,removed etc)\r\n            @method onRoomListUpdate\r\n            @param {object} rooms\r\n            @param {object} roomsUpdated\r\n            @param {object} roomsAdded\r\n            @param {object} roomsRemoved\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onRoomListUpdate = function (rooms, roomsUpdated, roomsAdded, roomsRemoved) {\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n       \r\n            for (var i = 0; i < rooms.length; ++i) {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name,rooms[i].playerCount);\r\n                console.log(\"Room name: \"+rooms[i].name);\r\n                stateText+=\"Room: \"+rooms[i].name+\"\\n\";\r\n            }\r\n            console.log(\"Rooms List updated: \" + roomsUpdated.length + \" updated, \" + roomsAdded.length + \" added, \" + roomsRemoved.length + \" removed\");\r\n        }\r\n\r\n        /**\r\n            @summary function called locally by photon when even player joins room\r\n            @method onJoinRoom\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onJoinRoom = function () {\r\n            //#region Logs for game\r\n            console.log(\"Game \" + this.myRoom().name + \" joined\");           \r\n            console.log(PhotonRef.myActor());\r\n            console.log(PhotonRef.myRoom());\r\n            console.log(PhotonRef.myRoomActorsArray());\r\n            console.log(PhotonRef.myRoomActorsArray().length);\r\n            console.log(PhotonRef.myRoomActorsArray()[0].loadBalancingClient.userId);\r\n            console.log(PhotonRef.myRoom()._customProperties);\r\n            console.log(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]);\r\n            //#endregion\r\n\r\n           if(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]==true) //check if player who joined is spectate\r\n           {\r\n               MultiplayerController.Instance.JoinedRoom=true;\r\n               setTimeout(() => {cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\");}, 1000); //function in UIManager\r\n           }\r\n        }\r\n\r\n        /**\r\n            @summary function called remotely by photon when even player joins room\r\n            @method onActorJoin\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onActorJoin = function (actor) {\r\n            if(PhotonRef.myRoomActorCount()==MultiplayerController.Instance.MaxPlayers) //when max player required to start game has been added\r\n            {\r\n                console.log(\"all required players joined, starting the game..\")\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"players found\");\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"starting game...\");\r\n                MultiplayerController.Instance.JoinedRoom=true;\r\n                setTimeout(() => {cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\");}, 1000); //function in ui manager\r\n                MultiplayerController.Instance.UpdateRoomCustomProperites(true,PhotonRef.myRoomActorCount(),false,false,false,null,false,0);\r\n                //PhotonRef.myRoom().setCustomProperty(\"Player\",PhotonRef.myRoomActorCount(),true);  \r\n            }\r\n            \r\n            console.log(\"actor \" + actor.actorNr + \" joined\");\r\n            console.error(\"Total Players: \"+PhotonRef.myRoomActorCount());\r\n            console.log(PhotonRef.myRoom());\r\n        },\r\n\r\n        \r\n\r\n        /**\r\n            @summary function called remotely by photon when even player leaves a room\r\n            @method onActorLeave\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n            PhotonRef.onActorLeave = function (actor) {\r\n            if (!GameFinished) {\r\n                if (MultiplayerController.Instance.JoinedRoom == true) {\r\n                    if (!actor.customProperties.PlayerSessionData.GameOver) {\r\n                        if (!MultiplayerController.Instance.LeaveRoom) {\r\n                            if (actor.customProperties.RoomEssentials.IsSpectate) {\r\n                                console.log(\"spectator left, so dont mind, cont game\");\r\n                                console.log(\"actor \" + actor.actorNr + \" left\");\r\n                                GamePlayReferenceManager.Instance.Get_GameManager().CheckTurnOnSpectateLeave_SpectateManager();\r\n                            }\r\n                            else {\r\n                                console.log(\"actor \" + actor.actorNr + \" left\");\r\n\r\n                                MultiplayerController.Instance.JoinedRoom = false;\r\n                                MultiplayerController.Instance.ResetState();\r\n                                MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n                                if (MultiplayerController.Instance.getSceneName() == \"GamePlay\") //if scene is gameplay let player finish game forcefully\r\n                                {\r\n                                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"other player \" + actor.name + \" has left\", 2000);\r\n                                    setTimeout(() => {\r\n                                        GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n                                        GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n                                        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n                                        GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n                                        GamePlayReferenceManager.Instance.RemovePersistNode();\r\n                                        cc.director.loadScene(\"MainMenu\");\r\n                                    }, 2100);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon when even player own properties got changed\r\n            @method onActorPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onActorPropertiesChange = function (actor) {\r\n            \r\n        }\r\n\r\n        /**\r\n            @summary function called by photon when even player room properties got changed\r\n            @method onMyRoomPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onMyRoomPropertiesChange = function () {\r\n            \r\n        }\r\n\r\n         /**\r\n            @summary function called by photon to handle errors\r\n            @method onError\r\n            @param {object} errorCode\r\n             @param {object} errorMsg\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onError = function (errorCode, errorMsg) {\r\n           console.log(\"Error \" + errorCode + \": \" + errorMsg);\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever an event is received with some data\r\n            @method onEvent\r\n            @param {object} code\r\n            @param {object} content\r\n            @param {object} actorNr\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onEvent = function (code, content, actorNr) {\r\n            MultiplayerController.Instance.CheckReferences();\r\n            switch (code) {\r\n                case 1://receving playerdata info\r\n                    console.log(\"received player data\")\r\n                    var PlayerInfoData = content.PlayerInfo;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(1,senderName,senderID,PlayerInfoData);\r\n                   \r\n                    break;\r\n                case 2: //start turn raise event\r\n                    console.log(\"received start turn event\")\r\n                    var _Turn = content.TurnNumber;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(2,senderName,senderID,_Turn);\r\n                          \r\n                    break;\r\n                case 3: // dice count\r\n                    console.log(\"received dice count\")\r\n                    var _dice = content.DiceCount;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(3,senderName,senderID,_dice);\r\n\r\n                    break;\r\n                case 4: //receing user id of player who has completed turn\r\n                    console.log(\"received player turn completed\")\r\n                    var _ID = content.UID;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(4,senderName,senderID,_ID);\r\n\r\n                    break;\r\n                case 5: //receiving card data (index) so other users can sync them\r\n                    console.log(\"received card data\")\r\n                    var _card = content.CardData;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(5,senderName,senderID,_card);\r\n\r\n                    break;\r\n                case 6: //receive game over data\r\n                    console.log(\"received game over call\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(6,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 7: //receive one Question data\r\n                    console.log(\"received one question data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(7,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 8: //receive one Question response data\r\n                    console.log(\"received one questio response data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(8,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 9: //receive bankrupt data\r\n                    console.log(\"received bankrupt data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(9,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 10: //receive backspace data\r\n                    console.log(\"received backspace data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(10,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 11: //receiveing partnership offer\r\n                    console.log(\"received partnership offer data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(11,senderName,senderID,_data);\r\n\r\n                    break;\r\n                 case 12: //receiveing partnership answer data\r\n                    console.log(\"received partnership anwser data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(12,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 13: //receiving profit/loss data for partner\r\n                    console.log(\"received partnership anwser data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(13,senderName,senderID,_data);\r\n\r\n                    break;\r\n                default:\r\n            }\r\n        }    \r\n     },\r\n     \r\n});\r\n\r\nmodule.exports=MultiplayerController;"]}