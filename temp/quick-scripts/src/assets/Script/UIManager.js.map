{"version":3,"sources":["assets\\Script\\UIManager.js"],"names":["GamePlayReferenceManager","TweenRef","TotalRoom","ProfileUI","cc","Class","name","properties","NameLabel","displayName","type","Label","serializable","tooltip","EmailAddressLabel","DOBLabel","GradeLevelLabel","TeacherNameLabel","GamesWonLabel","FBPageLabel","TestTakenLabel","TestingAvgLabel","CashLabel","StatusNode","Node","PlayButtonNode","StatusLabel","PlayerCountInput","EditBox","SpectateUI","RoomScreenNode","ScrollBarContent","ProfileScreenNode","RoomPrefab","Prefab","UIManager","Component","UIProfile","ScreenNodes","TweenManagerRef","Logo","ToastNode","LoadingNode","ReferenceManagerRef","UISpectate","statics","Instance","onEnable","systemEvent","on","AssignProfileData","UpdateStatusWindow","ChangePanelScreen","onDisable","off","onLoad","getComponent","EmailText","PasswordText","nodeCounter","StatusText","TotalPlayers","ResetPlayerCountInput","GetTweenManagerReference","SlideInLoginComponents","RepeatLogoAnimation","CheckReferences","require","start","isNext","changeScreen","sceneName","FadeNodeInOut","length","setTimeout","ManipulateNodes","director","loadScene","counter","index","active","console","log","LoginScreenTween","children","RepeatTweenScale","string","OnplayerNumberChanged","_number","PlayGame","ShowToast","_players","parseInt","Get_MultiplayerController","ToggleShowRoom_Bool","MaxPlayers","getPhotonRef","isConnectedToMaster","isInLobby","emit","JoinRandomRoom","RequestConnection","msg","ExitConnecting","DisconnectPhoton","ToggleLoadingNode","state","LoginUser","anim","Animation","play","Get_ServerBackend","SetEmailText","text","SetPasswordText","ResponseType","StudentData","emailAddress","dOB","gradeLevel","teacherName","gamesWon","facebookPage","testsTaken","testingAverage","gameCash","ToggleRoomScreen_SpectateUI","_state","ToggleProfileScreen_SpectateUI","ShowAvailableRooms_SpectateUI","UpdateRoomsList_SpectateUI","_name","node","instantiate","parent","SetRoomName","SetPlayerCount","push","ResetRoomList","destroy","Exit_SpectateUI","_time","SelfToast","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["import Tweeen from 'TweenManager';\r\nvar GamePlayReferenceManager=null;\r\nvar TweenRef;\r\nvar TotalRoom=[];\r\n//-------------------------------------------class for Profile UI-------------------------//\r\nvar ProfileUI=cc.Class({\r\n    name:\"ProfileUI\",\r\n    properties: {   \r\n        NameLabel: {\r\n            displayName:\"Name\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to name label of profile\",},\r\n         EmailAddressLabel: {\r\n            displayName:\"EmailAddress\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference for email address label of profile \", },\r\n         DOBLabel: {\r\n            displayName:\"DOB\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to DOB label of profile\",},\r\n         GradeLevelLabel: {\r\n            displayName:\"GradeLevel\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Grade Level label of profile\",},\r\n         TeacherNameLabel: {\r\n            displayName:\"TeacherName\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Teacher Name label of profile\",},\r\n         GamesWonLabel: {\r\n            displayName:\"GamesWon\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to games won label of profile\",},\r\n         FBPageLabel: {\r\n            displayName:\"FBPage\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to facebook page label of profile\",},\r\n         TestTakenLabel: {\r\n            displayName:\"TestTaken\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to test taken label of profile\",},\r\n         TestingAvgLabel: {\r\n            displayName:\"TestingAverage\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Testing Average label of profile\",},\r\n        CashLabel: {\r\n            displayName:\"Cash\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to cash label of profile\",},\r\n        StatusNode: {\r\n            displayName:\"StatusScreen\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to Status Screen of profile\",},\r\n        PlayButtonNode: {\r\n            displayName:\"PlayButton\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to play button of profile\",},\r\n        StatusLabel: {\r\n            displayName:\"StatusText\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Status label of profile\",},\r\n        PlayerCountInput: {\r\n            displayName:\"PlayerCountInput\",\r\n            default: null,\r\n            type: cc.EditBox,\r\n            serializable: true,\r\n            tooltip: \"reference to PlayerCountInput of profile\",},\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for SpectateUI-------------------------//\r\nvar SpectateUI=cc.Class({\r\n    name:\"SpectateUI\",\r\n    properties: {   \r\n        RoomScreenNode: {\r\n            displayName:\"RoomScreen\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"Reference to the node of room screen\",},\r\n        ScrollBarContent: {\r\n            displayName:\"ScrollBarContent\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"Reference to the node of ScrollBarContent of room screen\",},\r\n        ProfileScreenNode: {\r\n            displayName:\"ProfileScreen\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"Reference to the node of profile screen\",},\r\n        RoomPrefab: {\r\n            displayName:\"RoomPrefab\",\r\n            default: null,\r\n            type: cc.Prefab,\r\n            serializable: true,\r\n            tooltip: \"Reference to the prefab of Room on room screen\",},\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for UIManager-------------------------//\r\nvar UIManager=cc.Class({\r\n    name:\"UIManager\",\r\n    extends: cc.Component,\r\n\r\n    properties: { \r\n        UIProfile: {\r\n            displayName:\"UIProfile\",\r\n            default: null,\r\n            type: ProfileUI,\r\n            serializable: true,\r\n            tooltip: \"reference to ProfileUI class intance\",},  \r\n        ScreenNodes: {\r\n            displayName:\"ScreenNodes\",\r\n            default: [],\r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip: \"reference to login screen node\",},\r\n         TweenManagerRef: {\r\n            displayName:\"TweenManagerRef\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for Tween Manager Script \", },\r\n         Logo: {\r\n            displayName:\"LogoNode\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the logo node\",},\r\n         ToastNode: {\r\n            displayName:\"ToastNode\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the toast node\",},\r\n         LoadingNode: {\r\n            displayName:\"LoadingNode\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the Loading Node\",},   \r\n        ReferenceManagerRef: {\r\n            displayName:\"ReferenceManagerRef\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the reference manager node\",},  \r\n        UISpectate: {\r\n            displayName:\"UISpectate\",\r\n            default: null,\r\n            type: SpectateUI,\r\n            serializable: true,\r\n            tooltip: \"reference to SpectateUI class intance\",},   \r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    onEnable: function () {\r\n        //events subscription to be called \r\n        cc.systemEvent.on('AssignProfileData', this.AssignProfileData, this);\r\n        cc.systemEvent.on('UpdateStatusWindow', this.UpdateStatusWindow, this);\r\n        cc.systemEvent.on('ChangePanelScreen', this.ChangePanelScreen, this);\r\n      },\r\n    \r\n    onDisable: function () {\r\n        cc.systemEvent.off('AssignProfileData', this.AssignProfileData, this);\r\n        cc.systemEvent.off('UpdateStatusWindow', this.UpdateStatusWindow, this);\r\n        cc.systemEvent.off('ChangePanelScreen', this.ChangePanelScreen, this);\r\n      },\r\n\r\n    onLoad () {\r\n        this.ReferenceManagerRef=this.ReferenceManagerRef.getComponent(\"GamePlayReferenceManager\");\r\n\r\n        UIManager.Instance=this;\r\n        TotalRoom=[];\r\n        //Private Variables\r\n        this.EmailText=\"\";\r\n        this.PasswordText=\"\";\r\n        this.nodeCounter=0;\r\n        this.StatusText=\"\";\r\n        this.TotalPlayers=\"\";\r\n        this.ResetPlayerCountInput();\r\n\r\n        this.GetTweenManagerReference();\r\n        this.SlideInLoginComponents();\r\n        this.RepeatLogoAnimation();\r\n        this.CheckReferences();\r\n    },\r\n\r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    ChangePanelScreen: function (isNext,changeScreen,sceneName) {\r\n        TweenRef.FadeNodeInOut(this.ScreenNodes[this.nodeCounter],0.55,255,0,\"quadInOut\");\r\n\r\n    if(changeScreen==false)\r\n    {\r\n        if(isNext==true)\r\n        {\r\n            if(this.nodeCounter<this.ScreenNodes.length)\r\n                this.nodeCounter=this.nodeCounter+1;\r\n        }else\r\n        {\r\n            if(this.nodeCounter>0)\r\n                this.nodeCounter=this.nodeCounter-1;\r\n        }\r\n        setTimeout(() => {this.ManipulateNodes(this.nodeCounter);}, 600);\r\n    }else\r\n    {\r\n        setTimeout(() => {cc.director.loadScene(sceneName);}, 600);\r\n    }},\r\n\r\n    ManipulateNodes: function (counter) {\r\n        for (let index = 0; index < this.ScreenNodes.length; index++) {\r\n            if(counter==index)\r\n            {\r\n                this.ScreenNodes[index].active=true;\r\n                console.log(\"seting it true\");\r\n                TweenRef.FadeNodeInOut(this.ScreenNodes[index],1.5,0,255,\"quadInOut\"); \r\n            }\r\n            else\r\n            {\r\n                this.ScreenNodes[index].active=false; \r\n            }         \r\n        }\r\n    },\r\n\r\n    SlideInLoginComponents: function () {\r\n        TweenRef.LoginScreenTween(this.ScreenNodes[this.nodeCounter].children[1],-1000);\r\n    },\r\n\r\n    RepeatLogoAnimation: function () {\r\n        TweenRef.RepeatTweenScale(this.Logo,1.1,1,0.8);\r\n    },\r\n\r\n    GetTweenManagerReference: function () {\r\n        TweenRef=this.TweenManagerRef.getComponent(\"TweenManager\");\r\n    },\r\n\r\n    ResetPlayerCountInput()\r\n    {\r\n        this.UIProfile.PlayerCountInput.string=\"\";\r\n        this.TotalPlayers=\"\";\r\n    },\r\n\r\n    OnplayerNumberChanged(_number)\r\n    {\r\n        this.TotalPlayers=_number;\r\n    },\r\n\r\n    PlayGame:function()\r\n    {  \r\n        if(this.TotalPlayers==\"\")\r\n        {\r\n            this.ShowToast(\"please enter player amount for multiplayer from 2-6, make sure to have same amount on different connecting devices if you want to connect them.\",3500);\r\n        }\r\n        else\r\n        {\r\n            var _players=parseInt(this.TotalPlayers);\r\n            if(_players>=2 && _players<=6)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleShowRoom_Bool(false);\r\n                this.UIProfile.StatusNode.active=true;\r\n                //this.UIProfile.PlayButtonNode.active=false;\r\n                this.UIProfile.StatusLabel.string=\"\";\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=_players;\r\n                \r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isConnectedToMaster() || GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isInLobby())\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"waiting for other players...\");\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().JoinRandomRoom();\r\n                }\r\n                else\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().RequestConnection();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.ResetPlayerCountInput();\r\n                this.ShowToast(\"please enter player amount for multiplayer from 2-6, make sure to have same amount on different connecting devices if you want to connect them.\",3500);\r\n            }\r\n        }\r\n    },\r\n\r\n    UpdateStatusWindow:function(msg)\r\n    {  \r\n        this.StatusText=this.StatusText+msg+\"\\n\";\r\n        this.UIProfile.StatusLabel.string=this.StatusText;\r\n    },\r\n\r\n    ExitConnecting:function()\r\n    {  \r\n        this.UIProfile.StatusNode.active=false;\r\n        this.UIProfile.PlayButtonNode.active=true;\r\n        this.UIProfile.StatusLabel.string=\"\";\r\n        this.EmailText=\"\";\r\n        this.PasswordText=\"\";\r\n        this.StatusText=\"\";\r\n        this.TotalPlayers=\"\";\r\n        this.ResetPlayerCountInput();\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    },\r\n\r\n    ToggleLoadingNode(state)\r\n    {\r\n        this.LoadingNode.active=state;\r\n    },\r\n\r\n    LoginUser:function()\r\n    {\r\n        if(this.EmailText!=\"\" && this.PasswordText!=\"\")\r\n        {\r\n            this.ToggleLoadingNode(true);\r\n            var anim = this.LoadingNode.children[0].children[1].getComponent(cc.Animation);\r\n            anim.play('loading');\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().LoginUser(this.EmailText,this.PasswordText,\"Student\");\r\n        }\r\n        else\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"Email or password invalid or empty.\");\r\n        }\r\n    },\r\n\r\n    SetEmailText:function(text)\r\n    {\r\n        this.EmailText=text;\r\n    },\r\n\r\n    SetPasswordText:function(text)\r\n    {\r\n        this.PasswordText=text;\r\n    },\r\n\r\n    AssignProfileData:function()\r\n    {\r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==1) //means successful\r\n        {\r\n            this.ChangePanelScreen(true,false,\"\");\r\n\r\n            console.log(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n            this.UIProfile.NameLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n            this.UIProfile.EmailAddressLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.emailAddress;\r\n            this.UIProfile.DOBLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.dOB;\r\n            this.UIProfile.GradeLevelLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gradeLevel;\r\n            this.UIProfile.TeacherNameLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.teacherName;\r\n            this.UIProfile.GamesWonLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon;\r\n            this.UIProfile.FBPageLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.facebookPage;\r\n            this.UIProfile.TestTakenLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.testsTaken;\r\n            this.UIProfile.TestingAvgLabel.string=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.testingAverage;\r\n            this.UIProfile.CashLabel.string=\"$ \"+GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash;\r\n\r\n            this.ToggleLoadingNode(false);\r\n        }\r\n        else if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==2) //user not found\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"no user registered with entered email.\");\r\n        }\r\n        else if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==3) //pass/email invalid\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"user email or password is wrong\");\r\n        }\r\n        else if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==4) //something went wrong\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"something went wrong please try again.\");\r\n        }\r\n    },\r\n\r\n\r\n    //#region Spectate Ui Work\r\n    ToggleRoomScreen_SpectateUI(_state)\r\n    {\r\n        if(_state)\r\n            this.UIProfile.StatusNode.active=false;\r\n\r\n        this.UISpectate.RoomScreenNode.active=_state;\r\n    },\r\n\r\n    ToggleProfileScreen_SpectateUI(_state)\r\n    {\r\n        this.UISpectate.ProfileScreenNode.active=_state;\r\n    },\r\n\r\n    ShowAvailableRooms_SpectateUI()\r\n    {\r\n     \r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isConnectedToMaster() || GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isInLobby())\r\n        {\r\n            this.ToggleProfileScreen_SpectateUI(false);\r\n            this.ToggleRoomScreen_SpectateUI(true);\r\n        }\r\n        else\r\n        {\r\n            this.UIProfile.StatusNode.active=true;\r\n            this.UIProfile.StatusLabel.string=\"\";\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleShowRoom_Bool(true);\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RequestConnection();\r\n        }\r\n    },\r\n\r\n    UpdateRoomsList_SpectateUI(_name,_players)\r\n    {\r\n        var node = cc.instantiate(this.UISpectate.RoomPrefab);\r\n        node.parent = this.UISpectate.ScrollBarContent;\r\n        node.getComponent('RoomListHandler').SetRoomName(_name);\r\n        node.getComponent('RoomListHandler').SetPlayerCount(_players);\r\n        TotalRoom.push(node);\r\n    },\r\n\r\n    ResetRoomList()\r\n    {\r\n        for (let index = 0; index < TotalRoom.length; index++) {\r\n            TotalRoom[index].destroy();\r\n        }\r\n\r\n        TotalRoom=[];\r\n    },\r\n\r\n    Exit_SpectateUI()\r\n    {\r\n        this.ToggleProfileScreen_SpectateUI(true);\r\n        this.ToggleRoomScreen_SpectateUI(false);\r\n        this.ExitConnecting();\r\n    },\r\n    //#endregion\r\n\r\n    ShowToast:function(msg,_time=2000)\r\n    {\r\n        this.ToastNode.active=true;\r\n        this.ToastNode.children[0].children[0].getComponent(cc.Label).string=msg;\r\n        var SelfToast=this;\r\n        setTimeout(function(){  SelfToast.ToastNode.active=false; }, _time);\r\n    },\r\n});\r\n\r\nmodule.exports= UIManager;\r\n"]}