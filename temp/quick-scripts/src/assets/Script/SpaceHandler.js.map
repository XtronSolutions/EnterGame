{"version":3,"sources":["assets\\Script\\SpaceHandler.js"],"names":["GamePlayReferenceManager","SpacesManager","require","SpaceHandler","cc","Class","name","Component","properties","onLoad","CheckReferences","SpaceData","InitializeData","_data","OnLandedOnSpace","_isOwner","_randomValue","isBot","console","log","SpacesType","error","Instance","Get_DecksData","GenerateRandomWildCard","GenerateRandomBigBusinessCard","GenerateRandomMarketingCard","SpaceInvest","GenerateRandomLossesCard","SpacePayDay","SpaceDoublePayDay","SpaceOneQuestion","SpaceSell","SpaceBuyOrSell","SpaceGoBackSpaces"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager=null;\r\nvar SpacesManager=require('SpacesManager');\r\n//-------------------------------------------class for SpaceHandler-------------------------//\r\n\r\nvar SpaceHandler=cc.Class({\r\n    name: \"SpaceHandler\",\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n    },\r\n\r\n    onLoad()\r\n    {\r\n        GamePlayReferenceManager = null;\r\n        this.CheckReferences();\r\n        this.SpaceData=null;\r\n       // SpaceData=new \r\n\r\n    },\r\n\r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n    InitializeData(_data)\r\n    {\r\n        this.SpaceData=_data;\r\n        //console.log(this.SpaceData);\r\n    },\r\n\r\n    OnLandedOnSpace(_isOwner=false,_randomValue=0,isBot=false)\r\n    {\r\n        console.log(this.SpaceData);\r\n        switch (this.SpaceData.SpacesType) {\r\n            case 0://None\r\n                console.error(\"landed on none\");\r\n                //GamePlayReferenceManager.Instance.Get_DecksData().SpaceInvest(_isOwner,this.SpaceData.SpacesType);\r\n                break;\r\n            case 1://WildCard\r\n                console.log(\"WildCard\");    \r\n                GamePlayReferenceManager.Instance.Get_DecksData().GenerateRandomWildCard(_isOwner,_randomValue,isBot);\r\n                break;\r\n            case 2://BigBusiness\r\n                console.log(\"BigBusiness\");   \r\n                GamePlayReferenceManager.Instance.Get_DecksData().GenerateRandomBigBusinessCard(_isOwner,_randomValue,isBot);\r\n                break;\r\n            case 3://Marketing\r\n                console.log(\"Marketing\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().GenerateRandomMarketingCard(_isOwner,_randomValue,isBot);\r\n                break;\r\n            case 4://Invest\r\n                console.log(\"Invest\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().SpaceInvest(_isOwner,this.SpaceData.SpacesType,isBot);\r\n                break;\r\n            case 5://Losses\r\n                console.log(\"Losses\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().GenerateRandomLossesCard(_isOwner,_randomValue,isBot);\r\n                break;\r\n            case 6://Payday\r\n                console.log(\"Payday\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().SpacePayDay(_isOwner,this.SpaceData.SpacesType,isBot);\r\n                break;\r\n            case 7://DoublePayDay\r\n                console.log(\"DoublePayDay\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().SpaceDoublePayDay(_isOwner,this.SpaceData.SpacesType,isBot);\r\n                break;\r\n            case 8://OneQuestion\r\n                console.log(\"OneQuestion\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().SpaceOneQuestion(_isOwner,this.SpaceData.SpacesType,isBot);\r\n                break;\r\n            case 9://Sell\r\n                console.log(\"Sell\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().SpaceSell(_isOwner,this.SpaceData.SpacesType,isBot);\r\n                break;\r\n            case 10://BuyOrSell\r\n                console.log(\"BuyOrSell\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().SpaceBuyOrSell(_isOwner,this.SpaceData.SpacesType,isBot);\r\n                break;\r\n            case 11://GoBackSpaces\r\n                console.log(\"GoBackSpaces\"); \r\n                GamePlayReferenceManager.Instance.Get_DecksData().SpaceGoBackSpaces(_isOwner,this.SpaceData.SpacesType,isBot);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    },\r\n});\r\n"]}