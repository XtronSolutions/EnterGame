{"version":3,"sources":["assets\\Script\\BusinessDetail.js"],"names":["GamePlayReferenceManager","BusinessDetail","cc","Class","name","Component","properties","BusinessName","type","Label","serializable","BusinessType","BusinessModeLabel","BusinessBalance","BusinessLocations","CanSell","Boolean","SellBusinessBtnNode","Node","SellLocationBtnNode","BusinessMode","Integer","BusinessIndex","CanUndergoPartnership","PartnerNameLabel","BusinessValueLabel","PartnerShipBtnNode","FinalBusinessValue","SelectBusinessForPayDayRoll","SelectBusinessButtonNode","IsBusinessTakeOver","IsBusinessDamaging","SelectedPlayerIndex","BuyHalfBusiness","SellingAmount","CheckReferences","require","SetSelectBusinessForPayDayRoll","_state","SetBusinessMode","_val","SetPlayerIndex","SetBusinessIndex","SetSellingAmount","setHalfBusiness","_stat","SetName","_name","string","SetType","_type","SetMode","_mode","SetBalance","_balance","SetLocations","_locations","SetPartnerName","SetBusinessValue","_value","SetFinalBusinessValue","SetPlayerObject","_obj","PlayerData","ToggleSellBusinessButton","getComponent","Button","interactable","ToggleSellLocationButton","TogglePartnerShipButton","SellLocation","_manager","Instance","Get_GameManager","_playerIndex","GetTurnNumber","_tempData","PlayerGameInfo","NoOfBusiness","LocationsName","length","LoanTaken","pop","LocationAmount","_amount","LoanAmount","Cash","Get_GameplayUIManager","ShowToast","setTimeout","SetBusinessUI_SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","SellBusiness","HomeBasedAmount","splice","_loanAmount","MortarAmount","GetIntoPartnerShip","Get_MultiplayerController","GetSelectedMode","console","log","_data","Data","Turn","SelectedBusinsessIndex","BusValue","Get_MultiplayerSyncManager","RaiseEvent","ToggleWaitingScreen_PartnerShipSetup","TakeOverBusiness","TakeOverBusiness_CardFunctionality","IsPartnership","BuyHalfBusiness_CardFunctionality","DamagingInformationBusiness","SelectBusinessForHalfOwnership_DamagingDecision","SelectBusinessforPayDay","ExitSellScreen__SellBusinessUISetup","IsBot","ProcessPayDay_TurnDecision","SelectBusinessforDoublePayDay_ThroughoutGame","_receiveDouble","ReceiveDoublePayDay","ExitScreen_BusinessPayDayUISetup","ReceiveDoublePayDayAmount","completeCardTurn"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager = null;\r\nvar BusinessDetail = cc.Class({\r\n  name: \"BusinessDetail\",\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    BusinessName: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessType: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessModeLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessBalance: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessLocations: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    CanSell: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SellBusinessBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    SellLocationBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessMode: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessIndex: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    CanUndergoPartnership: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerNameLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessValueLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerShipBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    FinalBusinessValue: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectBusinessForPayDayRoll: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectBusinessButtonNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    IsBusinessTakeOver: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    IsBusinessDamaging: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectedPlayerIndex: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    BuyHalfBusiness: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SellingAmount: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  SetSelectBusinessForPayDayRoll(_state) {\r\n    this.SelectBusinessForPayDayRoll = _state;\r\n  },\r\n\r\n  SetBusinessMode(_val) {\r\n    this.BusinessMode = _val;\r\n  },\r\n\r\n  SetPlayerIndex(_val) {\r\n    this.SelectedPlayerIndex = _val;\r\n  },\r\n\r\n  SetBusinessIndex(_val) {\r\n    this.BusinessIndex = _val;\r\n  },\r\n\r\n  SetSellingAmount(_val) {\r\n    this.SellingAmount = _val;\r\n  },\r\n\r\n  setHalfBusiness(_stat) {\r\n    this.BuyHalfBusiness = _stat;\r\n  },\r\n\r\n  SetName(_name) {\r\n    this.BusinessName.string = _name;\r\n  },\r\n\r\n  SetType(_type) {\r\n    this.BusinessType.string = _type;\r\n  },\r\n\r\n  SetMode(_mode) {\r\n    this.BusinessModeLabel.string = _mode;\r\n  },\r\n\r\n  SetBalance(_balance) {\r\n    this.BusinessBalance.string = _balance;\r\n  },\r\n\r\n  SetLocations(_locations) {\r\n    this.BusinessLocations.string = _locations;\r\n  },\r\n\r\n  SetPartnerName(_name) {\r\n    this.PartnerNameLabel.string = _name;\r\n  },\r\n\r\n  SetBusinessValue(_value) {\r\n    this.BusinessValueLabel.string = _value;\r\n  },\r\n\r\n  SetFinalBusinessValue(_value) {\r\n    this.FinalBusinessValue = _value;\r\n  },\r\n\r\n  SetPlayerObject(_obj) {\r\n    this.PlayerData = _obj;\r\n  },\r\n\r\n  ToggleSellBusinessButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellBusinessBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  ToggleSellLocationButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellLocationBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  TogglePartnerShipButton(_state) {\r\n    this.PartnerShipBtnNode.getComponent(cc.Button).interactable = _state;\r\n  },\r\n\r\n  SellLocation() {\r\n    if (this.BusinessMode == 1) {\r\n      //home based\r\n      //there is not going to be any location for home based\r\n    } else if (this.BusinessMode == 2) {\r\n      //Brick and mortar\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n      if (_tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length > 0) {\r\n        //if selected business has any location at all\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n\r\n          var LocationAmount;\r\n          if (this.SellingAmount == 0) {\r\n            LocationAmount = 75000;\r\n          } else {\r\n            LocationAmount = this.SellingAmount;\r\n          }\r\n\r\n          var _amount = LocationAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          if (_amount < 0) _amount = 0;\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n\r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        } else {\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n          var LocationAmount;\r\n          if (this.SellingAmount == 0) {\r\n            LocationAmount = 75000;\r\n          } else {\r\n            LocationAmount = this.SellingAmount;\r\n          }\r\n          _tempData.Cash += LocationAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $\" + LocationAmount + \" added to your cash\", 2000);\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  SellBusiness() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (_tempData.NoOfBusiness.length > 1) {\r\n      if (this.BusinessMode == 1) {\r\n        //home based\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n\r\n          var HomeBasedAmount;\r\n          if (this.SellingAmount == 0) {\r\n            HomeBasedAmount = 10000;\r\n          } else {\r\n            HomeBasedAmount = this.SellingAmount;\r\n          }\r\n\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          var _amount = HomeBasedAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          var _loanAmount = _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount - HomeBasedAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0) _amount = 0;\r\n\r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        } else {\r\n          var HomeBasedAmount;\r\n          if (this.SellingAmount == 0) {\r\n            HomeBasedAmount = 10000;\r\n          } else {\r\n            HomeBasedAmount = this.SellingAmount;\r\n          }\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += HomeBasedAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + HomeBasedAmount + \" added to your cash\", 2000);\r\n\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        }\r\n      } else if (this.BusinessMode == 2) {\r\n        //brick and mortar\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n\r\n          var MortarAmount;\r\n          if (this.SellingAmount == 0) {\r\n            MortarAmount = 75000;\r\n          } else {\r\n            MortarAmount = this.SellingAmount;\r\n          }\r\n\r\n          var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          var _amount = MortarAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n          var _loanAmount = _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount - MortarAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0) _amount = 0;\r\n\r\n          _tempData.Cash += _amount;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business along with any locations, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        } else {\r\n          var MortarAmount;\r\n          if (this.SellingAmount == 0) {\r\n            MortarAmount = 75000;\r\n          } else {\r\n            MortarAmount = this.SellingAmount;\r\n          }\r\n\r\n          var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += MortarAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + MortarAmount + \" added to your cash\", 2000);\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Cannot sell, you need atleast one business to continue playing game.\", 2000);\r\n    }\r\n  },\r\n\r\n  GetIntoPartnerShip() {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n      //real players\r\n      console.log(\"Sending offer\");\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n      if (_tempData.NoOfBusiness.length > 0) {\r\n        console.log(\"has some business\");\r\n        var _data = { Data: { Turn: _manager.GetTurnNumber(), PlayerData: _tempData, SelectedBusinsessIndex: this.BusinessIndex, BusValue: this.FinalBusinessValue } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(11, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(true);\r\n      }\r\n    } else {\r\n      console.log(\"game being played by bot\");\r\n    }\r\n  },\r\n  TakeOverBusiness() {\r\n    if (this.IsBusinessTakeOver) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n        if (this.BuyHalfBusiness == false) {\r\n          //real players\r\n          console.log(\"taking over business\");\r\n          console.log(this.PlayerData);\r\n          GamePlayReferenceManager.Instance.Get_GameManager().TakeOverBusiness_CardFunctionality(this.PlayerData, this.BusinessIndex, this.SelectedPlayerIndex);\r\n        } else {\r\n          console.log(\"buying half business\");\r\n          console.log(this.PlayerData);\r\n\r\n          if (!this.PlayerData.NoOfBusiness[this.BusinessIndex].IsPartnership) {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().BuyHalfBusiness_CardFunctionality(this.PlayerData, this.BusinessIndex, this.SelectedPlayerIndex);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Selected player's Business is in partnership with some other player.\");\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"game being played by bot\");\r\n      }\r\n    }\r\n  },\r\n\r\n  DamagingInformationBusiness() {\r\n    if (this.IsBusinessDamaging) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n        //real players\r\n        console.log(this.PlayerData);\r\n        if (!this.PlayerData.NoOfBusiness[this.BusinessIndex].IsPartnership) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().SelectBusinessForHalfOwnership_DamagingDecision(this.PlayerData, this.BusinessIndex, this.SelectedPlayerIndex);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Selected Business is in partnership with some other player.\");\r\n        }\r\n      } else {\r\n        console.log(\"game being played by bot\");\r\n      }\r\n    }\r\n  },\r\n\r\n  SelectBusinessforPayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    if (this.BusinessMode == 1) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreen__SellBusinessUISetup();\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].IsBot) _manager.ProcessPayDay_TurnDecision(false, true, true, this.BusinessIndex, 1, 0, 0);\r\n      else _manager.ProcessPayDay_TurnDecision(false, false, true, this.BusinessIndex, 1, 0, 0);\r\n    } else if (this.BusinessMode == 2) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreen__SellBusinessUISetup();\r\n\r\n      var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n      if (_manager.PlayerGameInfo[_playerIndex].IsBot) _manager.ProcessPayDay_TurnDecision(false, true, true, this.BusinessIndex, 0, 1, _locations);\r\n      else _manager.ProcessPayDay_TurnDecision(false, false, true, this.BusinessIndex, 0, 1, _locations);\r\n    }\r\n  },\r\n\r\n  SelectBusinessforDoublePayDay_ThroughoutGame() {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n      var _receiveDouble = _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay;\r\n      if (!_receiveDouble) {\r\n        if (this.BusinessMode == 1) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreen_BusinessPayDayUISetup();\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay = true;\r\n          _tempData.ReceiveDoublePayDayAmount++;\r\n        } else if (this.BusinessMode == 2) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreen_BusinessPayDayUISetup();\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay = true;\r\n          _tempData.ReceiveDoublePayDayAmount++;\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You will receive double pay day profits against selected business throughout game.\", 3200);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your current slected business already receive double pay day.\", 2800);\r\n      }\r\n    } else {\r\n      console.log(\"its bot\");\r\n    }\r\n  },\r\n});\r\n"]}