{"version":3,"sources":["assets\\Script\\BusinessDetail.js"],"names":["GamePlayReferenceManager","BusinessDetail","cc","Class","name","Component","properties","BusinessName","type","Label","serializable","BusinessType","BusinessModeLabel","BusinessBalance","BusinessLocations","CanSell","Boolean","SellBusinessBtnNode","Node","SellLocationBtnNode","BusinessMode","Integer","BusinessIndex","CanUndergoPartnership","PartnerNameLabel","BusinessValueLabel","PartnerShipBtnNode","FinalBusinessValue","SelectBusinessForPayDayRoll","SelectBusinessButtonNode","IsBusinessTakeOver","IsBusinessDamaging","SelectedPlayerIndex","BuyHalfBusiness","SellingAmount","IsSellAllBusiness","CheckReferences","require","SetSelectBusinessForPayDayRoll","_state","SetBusinessMode","_val","SetPlayerIndex","SetBusinessIndex","SetSellingAmount","setHalfBusiness","_stat","SetName","_name","string","SetType","_type","SetMode","_mode","SetBalance","_balance","SetLocations","_locations","SetPartnerName","SetBusinessValue","_value","SetFinalBusinessValue","SetPlayerObject","_obj","PlayerData","ToggleSellBusinessButton","getComponent","Button","interactable","ToggleSellLocationButton","TogglePartnerShipButton","SellLocation","_manager","Instance","Get_GameManager","_playerIndex","GetTurnNumber","_tempData","PlayerGameInfo","NoOfBusiness","LocationsName","length","LoanTaken","pop","LocationAmount","_amount","LoanAmount","Cash","Get_GameplayUIManager","ShowToast","setTimeout","SetBusinessUI_SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","SellBusiness","HomeBasedAmount","splice","_loanAmount","MortarAmount","SellAllExceptOne","_dice","RollTwoDices","_multiplier","_result","_totalBusinesses","_SelectedBusiness","index","BrickAndMortarAmount","TotalLocationsAmount","CardFunctionality","SkipHMNextPayday","SkipBMNextPayday","push","_info","ExitScreenAlongTurnOver__BusinessGenric","GetIntoPartnerShip","Get_MultiplayerController","GetSelectedMode","console","log","_data","Data","Turn","SelectedBusinsessIndex","BusValue","Get_MultiplayerSyncManager","RaiseEvent","ToggleWaitingScreen_PartnerShipSetup","TakeOverBusiness","TakeOverBusiness_CardFunctionality","IsPartnership","BuyHalfBusiness_CardFunctionality","DamagingInformationBusiness","SelectBusinessForHalfOwnership_DamagingDecision","SelectBusinessforPayDay","ExitSellScreen__SellBusinessUISetup","IsBot","ProcessPayDay_TurnDecision","SelectBusinessforDoublePayDay_ThroughoutGame","_receiveDouble","ReceiveDoublePayDay","ExitScreen_BusinessPayDayUISetup","ReceiveDoublePayDayAmount","completeCardTurn"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager = null;\r\nvar BusinessDetail = cc.Class({\r\n  name: \"BusinessDetail\",\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    BusinessName: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessType: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessModeLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessBalance: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessLocations: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    CanSell: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SellBusinessBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    SellLocationBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessMode: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessIndex: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    CanUndergoPartnership: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerNameLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    BusinessValueLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n\r\n    PartnerShipBtnNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    FinalBusinessValue: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectBusinessForPayDayRoll: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectBusinessButtonNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n\r\n    IsBusinessTakeOver: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    IsBusinessDamaging: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SelectedPlayerIndex: {\r\n      default: -1,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    BuyHalfBusiness: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n\r\n    SellingAmount: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n\r\n    IsSellAllBusiness: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  SetSelectBusinessForPayDayRoll(_state) {\r\n    this.SelectBusinessForPayDayRoll = _state;\r\n  },\r\n\r\n  SetBusinessMode(_val) {\r\n    this.BusinessMode = _val;\r\n  },\r\n\r\n  SetPlayerIndex(_val) {\r\n    this.SelectedPlayerIndex = _val;\r\n  },\r\n\r\n  SetBusinessIndex(_val) {\r\n    this.BusinessIndex = _val;\r\n  },\r\n\r\n  SetSellingAmount(_val) {\r\n    this.SellingAmount = _val;\r\n  },\r\n\r\n  setHalfBusiness(_stat) {\r\n    this.BuyHalfBusiness = _stat;\r\n  },\r\n\r\n  SetName(_name) {\r\n    this.BusinessName.string = _name;\r\n  },\r\n\r\n  SetType(_type) {\r\n    this.BusinessType.string = _type;\r\n  },\r\n\r\n  SetMode(_mode) {\r\n    this.BusinessModeLabel.string = _mode;\r\n  },\r\n\r\n  SetBalance(_balance) {\r\n    this.BusinessBalance.string = _balance;\r\n  },\r\n\r\n  SetLocations(_locations) {\r\n    this.BusinessLocations.string = _locations;\r\n  },\r\n\r\n  SetPartnerName(_name) {\r\n    this.PartnerNameLabel.string = _name;\r\n  },\r\n\r\n  SetBusinessValue(_value) {\r\n    this.BusinessValueLabel.string = _value;\r\n  },\r\n\r\n  SetFinalBusinessValue(_value) {\r\n    this.FinalBusinessValue = _value;\r\n  },\r\n\r\n  SetPlayerObject(_obj) {\r\n    this.PlayerData = _obj;\r\n  },\r\n\r\n  ToggleSellBusinessButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellBusinessBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  ToggleSellLocationButton(_state) {\r\n    if (this.CanSell) {\r\n      this.SellLocationBtnNode.getComponent(cc.Button).interactable = _state;\r\n    }\r\n  },\r\n\r\n  TogglePartnerShipButton(_state) {\r\n    this.PartnerShipBtnNode.getComponent(cc.Button).interactable = _state;\r\n  },\r\n\r\n  SellLocation() {\r\n    if (this.BusinessMode == 1) {\r\n      //home based\r\n      //there is not going to be any location for home based\r\n    } else if (this.BusinessMode == 2) {\r\n      //Brick and mortar\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n      if (_tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length > 0) {\r\n        //if selected business has any location at all\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n\r\n          var LocationAmount;\r\n          if (this.SellingAmount == 0) {\r\n            LocationAmount = 75000;\r\n          } else {\r\n            LocationAmount = this.SellingAmount;\r\n          }\r\n\r\n          var _amount = LocationAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          if (_amount < 0) _amount = 0;\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n\r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        } else {\r\n          _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.pop();\r\n          var LocationAmount;\r\n          if (this.SellingAmount == 0) {\r\n            LocationAmount = 75000;\r\n          } else {\r\n            LocationAmount = this.SellingAmount;\r\n          }\r\n          _tempData.Cash += LocationAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold one of your location, $\" + LocationAmount + \" added to your cash\", 2000);\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  SellBusiness() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (_tempData.NoOfBusiness.length > 1) {\r\n      if (this.BusinessMode == 1) {\r\n        //home based\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n\r\n          var HomeBasedAmount;\r\n          if (this.SellingAmount == 0) {\r\n            HomeBasedAmount = 10000;\r\n          } else {\r\n            HomeBasedAmount = this.SellingAmount;\r\n          }\r\n\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          var _amount = HomeBasedAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n\r\n          var _loanAmount = _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount - HomeBasedAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0) _amount = 0;\r\n\r\n          _tempData.Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        } else {\r\n          var HomeBasedAmount;\r\n          if (this.SellingAmount == 0) {\r\n            HomeBasedAmount = 10000;\r\n          } else {\r\n            HomeBasedAmount = this.SellingAmount;\r\n          }\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += HomeBasedAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + HomeBasedAmount + \" added to your cash\", 2000);\r\n\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        }\r\n      } else if (this.BusinessMode == 2) {\r\n        //brick and mortar\r\n        if (_tempData.NoOfBusiness[this.BusinessIndex].LoanTaken) {\r\n          //if there is some loan on selected business\r\n\r\n          var MortarAmount;\r\n          if (this.SellingAmount == 0) {\r\n            MortarAmount = 75000;\r\n          } else {\r\n            MortarAmount = this.SellingAmount;\r\n          }\r\n\r\n          var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          var _amount = MortarAmount - _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount;\r\n          var _loanAmount = _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount - MortarAmount;\r\n\r\n          if (_loanAmount <= 0) {\r\n            //means payed all loan\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount = 0;\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanTaken = false;\r\n          } else {\r\n            _tempData.NoOfBusiness[this.BusinessIndex].LoanAmount -= HomeBasedAmount;\r\n          }\r\n\r\n          if (_amount <= 0) _amount = 0;\r\n\r\n          _tempData.Cash += _amount;\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business along with any locations, $\" + _amount + \" added to your cash after paying loan\", 2000);\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        } else {\r\n          var MortarAmount;\r\n          if (this.SellingAmount == 0) {\r\n            MortarAmount = 75000;\r\n          } else {\r\n            MortarAmount = this.SellingAmount;\r\n          }\r\n\r\n          var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n\r\n          if (_locations > 0)\r\n            //if business have location muliplye each location with amount\r\n            MortarAmount += _locations * MortarAmount;\r\n\r\n          _tempData.NoOfBusiness.splice(this.BusinessIndex, 1);\r\n          _tempData.Cash += MortarAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully sold your business, $\" + MortarAmount + \" added to your cash\", 2000);\r\n          if (this.SellingAmount == 0) {\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetBusinessUI_SellBusinessUISetup();\r\n            }, 2050);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreenAlongTurnOver__SellBusinessUISetup();\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Cannot sell, you need atleast one business to continue playing game.\", 2000);\r\n    }\r\n  },\r\n  \r\n  SellAllExceptOne() {\r\n  if(this.IsSellAllBusiness)\r\n  {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n        var _dice=_manager.RollTwoDices();\r\n        var _multiplier=10000;\r\n        var _result=_dice*_multiplier;\r\n        var _totalBusinesses=0;\r\n        var _loanAmount=0;\r\n\r\n        var _SelectedBusiness=_tempData.NoOfBusiness[this.BusinessIndex];\r\n\r\n        for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n          if(index!=this.BusinessIndex)\r\n          {\r\n            _totalBusinesses++;\r\n            _totalBusinesses=_totalBusinesses+_tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n            if(_tempData.NoOfBusiness[index].LoanTaken)\r\n              _loanAmount=_tempData.NoOfBusiness[index].LoanAmount;\r\n            }\r\n          }\r\n\r\n        \r\n        _result*=_totalBusinesses;\r\n        _result-=_loanAmount;\r\n\r\n        _manager.PlayerGameInfo[_playerIndex].Cash+=_result;\r\n        _manager.PlayerGameInfo[_playerIndex].NoOfBusiness=[];\r\n\r\n        _manager.PlayerGameInfo[_playerIndex].HomeBasedAmount=0;\r\n        _manager.PlayerGameInfo[_playerIndex].BrickAndMortarAmount=0;\r\n        _manager.PlayerGameInfo[_playerIndex].TotalLocationsAmount=0;\r\n        _manager.PlayerGameInfo[_playerIndex].CardFunctionality.SkipHMNextPayday=false;\r\n        _manager.PlayerGameInfo[_playerIndex].CardFunctionality.SkipBMNextPayday=false;\r\n\r\n        if(_SelectedBusiness.BusinessType==1)\r\n        {\r\n          _manager.PlayerGameInfo[_playerIndex].HomeBasedAmount+=1;\r\n        }else if(_SelectedBusiness.BusinessType==2)\r\n        {\r\n          _manager.PlayerGameInfo[_playerIndex].BrickAndMortarAmount+=1;\r\n          _manager.PlayerGameInfo[_playerIndex].TotalLocationsAmount=_SelectedBusiness.LocationsName.length;\r\n        }\r\n        \r\n        _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.push(_SelectedBusiness);\r\n\r\n        if(_loanAmount!=0)\r\n        {\r\n          _manager.PlayerGameInfo[_playerIndex].LoanTaken=false;\r\n          _manager.PlayerGameInfo[_playerIndex].LoanAmount=0;\r\n        }\r\n\r\n        var _info=\"\\n\"+\"Dice Result: \"+_dice+\"\\n\"+\"\\n\"+\"Total Amount: \"+_dice+\" * \"+_multiplier+\" * \"+_totalBusinesses+\" - \"+_loanAmount+\" = \"+_result+\"\\n\"+\"\\n\"+\"\\n\"+\"You have successfully sold off business/es, amount has been added and your total cash becomes $\"+_manager.PlayerGameInfo[_playerIndex].Cash;\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(_info,8000,false);\r\n        \r\n        setTimeout(() => {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreenAlongTurnOver__BusinessGenric();\r\n        }, 8100);  \r\n  }\r\n},\r\n\r\n  GetIntoPartnerShip() {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n      //real players\r\n      console.log(\"Sending offer\");\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n      if (_tempData.NoOfBusiness.length > 0) {\r\n        console.log(\"has some business\");\r\n        var _data = { Data: { Turn: _manager.GetTurnNumber(), PlayerData: _tempData, SelectedBusinsessIndex: this.BusinessIndex, BusValue: this.FinalBusinessValue } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(11, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(true);\r\n      }\r\n    } else {\r\n      console.log(\"game being played by bot\");\r\n    }\r\n  },\r\n\r\n  TakeOverBusiness() {\r\n    if (this.IsBusinessTakeOver) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n        if (this.BuyHalfBusiness == false) {\r\n          //real players\r\n          console.log(\"taking over business\");\r\n          console.log(this.PlayerData);\r\n          GamePlayReferenceManager.Instance.Get_GameManager().TakeOverBusiness_CardFunctionality(this.PlayerData, this.BusinessIndex, this.SelectedPlayerIndex);\r\n        } else {\r\n          console.log(\"buying half business\");\r\n          console.log(this.PlayerData);\r\n\r\n          if (!this.PlayerData.NoOfBusiness[this.BusinessIndex].IsPartnership) {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().BuyHalfBusiness_CardFunctionality(this.PlayerData, this.BusinessIndex, this.SelectedPlayerIndex);\r\n          } else {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Selected player's Business is in partnership with some other player.\");\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"game being played by bot\");\r\n      }\r\n    }\r\n  },\r\n\r\n  DamagingInformationBusiness() {\r\n    if (this.IsBusinessDamaging) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n        //real players\r\n        console.log(this.PlayerData);\r\n        if (!this.PlayerData.NoOfBusiness[this.BusinessIndex].IsPartnership) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().SelectBusinessForHalfOwnership_DamagingDecision(this.PlayerData, this.BusinessIndex, this.SelectedPlayerIndex);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Selected Business is in partnership with some other player.\");\r\n        }\r\n      } else {\r\n        console.log(\"game being played by bot\");\r\n      }\r\n    }\r\n  },\r\n\r\n  SelectBusinessforPayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    if (this.BusinessMode == 1) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreen__SellBusinessUISetup();\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].IsBot) _manager.ProcessPayDay_TurnDecision(false, true, true, this.BusinessIndex, 1, 0, 0);\r\n      else _manager.ProcessPayDay_TurnDecision(false, false, true, this.BusinessIndex, 1, 0, 0);\r\n    } else if (this.BusinessMode == 2) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitSellScreen__SellBusinessUISetup();\r\n\r\n      var _locations = _tempData.NoOfBusiness[this.BusinessIndex].LocationsName.length;\r\n      if (_manager.PlayerGameInfo[_playerIndex].IsBot) _manager.ProcessPayDay_TurnDecision(false, true, true, this.BusinessIndex, 0, 1, _locations);\r\n      else _manager.ProcessPayDay_TurnDecision(false, false, true, this.BusinessIndex, 0, 1, _locations);\r\n    }\r\n  },\r\n\r\n  SelectBusinessforDoublePayDay_ThroughoutGame() {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n      var _receiveDouble = _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay;\r\n      if (!_receiveDouble) {\r\n        if (this.BusinessMode == 1) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreen_BusinessPayDayUISetup();\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay = true;\r\n          _tempData.ReceiveDoublePayDayAmount++;\r\n        } else if (this.BusinessMode == 2) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreen_BusinessPayDayUISetup();\r\n\r\n          _tempData.NoOfBusiness[this.BusinessIndex].ReceiveDoublePayDay = true;\r\n          _tempData.ReceiveDoublePayDayAmount++;\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You will receive double pay day profits against selected business throughout game.\", 3200);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your current slected business already receive double pay day.\", 2800);\r\n      }\r\n    } else {\r\n      console.log(\"its bot\");\r\n    }\r\n  },\r\n});\r\n"]}