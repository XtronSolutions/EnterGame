{"version":3,"sources":["assets\\Script\\PlayerProfileManager.js"],"names":["businessDetailNodes","PlayerInfoUI","cc","Class","name","properties","PlayerName","type","Label","serializable","toolTip","PlayerCash","PlayerMarketingAmount","LawyerLabel","GoldBalanceLabel","StockBalanceLabel","LoanBalanceLabel","PartnershipStatusLabel","BusinessNumberLabel","BusinessDetailContent","Node","BusinessDetailPrefab","Prefab","CashLabel","MarketingLabel","GoldLabel","StocksLabel","GamePlayReferenceManager","GameManager","require","PlayerProfileManager","Component","BGHighlight","PlayerAvatarSprite","Sprite","PlayerNameLabel","PlayerTurnHighlighterNode","AvatarSpriteFrames","SpriteFrame","PlayerIndex","integer","PlayerInfoScreen","PlayerInfoMainUI","tooltip","DiceRollScreen","PlayerInfo","PlayerData","onLoad","CheckReferences","start","SetName","_name","string","SetAvatar","_index","spriteFrame","ToggleBGHighlighter","_state","active","ToggleTextighlighter","RefreshData","_cash","_marketing","_gold","_stocks","Instance","Get_GameManager","PlayerGameInfo","length","RefreshDataAutomatically","_tempData","Cash","MarketingAmount","GoldCount","StockCount","SeeProfileData","Get_MultiplayerController","GetSelectedMode","SyncDataToPlayerGameInfo","_amount","LawyerStatus","NoOfBusiness","index","node","instantiate","parent","getComponent","BusinessName","SetType","BusinessTypeDescription","parseInt","BusinessType","SetMode","LoanTaken","SetBalance","LoanAmount","SetLocations","LocationsName","push","ExitProfileData","destroy"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\nvar businessDetailNodes=[];\r\nvar PlayerInfoUI=cc.Class({\r\n    name:\"PlayerInfoUI\",\r\n    properties: {\r\n        PlayerName: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player name label of info player UI\"},\r\n        PlayerCash: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player cash label of info player UI\"},\r\n        PlayerMarketingAmount: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player marketing amount label of info player UI\"},\r\n        LawyerLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player lawyer status label of info player UI\"},\r\n        GoldBalanceLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player gold balance label of info player UI\"},\r\n        StockBalanceLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip: \"Reference of the player stock balance label of info player UI\"\r\n        },\r\n        LoanBalanceLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player loan balance label of info player UI\"},\r\n        PartnershipStatusLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player partnership status label of info player UI\"},\r\n        BusinessNumberLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player business number label of info player UI\"},\r\n        BusinessDetailContent: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true,\r\n            toolTip:\"Reference of the content of scroll view of business detail node of info player UI\"},\r\n        BusinessDetailPrefab: {\r\n            default: null,\r\n            type: cc.Prefab, \r\n            serializable: true,\r\n            toolTip: \"Reference of the business detail prefab of info player UI\"\r\n        },\r\n        CashLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true\r\n        },\r\n        MarketingLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true\r\n        },\r\n        GoldLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true\r\n        },\r\n        StocksLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true},\r\n    },\r\n\r\n});\r\n\r\nvar GamePlayReferenceManager=null;\r\nvar GameManager=require('GameManager');\r\nvar PlayerProfileManager=cc.Class({\r\n    name:\"PlayerProfileManager\",\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        BGHighlight: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true,\r\n            toolTip:\"Reference of the node of player's BG highlight Node\"},\r\n        PlayerAvatarSprite: {\r\n            default: null,\r\n            type: cc.Sprite, \r\n            serializable: true,\r\n            toolTip:\"Reference of the sprite of player's avatar\"},\r\n        PlayerNameLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the label of player's name\"},\r\n        PlayerTurnHighlighterNode: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true,\r\n            toolTip:\"Reference of the node of player's highlighter\"},\r\n        AvatarSpriteFrames: {\r\n            default: [],\r\n            type: [cc.SpriteFrame], \r\n            serializable: true,\r\n            toolTip:\"Reference of the array of sprites of player's avatar\"},\r\n        PlayerIndex: {\r\n            default: -1,\r\n            type: cc.integer, \r\n            serializable: true},\r\n        PlayerInfoScreen: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true},\r\n         PlayerInfoMainUI: {\r\n            default: null,                \r\n            type: PlayerInfoUI,\r\n            serializable: true,\r\n            tooltip: \"all player's UI data\"},\r\n        DiceRollScreen: {\r\n            default: null,                \r\n            type: cc.Node,\r\n            serializable: true},\r\n        PlayerInfo: {\r\n            default: null,                \r\n            type: GameManager.PlayerData,\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n    },\r\n\r\n    onLoad () {\r\n        this.CheckReferences();\r\n    },\r\n    //\r\n\r\n    start () {\r\n    },\r\n\r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    SetName(_name)\r\n    {\r\n        this.PlayerNameLabel.string=_name;\r\n    },\r\n\r\n    SetAvatar(_index)\r\n    {\r\n        this.PlayerAvatarSprite.spriteFrame=this.AvatarSpriteFrames[_index];\r\n    },\r\n\r\n    ToggleBGHighlighter(_state)\r\n    {\r\n        this.BGHighlight.active=_state;\r\n    },\r\n\r\n    ToggleTextighlighter(_state)\r\n    {\r\n        this.PlayerTurnHighlighterNode.active=_state;\r\n    },\r\n\r\n    RefreshData(_cash,_marketing,_gold,_stocks)\r\n    {\r\n        this.CheckReferences();\r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length > 0 && this.PlayerIndex < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length) {\r\n            this.PlayerInfoMainUI.CashLabel.string = \"Cash: $\" + _cash;\r\n            this.PlayerInfoMainUI.MarketingLabel.string = \"Marketing: $\" + _marketing;\r\n            this.PlayerInfoMainUI.GoldLabel.string = \"Gold: \" + _gold;\r\n            this.PlayerInfoMainUI.StocksLabel.string = \"Stocks: \" + _stocks;\r\n        }\r\n    },\r\n\r\n    RefreshDataAutomatically()\r\n    {\r\n        this.CheckReferences();\r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length > 0 && this.PlayerIndex<GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length) {\r\n            var _tempData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[this.PlayerIndex];\r\n            this.PlayerInfoMainUI.CashLabel.string = \"Cash: $\" + _tempData.Cash;\r\n            this.PlayerInfoMainUI.MarketingLabel.string = \"Marketing: $\" + _tempData.MarketingAmount;\r\n            this.PlayerInfoMainUI.GoldLabel.string = \"Gold: \" + _tempData.GoldCount;\r\n            this.PlayerInfoMainUI.StocksLabel.string = \"Stocks: \" + _tempData.StockCount;\r\n        }\r\n    },\r\n\r\n\r\n    SeeProfileData()\r\n    {\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode() == 2) { //only for real players\r\n            GamePlayReferenceManager.Instance.Get_GameManager().SyncDataToPlayerGameInfo(0);\r\n        }\r\n\r\n        var _amount = 0;\r\n        this.PlayerInfoScreen.active=true;\r\n        this.CheckReferences();\r\n        businessDetailNodes=[];\r\n        var _tempData=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[this.PlayerIndex];\r\n\r\n        this.PlayerInfoMainUI.PlayerName.string=_tempData.PlayerName;\r\n        \r\n        this.PlayerInfoMainUI.PlayerCash.string=_tempData.Cash;\r\n        this.PlayerInfoMainUI.PlayerMarketingAmount.string=_tempData.MarketingAmount;\r\n        \r\n        if(_tempData.LawyerStatus)\r\n            this.PlayerInfoMainUI.LawyerLabel.string=\"YES\";\r\n        else\r\n            this.PlayerInfoMainUI.LawyerLabel.string=\"NO\";\r\n        \r\n\r\n        //this.PlayerInfoMainUI.PartnershipStatusLabel.string=\"N/A\";\r\n        this.PlayerInfoMainUI.GoldBalanceLabel.string=_tempData.GoldCount;\r\n        this.PlayerInfoMainUI.StockBalanceLabel.string = _tempData.StockCount;\r\n        \r\n        this.RefreshData(_tempData.Cash,_tempData.MarketingAmount,_tempData.GoldCount,_tempData.StockCount);\r\n        //this.PlayerInfoMainUI.StockBalanceLabel.string=_tempData.NoOfStocks.length;\r\n        this.PlayerInfoMainUI.BusinessNumberLabel.string=\"No of Businesses : \"+_tempData.NoOfBusiness.length;\r\n\r\n        for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n                var node = cc.instantiate(this.PlayerInfoMainUI.BusinessDetailPrefab);\r\n                node.parent = this.PlayerInfoMainUI.BusinessDetailContent;\r\n                node.getComponent('BusinessDetail').SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n                node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n                node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n\r\n                if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==1)\r\n                    node.getComponent('BusinessDetail').SetMode(\"Home Based\");\r\n                else if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==2)\r\n                    node.getComponent('BusinessDetail').SetMode(\"Brick & Mortar\");\r\n\r\n                if (_tempData.NoOfBusiness[index].LoanTaken)\r\n                {\r\n                    node.getComponent('BusinessDetail').SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n                    _amount = _tempData.NoOfBusiness[index].LoanAmount;\r\n                }\r\n\r\n                \r\n                node.getComponent('BusinessDetail').SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n                businessDetailNodes.push(node);\r\n        }\r\n\r\n        this.PlayerInfoMainUI.LoanBalanceLabel.string = _amount;\r\n        \r\n    },\r\n\r\n    ExitProfileData()\r\n    {\r\n        for (let index = 0; index < businessDetailNodes.length; index++) {\r\n            businessDetailNodes[index].destroy();\r\n        }\r\n        businessDetailNodes=[];\r\n        \r\n        this.PlayerInfoScreen.active=false;\r\n    },\r\n});\r\n"]}