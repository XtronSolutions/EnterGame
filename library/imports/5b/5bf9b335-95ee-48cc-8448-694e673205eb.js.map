{"version":3,"sources":["assets\\Script\\PlayerProfileManager.js"],"names":["businessDetailNodes","PlayerInfoUI","cc","Class","name","properties","PlayerName","type","Label","serializable","toolTip","PlayerCash","PlayerMarketingAmount","LawyerLabel","GoldBalanceLabel","StockBalanceLabel","PartnershipStatusLabel","BusinessNumberLabel","BusinessDetailContent","Node","BusinessDetailPrefab","Prefab","GamePlayReferenceManager","GameManager","require","PlayerProfileManager","Component","BGHighlight","PlayerAvatarSprite","Sprite","PlayerNameLabel","PlayerTurnHighlighterNode","AvatarSpriteFrames","SpriteFrame","PlayerIndex","integer","PlayerInfoScreen","PlayerInfoMainUI","tooltip","PlayerInfo","PlayerData","onLoad","CheckReferences","start","SetName","_name","string","SetAvatar","_index","spriteFrame","ToggleBGHighlighter","_state","active","ToggleTextighlighter","SeeProfileData","_tempData","Instance","Get_GameManager","PlayerGameInfo","Cash","MarketingAmount","LawyerStatus","GoldCount","StockCount","NoOfBusiness","length","index","node","instantiate","parent","getComponent","BusinessName","SetType","BusinessTypeDescription","parseInt","BusinessType","SetMode","SetBalance","Amount","SetLocations","LocationsName","push","ExitProfileData","destroy"],"mappings":"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","sourceRoot":"/","sourcesContent":["\r\nvar businessDetailNodes=[];\r\nvar PlayerInfoUI=cc.Class({\r\n    name:\"PlayerInfoUI\",\r\n    properties: {\r\n        PlayerName: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player name label of info player UI\"},\r\n        PlayerCash: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player cash label of info player UI\"},\r\n        PlayerMarketingAmount: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player marketing amount label of info player UI\"},\r\n        LawyerLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player lawyer status label of info player UI\"},\r\n        GoldBalanceLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player gold balance label of info player UI\"},\r\n        StockBalanceLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player stock balance label of info player UI\"},\r\n        PartnershipStatusLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player partnership status label of info player UI\"},\r\n        BusinessNumberLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the player business number label of info player UI\"},\r\n        BusinessDetailContent: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true,\r\n            toolTip:\"Reference of the content of scroll view of business detail node of info player UI\"},\r\n        BusinessDetailPrefab: {\r\n            default: null,\r\n            type: cc.Prefab, \r\n            serializable: true,\r\n            toolTip:\"Reference of the business detail prefab of info player UI\"},\r\n    },\r\n\r\n});\r\n\r\nvar GamePlayReferenceManager=null;\r\nvar GameManager=require('GameManager');\r\nvar PlayerProfileManager=cc.Class({\r\n    name:\"PlayerProfileManager\",\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        BGHighlight: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true,\r\n            toolTip:\"Reference of the node of player's BG highlight Node\"},\r\n        PlayerAvatarSprite: {\r\n            default: null,\r\n            type: cc.Sprite, \r\n            serializable: true,\r\n            toolTip:\"Reference of the sprite of player's avatar\"},\r\n        PlayerNameLabel: {\r\n            default: null,\r\n            type: cc.Label, \r\n            serializable: true,\r\n            toolTip:\"Reference of the label of player's name\"},\r\n        PlayerTurnHighlighterNode: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true,\r\n            toolTip:\"Reference of the node of player's highlighter\"},\r\n        AvatarSpriteFrames: {\r\n            default: [],\r\n            type: [cc.SpriteFrame], \r\n            serializable: true,\r\n            toolTip:\"Reference of the array of sprites of player's avatar\"},\r\n        PlayerIndex: {\r\n            default: -1,\r\n            type: cc.integer, \r\n            serializable: true},\r\n        PlayerInfoScreen: {\r\n            default: null,\r\n            type: cc.Node, \r\n            serializable: true},\r\n         PlayerInfoMainUI: {\r\n            default: null,                \r\n            type: PlayerInfoUI,\r\n            serializable: true,\r\n            tooltip: \"all player's UI data\"},\r\n        PlayerInfo: {\r\n            default: null,                \r\n            type: GameManager.PlayerData,\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n    },\r\n\r\n    onLoad () {\r\n        this.CheckReferences();\r\n    },\r\n    //\r\n\r\n    start () {\r\n    },\r\n\r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    SetName(_name)\r\n    {\r\n        this.PlayerNameLabel.string=_name;\r\n    },\r\n\r\n    SetAvatar(_index)\r\n    {\r\n        this.PlayerAvatarSprite.spriteFrame=this.AvatarSpriteFrames[_index];\r\n    },\r\n\r\n    ToggleBGHighlighter(_state)\r\n    {\r\n        this.BGHighlight.active=_state;\r\n    },\r\n\r\n    ToggleTextighlighter(_state)\r\n    {\r\n        this.PlayerTurnHighlighterNode.active=_state;\r\n    },\r\n\r\n    SeeProfileData()\r\n    {\r\n        this.PlayerInfoScreen.active=true;\r\n        this.CheckReferences();\r\n        businessDetailNodes=[];\r\n        var _tempData=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[this.PlayerIndex];\r\n\r\n        this.PlayerInfoMainUI.PlayerName.string=_tempData.PlayerName;\r\n        \r\n        this.PlayerInfoMainUI.PlayerCash.string=_tempData.Cash;\r\n        this.PlayerInfoMainUI.PlayerMarketingAmount.string=_tempData.MarketingAmount;\r\n        \r\n        if(_tempData.LawyerStatus)\r\n            this.PlayerInfoMainUI.LawyerLabel.string=\"YES\";\r\n        else\r\n            this.PlayerInfoMainUI.LawyerLabel.string=\"NO\";\r\n        \r\n\r\n        this.PlayerInfoMainUI.PartnershipStatusLabel.string=\"N/A\";\r\n        this.PlayerInfoMainUI.GoldBalanceLabel.string=_tempData.GoldCount;\r\n        this.PlayerInfoMainUI.StockBalanceLabel.string=_tempData.StockCount;\r\n        //this.PlayerInfoMainUI.StockBalanceLabel.string=_tempData.NoOfStocks.length;\r\n        this.PlayerInfoMainUI.BusinessNumberLabel.string=\"No of Businesses : \"+_tempData.NoOfBusiness.length;\r\n\r\n        for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n                var node = cc.instantiate(this.PlayerInfoMainUI.BusinessDetailPrefab);\r\n                node.parent = this.PlayerInfoMainUI.BusinessDetailContent;\r\n                node.getComponent('BusinessDetail').SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n                node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n                node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n\r\n                if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==1)\r\n                    node.getComponent('BusinessDetail').SetMode(\"Home Based\");\r\n                else if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==2)\r\n                    node.getComponent('BusinessDetail').SetMode(\"Brick & Mortar\");\r\n\r\n\r\n                node.getComponent('BusinessDetail').SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n                node.getComponent('BusinessDetail').SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n                businessDetailNodes.push(node);\r\n        }\r\n        \r\n    },\r\n\r\n    ExitProfileData()\r\n    {\r\n        for (let index = 0; index < businessDetailNodes.length; index++) {\r\n            businessDetailNodes[index].destroy();\r\n        }\r\n        businessDetailNodes=[];\r\n        \r\n        this.PlayerInfoScreen.active=false;\r\n    },\r\n});\r\n"]}