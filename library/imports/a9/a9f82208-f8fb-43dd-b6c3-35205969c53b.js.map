{"version":3,"sources":["assets\\Script\\UIManager.js"],"names":["GamePlayReferenceManager","TweenRef","TotalRoom","Roles","ProfileUI","cc","Class","name","properties","NameLabel","displayName","type","Label","serializable","tooltip","EmailAddressLabel","DOBLabel","GradeLevelLabel","TeacherNameLabel","GamesWonLabel","FBPageLabel","TestTakenLabel","TestingAvgLabel","CashLabel","StatusNode","Node","PlayButtonNode","StatusLabel","PlayerCountInput","EditBox","DistrictLabel","PlayGameButton","SpectateButton","CashNode","TeacherProfileUI","ClassTaught","SchoolNameLabel","ContactLabel","MentorProfileUI","Addresslabel","AdminProfileUI","DirectorProfileUI","SpectateUI","RoomScreenNode","ScrollBarContent","ProfileScreenNode","RoomPrefab","Prefab","UIManager","Component","UIProfile","TeacherUIProfile","MentorUIProfile","AdminUIProfile","DirectorUIProfile","ScreenNodes","TweenManagerRef","Logo","ToastNode","LoadingNode","ReferenceManagerRef","ModeSelectionScreen","UISpectate","UIContainer","statics","Instance","ResetAllData","onEnable","systemEvent","on","AssignProfileData","UpdateStatusWindow","ChangePanelScreen","onDisable","off","onLoad","getComponent","SelectedRole","SelectedRoleIndex","EmailText","PasswordText","nodeCounter","StatusText","TotalPlayers","ResetPlayerCountInput","GetTweenManagerReference","SlideInLoginComponents","RepeatLogoAnimation","CheckReferences","TogglePlayButton","_state","active","ToggleSpectateButton","require","isNext","changeScreen","sceneName","FadeNodeInOut","length","setTimeout","ManipulateNodes","director","loadScene","counter","index","console","log","LoginScreenTween","children","RepeatTweenScale","string","OnplayerNumberChanged","_number","PlayGame","ToggleModeSelection","BackSelectionMode","VersesPlayerMode","ShowToast","_players","parseInt","Get_MultiplayerController","ToggleShowRoom_Bool","MaxPlayers","getPhotonRef","isConnectedToMaster","isInLobby","emit","JoinRandomRoom","RequestConnection","VersesAIMode","JoinedRoom","msg","ExitConnecting","DisconnectPhoton","ToggleLoadingNode","state","LoginUser","anim","Animation","play","Get_ServerBackend","OnRoleToggled","_val","node","split","SetEmailText","text","SetPasswordText","ToggleUIContainer","_mainIndex","_isStudent","_isTeacher","_isMentor","_isAdmin","_isDirector","ResponseType","StudentData","emailAddress","dOB","gradeLevel","teacherName","gamesWon","facebookPage","testsTaken","testingAverage","gameCash","TeacherData","classTaught","school","contactNumber","MentorData","address","AdminData","schoolName","DirectorData","ToggleRoomScreen_SpectateUI","ToggleProfileScreen_SpectateUI","ShowAvailableRooms_SpectateUI","UpdateRoomsList_SpectateUI","_name","instantiate","parent","SetRoomName","SetPlayerCount","push","ResetRoomList","destroy","Exit_SpectateUI","Logout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","_time","SelfToast","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["import Tweeen from 'TweenManager';\r\nvar GamePlayReferenceManager=null;\r\nvar TweenRef;\r\nvar TotalRoom = [];\r\nvar Roles=[\"Student\", \"Teacher\",\"ProgramAmbassador\",\"SchoolAdmin\",\"ProgramDirector\"];\r\n//-------------------------------------------class for Profile UI-------------------------//\r\nvar ProfileUI=cc.Class({\r\n    name:\"ProfileUI\",\r\n    properties: {   \r\n        NameLabel: {\r\n            displayName:\"Name\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to name label of profile\",},\r\n         EmailAddressLabel: {\r\n            displayName:\"EmailAddress\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference for email address label of profile \", },\r\n         DOBLabel: {\r\n            displayName:\"DOB\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to DOB label of profile\",},\r\n         GradeLevelLabel: {\r\n            displayName:\"GradeLevel\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Grade Level label of profile\",},\r\n         TeacherNameLabel: {\r\n            displayName:\"TeacherName\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Teacher Name label of profile\",},\r\n         GamesWonLabel: {\r\n            displayName:\"GamesWon\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to games won label of profile\",},\r\n         FBPageLabel: {\r\n            displayName:\"FBPage\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to facebook page label of profile\",},\r\n         TestTakenLabel: {\r\n            displayName:\"TestTaken\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to test taken label of profile\",},\r\n         TestingAvgLabel: {\r\n            displayName:\"TestingAverage\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Testing Average label of profile\",},\r\n        CashLabel: {\r\n            displayName:\"Cash\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to cash label of profile\",},\r\n        StatusNode: {\r\n            displayName:\"StatusScreen\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to Status Screen of profile\",},\r\n        PlayButtonNode: {\r\n            displayName:\"PlayButton\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to play button of profile\",},\r\n        StatusLabel: {\r\n            displayName:\"StatusText\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Status label of profile\",},\r\n        PlayerCountInput: {\r\n            displayName:\"PlayerCountInput\",\r\n            default: null,\r\n            type: cc.EditBox,\r\n            serializable: true,\r\n            tooltip: \"reference to PlayerCountInput of profile\",\r\n        },\r\n        DistrictLabel: {\r\n            displayName:\"DistrictLabel\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to DistrictLabel of profile\",\r\n        },\r\n        PlayGameButton: {\r\n            displayName:\"PlayGameButton\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to PlayGameButton of profile\",\r\n        },\r\n        SpectateButton: {\r\n            displayName:\"SpectateButton\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to SpectateButton of profile\",\r\n        },\r\n        CashNode: {\r\n            displayName:\"CashNode\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to CashNode of profile\",},\r\n    },\r\n});\r\n//-------------------------------------------class for teacher Profile UI-------------------------//\r\nvar TeacherProfileUI=cc.Class({\r\n    name:\"TeacherProfileUI\",\r\n    properties: {   \r\n        NameLabel: {\r\n            displayName:\"Name\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to name label of profile\",},\r\n         EmailAddressLabel: {\r\n            displayName:\"EmailAddress\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference for email address label of profile \", },\r\n         ClassTaught: {\r\n            displayName:\"ClassTaught\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to ClassTaught label of profile\",},\r\n         SchoolNameLabel: {\r\n            displayName:\"SchoolName\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to SchoolName label of profile\",},\r\n         ContactLabel: {\r\n            displayName:\"Contact\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Contact label of profile\",} \r\n    },\r\n});\r\n\r\n//-------------------------------------------class for Mentor Profile UI-------------------------//\r\nvar MentorProfileUI=cc.Class({\r\n    name:\"MentorProfileUI\",\r\n    properties: {   \r\n        NameLabel: {\r\n            displayName:\"Name\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to name label of profile\",},\r\n         EmailAddressLabel: {\r\n            displayName:\"EmailAddress\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference for email address label of profile \", },\r\n         Addresslabel: {\r\n            displayName:\"Address\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Address label of profile\",},\r\n         ContactLabel: {\r\n            displayName:\"Contact\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Contact label of profile\",} \r\n    },\r\n});\r\n\r\n//-------------------------------------------class for Admin Profile UI-------------------------//\r\nvar AdminProfileUI=cc.Class({\r\n    name:\"AdminProfileUI\",\r\n    properties: {   \r\n        NameLabel: {\r\n            displayName:\"Name\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to name label of profile\",},\r\n         EmailAddressLabel: {\r\n            displayName:\"EmailAddress\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference for email address label of profile \", },\r\n         SchoolNameLabel: {\r\n            displayName:\"SchoolName\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to SchoolName label of profile\",},\r\n         ContactLabel: {\r\n            displayName:\"Contact\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to Contact label of profile\",} \r\n    },\r\n});\r\n\r\n//-------------------------------------------class for director Profile UI-------------------------//\r\nvar DirectorProfileUI=cc.Class({\r\n    name:\"DirectorProfileUI\",\r\n    properties: {   \r\n        NameLabel: {\r\n            displayName:\"Name\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference to name label of profile\",},\r\n         EmailAddressLabel: {\r\n            displayName:\"EmailAddress\",\r\n            default: null,\r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip: \"reference for email address label of profile \", },\r\n    },\r\n});\r\n//-------------------------------------------class for SpectateUI-------------------------//\r\nvar SpectateUI=cc.Class({\r\n    name:\"SpectateUI\",\r\n    properties: {   \r\n        RoomScreenNode: {\r\n            displayName:\"RoomScreen\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"Reference to the node of room screen\",},\r\n        ScrollBarContent: {\r\n            displayName:\"ScrollBarContent\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"Reference to the node of ScrollBarContent of room screen\",},\r\n        ProfileScreenNode: {\r\n            displayName:\"ProfileScreen\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"Reference to the node of profile screen\",},\r\n        RoomPrefab: {\r\n            displayName:\"RoomPrefab\",\r\n            default: null,\r\n            type: cc.Prefab,\r\n            serializable: true,\r\n            tooltip: \"Reference to the prefab of Room on room screen\",},\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for UIManager-------------------------//\r\nvar UIManager=cc.Class({\r\n    name:\"UIManager\",\r\n    extends: cc.Component,\r\n\r\n    properties: { \r\n        UIProfile: {\r\n            displayName:\"UIProfile\",\r\n            default: null,\r\n            type: ProfileUI,\r\n            serializable: true,\r\n            tooltip: \"reference to ProfileUI class intance\",\r\n        },  \r\n        TeacherUIProfile: {\r\n            displayName:\"TeacherUIProfile\",\r\n            default: null,\r\n            type: TeacherProfileUI,\r\n            serializable: true,\r\n            tooltip: \"reference to TeacherProfileUI class intance\",\r\n        },  \r\n\r\n        MentorUIProfile: {\r\n            displayName:\"MentorUIProfile\",\r\n            default: null,\r\n            type: MentorProfileUI,\r\n            serializable: true,\r\n            tooltip: \"reference to MentorProfileUI class intance\",\r\n        },  \r\n\r\n        AdminUIProfile: {\r\n            displayName:\"AdminUIProfile\",\r\n            default: null,\r\n            type: AdminProfileUI,\r\n            serializable: true,\r\n            tooltip: \"reference to AdminProfileUI class intance\",\r\n        },  \r\n\r\n        DirectorUIProfile: {\r\n            displayName:\"DirectorUIProfile\",\r\n            default: null,\r\n            type: DirectorProfileUI,\r\n            serializable: true,\r\n            tooltip: \"reference to DirectorProfileUI class intance\",\r\n        },  \r\n        \r\n        ScreenNodes: {\r\n            displayName:\"ScreenNodes\",\r\n            default: [],\r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip: \"reference to login screen node\",},\r\n         TweenManagerRef: {\r\n            displayName:\"TweenManagerRef\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for Tween Manager Script \", },\r\n         Logo: {\r\n            displayName:\"LogoNode\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the logo node\",},\r\n         ToastNode: {\r\n            displayName:\"ToastNode\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the toast node\",},\r\n         LoadingNode: {\r\n            displayName:\"LoadingNode\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the Loading Node\",},   \r\n        ReferenceManagerRef: {\r\n            displayName:\"ReferenceManagerRef\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference for the reference manager node\",},  \r\n        ModeSelectionScreen: {\r\n            displayName:\"ModeSelectionScreen\",\r\n            default: null,\r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip: \"reference to mode selection screen node\",},   \r\n        UISpectate: {\r\n            displayName:\"UISpectate\",\r\n            default: null,\r\n            type: SpectateUI,\r\n            serializable: true,\r\n            tooltip: \"reference to SpectateUI class intance\",\r\n        },   \r\n        UIContainer: {\r\n            displayName:\"UIContainer\",\r\n            default: [],\r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip: \"reference to UIContainer nodes\",},   \r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    ResetAllData()\r\n    {\r\n        GamePlayReferenceManager = null;\r\n        TweenRef;\r\n        TotalRoom = [];\r\n    },\r\n\r\n    onEnable: function () {\r\n        //events subscription to be called \r\n        cc.systemEvent.on('AssignProfileData', this.AssignProfileData, this);\r\n        cc.systemEvent.on('UpdateStatusWindow', this.UpdateStatusWindow, this);\r\n        cc.systemEvent.on('ChangePanelScreen', this.ChangePanelScreen, this);\r\n      },\r\n    \r\n    onDisable: function () {\r\n        cc.systemEvent.off('AssignProfileData', this.AssignProfileData, this);\r\n        cc.systemEvent.off('UpdateStatusWindow', this.UpdateStatusWindow, this);\r\n        cc.systemEvent.off('ChangePanelScreen', this.ChangePanelScreen, this);\r\n      },\r\n\r\n    onLoad() {\r\n        this.ResetAllData();\r\n        this.ReferenceManagerRef=this.ReferenceManagerRef.getComponent(\"GamePlayReferenceManager\");\r\n\r\n        this.SelectedRole = Roles[0];\r\n        this.SelectedRoleIndex = 0;\r\n        UIManager.Instance=this;\r\n        TotalRoom=[];\r\n        //Private Variables\r\n        this.EmailText=\"\";\r\n        this.PasswordText=\"\";\r\n        this.nodeCounter=0;\r\n        this.StatusText=\"\";\r\n        this.TotalPlayers=\"\";\r\n        this.ResetPlayerCountInput();\r\n\r\n        this.GetTweenManagerReference();\r\n        this.SlideInLoginComponents();\r\n        this.RepeatLogoAnimation();\r\n        this.CheckReferences();\r\n    },\r\n\r\n    TogglePlayButton(_state)\r\n    {\r\n        this.UIProfile.PlayGameButton.active = _state;\r\n    },\r\n\r\n    ToggleSpectateButton(_state)\r\n    {\r\n        this.UIProfile.SpectateButton.active = _state;\r\n    },\r\n\r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    ChangePanelScreen: function (isNext,changeScreen,sceneName) {\r\n        TweenRef.FadeNodeInOut(this.ScreenNodes[this.nodeCounter],0.55,255,0,\"quadInOut\");\r\n\r\n    if(changeScreen==false)\r\n    {\r\n        if(isNext==true)\r\n        {\r\n            if(this.nodeCounter<this.ScreenNodes.length)\r\n                this.nodeCounter=this.nodeCounter+1;\r\n        }else\r\n        {\r\n            if(this.nodeCounter>0)\r\n                this.nodeCounter=this.nodeCounter-1;\r\n        }\r\n        setTimeout(() => {this.ManipulateNodes(this.nodeCounter);}, 600);\r\n    }else\r\n    {\r\n        setTimeout(() => {cc.director.loadScene(sceneName);}, 600);\r\n    }},\r\n\r\n    ManipulateNodes: function (counter) {\r\n        for (let index = 0; index < this.ScreenNodes.length; index++) {\r\n            if(counter==index)\r\n            {\r\n                this.ScreenNodes[index].active=true;\r\n                console.log(\"seting it true\");\r\n                TweenRef.FadeNodeInOut(this.ScreenNodes[index],1.5,0,255,\"quadInOut\"); \r\n            }\r\n            else\r\n            {\r\n                this.ScreenNodes[index].active=false; \r\n            }         \r\n        }\r\n    },\r\n\r\n    SlideInLoginComponents: function () {\r\n        TweenRef.LoginScreenTween(this.ScreenNodes[this.nodeCounter].children[1],-1000);\r\n    },\r\n\r\n    RepeatLogoAnimation: function () {\r\n        TweenRef.RepeatTweenScale(this.Logo,1.1,1,0.8);\r\n    },\r\n\r\n    GetTweenManagerReference: function () {\r\n        TweenRef=this.TweenManagerRef.getComponent(\"TweenManager\");\r\n    },\r\n\r\n    ResetPlayerCountInput()\r\n    {\r\n        this.UIProfile.PlayerCountInput.string=\"\";\r\n        this.TotalPlayers=\"\";\r\n    },\r\n\r\n    OnplayerNumberChanged(_number)\r\n    {\r\n        this.TotalPlayers=_number;\r\n    },\r\n\r\n    PlayGame:function()\r\n    {  \r\n        this.ResetPlayerCountInput();\r\n        this.ToggleModeSelection(true);\r\n    },\r\n\r\n    BackSelectionMode:function()\r\n    {  \r\n        this.ResetPlayerCountInput();\r\n        this.ToggleModeSelection(false);\r\n    },\r\n\r\n    ToggleModeSelection(_state)\r\n    {\r\n        this.ModeSelectionScreen.active=_state;\r\n    },\r\n\r\n    VersesPlayerMode()\r\n    {\r\n        if(this.TotalPlayers==\"\")\r\n        {\r\n            this.ShowToast(\"please enter player amount for multiplayer from 2-6, make sure to have same amount on different connecting devices if you want to connect them.\",3500);\r\n        }\r\n        else\r\n        {\r\n            var _players=parseInt(this.TotalPlayers);\r\n            if(_players>=2 && _players<=6)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleModeSelection(2);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleShowRoom_Bool(false);\r\n                this.UIProfile.StatusNode.active=true;\r\n                //this.UIProfile.PlayButtonNode.active=false;\r\n                this.UIProfile.StatusLabel.string=\"\";\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=_players;\r\n                \r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isConnectedToMaster() || GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isInLobby())\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"waiting for other players...\");\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().JoinRandomRoom();\r\n                }\r\n                else\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().RequestConnection();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.ResetPlayerCountInput();\r\n                this.ShowToast(\"please enter player amount for multiplayer from 2-6, make sure to have same amount on different connecting devices if you want to connect them.\",3500);\r\n            }\r\n        }\r\n    },\r\n\r\n    VersesAIMode()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleModeSelection(1);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleShowRoom_Bool(false);\r\n        this.UIProfile.StatusNode.active=true;\r\n        this.UIProfile.StatusLabel.string=\"\";\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=2;\r\n        cc.systemEvent.emit(\"UpdateStatusWindow\",\"setting up game...\");\r\n        cc.systemEvent.emit(\"UpdateStatusWindow\",\"waiting for AI Setup...\");\r\n        cc.systemEvent.emit(\"UpdateStatusWindow\",\"starting game...\");\r\n\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().JoinedRoom=true;\r\n            cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\"); //function in ui manager\r\n        }, 1000);\r\n    },\r\n\r\n    UpdateStatusWindow:function(msg)\r\n    {  \r\n        this.StatusText=this.StatusText+msg+\"\\n\";\r\n        this.UIProfile.StatusLabel.string=this.StatusText;\r\n    },\r\n\r\n    ExitConnecting:function()\r\n    {  \r\n        this.UIProfile.StatusNode.active=false;\r\n        this.UIProfile.PlayButtonNode.active=true;\r\n        this.UIProfile.StatusLabel.string=\"\";\r\n        this.EmailText=\"\";\r\n        this.PasswordText=\"\";\r\n        this.StatusText=\"\";\r\n        this.TotalPlayers=\"\";\r\n        this.ResetPlayerCountInput();\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    },\r\n\r\n    ToggleLoadingNode(state)\r\n    {\r\n        this.LoadingNode.active=state;\r\n    },\r\n\r\n    LoginUser:function()\r\n    {\r\n        if(this.EmailText!=\"\" && this.PasswordText!=\"\")\r\n        {\r\n            this.ToggleLoadingNode(true);\r\n            var anim = this.LoadingNode.children[0].children[1].getComponent(cc.Animation);\r\n            anim.play('loading');\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().LoginUser(this.EmailText,this.PasswordText,this.SelectedRole);\r\n        }\r\n        else\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"Email or password invalid or empty.\");\r\n        }\r\n    },\r\n\r\n    OnRoleToggled(_val)\r\n    {\r\n        //console.log(_val);\r\n        console.log(_val.node.name.split(\"_\")[1]);\r\n        this.SelectedRoleIndex = _val.node.name.split(\"_\")[1];\r\n        this.SelectedRole = Roles[this.SelectedRoleIndex];\r\n    },\r\n\r\n    SetEmailText:function(text)\r\n    {\r\n        this.EmailText=text;\r\n    },\r\n\r\n    SetPasswordText:function(text)\r\n    {\r\n        this.PasswordText=text;\r\n    },\r\n\r\n    ToggleUIContainer(_mainIndex)\r\n    {\r\n        for (let index = 0; index < this.UIContainer.length; index++) {\r\n            if (_mainIndex == index)\r\n                this.UIContainer[index].active = true;\r\n            else\r\n                this.UIContainer[index].active = false;\r\n            \r\n        }\r\n    },\r\n    AssignProfileData:function(_isStudent=false,_isTeacher=false,_isMentor=false,_isAdmin=false,_isDirector=false)\r\n    {\r\n        //console.error(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType));\r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==1) //means successful\r\n        {\r\n            this.ChangePanelScreen(true,false,\"\");\r\n           \r\n\r\n            if (_isStudent) {\r\n                this.ToggleUIContainer(0);\r\n                this.TogglePlayButton(true);\r\n                this.ToggleSpectateButton(false);\r\n                this.UIProfile.CashNode.active = true;\r\n                console.log(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n                this.UIProfile.NameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n                this.UIProfile.EmailAddressLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.emailAddress;\r\n                this.UIProfile.DOBLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.dOB;\r\n                this.UIProfile.GradeLevelLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gradeLevel;\r\n                this.UIProfile.TeacherNameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.teacherName;\r\n                this.UIProfile.GamesWonLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon;\r\n                this.UIProfile.FBPageLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.facebookPage;\r\n                this.UIProfile.TestTakenLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.testsTaken;\r\n                this.UIProfile.TestingAvgLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.testingAverage;\r\n                this.UIProfile.CashLabel.string = \"$ \" + GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash;\r\n\r\n                this.ToggleLoadingNode(false);\r\n            }\r\n            else if (_isTeacher) {\r\n                this.ToggleUIContainer(1);\r\n                this.TogglePlayButton(false);\r\n                this.ToggleSpectateButton(true);\r\n                this.UIProfile.CashNode.active = false;\r\n                console.log(GamePlayReferenceManager.Instance.Get_ServerBackend().TeacherData);\r\n                this.TeacherUIProfile.NameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().TeacherData.name;\r\n                this.TeacherUIProfile.EmailAddressLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().TeacherData.emailAddress;\r\n                this.TeacherUIProfile.ClassTaught.string = GamePlayReferenceManager.Instance.Get_ServerBackend().TeacherData.classTaught;\r\n                this.TeacherUIProfile.SchoolNameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().TeacherData.school;\r\n                this.TeacherUIProfile.ContactLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().TeacherData.contactNumber;\r\n                this.ToggleLoadingNode(false);\r\n            }\r\n            else if (_isMentor) {\r\n                this.ToggleUIContainer(2);\r\n                this.TogglePlayButton(false);\r\n                this.ToggleSpectateButton(true);\r\n                this.UIProfile.CashNode.active = false;\r\n                console.log(GamePlayReferenceManager.Instance.Get_ServerBackend().MentorData);\r\n                this.MentorUIProfile.NameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().MentorData.name;\r\n                this.MentorUIProfile.EmailAddressLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().MentorData.emailAddress;\r\n                this.MentorUIProfile.Addresslabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().MentorData.address;\r\n                this.MentorUIProfile.ContactLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().MentorData.contactNumber;\r\n                this.ToggleLoadingNode(false);\r\n            }\r\n            else if (_isAdmin) {\r\n                this.ToggleUIContainer(3);\r\n                this.TogglePlayButton(false);\r\n                this.ToggleSpectateButton(true);\r\n                this.UIProfile.CashNode.active = false;\r\n                console.log(GamePlayReferenceManager.Instance.Get_ServerBackend().AdminData);\r\n                this.AdminUIProfile.NameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().AdminData.name;\r\n                this.AdminUIProfile.EmailAddressLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().AdminData.emailAddress;\r\n                this.AdminUIProfile.SchoolNameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().AdminData.schoolName;\r\n                this.AdminUIProfile.ContactLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().AdminData.contactNumber;\r\n                this.ToggleLoadingNode(false);\r\n            }\r\n            else if (_isDirector) {\r\n                this.ToggleUIContainer(4);\r\n                this.TogglePlayButton(false);\r\n                this.ToggleSpectateButton(true);\r\n                this.UIProfile.CashNode.active = false;\r\n                console.log(GamePlayReferenceManager.Instance.Get_ServerBackend().DirectorData);\r\n                this.DirectorUIProfile.NameLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().DirectorData.name;\r\n                this.DirectorUIProfile.EmailAddressLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().DirectorData.emailAddress;\r\n                this.ToggleLoadingNode(false);\r\n            }\r\n        }\r\n        else if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==2) //user not found\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"no user registered with entered email.\");\r\n        }\r\n        else if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==3) //pass/email invalid\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"user email or password is wrong\");\r\n        }\r\n        else if(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().ResponseType)==4) //something went wrong\r\n        {\r\n            this.ToggleLoadingNode(false);\r\n            this.ShowToast(\"something went wrong please try again.\");\r\n        }\r\n    },\r\n\r\n    //#region Spectate Ui Work\r\n    ToggleRoomScreen_SpectateUI(_state)\r\n    {\r\n        if(_state)\r\n            this.UIProfile.StatusNode.active=false;\r\n\r\n        this.UISpectate.RoomScreenNode.active=_state;\r\n    },\r\n\r\n    ToggleProfileScreen_SpectateUI(_state)\r\n    {\r\n        this.UISpectate.ProfileScreenNode.active=_state;\r\n    },\r\n\r\n    ShowAvailableRooms_SpectateUI()\r\n    {\r\n     \r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isConnectedToMaster() || GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().isInLobby())\r\n        {\r\n            this.ToggleProfileScreen_SpectateUI(false);\r\n            this.ToggleRoomScreen_SpectateUI(true);\r\n        }\r\n        else\r\n        {\r\n            this.UIProfile.StatusNode.active=true;\r\n            this.UIProfile.StatusLabel.string=\"\";\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleShowRoom_Bool(true);\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RequestConnection();\r\n        }\r\n    },\r\n\r\n    UpdateRoomsList_SpectateUI(_name,_players)\r\n    {\r\n        var node = cc.instantiate(this.UISpectate.RoomPrefab);\r\n        node.parent = this.UISpectate.ScrollBarContent;\r\n        node.getComponent('RoomListHandler').SetRoomName(_name);\r\n        node.getComponent('RoomListHandler').SetPlayerCount(_players);\r\n        TotalRoom.push(node);\r\n    },\r\n\r\n    ResetRoomList()\r\n    {\r\n        for (let index = 0; index < TotalRoom.length; index++) {\r\n            TotalRoom[index].destroy();\r\n        }\r\n\r\n        TotalRoom=[];\r\n    },\r\n\r\n    Exit_SpectateUI()\r\n    {\r\n        this.ToggleProfileScreen_SpectateUI(true);\r\n        this.ToggleRoomScreen_SpectateUI(false);\r\n        this.ExitConnecting();\r\n    },\r\n\r\n    Logout()\r\n    {\r\n        cc.systemEvent.emit(\"ClearData\"); //function written in storage Manager class\r\n\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager()!=null)\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController()!=null)\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n        \r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager()!=null)\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n        \r\n        if(GamePlayReferenceManager.Instance.Get_ServerBackend()!=null)\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n        \r\n        GamePlayReferenceManager.Instance.RemovePersistNode();\r\n\r\n        cc.director.loadScene(\"MainMenu\");\r\n    },\r\n    //#endregion\r\n\r\n    ShowToast:function(msg,_time=2000)\r\n    {\r\n        this.ToastNode.active=true;\r\n        this.ToastNode.children[1].children[1].getComponent(cc.Label).string=msg;\r\n        var SelfToast=this;\r\n        setTimeout(function(){  SelfToast.ToastNode.active=false; }, _time);\r\n    },\r\n});\r\n\r\nmodule.exports= UIManager;\r\n"]}