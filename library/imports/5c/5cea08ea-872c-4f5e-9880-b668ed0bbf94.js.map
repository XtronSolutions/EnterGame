{"version":3,"sources":["assets\\Script\\MultiplayerController.js"],"names":["PhotonRef","stateText","GamePlayReferenceManager","ShowRoom","GameFinished","IsMasterClient","TotalTimer","TimerStarted","Schedular","MaxStudents","RestartSpectate","IsGameStarted","Timeouts","RoomProperty","cc","Class","name","properties","Player","type","Integer","serializable","InitialSetup","Boolean","PlayerGameInfo","Text","TurnNumber","App_Info","AppID","tooltip","AppVersion","Wss","displayName","MasterServer","FbAppID","MultiplayerController","Component","PhotonAppInfo","MaxPlayers","MaxSpectators","ModeSelection","statics","Instance","ResetAllData","ResetRoomValues","onLoad","ExitConnecting","Init_MultiplayerController","ToggleModeSelection","_val","SetConneting","_state","GetActiveStatus","_uID","_isActive","_array","Get_GameManager","index","length","PlayerUID","IsActive","GetBankruptedStatus","_isBankrupted","CardFunctionality","BankruptedNextTurn","GetSelectedMode","game","addPersistRootNode","node","InitializePhoton","console","log","AppInfo","DemoLoadBalancing","LeaveRoom","RoomName","Message","JoinedRoom","CheckReferences","require","RemovePersistNode","removePersistRootNode","getSceneName","sceneName","_sceneInfos","i","uuid","director","_scene","_id","url","substring","lastIndexOf","match","ToggleShowRoom_Bool","ToggleLeaveRoom_Bool","getPhotonRef","PhotonActor","myActor","RoomActors","myRoomActorsArray","CheckSpectate","customProperties","RoomEssentials","IsSpectate","AppId","FbAppId","RequestConnection","state","isConnectedToMaster","isInLobby","start","CheckConnectionState","_connected","isJoinedToRoom","DisconnectPhoton","disconnect","ResetState","OnRoomNameChange","OnMessageChange","msg","UpdateRoomCustomProperites","_playerUpdate","_playerValue","_initialSetupUpdate","_initialSetupValue","_playerGameInfoUpdate","_playerGameInfoValue","_turnNumberUpdate","_turnNumbervalue","myRoom","setCustomProperty","CreateRoom","_data","roomOptions","isVisible","isOpen","maxPlayers","customGameProperties","Get_MultiplayerController","Get_ServerBackend","StudentData","Counter","setUserId","userID","RoomID","Math","floor","random","Date","now","createRoom","JoinRoom","_roomName","joinRoom","JoinRandomRoom","expectedCustomRoomProperties","joinRandomRoom","SendCardData","raiseEvent","CardData","senderName","senderID","actorNr","receivers","Photon","LoadBalancing","Constants","ReceiverGroup","All","err","error","message","SendGameOver","Data","SendGameOverData","SendSelectedPlayerForProfit","Others","SendBankruptData","SendData","PlayerInfo","SendOneQuestionData","SendOneQuestionArrays","SendDecksArrays","SendDecksArrayCounter","SendPartnerProfitLoss","SendOneQuestionResponseData","DiceRollEvent","DiceCount","SendGoBackSpaceData","SendPartnerShipOfferData","SendPartnerShipAnswerData","SendInfo","SyncTurnCompletion","UID","StartTurn","trace","SendTakeBusinessData","SendDamagingData","SendDamagingDecisionData","SendBuyHalfBusinessData","SendCompareDiceData","SendCompareDiceDataDecision","SendTVADData","SendTVADDataVotes","ShowToast","CallRecieveEvent","_eventCode","_senderName","_senderID","InstanceNull","Get_MultiplayerSyncManager","setTimeout","ReceiveEvent","DisconnectData","RestartGame","_timer","clearTimeout","ClearDisplayTimeout","loadScene","CheckMasterClient","_isMaster","myRoomMasterActorNr","CheckCurrentActiveMasterClient","GetRealActors","_realPlayer","AllPlayers","getCustomProperty","RoomCounter","SendRoomCompletedData","Get_UIManager","ClearTimer","ProcessCounter","_master","_counter","SendCashDeductData","SendCashAdditionData","RoomCompleted","systemEvent","emit","push","UpdateActorActiveData","_actor","_actorsArray","PlayerSessionData","HandlePlayerLeave","actor","PhotonReferece","_manager","_playerTurn","_initialSetupDone","_isSpectate","RemoveFromCheckArray","toString","CheckTurnComplete","ChangeTurnForcefully","SetPlayerLeft","ResetSomeValues","_playerfound","splice","Get_GameplayUIManager","SyncData","update","dt","onStateChange","LBC","LoadBalancingClient","StateToName","ToggleProfileScreen_SpectateUI","ToggleRoomScreen_SpectateUI","logger","debug","mess","info","param","warn","param1","param2","param3","ToggleLoadingNode","exception","format","onRoomList","rooms","ResetRoomList","UpdateRoomsList_SpectateUI","playerCount","onRoomListUpdate","roomsUpdated","roomsAdded","roomsRemoved","onJoinRoom","loadBalancingClient","userId","_customProperties","onActorJoin","myRoomActorCount","onActorLeave","GameOver","CheckTurnOnSpectateLeave_SpectateManager","GetTurnNumber","_uIGameManager","onActorPropertiesChange","onMyRoomPropertiesChange","onError","errorCode","errorMsg","onEvent","code","content","PlayerInfoData","_Turn","_dice","_ID","_card","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//Global Variables\r\nvar PhotonRef;\r\nvar stateText = \"\";\r\nvar GamePlayReferenceManager = null;\r\nvar ShowRoom = false;\r\nvar GameFinished = false;\r\nvar IsMasterClient = false;\r\nvar TotalTimer = 30;\r\nvar TimerStarted = false;\r\nvar Schedular = null;\r\nvar MaxStudents = 6;\r\nvar RestartSpectate = false;\r\nvar IsGameStarted = false;\r\nvar Timeouts = [];\r\n\r\n//---------------------------------------class data related to RoomProperty------------------------------------------------//\r\nvar RoomProperty = cc.Class({\r\n  name: \"RoomProperty\",\r\n  properties: {\r\n    Player: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n    InitialSetup: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n    PlayerGameInfo: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n    },\r\n    TurnNumber: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n  },\r\n});\r\n//---------------------------------------class data related to App_Info------------------------------------------------//\r\nvar App_Info = cc.Class({\r\n  name: \"App_Info\",\r\n  properties: {\r\n    AppID: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"App id form photon dashboard\",\r\n    },\r\n    AppVersion: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"App version for photon\",\r\n    },\r\n    Wss: {\r\n      displayName: \"IsSecure\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"If photon should use secure and reliable protocols\",\r\n    },\r\n    MasterServer: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"master server for photon to connect\",\r\n    },\r\n    FbAppID: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"FB app id used for FB autherization\",\r\n    },\r\n  },\r\n});\r\n//---------------------------------------class data related to MultiplayerController----------------------------------//\r\nvar MultiplayerController = cc.Class({\r\n  name: \"MultiplayerController\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    PhotonAppInfo: {\r\n      default: null,\r\n      type: App_Info,\r\n      serializable: true,\r\n    },\r\n    MaxPlayers: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n    MaxSpectators: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n    ModeSelection: {\r\n      // 1 means bot , 2 means real players\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  statics: {\r\n    //creating static instance of the class\r\n    Instance: null,\r\n  },\r\n\r\n  ResetAllData() {\r\n    Timeouts = [];\r\n    IsGameStarted = false;\r\n    PhotonRef = null;\r\n    stateText = \"\";\r\n    GamePlayReferenceManager = null;\r\n    ShowRoom = false;\r\n    GameFinished = false;\r\n    IsMasterClient = false;\r\n    TotalTimer = 30;\r\n    TimerStarted = false;\r\n    Schedular = null;\r\n    this.ResetRoomValues();\r\n    MaxStudents = 6;\r\n    RestartSpectate = false;\r\n  },\r\n  //this function is called when instance of this class is created\r\n  onLoad() {\r\n    this.ExitConnecting = false;\r\n    this.ResetAllData();\r\n    this.Init_MultiplayerController();\r\n  },\r\n\r\n  ToggleModeSelection(\r\n    _val // 1 means bot , 2 means real players\r\n  ) {\r\n    this.ModeSelection = _val;\r\n  },\r\n\r\n  SetConneting(_state) {\r\n    this.ExitConnecting = _state;\r\n  },\r\n\r\n  GetActiveStatus(_uID = \"\") {\r\n    var _isActive = true;\r\n\r\n    var _array = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n    for (let index = 0; index < _array.length; index++) {\r\n      if (_array[index].PlayerUID == _uID) {\r\n        if (_array[index].IsActive == false) {\r\n          _isActive = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return _isActive;\r\n  },\r\n\r\n  GetBankruptedStatus(_uID = \"\") {\r\n    var _isBankrupted = false;\r\n\r\n    var _array = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n    for (let index = 0; index < _array.length; index++) {\r\n      if (_array[index].PlayerUID == _uID) {\r\n        if (_array[index].CardFunctionality.BankruptedNextTurn == true) {\r\n          _isBankrupted = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return _isBankrupted;\r\n  },\r\n\r\n  GetSelectedMode() {\r\n    return this.ModeSelection;\r\n  },\r\n\r\n  /**\r\n    @summary Initialize some essentails data for multiplayer controller class\r\n    @method Init_MultiplayerController\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  Init_MultiplayerController() {\r\n    if (!MultiplayerController.Instance) {\r\n      cc.game.addPersistRootNode(this.node);\r\n      this.InitializePhoton();\r\n      console.log(AppInfo);\r\n      PhotonRef = new DemoLoadBalancing();\r\n      MultiplayerController.Instance = this;\r\n    }\r\n\r\n    this.LeaveRoom = false;\r\n    this.RoomName = \"\";\r\n    this.Message = \"\";\r\n    ShowRoom = false;\r\n    this.JoinedRoom = false;\r\n    this.CheckReferences();\r\n  },\r\n\r\n  /**\r\n    @summary check reference to some variables and classes\r\n    @method CheckReferences\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  /**\r\n    @summary remove persist node when want to restart scene\r\n    @method RemovePersistNode\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  RemovePersistNode() {\r\n    MultiplayerController.Instance = null;\r\n    cc.game.removePersistRootNode(this.node);\r\n  },\r\n\r\n  /**\r\n    @summary function to get name of current opened scene\r\n    @method getSceneName\r\n    @param none\r\n    @returns {string} sceneName\r\n    **/\r\n  getSceneName: function () {\r\n    var sceneName;\r\n    var _sceneInfos = cc.game._sceneInfos;\r\n    for (var i = 0; i < _sceneInfos.length; i++) {\r\n      if (_sceneInfos[i].uuid == cc.director._scene._id) {\r\n        sceneName = _sceneInfos[i].url;\r\n        sceneName = sceneName.substring(sceneName.lastIndexOf(\"/\") + 1).match(/[^\\.]+/)[0];\r\n      }\r\n    }\r\n    return sceneName;\r\n  },\r\n\r\n  /**\r\n    @summary function to set \"ShowRoom\" bool value\r\n    @method ToggleShowRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/\r\n  ToggleShowRoom_Bool(_state) {\r\n    ShowRoom = _state;\r\n  },\r\n\r\n  /**\r\n    @summary function to set \"LeaveRoom\" bool value\r\n    @method ToggleLeaveRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/\r\n  ToggleLeaveRoom_Bool(_state) {\r\n    this.LeaveRoom = _state;\r\n  },\r\n\r\n  /**\r\n    @summary returns Photon \"PhotonRef\" instance created by multiplayer class\r\n    @method getPhotonRef\r\n    @param none\r\n    @returns {object} PhotonRef\r\n    **/\r\n  getPhotonRef() {\r\n    return PhotonRef;\r\n  },\r\n\r\n  /**\r\n    @summary returns myActor instance created by photon\r\n    @method PhotonActor\r\n    @param none\r\n    @returns {object} Actor\r\n    **/\r\n  PhotonActor() {\r\n    return PhotonRef.myActor();\r\n  },\r\n\r\n  /**\r\n    @summary returns myRoomActorsArray created by photon\r\n    @method RoomActors\r\n    @param none\r\n    @returns {object} Actor\r\n    **/\r\n  RoomActors() {\r\n    return PhotonRef.myRoomActorsArray();\r\n  },\r\n\r\n  /**\r\n    @summary returns isSpectate variable from custom property of current actor\r\n    @method CheckSpectate\r\n    @param none\r\n    @returns {boolean} isSpectate\r\n    **/\r\n  CheckSpectate() {\r\n    return PhotonRef.myActor().customProperties.RoomEssentials.IsSpectate;\r\n  },\r\n\r\n  /**\r\n    @summary Initialize photon with appid,app version, Wss etc\r\n    @method InitializePhoton\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  InitializePhoton() {\r\n    AppInfo.AppId = this.PhotonAppInfo.AppID;\r\n    AppInfo.AppVersion = this.PhotonAppInfo.AppVersion;\r\n    AppInfo.Wss = this.PhotonAppInfo.Wss;\r\n    AppInfo.MasterServer = this.PhotonAppInfo.MasterServer;\r\n    AppInfo.FbAppId = this.PhotonAppInfo.FbAppID;\r\n  },\r\n\r\n  /**\r\n    @summary send connection request to photon\r\n    @method RequestConnection\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  RequestConnection() {\r\n    if (PhotonRef.state == 5 || PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true) console.log(\"already connected\");\r\n    else PhotonRef.start();\r\n  },\r\n\r\n  CheckConnectionState() {\r\n    var _connected = false;\r\n    if (PhotonRef.state == 5 || PhotonRef.state == 7 || PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"already connected\");\r\n      _connected = true;\r\n    }\r\n\r\n    console.log(PhotonRef.state);\r\n    return _connected;\r\n  },\r\n\r\n  /**\r\n    @summary Disconnect from photon\r\n    @method DisconnectPhoton\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  DisconnectPhoton() {\r\n    //if (PhotonRef.isConnectedToMaster() == true || PhotonRef.state == 5 || PhotonRef.state == 7 || PhotonRef.isInLobby() == true || PhotonRef.isJoinedToRoom() == true) {\r\n    PhotonRef.disconnect();\r\n    this.JoinedRoom = false;\r\n    //PhotonRef.leaveRoom();\r\n    this.ResetState();\r\n    //  } else {\r\n    //    console.log(\"not inside any room or lobby or connected to photon\");\r\n  },\r\n  // },\r\n\r\n  /**\r\n    @summary reseting few values\r\n    @method ResetState\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  ResetState() {\r\n    IsGameStarted = false;\r\n    this.LeaveRoom = false;\r\n    this.JoinedRoom = false;\r\n    ShowRoom = false;\r\n    stateText = \"\";\r\n    this.ResetRoomValues();\r\n  },\r\n\r\n  /**\r\n    @summary called when room name got input from game\r\n    @method OnRoomNameChange\r\n    @param {string} name\r\n    @returns no return\r\n   **/\r\n  OnRoomNameChange(name) {\r\n    this.RoomName = name;\r\n  },\r\n\r\n  /**\r\n    @summary called when message window got input from game\r\n    @method OnMessageChange\r\n    @param {string} msg\r\n    @returns no return\r\n   **/\r\n  OnMessageChange(msg) {\r\n    this.Message = msg;\r\n  },\r\n\r\n  /**\r\n    @summary update custom room properties\r\n    @method UpdateRoomCustomProperites\r\n    @returns no return\r\n   **/\r\n  UpdateRoomCustomProperites(_playerUpdate = false, _playerValue = 0, _initialSetupUpdate = false, _initialSetupValue = false, _playerGameInfoUpdate = false, _playerGameInfoValue = null, _turnNumberUpdate = false, _turnNumbervalue = 0) {\r\n    if (_playerUpdate) PhotonRef.myRoom().setCustomProperty(\"Player\", _playerValue, true);\r\n\r\n    if (_initialSetupUpdate) PhotonRef.myRoom().setCustomProperty(\"InitialSetup\", _initialSetupValue, true);\r\n\r\n    if (_playerGameInfoUpdate) PhotonRef.myRoom().setCustomProperty(\"PlayerGameInfo\", _playerGameInfoValue, true);\r\n\r\n    if (_turnNumberUpdate) PhotonRef.myRoom().setCustomProperty(\"TurnNumber\", _turnNumbervalue, true);\r\n  },\r\n\r\n  /**\r\n    @summary create room request\r\n    @method CreateRoom\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  CreateRoom() {\r\n    if (PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.state == 8) {\r\n      if (PhotonRef.isJoinedToRoom() == false) {\r\n        var _data = new RoomProperty();\r\n        _data.Player = 0;\r\n\r\n        var roomOptions = {\r\n          isVisible: true,\r\n          isOpen: true,\r\n          maxPlayers: this.MaxPlayers + this.MaxSpectators,\r\n          customGameProperties: _data,\r\n        };\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n        PhotonRef.myActor().name = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n        PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n        PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n        PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: false });\r\n        PhotonRef.myActor().setCustomProperty(\"RoomCounter\", { Counter: TotalTimer });\r\n        PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n        var RoomID = Math.floor(Math.random() * Date.now());\r\n\r\n        PhotonRef.createRoom(\"Room_\" + RoomID, roomOptions);\r\n      } else {\r\n        console.log(\"already joined the room\");\r\n      }\r\n    } else {\r\n      console.log(\"you are not connected or connection is dropped, please connect to photon again.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary join room request by name\r\n    @method JoinRoom\r\n    @param {string} _roomName\r\n    @returns no return\r\n   **/\r\n  JoinRoom(_roomName) {\r\n    if (PhotonRef.state == 5 || PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.state == 8) {\r\n      if (PhotonRef.isJoinedToRoom() == false || PhotonRef.state != 8) {\r\n        var roomOptions = {\r\n          isVisible: true,\r\n          isOpen: false,\r\n          maxPlayers: this.MaxPlayers + this.MaxSpectators,\r\n          //\"customGameProperties\":{\"RoomEssentials\": {IsSpectate:true}}\r\n        };\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n        PhotonRef.myActor().name = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n        PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n        PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n        PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: true });\r\n        PhotonRef.myActor().setCustomProperty(\"RoomCounter\", { Counter: TotalTimer });\r\n        PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n        PhotonRef.joinRoom(_roomName, roomOptions);\r\n      } else {\r\n        console.log(\"already joined the room\");\r\n      }\r\n    } else {\r\n      console.log(\"you are not connected or connection is dropped, please connect to photon again.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary join random room\r\n    @method JoinRandomRoom\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  JoinRandomRoom() {\r\n    if (PhotonRef.state == 5 || PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.state == 8) {\r\n      if (PhotonRef.isJoinedToRoom() == false || PhotonRef.state != 8) {\r\n        var _data = new RoomProperty();\r\n        _data.Player = 0;\r\n\r\n        var roomOptions = {\r\n          //\"expectedMaxPlayers\":this.MaxPlayers+MaxSpectators,\r\n          expectedCustomRoomProperties: _data,\r\n        };\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n        PhotonRef.myActor().name = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n        PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n        PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n        PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: false });\r\n        PhotonRef.myActor().setCustomProperty(\"RoomCounter\", { Counter: TotalTimer });\r\n        PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n        PhotonRef.joinRandomRoom(roomOptions);\r\n      } else {\r\n        console.log(\"already joined the room\");\r\n      }\r\n    } else {\r\n      console.log(\"you are not connected or connection is dropped, please connect to photon again.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send card index over network\r\n    @method SendCardData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendCardData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending card data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          5,\r\n          {\r\n            CardData: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send game over call\r\n    @method SendGameOver\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendGameOver(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending game over call\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          6,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendGameOverData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending game over data to sync\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          16,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendSelectedPlayerForProfit(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending game over data to sync\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          17,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send backrupt data\r\n    @method SendBankruptData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendBankruptData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending bankrupcy data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          9,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send Player Data over network\r\n    @method SendData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending player data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          1,\r\n          {\r\n            PlayerInfo: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question Data over network\r\n    @method SendOneQuestionData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendOneQuestionData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending one question data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          7,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendOneQuestionArrays(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending one question arrays\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          18,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendDecksArrays(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending decks arrays\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          19,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendDecksArrayCounter(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending decks arrays counters\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          20,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n  /**\r\n    @summary Send profit or loss to your pasrtner\r\n    @method SendPartnerProfitLoss\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendPartnerProfitLoss(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending one question data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          13,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question response over network\r\n    @method SendOneQuestionResponseData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendOneQuestionResponseData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending one question response data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          8,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send dice data\r\n    @method DiceRollEvent\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  DiceRollEvent(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending dice count\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          3,\r\n          {\r\n            DiceCount: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send go back spaces data\r\n    @method SendGoBackSpaceData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendGoBackSpaceData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"send go back spaces data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          10,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary sending open invitation to all players for partner ship\r\n    @method SendPartnerShipOfferData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendPartnerShipOfferData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending partner ship offer\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          11,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary sending partner answer data (accept or reject)\r\n    @method SendPartnerShipAnswerData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendPartnerShipAnswerData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending partenrship answer data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          12,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendInfo(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending info\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          15,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send user id of player to all other who had completed their turn\r\n    @method SyncTurnCompletion\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SyncTurnCompletion(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending turn completion data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          4,\r\n          {\r\n            UID: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Start Turn for initial turn\r\n    @method StartTurn\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  StartTurn(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Starting Turn\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          2,\r\n          {\r\n            TurnNumber: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendTakeBusinessData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Send Take Business Data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          23,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendDamagingData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Send player received damaging data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          24,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendDamagingDecisionData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Send player received damaging data decision\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          25,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendBuyHalfBusinessData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Send player received damaging data decision\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          26,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendCompareDiceData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Send player dice to compare\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          27,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendCompareDiceDataDecision(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Send player dice to compare decison\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          28,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendTVADData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"SendTVADData\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          29,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendTVADDataVotes(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"SendTVADDataVotes\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          30,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Show toast message on the console\r\n    @method ShowToast\r\n    @param {string} message message to be shown \r\n    @returns no return\r\n   **/\r\n  ShowToast: function (msg) {\r\n    console.log(\"toast message: \" + msg);\r\n  },\r\n\r\n  /**\r\n    @summary Receive event from photon raise on \r\n    @method CallRecieveEvent\r\n    @returns no return\r\n   **/\r\n  CallRecieveEvent: function (_eventCode, _senderName, _senderID, _data) {\r\n    var InstanceNull = true;\r\n\r\n    //to check if instance is null in case class instance is not loaded and its receives callback\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager() == null) {\r\n      InstanceNull = true;\r\n      setTimeout(() => {\r\n        this.CallRecieveEvent(_eventCode, _senderName, _senderID, _data);\r\n      }, 50);\r\n    } else {\r\n      InstanceNull = false;\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().ReceiveEvent(_eventCode, _senderName, _senderID, _data);\r\n    }\r\n  },\r\n\r\n  DisconnectData() {\r\n    GameFinished = true;\r\n    // MultiplayerController.Instance.JoinedRoom=false;\r\n    // MultiplayerController.Instance.ResetState();\r\n    // MultiplayerController.Instance.DisconnectPhoton();\r\n  },\r\n\r\n  RestartGame(_timer = 0) {\r\n    IsGameStarted = false;\r\n    MultiplayerController.Instance.JoinedRoom = false;\r\n    MultiplayerController.Instance.ResetState();\r\n    MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n    for (let index = 0; index < Timeouts.length; index++) {\r\n      clearTimeout(Timeouts[index]);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager()) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      }\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager()) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      }\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_ServerBackend()) {\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      }\r\n\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      MultiplayerController.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"MainMenu\");\r\n    }, _timer);\r\n    // GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode()\r\n  },\r\n\r\n  CheckMasterClient(_id) {\r\n    var _isMaster = false;\r\n    if (PhotonRef.myRoomMasterActorNr() == _id && PhotonRef.myActor().actorNr == _id) {\r\n      _isMaster = true;\r\n      IsMasterClient = true;\r\n    }\r\n\r\n    //console.error(_isMaster);\r\n    return _isMaster;\r\n  },\r\n\r\n  CheckCurrentActiveMasterClient() {\r\n    var _isMaster = false;\r\n    if (PhotonRef.myActor().actorNr == PhotonRef.myRoomMasterActorNr()) {\r\n      _isMaster = true;\r\n      IsMasterClient = true;\r\n    } else {\r\n      IsMasterClient = false;\r\n    }\r\n\r\n    //console.error(_isMaster);\r\n    return _isMaster;\r\n  },\r\n\r\n  ResetRoomValues() {\r\n    clearTimeout(Schedular);\r\n\r\n    setTimeout(() => {\r\n      IsMasterClient = false;\r\n      TimerStarted = false;\r\n    }, 1000);\r\n  },\r\n\r\n  GetRealActors() {\r\n    var _realPlayer = 0;\r\n    var AllPlayers = PhotonRef.myRoomActorsArray();\r\n    for (let index = 0; index < AllPlayers.length; index++) {\r\n      if (AllPlayers[index].getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n        _realPlayer++;\r\n      }\r\n    }\r\n    return _realPlayer;\r\n  },\r\n\r\n  RoomCounter(_timer) {\r\n    clearTimeout(Schedular);\r\n    var _data = null;\r\n    Schedular = setTimeout(() => {\r\n      if (IsMasterClient) {\r\n        if (_timer > 0) {\r\n          _timer--;\r\n          console.log(_timer);\r\n          this.RoomCounter(_timer);\r\n        } else {\r\n          console.error(\"timer completed\");\r\n          if (this.GetRealActors() > 1) {\r\n            //if has more than one player start real game\r\n            this.SendRoomCompletedData();\r\n          } else {\r\n            clearTimeout(Schedular);\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ShowToast(\"No online player was found, please try again later\");\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ExitConnecting();\r\n\r\n            // MultiplayerController.Instance.ResetRoomValues();\r\n            // MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n            // MultiplayerController.Instance.ToggleModeSelection(1);\r\n            // MultiplayerController.Instance.ToggleShowRoom_Bool(false);\r\n\r\n            // MultiplayerController.Instance.MaxPlayers = 2;\r\n            // cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n            // cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n\r\n            // setTimeout(() => {\r\n            //   GamePlayReferenceManager.Instance.Get_MultiplayerController().JoinedRoom = true;\r\n            //   cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\"); //function in ui manager\r\n            // }, 1000);\r\n          }\r\n        }\r\n      } else {\r\n        clearTimeout(Schedular);\r\n      }\r\n    }, 1000);\r\n  },\r\n\r\n  ClearTimer() {\r\n    TimerStarted = false;\r\n    //_timer = 0;\r\n    clearTimeout(Schedular);\r\n  },\r\n\r\n  ProcessCounter() {\r\n    var _master = MultiplayerController.Instance.CheckCurrentActiveMasterClient();\r\n    if (_master) {\r\n      if (!TimerStarted) {\r\n        TimerStarted = true;\r\n        var _counter = PhotonRef.myActor().getCustomProperty(\"RoomCounter\")[\"Counter\"];\r\n        MultiplayerController.Instance.RoomCounter(_counter);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send room completed data\r\n    @method SendRoomCompletedData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendRoomCompletedData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending RoomCompletedData\");\r\n      //  console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          14,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendCashDeductData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending SendCashDeductData\");\r\n      //  console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          21,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendCashAdditionData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending SendCashAdditionData\");\r\n      //  console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          22,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  RoomCompleted() {\r\n    if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n      var _realPlayer = this.GetRealActors();\r\n      IsGameStarted = true;\r\n      MultiplayerController.Instance.MaxPlayers = _realPlayer;\r\n      console.log(\"all required players joined, starting the game..\");\r\n      cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n      cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n      MultiplayerController.Instance.JoinedRoom = true;\r\n      Timeouts.push(\r\n        setTimeout(() => {\r\n          cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\");\r\n        }, 1000)\r\n      ); //function in ui manager\r\n      MultiplayerController.Instance.UpdateRoomCustomProperites(true, _realPlayer, false, false, false, null, false, 0);\r\n    }\r\n  },\r\n\r\n  UpdateActorActiveData(_actor) {\r\n    var _actorsArray = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n    var _data = null;\r\n    for (let index = 0; index < _actorsArray.length; index++) {\r\n      _data = _actorsArray[index].customProperties.PlayerSessionData;\r\n      if (_data.PlayerUID == _actor.customProperties.Data.userID) {\r\n        _data.IsActive = false;\r\n        _actorsArray[index].setCustomProperty(\"PlayerSessionData\", _data);\r\n      }\r\n    }\r\n\r\n    console.log(\"updating active status of the player who has left........................\");\r\n    console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray());\r\n  },\r\n\r\n  HandlePlayerLeave(actor = null, PhotonReferece = null, _manager = null, _playerTurn = 0, _initialSetupDone = false, _isSpectate = false) {\r\n    if (_initialSetupDone) {\r\n      for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n        if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n          _manager.PlayerGameInfo[index].IsActive = false;\r\n          MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n          if (!_isSpectate) {\r\n            console.log(\"player left: \" + _manager.PlayerGameInfo[index].PlayerUID);\r\n            _manager.RemoveFromCheckArray(_manager.PlayerGameInfo[index].PlayerUID.toString());\r\n            _manager.CheckTurnComplete();\r\n            if (_playerTurn == index && PhotonReferece.myActor().actorNr == PhotonReferece.myRoomMasterActorNr()) {\r\n              _manager.ChangeTurnForcefully();\r\n              console.log(\"change turn forcefully\");\r\n              _manager.SetPlayerLeft(true);\r\n            }\r\n\r\n            _manager.ResetSomeValues();\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // _uIManager.ShowToast(\"player \" + actor.name + \" has left\", 1000);\r\n      var _playerfound = false;\r\n      for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n        if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n          _manager.PlayerGameInfo[index].IsActive = false;\r\n          _manager.PlayerGameInfo.splice(index, 1);\r\n          MultiplayerController.Instance.MaxPlayers--;\r\n          _playerfound = true;\r\n          MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!_playerfound) {\r\n        MultiplayerController.Instance.MaxPlayers--;\r\n        if (!_isSpectate) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().SyncData(null, actor.customProperties.Data.userID, true);\r\n        }\r\n      }\r\n\r\n      console.log(_manager.PlayerGameInfo);\r\n      console.log(MultiplayerController.Instance.MaxPlayers);\r\n    }\r\n  },\r\n  //called every frame\r\n  update(dt) {\r\n    /**\r\n            @summary function called by photon whenever there is some change in connection state\r\n            @method onStateChange\r\n            @param {object} state\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onStateChange = function (state) {\r\n      //#region Connection States\r\n      //state 1 : connectingToNameServer\r\n      //State 2 : ConnectedToNameServer\r\n      //State 3 : ConnectingToMasterServer\r\n      //State 4 : ConnectedToMasterServer\r\n      //State 5:  JoinedLobby\r\n      //State 6 : ConnectingToGameserver\r\n      //State 7 : ConnectedToGameserver\r\n      //State 8 : Joined\r\n      //State 10: Disconnected\r\n      //#endregion\r\n\r\n      var LBC = Photon.LoadBalancing.LoadBalancingClient;\r\n      console.log(\"StateCode: \" + state + \" \" + LBC.StateToName(state));\r\n\r\n      if (state == 1) cc.systemEvent.emit(\"UpdateStatusWindow\", \"connecting to server...\");\r\n      else if (state == 4) cc.systemEvent.emit(\"UpdateStatusWindow\", \"connected to server\");\r\n      else if (state == 5) {\r\n        //has joined lobby\r\n        if (ShowRoom == false) {\r\n          cc.systemEvent.emit(\"UpdateStatusWindow\", \"waiting for other players...\");\r\n          MultiplayerController.Instance.JoinRandomRoom();\r\n        } else if (ShowRoom == true) {\r\n          cc.systemEvent.emit(\"UpdateStatusWindow\", \"showing rooms list...\");\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ToggleProfileScreen_SpectateUI(false);\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ToggleRoomScreen_SpectateUI(true);\r\n          }, 1000);\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives debug\r\n            @method debug\r\n            @param {object} mess\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.debug = function (mess) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives info\r\n            @method info\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.info = function (mess, param) {\r\n      console.log(mess + param);\r\n      stateText += mess + \" \" + param + \"\\n\";\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives warn\r\n            @method warn\r\n            @param {object} mess\r\n            @param {object} param1\r\n            @param {object} param2\r\n            @param {object} param3\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.warn = function (mess, param1, param2, param3) {\r\n      console.log(mess + \" \" + param1 + \" \" + param2 + \" \" + param3);\r\n\r\n      if (param1 == 225) {\r\n        //no room found\r\n        console.log(\"no random room was found, creating one\");\r\n        MultiplayerController.Instance.CreateRoom();\r\n      }\r\n\r\n      if (param1 == 226) {\r\n        if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n          GamePlayReferenceManager.Instance.Get_UIManager().ShowToast(\"Room does not exists anymore,please try again by exiting.\");\r\n          // MultiplayerController.Instance.ClearTimer();\r\n          // MultiplayerController.Instance.SetConneting(false);\r\n          // MultiplayerController.Instance.ResetRoomValues();\r\n          // MultiplayerController.Instance.DisconnectPhoton();\r\n        } else {\r\n          //room does not exists or is full\r\n          GamePlayReferenceManager.Instance.Get_UIManager().ToggleLoadingNode(false);\r\n          GamePlayReferenceManager.Instance.Get_UIManager().ShowToast(\"Room is full, please select any other room to spectate.\");\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives error\r\n            @method error\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.error = function (mess, param) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives exception\r\n            @method exception\r\n            @param {object} mess\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.exception = function (mess) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives some format\r\n            @method format\r\n            @param {object} mess\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.format = function (mess) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever player joins lobby\r\n            @method onRoomList\r\n            @param {object} rooms\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onRoomList = function (rooms) {\r\n      stateText += \"\\n\" + \"Rooms List:\" + \"\\n\";\r\n\r\n      if (rooms.length == 0) {\r\n        stateText += \"No rooms in lobby.\" + \"\\n\";\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n\r\n        for (var i = 0; i < rooms.length; ++i) {\r\n          GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name, rooms[i].playerCount);\r\n          console.log(\"Room name: \" + rooms[i].name);\r\n          stateText += \"Room: \" + rooms[i].name + \"\\n\";\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever there is change in rooms list (room added,updated,removed etc)\r\n            @method onRoomListUpdate\r\n            @param {object} rooms\r\n            @param {object} roomsUpdated\r\n            @param {object} roomsAdded\r\n            @param {object} roomsRemoved\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onRoomListUpdate = function (rooms, roomsUpdated, roomsAdded, roomsRemoved) {\r\n      GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n\r\n      for (var i = 0; i < rooms.length; ++i) {\r\n        GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name, rooms[i].playerCount);\r\n        console.log(\"Room name: \" + rooms[i].name);\r\n        stateText += \"Room: \" + rooms[i].name + \"\\n\";\r\n      }\r\n      console.log(\"Rooms List updated: \" + roomsUpdated.length + \" updated, \" + roomsAdded.length + \" added, \" + roomsRemoved.length + \" removed\");\r\n    };\r\n\r\n    /**\r\n            @summary function called locally by photon when even player joins room\r\n            @method onJoinRoom\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onJoinRoom = function () {\r\n      //#region Logs for game\r\n      console.log(\"Game \" + this.myRoom().name + \" joined\");\r\n      console.log(PhotonRef.myActor());\r\n      console.log(PhotonRef.myRoom());\r\n      console.log(PhotonRef.myRoomActorsArray());\r\n      console.log(PhotonRef.myRoomActorsArray().length);\r\n      console.log(PhotonRef.myRoomActorsArray()[0].loadBalancingClient.userId);\r\n      console.log(PhotonRef.myRoom()._customProperties);\r\n      console.log(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]);\r\n      //#endregion\r\n\r\n      if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == true) {\r\n        //check if player who joined is spectate\r\n        MultiplayerController.Instance.JoinedRoom = true;\r\n        setTimeout(() => {\r\n          cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\");\r\n        }, 1000); //function in UIManager\r\n      }\r\n\r\n      // if (MultiplayerController.Instance.ExitConnecting) {\r\n      //   MultiplayerController.Instance.ClearTimer();\r\n      //   MultiplayerController.Instance.SetConneting(false);\r\n      //   MultiplayerController.Instance.ResetRoomValues();\r\n      //   MultiplayerController.Instance.DisconnectPhoton();\r\n      // } else {\r\n      if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n        MultiplayerController.Instance.ProcessCounter();\r\n        //}\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called remotely by photon when even player joins room\r\n            @method onActorJoin\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n    (PhotonRef.onActorJoin = function (actor) {\r\n      var _realPlayer = MultiplayerController.Instance.GetRealActors();\r\n\r\n      if (_realPlayer == MaxStudents) {\r\n        //when max player required to start game has been added\r\n        MultiplayerController.Instance.ResetRoomValues();\r\n        console.log(\"all required players joined, starting the game..\");\r\n        cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n        cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n        MultiplayerController.Instance.JoinedRoom = true;\r\n        setTimeout(() => {\r\n          cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\");\r\n        }, 1000); //function in ui manager\r\n        MultiplayerController.Instance.UpdateRoomCustomProperites(true, PhotonRef.myRoomActorCount(), false, false, false, null, false, 0);\r\n        //PhotonRef.myRoom().setCustomProperty(\"Player\",PhotonRef.myRoomActorCount(),true);\r\n      }\r\n\r\n      // MultiplayerController.Instance.CheckCurrentActiveMasterClient(actor.actorNr);\r\n      // console.log(\"actor \" + actor.actorNr + \" joined\");\r\n      // console.error(\"Total Players: \"+PhotonRef.myRoomActorCount());\r\n      // console.log(PhotonRef.myRoom());\r\n    }),\r\n      /**\r\n            @summary function called remotely by photon when even player leaves a room\r\n            @method onActorLeave\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n      (PhotonRef.onActorLeave = function (actor) {\r\n        if (!GameFinished && !RestartSpectate) {\r\n          if (MultiplayerController.Instance.JoinedRoom == true) {\r\n            if (!actor.customProperties.PlayerSessionData.GameOver) {\r\n              if (!MultiplayerController.Instance.LeaveRoom) {\r\n                if (actor.customProperties.RoomEssentials.IsSpectate) {\r\n                  console.log(\"spectator left, so dont mind, cont game\");\r\n                  console.log(\"actor \" + actor.actorNr + \" left\");\r\n                  GamePlayReferenceManager.Instance.Get_GameManager().CheckTurnOnSpectateLeave_SpectateManager();\r\n                } else {\r\n                  var PhotonReferece = MultiplayerController.Instance.getPhotonRef();\r\n                  var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n                  if (_manager) {\r\n                    var _playerTurn = _manager.GetTurnNumber();\r\n                  }\r\n\r\n                  var _uIGameManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n                  var _realPlayer = MultiplayerController.Instance.GetRealActors();\r\n                  var _initialSetupDone = PhotonReferece.myRoom().getCustomProperty(\"InitialSetup\");\r\n\r\n                  if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n                    console.log(\"actor \" + actor.actorNr + \" left\");\r\n                    if (_realPlayer > 1) {\r\n                      MultiplayerController.Instance.HandlePlayerLeave(actor, PhotonReferece, _manager, _playerTurn, _initialSetupDone, false);\r\n                      if (_uIGameManager) {\r\n                        _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n                      }\r\n                    } else {\r\n                      if (_initialSetupDone) {\r\n                        for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n                          if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n                            _manager.PlayerGameInfo[index].IsActive = false;\r\n                            MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n                            break;\r\n                          }\r\n                        }\r\n                        _manager.GameOver(true);\r\n                      } else {\r\n                        if (_uIGameManager) MultiplayerController.Instance.RestartGame(1200);\r\n                        else MultiplayerController.Instance.RestartGame(0);\r\n                      }\r\n\r\n                      if (_uIGameManager) {\r\n                        _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n                      }\r\n                    }\r\n\r\n                    // MultiplayerController.Instance.JoinedRoom = false;\r\n                    // MultiplayerController.Instance.ResetState();\r\n                    // MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n                    // if (MultiplayerController.Instance != null) {\r\n                    //     if (MultiplayerController.Instance.getSceneName() == \"GamePlay\") //if scene is gameplay let player finish game forcefully\r\n                    //     {\r\n                    //         GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"other player \" + actor.name + \" has left\", 2000);\r\n                    //         setTimeout(() => {\r\n                    //             GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n                    //             GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n                    //             GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n                    //             GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n                    //             GamePlayReferenceManager.Instance.RemovePersistNode();\r\n                    //             cc.director.loadScene(\"MainMenu\");\r\n                    //         }, 2100);\r\n                    //     }\r\n                    // }\r\n                  } else {\r\n                    _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n\r\n                    if (_realPlayer > 1) {\r\n                      MultiplayerController.Instance.HandlePlayerLeave(actor, PhotonReferece, _manager, _playerTurn, _initialSetupDone, true);\r\n                    } else {\r\n                      if (_initialSetupDone) {\r\n                        _manager.GameOver(true);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          console.log(\"actor has left\");\r\n          console.log(PhotonRef.isJoinedToRoom());\r\n          console.log(IsGameStarted);\r\n          if (PhotonRef.isJoinedToRoom() == true && !IsGameStarted) {\r\n            if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n              MultiplayerController.Instance.ProcessCounter();\r\n            }\r\n\r\n            if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == true) {\r\n              if (PhotonRef.myRoomActorCount() == 1 && !RestartSpectate) {\r\n                RestartSpectate = true;\r\n                MultiplayerController.Instance.RestartGame(1500);\r\n                console.error(\"reatrted\");\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    /**\r\n            @summary function called by photon when even player own properties got changed\r\n            @method onActorPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onActorPropertiesChange = function (actor) {};\r\n\r\n    /**\r\n            @summary function called by photon when even player room properties got changed\r\n            @method onMyRoomPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onMyRoomPropertiesChange = function (_data) {\r\n      // console.log(_data);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon to handle errors\r\n            @method onError\r\n            @param {object} errorCode\r\n             @param {object} errorMsg\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onError = function (errorCode, errorMsg) {\r\n      console.log(\"Error \" + errorCode + \": \" + errorMsg);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever an event is received with some data\r\n            @method onEvent\r\n            @param {object} code\r\n            @param {object} content\r\n            @param {object} actorNr\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onEvent = function (code, content, actorNr) {\r\n      MultiplayerController.Instance.CheckReferences();\r\n      switch (code) {\r\n        case 1: //receving playerdata info\r\n          console.log(\"received player data\");\r\n          var PlayerInfoData = content.PlayerInfo;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(1, senderName, senderID, PlayerInfoData);\r\n\r\n          break;\r\n        case 2: //start turn raise event\r\n          console.log(\"received start turn event\");\r\n          var _Turn = content.TurnNumber;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(2, senderName, senderID, _Turn);\r\n\r\n          break;\r\n        case 3: // dice count\r\n          console.log(\"received dice count\");\r\n          var _dice = content.DiceCount;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(3, senderName, senderID, _dice);\r\n\r\n          break;\r\n        case 4: //receing user id of player who has completed turn\r\n          console.log(\"received player turn completed\");\r\n          var _ID = content.UID;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(4, senderName, senderID, _ID);\r\n\r\n          break;\r\n        case 5: //receiving card data (index) so other users can sync them\r\n          console.log(\"received card data\");\r\n          var _card = content.CardData;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(5, senderName, senderID, _card);\r\n\r\n          break;\r\n        case 6: //receive game over data\r\n          console.log(\"received game over call\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(6, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 7: //receive one Question data\r\n          console.log(\"received one question data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(7, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 8: //receive one Question response data\r\n          console.log(\"received one questio response data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(8, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 9: //receive bankrupt data\r\n          console.log(\"received bankrupt data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(9, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 10: //receive backspace data\r\n          console.log(\"received backspace data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(10, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 11: //receiveing partnership offer\r\n          console.log(\"received partnership offer data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(11, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 12: //receiveing partnership answer data\r\n          console.log(\"received partnership anwser data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(12, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 13: //receiving profit/loss data for partner\r\n          console.log(\"received partnership anwser data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(13, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 14: //receiving room complete data to start Game\r\n          console.log(\"received partnership anwser data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.RoomCompleted();\r\n\r\n          break;\r\n        case 15: //receiving payday info\r\n          console.log(\"received info\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(15, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 16: //receiving game over data to sync\r\n          console.log(\"received game over sync data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(16, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 17: //receiving data of player to get all profit next pay day\r\n          console.log(\"received data of player to get all profit next pay day\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(17, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 18: //receiving one question array\r\n          console.log(\"received data for one question array\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(18, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 19: //receiving decks array\r\n          console.log(\"received data for decks array\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(19, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 20: //receiving decks array Counter\r\n          console.log(\"received data for decks array counter\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(20, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 21: //receiving cash deduct data\r\n          console.log(\"received cash deduct data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(21, senderName, senderID, _data);\r\n\r\n          break;\r\n\r\n        case 22: //receiving cash add data\r\n          console.log(\"received cash add data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(22, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 23: //receiving take over business data\r\n          console.log(\"receiving take over business data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(23, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 24: //receiving damaging information\r\n          console.log(\"receiving damaging information\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(24, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 25: //receiving damaging information\r\n          console.log(\"receiving damaging information Decison\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(25, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 26: //receiving buy half business data\r\n          console.log(\"receiving buy half business data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(26, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 27: //receiving dice compare data\r\n          console.log(\"receiving dice compare data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(27, senderName, senderID, _data);\r\n\r\n          break;\r\n\r\n        case 28: //receiving dice compare data decison\r\n          console.log(\"receiving dice compare data decison\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(28, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 29: //receiving TV ad data\r\n          console.log(\"receiving TV ad data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(29, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 30: //receiving TV ad data votes\r\n          console.log(\"receiving TV ad data votes\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(30, senderName, senderID, _data);\r\n\r\n          break;\r\n        default:\r\n      }\r\n    };\r\n  },\r\n});\r\n\r\nmodule.exports = MultiplayerController;\r\n"]}