{"version":3,"sources":["assets\\Script\\MultiplayerController.js"],"names":["PhotonRef","stateText","GamePlayReferenceManager","ShowRoom","GameFinished","IsMasterClient","TotalTimer","TimerStarted","Schedular","MaxStudents","RestartSpectate","IsGameStarted","Timeouts","RoomProperty","cc","Class","name","properties","Player","type","Integer","serializable","InitialSetup","Boolean","PlayerGameInfo","Text","TurnNumber","App_Info","AppID","tooltip","AppVersion","Wss","displayName","MasterServer","FbAppID","MultiplayerController","Component","PhotonAppInfo","MaxPlayers","MaxSpectators","ModeSelection","statics","Instance","ResetAllData","ResetRoomValues","onLoad","Init_MultiplayerController","ToggleModeSelection","_val","GetSelectedMode","game","addPersistRootNode","node","InitializePhoton","console","log","AppInfo","DemoLoadBalancing","LeaveRoom","RoomName","Message","JoinedRoom","CheckReferences","require","RemovePersistNode","removePersistRootNode","getSceneName","sceneName","_sceneInfos","i","length","uuid","director","_scene","_id","url","substring","lastIndexOf","match","ToggleShowRoom_Bool","_state","ToggleLeaveRoom_Bool","getPhotonRef","PhotonActor","myActor","RoomActors","myRoomActorsArray","CheckSpectate","customProperties","RoomEssentials","IsSpectate","AppId","FbAppId","RequestConnection","state","isConnectedToMaster","isInLobby","start","DisconnectPhoton","isJoinedToRoom","disconnect","ResetState","OnRoomNameChange","OnMessageChange","msg","UpdateRoomCustomProperites","_playerUpdate","_playerValue","_initialSetupUpdate","_initialSetupValue","_playerGameInfoUpdate","_playerGameInfoValue","_turnNumberUpdate","_turnNumbervalue","myRoom","setCustomProperty","CreateRoom","_data","roomOptions","isVisible","isOpen","maxPlayers","customGameProperties","Get_MultiplayerController","Get_ServerBackend","StudentData","Counter","setUserId","userID","RoomID","Math","floor","random","Date","now","createRoom","JoinRoom","_roomName","joinRoom","JoinRandomRoom","expectedCustomRoomProperties","joinRandomRoom","SendCardData","raiseEvent","CardData","senderName","senderID","actorNr","receivers","Photon","LoadBalancing","Constants","ReceiverGroup","All","err","error","message","SendGameOver","Data","SendGameOverData","SendBankruptData","Others","SendData","PlayerInfo","SendOneQuestionData","SendPartnerProfitLoss","SendOneQuestionResponseData","DiceRollEvent","DiceCount","SendGoBackSpaceData","SendPartnerShipOfferData","SendPartnerShipAnswerData","SendInfo","SyncTurnCompletion","UID","StartTurn","trace","ShowToast","CallRecieveEvent","_eventCode","_senderName","_senderID","InstanceNull","Get_MultiplayerSyncManager","setTimeout","ReceiveEvent","DisconnectData","RestartGame","_timer","index","clearTimeout","Get_GameManager","ClearDisplayTimeout","loadScene","CheckMasterClient","_isMaster","myRoomMasterActorNr","CheckCurrentActiveMasterClient","GetRealActors","_realPlayer","AllPlayers","getCustomProperty","RoomCounter","SendRoomCompletedData","systemEvent","emit","ProcessCounter","_master","_counter","RoomCompleted","push","UpdateActorActiveData","_actor","_actorsArray","PlayerSessionData","PlayerUID","IsActive","HandlePlayerLeave","actor","PhotonReferece","_manager","_playerTurn","_initialSetupDone","_isSpectate","ReceiveEventTurnComplete","ChangeTurnForcefully","SetPlayerLeft","_playerfound","splice","Get_GameplayUIManager","SyncData","update","dt","onStateChange","LBC","LoadBalancingClient","StateToName","Get_UIManager","ToggleProfileScreen_SpectateUI","ToggleRoomScreen_SpectateUI","logger","debug","mess","info","param","warn","param1","param2","param3","ToggleLoadingNode","exception","format","onRoomList","rooms","ResetRoomList","UpdateRoomsList_SpectateUI","playerCount","onRoomListUpdate","roomsUpdated","roomsAdded","roomsRemoved","onJoinRoom","loadBalancingClient","userId","_customProperties","onActorJoin","myRoomActorCount","onActorLeave","GameOver","CheckTurnOnSpectateLeave_SpectateManager","GetTurnNumber","_uIGameManager","onActorPropertiesChange","onMyRoomPropertiesChange","onError","errorCode","errorMsg","onEvent","code","content","PlayerInfoData","_Turn","_dice","_ID","_card","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//Global Variables\r\nvar PhotonRef;\r\nvar stateText = \"\";\r\nvar GamePlayReferenceManager = null;\r\nvar ShowRoom = false;\r\nvar GameFinished = false;\r\nvar IsMasterClient = false;\r\nvar TotalTimer = 30;\r\nvar TimerStarted = false;\r\nvar Schedular = null;\r\nvar MaxStudents = 6;\r\nvar RestartSpectate = false;\r\nvar IsGameStarted = false;\r\nvar Timeouts = [];\r\n//---------------------------------------class data related to RoomProperty------------------------------------------------//\r\nvar RoomProperty = cc.Class({\r\n  name: \"RoomProperty\",\r\n  properties: {\r\n    Player: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n    InitialSetup: {\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n    PlayerGameInfo: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n    },\r\n    TurnNumber: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n  },\r\n});\r\n//---------------------------------------class data related to App_Info------------------------------------------------//\r\nvar App_Info = cc.Class({\r\n  name: \"App_Info\",\r\n  properties: {\r\n    AppID: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"App id form photon dashboard\",\r\n    },\r\n    AppVersion: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"App version for photon\",\r\n    },\r\n    Wss: {\r\n      displayName: \"IsSecure\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"If photon should use secure and reliable protocols\",\r\n    },\r\n    MasterServer: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"master server for photon to connect\",\r\n    },\r\n    FbAppID: {\r\n      default: \"\",\r\n      type: cc.Text,\r\n      serializable: true,\r\n      tooltip: \"FB app id used for FB autherization\",\r\n    },\r\n  },\r\n});\r\n//---------------------------------------class data related to MultiplayerController----------------------------------//\r\nvar MultiplayerController = cc.Class({\r\n  name: \"MultiplayerController\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    PhotonAppInfo: {\r\n      default: null,\r\n      type: App_Info,\r\n      serializable: true,\r\n    },\r\n    MaxPlayers: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n    MaxSpectators: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n    ModeSelection: {\r\n      // 1 means bot , 2 means real players\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  statics: {\r\n    //creating static instance of the class\r\n    Instance: null,\r\n  },\r\n\r\n  ResetAllData() {\r\n    Timeouts = [];\r\n    IsGameStarted = false;\r\n    PhotonRef = null;\r\n    stateText = \"\";\r\n    GamePlayReferenceManager = null;\r\n    ShowRoom = false;\r\n    GameFinished = false;\r\n    IsMasterClient = false;\r\n    TotalTimer = 5;\r\n    TimerStarted = false;\r\n    Schedular = null;\r\n    this.ResetRoomValues();\r\n    MaxStudents = 6;\r\n    RestartSpectate = false;\r\n  },\r\n  //this function is called when instance of this class is created\r\n  onLoad() {\r\n    this.ResetAllData();\r\n    this.Init_MultiplayerController();\r\n  },\r\n\r\n  ToggleModeSelection(\r\n    _val // 1 means bot , 2 means real players\r\n  ) {\r\n    this.ModeSelection = _val;\r\n  },\r\n\r\n  GetSelectedMode() {\r\n    return this.ModeSelection;\r\n  },\r\n\r\n  /**\r\n    @summary Initialize some essentails data for multiplayer controller class\r\n    @method Init_MultiplayerController\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  Init_MultiplayerController() {\r\n    if (!MultiplayerController.Instance) {\r\n      cc.game.addPersistRootNode(this.node);\r\n      this.InitializePhoton();\r\n      console.log(AppInfo);\r\n      PhotonRef = new DemoLoadBalancing();\r\n      MultiplayerController.Instance = this;\r\n    }\r\n\r\n    this.LeaveRoom = false;\r\n    this.RoomName = \"\";\r\n    this.Message = \"\";\r\n    ShowRoom = false;\r\n    this.JoinedRoom = false;\r\n    this.CheckReferences();\r\n  },\r\n\r\n  /**\r\n    @summary check reference to some variables and classes\r\n    @method CheckReferences\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  /**\r\n    @summary remove persist node when want to restart scene\r\n    @method RemovePersistNode\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  RemovePersistNode() {\r\n    MultiplayerController.Instance = null;\r\n    cc.game.removePersistRootNode(this.node);\r\n  },\r\n\r\n  /**\r\n    @summary function to get name of current opened scene\r\n    @method getSceneName\r\n    @param none\r\n    @returns {string} sceneName\r\n    **/\r\n  getSceneName: function () {\r\n    var sceneName;\r\n    var _sceneInfos = cc.game._sceneInfos;\r\n    for (var i = 0; i < _sceneInfos.length; i++) {\r\n      if (_sceneInfos[i].uuid == cc.director._scene._id) {\r\n        sceneName = _sceneInfos[i].url;\r\n        sceneName = sceneName.substring(sceneName.lastIndexOf(\"/\") + 1).match(/[^\\.]+/)[0];\r\n      }\r\n    }\r\n    return sceneName;\r\n  },\r\n\r\n  /**\r\n    @summary function to set \"ShowRoom\" bool value\r\n    @method ToggleShowRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/\r\n  ToggleShowRoom_Bool(_state) {\r\n    ShowRoom = _state;\r\n  },\r\n\r\n  /**\r\n    @summary function to set \"LeaveRoom\" bool value\r\n    @method ToggleLeaveRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/\r\n  ToggleLeaveRoom_Bool(_state) {\r\n    this.LeaveRoom = _state;\r\n  },\r\n\r\n  /**\r\n    @summary returns Photon \"PhotonRef\" instance created by multiplayer class\r\n    @method getPhotonRef\r\n    @param none\r\n    @returns {object} PhotonRef\r\n    **/\r\n  getPhotonRef() {\r\n    return PhotonRef;\r\n  },\r\n\r\n  /**\r\n    @summary returns myActor instance created by photon\r\n    @method PhotonActor\r\n    @param none\r\n    @returns {object} Actor\r\n    **/\r\n  PhotonActor() {\r\n    return PhotonRef.myActor();\r\n  },\r\n\r\n  /**\r\n    @summary returns myRoomActorsArray created by photon\r\n    @method RoomActors\r\n    @param none\r\n    @returns {object} Actor\r\n    **/\r\n  RoomActors() {\r\n    return PhotonRef.myRoomActorsArray();\r\n  },\r\n\r\n  /**\r\n    @summary returns isSpectate variable from custom property of current actor\r\n    @method CheckSpectate\r\n    @param none\r\n    @returns {boolean} isSpectate\r\n    **/\r\n  CheckSpectate() {\r\n    return PhotonRef.myActor().customProperties.RoomEssentials.IsSpectate;\r\n  },\r\n\r\n  /**\r\n    @summary Initialize photon with appid,app version, Wss etc\r\n    @method InitializePhoton\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  InitializePhoton() {\r\n    AppInfo.AppId = this.PhotonAppInfo.AppID;\r\n    AppInfo.AppVersion = this.PhotonAppInfo.AppVersion;\r\n    AppInfo.Wss = this.PhotonAppInfo.Wss;\r\n    AppInfo.MasterServer = this.PhotonAppInfo.MasterServer;\r\n    AppInfo.FbAppId = this.PhotonAppInfo.FbAppID;\r\n  },\r\n\r\n  /**\r\n    @summary send connection request to photon\r\n    @method RequestConnection\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  RequestConnection() {\r\n    if (PhotonRef.state == 5 || PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true) console.log(\"already connected\");\r\n    else PhotonRef.start();\r\n  },\r\n\r\n  /**\r\n    @summary Disconnect from photon\r\n    @method DisconnectPhoton\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  DisconnectPhoton() {\r\n    if (PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.isJoinedToRoom() == true) {\r\n      PhotonRef.disconnect();\r\n      this.JoinedRoom = false;\r\n      //PhotonRef.leaveRoom();\r\n      this.ResetState();\r\n    } else {\r\n      console.log(\"not inside any room or lobby or connected to photon\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary reseting few values\r\n    @method ResetState\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  ResetState() {\r\n    IsGameStarted = false;\r\n    this.LeaveRoom = false;\r\n    this.JoinedRoom = false;\r\n    ShowRoom = false;\r\n    stateText = \"\";\r\n    this.ResetRoomValues();\r\n  },\r\n\r\n  /**\r\n    @summary called when room name got input from game\r\n    @method OnRoomNameChange\r\n    @param {string} name\r\n    @returns no return\r\n   **/\r\n  OnRoomNameChange(name) {\r\n    this.RoomName = name;\r\n  },\r\n\r\n  /**\r\n    @summary called when message window got input from game\r\n    @method OnMessageChange\r\n    @param {string} msg\r\n    @returns no return\r\n   **/\r\n  OnMessageChange(msg) {\r\n    this.Message = msg;\r\n  },\r\n\r\n  /**\r\n    @summary update custom room properties\r\n    @method UpdateRoomCustomProperites\r\n    @returns no return\r\n   **/\r\n  UpdateRoomCustomProperites(\r\n    _playerUpdate = false,\r\n    _playerValue = 0,\r\n    _initialSetupUpdate = false,\r\n    _initialSetupValue = false,\r\n    _playerGameInfoUpdate = false,\r\n    _playerGameInfoValue = null,\r\n    _turnNumberUpdate = false,\r\n    _turnNumbervalue = 0\r\n  ) {\r\n    if (_playerUpdate) PhotonRef.myRoom().setCustomProperty(\"Player\", _playerValue, true);\r\n\r\n    if (_initialSetupUpdate) PhotonRef.myRoom().setCustomProperty(\"InitialSetup\", _initialSetupValue, true);\r\n\r\n    if (_playerGameInfoUpdate) PhotonRef.myRoom().setCustomProperty(\"PlayerGameInfo\", _playerGameInfoValue, true);\r\n\r\n    if (_turnNumberUpdate) PhotonRef.myRoom().setCustomProperty(\"TurnNumber\", _turnNumbervalue, true);\r\n  },\r\n\r\n  /**\r\n    @summary create room request\r\n    @method CreateRoom\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  CreateRoom() {\r\n    if (PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.state == 8) {\r\n      if (PhotonRef.isJoinedToRoom() == false) {\r\n        var _data = new RoomProperty();\r\n        _data.Player = 0;\r\n\r\n        var roomOptions = {\r\n          isVisible: true,\r\n          isOpen: true,\r\n          maxPlayers: this.MaxPlayers + this.MaxSpectators,\r\n          customGameProperties: _data,\r\n        };\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n        PhotonRef.myActor().name = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n        PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n        PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n        PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: false });\r\n        PhotonRef.myActor().setCustomProperty(\"RoomCounter\", { Counter: TotalTimer });\r\n        PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n        var RoomID = Math.floor(Math.random() * Date.now());\r\n\r\n        PhotonRef.createRoom(\"Room_\" + RoomID, roomOptions);\r\n      } else {\r\n        console.log(\"already joined the room\");\r\n      }\r\n    } else {\r\n      console.log(\"you are not connected or connection is dropped, please connect to photon again.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary join room request by name\r\n    @method JoinRoom\r\n    @param {string} _roomName\r\n    @returns no return\r\n   **/\r\n  JoinRoom(_roomName) {\r\n    if (PhotonRef.state == 5 || PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.state == 8) {\r\n      if (PhotonRef.isJoinedToRoom() == false || PhotonRef.state != 8) {\r\n        var roomOptions = {\r\n          isVisible: true,\r\n          isOpen: false,\r\n          maxPlayers: this.MaxPlayers + this.MaxSpectators,\r\n          //\"customGameProperties\":{\"RoomEssentials\": {IsSpectate:true}}\r\n        };\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n        PhotonRef.myActor().name = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n        PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n        PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n        PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: true });\r\n        PhotonRef.myActor().setCustomProperty(\"RoomCounter\", { Counter: TotalTimer });\r\n        PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n        PhotonRef.joinRoom(_roomName, roomOptions);\r\n      } else {\r\n        console.log(\"already joined the room\");\r\n      }\r\n    } else {\r\n      console.log(\"you are not connected or connection is dropped, please connect to photon again.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary join random room\r\n    @method JoinRandomRoom\r\n    @param none\r\n    @returns no return\r\n   **/\r\n  JoinRandomRoom() {\r\n    if (PhotonRef.state == 5 || PhotonRef.isConnectedToMaster() == true || PhotonRef.isInLobby() == true || PhotonRef.state == 8) {\r\n      if (PhotonRef.isJoinedToRoom() == false || PhotonRef.state != 8) {\r\n        var _data = new RoomProperty();\r\n        _data.Player = 0;\r\n\r\n        var roomOptions = {\r\n          //\"expectedMaxPlayers\":this.MaxPlayers+MaxSpectators,\r\n          expectedCustomRoomProperties: _data,\r\n        };\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n        PhotonRef.myActor().name = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n        PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n        PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n        PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", { IsSpectate: false });\r\n        PhotonRef.myActor().setCustomProperty(\"RoomCounter\", { Counter: TotalTimer });\r\n        PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n        PhotonRef.joinRandomRoom(roomOptions);\r\n      } else {\r\n        console.log(\"already joined the room\");\r\n      }\r\n    } else {\r\n      console.log(\"you are not connected or connection is dropped, please connect to photon again.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send card index over network\r\n    @method SendCardData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendCardData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending card data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          5,\r\n          {\r\n            CardData: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send game over call\r\n    @method SendGameOver\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendGameOver(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending game over call\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          6,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendGameOverData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending game over data to sync\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          16,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send backrupt data\r\n    @method SendBankruptData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendBankruptData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending bankrupcy data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          9,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send Player Data over network\r\n    @method SendData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending player data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          1,\r\n          {\r\n            PlayerInfo: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question Data over network\r\n    @method SendOneQuestionData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendOneQuestionData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending one question data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          7,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send profit or loss to your pasrtner\r\n    @method SendPartnerProfitLoss\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendPartnerProfitLoss(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending one question data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          13,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question response over network\r\n    @method SendOneQuestionResponseData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendOneQuestionResponseData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending one question response data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          8,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send dice data\r\n    @method DiceRollEvent\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  DiceRollEvent(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending dice count\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          3,\r\n          {\r\n            DiceCount: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send go back spaces data\r\n    @method SendGoBackSpaceData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendGoBackSpaceData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"send go back spaces data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          10,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary sending open invitation to all players for partner ship\r\n    @method SendPartnerShipOfferData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendPartnerShipOfferData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending partner ship offer\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          11,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary sending partner answer data (accept or reject)\r\n    @method SendPartnerShipAnswerData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendPartnerShipAnswerData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending partenrship answer data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          12,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  SendInfo(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending info\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          15,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.Others }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send user id of player to all other who had completed their turn\r\n    @method SyncTurnCompletion\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SyncTurnCompletion(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending turn completion data\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          4,\r\n          {\r\n            UID: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Start Turn for initial turn\r\n    @method StartTurn\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  StartTurn(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.trace(\"Starting Turn\");\r\n      console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          2,\r\n          {\r\n            TurnNumber: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Show toast message on the console\r\n    @method ShowToast\r\n    @param {string} message message to be shown \r\n    @returns no return\r\n   **/\r\n  ShowToast: function (msg) {\r\n    console.log(\"toast message: \" + msg);\r\n  },\r\n\r\n  /**\r\n    @summary Receive event from photon raise on \r\n    @method CallRecieveEvent\r\n    @returns no return\r\n   **/\r\n  CallRecieveEvent: function (_eventCode, _senderName, _senderID, _data) {\r\n    var InstanceNull = true;\r\n\r\n    //to check if instance is null in case class instance is not loaded and its receives callback\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager() == null) {\r\n      InstanceNull = true;\r\n      setTimeout(() => {\r\n        this.CallRecieveEvent(_eventCode, _senderName, _senderID, _data);\r\n      }, 50);\r\n    } else {\r\n      InstanceNull = false;\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().ReceiveEvent(_eventCode, _senderName, _senderID, _data);\r\n    }\r\n  },\r\n\r\n  DisconnectData() {\r\n    GameFinished = true;\r\n    // MultiplayerController.Instance.JoinedRoom=false;\r\n    // MultiplayerController.Instance.ResetState();\r\n    // MultiplayerController.Instance.DisconnectPhoton();\r\n  },\r\n\r\n  RestartGame(_timer = 0) {\r\n    IsGameStarted = false;\r\n    MultiplayerController.Instance.JoinedRoom = false;\r\n    MultiplayerController.Instance.ResetState();\r\n    MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n    for (let index = 0; index < Timeouts.length; index++) {\r\n      clearTimeout(Timeouts[index]);\r\n    }\r\n\r\n    setTimeout(() => {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager()) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      }\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager()) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      }\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_ServerBackend()) {\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      }\r\n\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      MultiplayerController.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"MainMenu\");\r\n    }, _timer);\r\n    // GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode()\r\n  },\r\n\r\n  CheckMasterClient(_id) {\r\n    var _isMaster = false;\r\n    if (PhotonRef.myRoomMasterActorNr() == _id && PhotonRef.myActor().actorNr == _id) {\r\n      _isMaster = true;\r\n      IsMasterClient = true;\r\n    }\r\n\r\n    //console.error(_isMaster);\r\n    return _isMaster;\r\n  },\r\n\r\n  CheckCurrentActiveMasterClient() {\r\n    var _isMaster = false;\r\n    if (PhotonRef.myActor().actorNr == PhotonRef.myRoomMasterActorNr()) {\r\n      _isMaster = true;\r\n      IsMasterClient = true;\r\n    } else {\r\n      IsMasterClient = false;\r\n    }\r\n\r\n    //console.error(_isMaster);\r\n    return _isMaster;\r\n  },\r\n\r\n  ResetRoomValues() {\r\n    clearTimeout(Schedular);\r\n\r\n    setTimeout(() => {\r\n      IsMasterClient = false;\r\n      TimerStarted = false;\r\n    }, 1000);\r\n  },\r\n\r\n  GetRealActors() {\r\n    var _realPlayer = 0;\r\n    var AllPlayers = PhotonRef.myRoomActorsArray();\r\n    for (let index = 0; index < AllPlayers.length; index++) {\r\n      if (AllPlayers[index].getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n        _realPlayer++;\r\n      }\r\n    }\r\n    return _realPlayer;\r\n  },\r\n\r\n  RoomCounter(_timer) {\r\n    clearTimeout(Schedular);\r\n    var _data = null;\r\n    Schedular = setTimeout(() => {\r\n      if (IsMasterClient) {\r\n        if (_timer > 0) {\r\n          _timer--;\r\n          this.RoomCounter(_timer);\r\n        } else {\r\n          console.error(\"timer completed\");\r\n          if (this.GetRealActors() > 1) {\r\n            //if has more than one player start real game\r\n            this.SendRoomCompletedData();\r\n          } //start game with bot\r\n          else {\r\n            MultiplayerController.Instance.ResetRoomValues();\r\n            MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n            MultiplayerController.Instance.ToggleModeSelection(1);\r\n            MultiplayerController.Instance.ToggleShowRoom_Bool(false);\r\n\r\n            MultiplayerController.Instance.MaxPlayers = 2;\r\n            cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n            cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n\r\n            setTimeout(() => {\r\n              GamePlayReferenceManager.Instance.Get_MultiplayerController().JoinedRoom = true;\r\n              cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\"); //function in ui manager\r\n            }, 1000);\r\n          }\r\n        }\r\n      } else {\r\n        clearTimeout(Schedular);\r\n      }\r\n    }, 1000);\r\n  },\r\n\r\n  ProcessCounter() {\r\n    var _master = MultiplayerController.Instance.CheckCurrentActiveMasterClient();\r\n    if (_master) {\r\n      if (!TimerStarted) {\r\n        TimerStarted = true;\r\n        var _counter = PhotonRef.myActor().getCustomProperty(\"RoomCounter\")[\"Counter\"];\r\n        MultiplayerController.Instance.RoomCounter(_counter);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send room completed data\r\n    @method SendRoomCompletedData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/\r\n  SendRoomCompletedData(_data) {\r\n    if (PhotonRef.isJoinedToRoom() == true) {\r\n      console.log(\"sending RoomCompletedData\");\r\n      //  console.log(_data);\r\n      try {\r\n        PhotonRef.raiseEvent(\r\n          14,\r\n          {\r\n            Data: _data,\r\n            senderName: PhotonRef.myActor().name,\r\n            senderID: PhotonRef.myActor().actorNr,\r\n          },\r\n          { receivers: Photon.LoadBalancing.Constants.ReceiverGroup.All }\r\n        );\r\n      } catch (err) {\r\n        console.error(\"error: \" + err.message);\r\n      }\r\n    } else {\r\n      console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  RoomCompleted() {\r\n    if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n      var _realPlayer = this.GetRealActors();\r\n      IsGameStarted = true;\r\n      MultiplayerController.Instance.MaxPlayers = _realPlayer;\r\n      console.log(\"all required players joined, starting the game..\");\r\n      cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n      cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n      MultiplayerController.Instance.JoinedRoom = true;\r\n      Timeouts.push(\r\n        setTimeout(() => {\r\n          cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\");\r\n        }, 1000)\r\n      ); //function in ui manager\r\n      MultiplayerController.Instance.UpdateRoomCustomProperites(true, _realPlayer, false, false, false, null, false, 0);\r\n    }\r\n  },\r\n\r\n  UpdateActorActiveData(_actor) {\r\n    var _actorsArray = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n    var _data = null;\r\n    for (let index = 0; index < _actorsArray.length; index++) {\r\n      _data = _actorsArray[index].customProperties.PlayerSessionData;\r\n      if (_data.PlayerUID == _actor.customProperties.Data.userID) {\r\n        _data.IsActive = false;\r\n        _actorsArray[index].setCustomProperty(\"PlayerSessionData\", _data);\r\n      }\r\n    }\r\n  },\r\n\r\n  HandlePlayerLeave(actor = null, PhotonReferece = null, _manager = null, _playerTurn = 0, _initialSetupDone = false, _isSpectate = false) {\r\n    if (_initialSetupDone) {\r\n      for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n        if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n          _manager.PlayerGameInfo[index].IsActive = false;\r\n          MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n          if (!_isSpectate) {\r\n            _manager.ReceiveEventTurnComplete(_manager.PlayerGameInfo[index].PlayerUID);\r\n            if (_playerTurn == index && PhotonReferece.myActor().actorNr == PhotonReferece.myRoomMasterActorNr()) {\r\n              _manager.ChangeTurnForcefully();\r\n              _manager.SetPlayerLeft(true);\r\n            }\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // _uIManager.ShowToast(\"player \" + actor.name + \" has left\", 1000);\r\n      var _playerfound = false;\r\n      for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n        if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n          _manager.PlayerGameInfo[index].IsActive = false;\r\n          _manager.PlayerGameInfo.splice(index, 1);\r\n          MultiplayerController.Instance.MaxPlayers--;\r\n          _playerfound = true;\r\n          MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (!_playerfound) {\r\n        MultiplayerController.Instance.MaxPlayers--;\r\n        if (!_isSpectate) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().SyncData(null, actor.customProperties.Data.userID, true);\r\n        }\r\n      }\r\n\r\n      console.log(_manager.PlayerGameInfo);\r\n      console.log(MultiplayerController.Instance.MaxPlayers);\r\n    }\r\n  },\r\n  //called every frame\r\n  update(dt) {\r\n    /**\r\n            @summary function called by photon whenever there is some change in connection state\r\n            @method onStateChange\r\n            @param {object} state\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onStateChange = function (state) {\r\n      //#region Connection States\r\n      //state 1 : connectingToNameServer\r\n      //State 2 : ConnectedToNameServer\r\n      //State 3 : ConnectingToMasterServer\r\n      //State 4 : ConnectedToMasterServer\r\n      //State 5:  JoinedLobby\r\n      //State 6 : ConnectingToGameserver\r\n      //State 7 : ConnectedToGameserver\r\n      //State 8 : Joined\r\n      //State 10: Disconnected\r\n      //#endregion\r\n\r\n      var LBC = Photon.LoadBalancing.LoadBalancingClient;\r\n      console.log(\"StateCode: \" + state + \" \" + LBC.StateToName(state));\r\n\r\n      if (state == 1) cc.systemEvent.emit(\"UpdateStatusWindow\", \"connecting to server...\");\r\n      else if (state == 4) cc.systemEvent.emit(\"UpdateStatusWindow\", \"connected to server\");\r\n      else if (state == 5) {\r\n        //has joined lobby\r\n        if (ShowRoom == false) {\r\n          cc.systemEvent.emit(\"UpdateStatusWindow\", \"waiting for other players...\");\r\n          MultiplayerController.Instance.JoinRandomRoom();\r\n        } else if (ShowRoom == true) {\r\n          cc.systemEvent.emit(\"UpdateStatusWindow\", \"showing rooms list...\");\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ToggleProfileScreen_SpectateUI(false);\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ToggleRoomScreen_SpectateUI(true);\r\n          }, 1000);\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives debug\r\n            @method debug\r\n            @param {object} mess\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.debug = function (mess) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives info\r\n            @method info\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.info = function (mess, param) {\r\n      console.log(mess + param);\r\n      stateText += mess + \" \" + param + \"\\n\";\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives warn\r\n            @method warn\r\n            @param {object} mess\r\n            @param {object} param1\r\n            @param {object} param2\r\n            @param {object} param3\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.warn = function (mess, param1, param2, param3) {\r\n      console.log(mess + \" \" + param1 + \" \" + param2 + \" \" + param3);\r\n\r\n      if (param1 == 225) {\r\n        //no room found\r\n        console.log(\"no random room was found, creating one\");\r\n        MultiplayerController.Instance.CreateRoom();\r\n      }\r\n\r\n      if (param1 == 226) {\r\n        //room does not exists or is full\r\n        GamePlayReferenceManager.Instance.Get_UIManager().ToggleLoadingNode(false);\r\n        GamePlayReferenceManager.Instance.Get_UIManager().ShowToast(\"Room is full, please select any other room to spectate.\");\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives error\r\n            @method error\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.error = function (mess, param) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives exception\r\n            @method exception\r\n            @param {object} mess\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.exception = function (mess) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever its logger receives some format\r\n            @method format\r\n            @param {object} mess\r\n            @returns no return\r\n        **/\r\n    PhotonRef.logger.format = function (mess) {\r\n      console.log(mess);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever player joins lobby\r\n            @method onRoomList\r\n            @param {object} rooms\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onRoomList = function (rooms) {\r\n      stateText += \"\\n\" + \"Rooms List:\" + \"\\n\";\r\n\r\n      if (rooms.length == 0) {\r\n        stateText += \"No rooms in lobby.\" + \"\\n\";\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n\r\n        for (var i = 0; i < rooms.length; ++i) {\r\n          GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name, rooms[i].playerCount);\r\n          console.log(\"Room name: \" + rooms[i].name);\r\n          stateText += \"Room: \" + rooms[i].name + \"\\n\";\r\n        }\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever there is change in rooms list (room added,updated,removed etc)\r\n            @method onRoomListUpdate\r\n            @param {object} rooms\r\n            @param {object} roomsUpdated\r\n            @param {object} roomsAdded\r\n            @param {object} roomsRemoved\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onRoomListUpdate = function (rooms, roomsUpdated, roomsAdded, roomsRemoved) {\r\n      GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n\r\n      for (var i = 0; i < rooms.length; ++i) {\r\n        GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name, rooms[i].playerCount);\r\n        console.log(\"Room name: \" + rooms[i].name);\r\n        stateText += \"Room: \" + rooms[i].name + \"\\n\";\r\n      }\r\n      console.log(\"Rooms List updated: \" + roomsUpdated.length + \" updated, \" + roomsAdded.length + \" added, \" + roomsRemoved.length + \" removed\");\r\n    };\r\n\r\n    /**\r\n            @summary function called locally by photon when even player joins room\r\n            @method onJoinRoom\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onJoinRoom = function () {\r\n      //#region Logs for game\r\n      console.log(\"Game \" + this.myRoom().name + \" joined\");\r\n      console.log(PhotonRef.myActor());\r\n      console.log(PhotonRef.myRoom());\r\n      console.log(PhotonRef.myRoomActorsArray());\r\n      console.log(PhotonRef.myRoomActorsArray().length);\r\n      console.log(PhotonRef.myRoomActorsArray()[0].loadBalancingClient.userId);\r\n      console.log(PhotonRef.myRoom()._customProperties);\r\n      console.log(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]);\r\n      //#endregion\r\n\r\n      if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == true) {\r\n        //check if player who joined is spectate\r\n        MultiplayerController.Instance.JoinedRoom = true;\r\n        setTimeout(() => {\r\n          cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\");\r\n        }, 1000); //function in UIManager\r\n      }\r\n\r\n      if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n        MultiplayerController.Instance.ProcessCounter();\r\n      }\r\n    };\r\n\r\n    /**\r\n            @summary function called remotely by photon when even player joins room\r\n            @method onActorJoin\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n    (PhotonRef.onActorJoin = function (actor) {\r\n      var _realPlayer = MultiplayerController.Instance.GetRealActors();\r\n\r\n      if (_realPlayer == MaxStudents) {\r\n        //when max player required to start game has been added\r\n        MultiplayerController.Instance.ResetRoomValues();\r\n        console.log(\"all required players joined, starting the game..\");\r\n        cc.systemEvent.emit(\"UpdateStatusWindow\", \"players found\");\r\n        cc.systemEvent.emit(\"UpdateStatusWindow\", \"starting game...\");\r\n        MultiplayerController.Instance.JoinedRoom = true;\r\n        setTimeout(() => {\r\n          cc.systemEvent.emit(\"ChangePanelScreen\", true, true, \"GamePlay\");\r\n        }, 1000); //function in ui manager\r\n        MultiplayerController.Instance.UpdateRoomCustomProperites(true, PhotonRef.myRoomActorCount(), false, false, false, null, false, 0);\r\n        //PhotonRef.myRoom().setCustomProperty(\"Player\",PhotonRef.myRoomActorCount(),true);\r\n      }\r\n\r\n      // MultiplayerController.Instance.CheckCurrentActiveMasterClient(actor.actorNr);\r\n      // console.log(\"actor \" + actor.actorNr + \" joined\");\r\n      // console.error(\"Total Players: \"+PhotonRef.myRoomActorCount());\r\n      // console.log(PhotonRef.myRoom());\r\n    }),\r\n      /**\r\n            @summary function called remotely by photon when even player leaves a room\r\n            @method onActorLeave\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n      (PhotonRef.onActorLeave = function (actor) {\r\n        if (!GameFinished && !RestartSpectate) {\r\n          if (MultiplayerController.Instance.JoinedRoom == true) {\r\n            if (!actor.customProperties.PlayerSessionData.GameOver) {\r\n              if (!MultiplayerController.Instance.LeaveRoom) {\r\n                if (actor.customProperties.RoomEssentials.IsSpectate) {\r\n                  console.log(\"spectator left, so dont mind, cont game\");\r\n                  console.log(\"actor \" + actor.actorNr + \" left\");\r\n                  GamePlayReferenceManager.Instance.Get_GameManager().CheckTurnOnSpectateLeave_SpectateManager();\r\n                } else {\r\n                  var PhotonReferece = MultiplayerController.Instance.getPhotonRef();\r\n                  var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n                  if (_manager) {\r\n                    var _playerTurn = _manager.GetTurnNumber();\r\n                  }\r\n\r\n                  var _uIGameManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n                  var _realPlayer = MultiplayerController.Instance.GetRealActors();\r\n                  var _initialSetupDone = PhotonReferece.myRoom().getCustomProperty(\"InitialSetup\");\r\n\r\n                  if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n                    console.log(\"actor \" + actor.actorNr + \" left\");\r\n                    if (_realPlayer == -11) {\r\n                      MultiplayerController.Instance.HandlePlayerLeave(actor, PhotonReferece, _manager, _playerTurn, _initialSetupDone, false);\r\n                      if (_uIGameManager) {\r\n                        _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n                      }\r\n                    } else {\r\n                      if (_initialSetupDone) {\r\n                        for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n                          if (_manager.PlayerGameInfo[index].PlayerUID == actor.customProperties.Data.userID) {\r\n                            _manager.PlayerGameInfo[index].IsActive = false;\r\n                            MultiplayerController.Instance.UpdateActorActiveData(actor);\r\n                            break;\r\n                          }\r\n                        }\r\n                        _manager.GameOver(true);\r\n                      } else {\r\n                        if (_uIGameManager) MultiplayerController.Instance.RestartGame(1200);\r\n                        else MultiplayerController.Instance.RestartGame(0);\r\n                      }\r\n\r\n                      if (_uIGameManager) {\r\n                        _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n                      }\r\n                    }\r\n\r\n                    // MultiplayerController.Instance.JoinedRoom = false;\r\n                    // MultiplayerController.Instance.ResetState();\r\n                    // MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n                    // if (MultiplayerController.Instance != null) {\r\n                    //     if (MultiplayerController.Instance.getSceneName() == \"GamePlay\") //if scene is gameplay let player finish game forcefully\r\n                    //     {\r\n                    //         GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"other player \" + actor.name + \" has left\", 2000);\r\n                    //         setTimeout(() => {\r\n                    //             GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n                    //             GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n                    //             GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n                    //             GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n                    //             GamePlayReferenceManager.Instance.RemovePersistNode();\r\n                    //             cc.director.loadScene(\"MainMenu\");\r\n                    //         }, 2100);\r\n                    //     }\r\n                    // }\r\n                  } else {\r\n                    _uIGameManager.ShowToast(\"player \" + actor.name + \" has left\", 1150, false);\r\n\r\n                    if (_realPlayer > 1) {\r\n                      MultiplayerController.Instance.HandlePlayerLeave(actor, PhotonReferece, _manager, _playerTurn, _initialSetupDone, true);\r\n                    } else {\r\n                      if (_initialSetupDone) {\r\n                        _manager.GameOver(true);\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n\r\n          if (MultiplayerController.Instance.JoinedRoom == true && !IsGameStarted) {\r\n            if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == false) {\r\n              MultiplayerController.Instance.ProcessCounter();\r\n            }\r\n\r\n            if (PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"] == true) {\r\n              if (PhotonRef.myRoomActorCount() == 1 && !RestartSpectate) {\r\n                RestartSpectate = true;\r\n                MultiplayerController.Instance.RestartGame(1500);\r\n                console.error(\"reatrted\");\r\n              }\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n    /**\r\n            @summary function called by photon when even player own properties got changed\r\n            @method onActorPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onActorPropertiesChange = function (actor) {};\r\n\r\n    /**\r\n            @summary function called by photon when even player room properties got changed\r\n            @method onMyRoomPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onMyRoomPropertiesChange = function (_data) {\r\n      // console.log(_data);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon to handle errors\r\n            @method onError\r\n            @param {object} errorCode\r\n             @param {object} errorMsg\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onError = function (errorCode, errorMsg) {\r\n      console.log(\"Error \" + errorCode + \": \" + errorMsg);\r\n    };\r\n\r\n    /**\r\n            @summary function called by photon whenever an event is received with some data\r\n            @method onEvent\r\n            @param {object} code\r\n            @param {object} content\r\n            @param {object} actorNr\r\n            @returns no return\r\n        **/\r\n    PhotonRef.onEvent = function (code, content, actorNr) {\r\n      MultiplayerController.Instance.CheckReferences();\r\n      switch (code) {\r\n        case 1: //receving playerdata info\r\n          console.log(\"received player data\");\r\n          var PlayerInfoData = content.PlayerInfo;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(1, senderName, senderID, PlayerInfoData);\r\n\r\n          break;\r\n        case 2: //start turn raise event\r\n          console.log(\"received start turn event\");\r\n          var _Turn = content.TurnNumber;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(2, senderName, senderID, _Turn);\r\n\r\n          break;\r\n        case 3: // dice count\r\n          console.log(\"received dice count\");\r\n          var _dice = content.DiceCount;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(3, senderName, senderID, _dice);\r\n\r\n          break;\r\n        case 4: //receing user id of player who has completed turn\r\n          console.log(\"received player turn completed\");\r\n          var _ID = content.UID;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(4, senderName, senderID, _ID);\r\n\r\n          break;\r\n        case 5: //receiving card data (index) so other users can sync them\r\n          console.log(\"received card data\");\r\n          var _card = content.CardData;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(5, senderName, senderID, _card);\r\n\r\n          break;\r\n        case 6: //receive game over data\r\n          console.log(\"received game over call\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(6, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 7: //receive one Question data\r\n          console.log(\"received one question data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(7, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 8: //receive one Question response data\r\n          console.log(\"received one questio response data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(8, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 9: //receive bankrupt data\r\n          console.log(\"received bankrupt data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(9, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 10: //receive backspace data\r\n          console.log(\"received backspace data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(10, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 11: //receiveing partnership offer\r\n          console.log(\"received partnership offer data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(11, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 12: //receiveing partnership answer data\r\n          console.log(\"received partnership anwser data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(12, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 13: //receiving profit/loss data for partner\r\n          console.log(\"received partnership anwser data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(13, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 14: //receiving room complete data to start Game\r\n          console.log(\"received partnership anwser data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.RoomCompleted();\r\n\r\n          break;\r\n        case 15: //receiving payday info\r\n          console.log(\"received info\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(15, senderName, senderID, _data);\r\n\r\n          break;\r\n        case 16: //receiving game over data to sync\r\n          console.log(\"received game over sync data\");\r\n          var _data = content.Data;\r\n          var senderName = content.senderName;\r\n          var senderID = content.senderID;\r\n\r\n          MultiplayerController.Instance.CallRecieveEvent(16, senderName, senderID, _data);\r\n\r\n          break;\r\n        default:\r\n      }\r\n    };\r\n  },\r\n});\r\n\r\nmodule.exports = MultiplayerController;\r\n"]}