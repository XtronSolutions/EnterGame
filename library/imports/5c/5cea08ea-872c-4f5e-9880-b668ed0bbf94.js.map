{"version":3,"sources":["assets\\Script\\MultiplayerController.js"],"names":["PhotonRef","stateText","GamePlayReferenceManager","ShowRoom","RoomProperty","cc","Class","name","properties","Player","type","Integer","serializable","InitialSetup","Boolean","PlayerGameInfo","Text","TurnNumber","App_Info","AppID","tooltip","AppVersion","Wss","displayName","MasterServer","FbAppID","MultiplayerController","Component","PhotonAppInfo","MaxPlayers","MaxSpectators","statics","Instance","onLoad","Init_MultiplayerController","game","addPersistRootNode","node","InitializePhoton","console","log","AppInfo","DemoLoadBalancing","LeaveRoom","RoomName","Message","JoinedRoom","CheckReferences","require","RemovePersistNode","removePersistRootNode","getSceneName","sceneName","_sceneInfos","i","length","uuid","director","_scene","_id","url","substring","lastIndexOf","match","ToggleShowRoom_Bool","_state","ToggleLeaveRoom_Bool","getPhotonRef","PhotonActor","myActor","RoomActors","myRoomActorsArray","CheckSpectate","customProperties","RoomEssentials","IsSpectate","AppId","FbAppId","RequestConnection","state","isConnectedToMaster","isInLobby","start","DisconnectPhoton","isJoinedToRoom","disconnect","ResetState","OnRoomNameChange","OnMessageChange","msg","UpdateRoomCustomProperites","_playerUpdate","_playerValue","_initialSetupUpdate","_initialSetupValue","_playerGameInfoUpdate","_playerGameInfoValue","_turnNumberUpdate","_turnNumbervalue","myRoom","setCustomProperty","CreateRoom","_data","roomOptions","Get_MultiplayerController","Get_ServerBackend","StudentData","setUserId","userID","RoomID","Math","floor","random","Date","now","createRoom","JoinRoom","_roomName","joinRoom","JoinRandomRoom","joinRandomRoom","SendCardData","raiseEvent","CardData","senderName","senderID","actorNr","receivers","Photon","LoadBalancing","Constants","ReceiverGroup","All","err","error","message","SendGameOver","Data","SendData","PlayerInfo","SendOneQuestionData","SendOneQuestionResponseData","Others","DiceRollEvent","DiceCount","SyncTurnCompletion","UID","StartTurn","ShowToast","CallRecieveEvent","_eventCode","_senderName","_senderID","InstanceNull","Get_MultiplayerSyncManager","setTimeout","ReceiveEvent","RestartGame","loadScene","update","dt","onStateChange","LBC","LoadBalancingClient","StateToName","systemEvent","emit","Get_UIManager","ToggleProfileScreen_SpectateUI","ToggleRoomScreen_SpectateUI","logger","debug","mess","info","param","warn","param1","param2","param3","ToggleLoadingNode","exception","format","onRoomList","rooms","ResetRoomList","UpdateRoomsList_SpectateUI","playerCount","onRoomListUpdate","roomsUpdated","roomsAdded","roomsRemoved","onJoinRoom","loadBalancingClient","userId","_customProperties","getCustomProperty","onActorJoin","actor","myRoomActorCount","onActorLeave","PlayerSessionData","GameOver","Get_GameManager","CheckTurnOnSpectateLeave_SpectateManager","Get_GameplayUIManager","ClearDisplayTimeout","onActorPropertiesChange","onMyRoomPropertiesChange","onError","errorCode","errorMsg","onEvent","code","content","PlayerInfoData","_Turn","_dice","_ID","_card","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//Global Variables\r\nvar PhotonRef;\r\nvar stateText=\"\";\r\nvar GamePlayReferenceManager=null;\r\nvar ShowRoom=false;\r\n\r\n//---------------------------------------class data related to RoomProperty------------------------------------------------//\r\nvar RoomProperty=cc.Class({\r\n    name:\"RoomProperty\",\r\n    properties: {\r\n        Player: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        },\r\n        InitialSetup: {\r\n            default: false,        \r\n            type: cc.Boolean,\r\n            serializable: true,\r\n        },\r\n        PlayerGameInfo: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n        },\r\n        TurnNumber: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,\r\n        }\r\n    },\r\n});\r\n//---------------------------------------class data related to App_Info------------------------------------------------//\r\nvar App_Info=cc.Class({\r\n    name:\"App_Info\",\r\n    properties: {\r\n        AppID: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"App id form photon dashboard\"\r\n        },\r\n        AppVersion: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"App version for photon\"\r\n        },\r\n        Wss: {\r\n            displayName:\"IsSecure\",\r\n            default: false,        \r\n            type: cc.Boolean,\r\n            serializable: true,\r\n            tooltip:\"If photon should use secure and reliable protocols\"\r\n        },\r\n        MasterServer: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"master server for photon to connect\"\r\n        },\r\n        FbAppID: {\r\n            default: \"\",        \r\n            type: cc.Text,\r\n            serializable: true,\r\n            tooltip:\"FB app id used for FB autherization\"\r\n        },\r\n    },\r\n});\r\n//---------------------------------------class data related to MultiplayerController----------------------------------//\r\nvar MultiplayerController=cc.Class({\r\n    name:\"MultiplayerController\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PhotonAppInfo: {\r\n            default: null,        \r\n            type: App_Info,\r\n            serializable: true,},\r\n        MaxPlayers: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n        MaxSpectators: {\r\n            default: 0,        \r\n            type: cc.Integer,\r\n            serializable: true,}, \r\n    },\r\n\r\n    statics: { //creating static instance of the class\r\n        Instance: null,\r\n    },\r\n\r\n    //this function is called when instance of this class is created\r\n    onLoad () {\r\n        this.Init_MultiplayerController();\r\n    },\r\n\r\n    /**\r\n    @summary Initialize some essentails data for multiplayer controller class\r\n    @method Init_MultiplayerController\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    Init_MultiplayerController()\r\n    {\r\n        if(!MultiplayerController.Instance)\r\n        {\r\n            cc.game.addPersistRootNode(this.node);\r\n            this.InitializePhoton();\r\n            console.log(AppInfo);\r\n            PhotonRef = new DemoLoadBalancing();\r\n            MultiplayerController.Instance=this;\r\n        }\r\n\r\n        this.LeaveRoom=false;\r\n        this.RoomName=\"\";\r\n        this.Message=\"\";\r\n        ShowRoom=false;\r\n        this.JoinedRoom=false;\r\n        this.CheckReferences();\r\n    },\r\n\r\n    /**\r\n    @summary check reference to some variables and classes\r\n    @method CheckReferences\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    CheckReferences()\r\n    {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n            GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n    },\r\n\r\n      /**\r\n    @summary remove persist node when want to restart scene\r\n    @method RemovePersistNode\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    RemovePersistNode()\r\n    {\r\n        MultiplayerController.Instance=null;\r\n        cc.game.removePersistRootNode(this.node);\r\n    },\r\n\r\n    /**\r\n    @summary function to get name of current opened scene\r\n    @method getSceneName\r\n    @param none\r\n    @returns {string} sceneName\r\n    **/ \r\n    getSceneName: function() {\r\n        var sceneName;\r\n        var _sceneInfos = cc.game._sceneInfos;\r\n        for (var i = 0; i < _sceneInfos.length; i++) {\r\n            if(_sceneInfos[i].uuid == cc.director._scene._id) {\r\n                sceneName = _sceneInfos[i].url;\r\n                sceneName = sceneName.substring(sceneName.lastIndexOf('/')+1).match(/[^\\.]+/)[0];\r\n            }\r\n    \r\n        }\r\n        return sceneName;\r\n    },\r\n\r\n    /**\r\n    @summary function to set \"ShowRoom\" bool value\r\n    @method ToggleShowRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/ \r\n    ToggleShowRoom_Bool(_state)\r\n    {\r\n        ShowRoom=_state;\r\n    },\r\n\r\n    /**\r\n    @summary function to set \"LeaveRoom\" bool value\r\n    @method ToggleLeaveRoom_Bool\r\n    @param {boolean} _state\r\n    @returns no return\r\n    **/ \r\n    ToggleLeaveRoom_Bool(_state)\r\n    {\r\n        this.LeaveRoom=_state;\r\n    },\r\n     \r\n    /**\r\n    @summary returns Photon \"PhotonRef\" instance created by multiplayer class\r\n    @method getPhotonRef\r\n    @param none\r\n    @returns {object} PhotonRef\r\n    **/ \r\n    getPhotonRef()\r\n    {\r\n        return PhotonRef;\r\n    },\r\n\r\n    /**\r\n    @summary returns myActor instance created by photon\r\n    @method PhotonActor\r\n    @param none\r\n    @returns {object} Actor\r\n    **/ \r\n    PhotonActor()\r\n    {\r\n        return PhotonRef.myActor();\r\n    },\r\n\r\n    /**\r\n    @summary returns myRoomActorsArray created by photon\r\n    @method RoomActors\r\n    @param none\r\n    @returns {object} Actor\r\n    **/ \r\n    RoomActors()\r\n    {\r\n        return PhotonRef.myRoomActorsArray();\r\n    },\r\n\r\n    /**\r\n    @summary returns isSpectate variable from custom property of current actor\r\n    @method CheckSpectate\r\n    @param none\r\n    @returns {boolean} isSpectate\r\n    **/ \r\n    CheckSpectate()\r\n    {\r\n         return PhotonRef.myActor().customProperties.RoomEssentials.IsSpectate;\r\n    },\r\n\r\n     /**\r\n    @summary Initialize photon with appid,app version, Wss etc\r\n    @method InitializePhoton\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    InitializePhoton()\r\n    {\r\n        AppInfo.AppId=this.PhotonAppInfo.AppID;\r\n        AppInfo.AppVersion=this.PhotonAppInfo.AppVersion;\r\n        AppInfo.Wss=this.PhotonAppInfo.Wss;\r\n        AppInfo.MasterServer=this.PhotonAppInfo.MasterServer;\r\n        AppInfo.FbAppId=this.PhotonAppInfo.FbAppID;  \r\n    },\r\n\r\n   /**\r\n    @summary send connection request to photon\r\n    @method RequestConnection\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    RequestConnection () {\r\n        if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true)\r\n            console.log(\"already connected\");\r\n        else\r\n            PhotonRef.start();       \r\n    },\r\n\r\n    /**\r\n    @summary Disconnect from photon\r\n    @method DisconnectPhoton\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    DisconnectPhoton () {\r\n    if(PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true  ||PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n        PhotonRef.disconnect();   \r\n        this.JoinedRoom=false;\r\n        //PhotonRef.leaveRoom();\r\n        this.ResetState();\r\n        }\r\n        else\r\n        {\r\n            console.log(\"not inside any room or lobby or connected to photon\");\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary reseting few values\r\n    @method ResetState\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    ResetState()\r\n    {\r\n        this.LeaveRoom=false;    \r\n        this.JoinedRoom=false;\r\n        ShowRoom=false;\r\n        stateText=\"\";\r\n    },\r\n\r\n    /**\r\n    @summary called when room name got input from game\r\n    @method OnRoomNameChange\r\n    @param {string} name\r\n    @returns no return\r\n   **/ \r\n    OnRoomNameChange(name)\r\n    {\r\n        this.RoomName=name;\r\n    },\r\n\r\n    /**\r\n    @summary called when message window got input from game\r\n    @method OnMessageChange\r\n    @param {string} msg\r\n    @returns no return\r\n   **/ \r\n    OnMessageChange(msg)\r\n    {\r\n        this.Message=msg;\r\n    },\r\n\r\n    /**\r\n    @summary update custom room properties\r\n    @method UpdateRoomCustomProperites\r\n    @returns no return\r\n   **/ \r\n    UpdateRoomCustomProperites(_playerUpdate=false,_playerValue=0,_initialSetupUpdate=false,_initialSetupValue=false,_playerGameInfoUpdate=false,_playerGameInfoValue=null,_turnNumberUpdate=false,_turnNumbervalue=0)\r\n    {\r\n        if(_playerUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"Player\",_playerValue,true);\r\n\r\n        if(_initialSetupUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"InitialSetup\",_initialSetupValue,true);\r\n        \r\n        if(_playerGameInfoUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"PlayerGameInfo\",_playerGameInfoValue,true);\r\n        \r\n        if(_turnNumberUpdate)\r\n            PhotonRef.myRoom().setCustomProperty(\"TurnNumber\",_turnNumbervalue,true);\r\n    },\r\n\r\n    /**\r\n    @summary create room request\r\n    @method CreateRoom\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n    CreateRoom () {\r\n        if(PhotonRef.isConnectedToMaster()==true ||PhotonRef.isInLobby()==true || PhotonRef.state==8)\r\n        {\r\n            if(PhotonRef.isJoinedToRoom()==false)\r\n            {\r\n                    var _data=new RoomProperty();\r\n                    _data.Player=0;\r\n\r\n                    var roomOptions ={\r\n                      \"isVisible\":true, \r\n                      \"isOpen\":true,\r\n                      \"maxPlayers\":this.MaxPlayers+this.MaxSpectators,\r\n                      \"customGameProperties\":_data\r\n                    };\r\n\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n                    PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n                    PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n                    PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n                    PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", {IsSpectate:false});\r\n                    PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n                    var RoomID=Math.floor(Math.random() * Date.now());\r\n\r\n                    PhotonRef.createRoom(\"Room_\"+RoomID,roomOptions); \r\n            }\r\n            else\r\n            {\r\n                console.log(\"already joined the room\");\r\n            }\r\n\r\n        }else\r\n        {\r\n            console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n        }\r\n            \r\n    },\r\n\r\n    /**\r\n    @summary join room request by name\r\n    @method JoinRoom\r\n    @param {string} _roomName\r\n    @returns no return\r\n   **/ \r\n    JoinRoom (_roomName) {\r\n        if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true ||PhotonRef.state==8)\r\n        {\r\n            if(PhotonRef.isJoinedToRoom()==false || PhotonRef.state!=8)\r\n            {\r\n                var roomOptions ={\r\n                    \"isVisible\":true, \r\n                    \"isOpen\":false,\r\n                    \"maxPlayers\":this.MaxPlayers+this.MaxSpectators\r\n                    //\"customGameProperties\":{\"RoomEssentials\": {IsSpectate:true}}\r\n                  };\r\n\r\n                  GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n                  PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n                  PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n                  PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n                  PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", {IsSpectate:true});\r\n                  PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n                  PhotonRef.joinRoom(_roomName,roomOptions);\r\n            }\r\n            else\r\n            {\r\n                console.log(\"already joined the room\");\r\n            }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n        }\r\n            \r\n    },\r\n\r\n     /**\r\n    @summary join random room\r\n    @method JoinRandomRoom\r\n    @param none\r\n    @returns no return\r\n   **/ \r\n  JoinRandomRoom () {\r\n    if(PhotonRef.state==5 || PhotonRef.isConnectedToMaster()==true || PhotonRef.isInLobby()==true ||PhotonRef.state==8)\r\n    {\r\n        if(PhotonRef.isJoinedToRoom()==false || PhotonRef.state!=8)\r\n        {  \r\n            var _data=new RoomProperty();\r\n            _data.Player=0;\r\n            \r\n            var roomOptions ={\r\n                //\"expectedMaxPlayers\":this.MaxPlayers+MaxSpectators,\r\n                \"expectedCustomRoomProperties\":_data\r\n              };\r\n            \r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(false);\r\n            PhotonRef.myActor().name=GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name;\r\n            PhotonRef.myActor().setCustomProperty(\"Data\", GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData);\r\n            PhotonRef.myActor().setCustomProperty(\"PlayerSessionData\", {});\r\n            PhotonRef.myActor().setCustomProperty(\"RoomEssentials\", {IsSpectate:false});\r\n            PhotonRef.setUserId(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n\r\n            PhotonRef.joinRandomRoom(roomOptions);\r\n            \r\n        }\r\n        else\r\n        {\r\n            console.log(\"already joined the room\");\r\n        }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not connected or connection is dropped, please connect to photon again.\")\r\n    }\r\n        \r\n},\r\n\r\n\r\n    /**\r\n    @summary Send card index over network\r\n    @method SendCardData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendCardData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending card data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(5, { CardData: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n   /**\r\n    @summary Send game over call\r\n    @method SendGameOver\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendGameOver (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending game over call\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(6, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n    /**\r\n    @summary Send Player Data over network\r\n    @method SendData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending player data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(1, { PlayerInfo: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question Data over network\r\n    @method SendOneQuestionData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendOneQuestionData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(7, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary Send one question response over network\r\n    @method SendOneQuestionResponseData\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  SendOneQuestionResponseData (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending one question response data\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(8, { Data: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.Others});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send dice data\r\n    @method DiceRollEvent\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n  DiceRollEvent (_data) {\r\n    if(PhotonRef.isJoinedToRoom()==true)\r\n    {\r\n        console.log(\"sending dice count\");\r\n        console.log(_data);\r\n            try {\r\n                PhotonRef.raiseEvent(3, { DiceCount: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n            }\r\n            catch (err) {\r\n                console.error(\"error: \" + err.message);\r\n            }\r\n    }\r\n    else\r\n    {\r\n        console.log(\"you are not in room.\");\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary send user id of player to all other who had completed their turn\r\n    @method SyncTurnCompletion\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n    SyncTurnCompletion (_data) {\r\n        if(PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n            console.log(\"sending turn completion data\");\r\n            console.log(_data);\r\n                try {\r\n                    PhotonRef.raiseEvent(4, { UID: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n                }\r\n                catch (err) {\r\n                    console.error(\"error: \" + err.message);\r\n                }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not in room.\");\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary Start Turn for initial turn\r\n    @method StartTurn\r\n    @param {Object} _data\r\n    @returns no return\r\n   **/ \r\n    StartTurn (_data) {\r\n        if(PhotonRef.isJoinedToRoom()==true)\r\n        {\r\n            console.log(\"Starting Turn\");\r\n            console.log(_data);\r\n                try {\r\n                    PhotonRef.raiseEvent(2, { TurnNumber: _data, senderName: PhotonRef.myActor().name,senderID:PhotonRef.myActor().actorNr },{receivers:Photon.LoadBalancing.Constants.ReceiverGroup.All});\r\n                }\r\n                catch (err) {\r\n                    console.error(\"error: \" + err.message);\r\n                }\r\n        }\r\n        else\r\n        {\r\n            console.log(\"you are not in room.\");\r\n        }\r\n\r\n    },\r\n  \r\n     /**\r\n    @summary Show toast message on the console\r\n    @method ShowToast\r\n    @param {string} message message to be shown \r\n    @returns no return\r\n   **/ \r\n    ShowToast:function(msg)\r\n    {\r\n        console.log(\"toast message: \"+msg);\r\n    },\r\n\r\n     /**\r\n    @summary Receive event from photon raise on \r\n    @method CallRecieveEvent\r\n    @returns no return\r\n   **/ \r\n    CallRecieveEvent:function(_eventCode,_senderName,_senderID,_data)\r\n    {\r\n        var InstanceNull=true;\r\n\r\n        //to check if instance is null in case class instance is not loaded and its receives callback\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager()==null)\r\n        {\r\n            InstanceNull=true;\r\n            setTimeout(() => {\r\n                this.CallRecieveEvent(_eventCode,_senderName,_senderID,_data);\r\n            }, 50);\r\n        }\r\n        else\r\n        {\r\n            InstanceNull=false;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().ReceiveEvent(_eventCode,_senderName,_senderID,_data);\r\n        }\r\n    },\r\n\r\n    RestartGame()\r\n        {\r\n            MultiplayerController.Instance.JoinedRoom=false;\r\n            MultiplayerController.Instance.ResetState();\r\n            MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.RemovePersistNode();\r\n            cc.director.loadScene(\"Splash\");\r\n        },\r\n    //called every frame\r\n    update (dt) {\r\n\r\n        /**\r\n            @summary function called by photon whenever there is some change in connection state\r\n            @method onStateChange\r\n            @param {object} state\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onStateChange=function(state)\r\n        {\r\n            //#region Connection States\r\n            //state 1 : connectingToNameServer\r\n            //State 2 : ConnectedToNameServer\r\n            //State 3 : ConnectingToMasterServer\r\n            //State 4 : ConnectedToMasterServer\r\n            //State 5:  JoinedLobby\r\n            //State 6 : ConnectingToGameserver\r\n            //State 7 : ConnectedToGameserver\r\n            //State 8 : Joined\r\n            //State 10: Disconnected \r\n            //#endregion\r\n\r\n            var LBC = Photon.LoadBalancing.LoadBalancingClient;\r\n            console.log(\"StateCode: \"+state+\" \"+LBC.StateToName(state));\r\n\r\n            if(state==1)\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"connecting to server...\");\r\n            else if(state==4)\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"connected to server\");\r\n            else if(state==5) //has joined lobby\r\n            {\r\n                if(ShowRoom==false)\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"waiting for other players...\");\r\n                    MultiplayerController.Instance.JoinRandomRoom();\r\n                }\r\n                else if(ShowRoom==true)\r\n                {\r\n                    cc.systemEvent.emit(\"UpdateStatusWindow\",\"showing rooms list...\");\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_UIManager().ToggleProfileScreen_SpectateUI(false);\r\n                        GamePlayReferenceManager.Instance.Get_UIManager().ToggleRoomScreen_SpectateUI(true);\r\n                    }, 1000);\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives debug\r\n            @method debug\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.debug=function(mess)\r\n        {\r\n            console.log(mess);\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives info\r\n            @method info\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.info = function (mess,param) {\r\n           console.log(mess+param);\r\n           stateText+= mess+\" \"+param+\"\\n\";\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever its logger receives warn\r\n            @method warn\r\n            @param {object} mess\r\n            @param {object} param1\r\n            @param {object} param2\r\n            @param {object} param3\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.logger.warn = function (mess,param1,param2,param3) {\r\n            console.log(mess+\" \"+param1+\" \"+param2+\" \"+param3);\r\n\r\n            if(param1==225) //no room found\r\n            {\r\n                console.log(\"no random room was found, creating one\");\r\n                MultiplayerController.Instance.CreateRoom();\r\n            }\r\n\r\n            if(param1==226) //room does not exists or is full\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ToggleLoadingNode(false);\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ShowToast(\"Room is full, please select any other room to spectate.\");\r\n            }\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever its logger receives error\r\n            @method error\r\n            @param {object} mess\r\n            @param {object} param\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.error = function (mess,param) {\r\n            console.log(mess);\r\n         }\r\n\r\n          /**\r\n            @summary function called by photon whenever its logger receives exception\r\n            @method exception\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.exception = function (mess) {\r\n            console.log(mess);\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever its logger receives some format\r\n            @method format\r\n            @param {object} mess\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.logger.format = function (mess) {\r\n            console.log(mess);\r\n         }\r\n\r\n         /**\r\n            @summary function called by photon whenever player joins lobby\r\n            @method onRoomList\r\n            @param {object} rooms\r\n            @returns no return\r\n        **/ \r\n         PhotonRef.onRoomList = function (rooms) {\r\n            stateText+=\"\\n\"+\"Rooms List:\"+\"\\n\";\r\n\r\n            if(rooms.length==0)\r\n            {\r\n                stateText+=\"No rooms in lobby.\"+\"\\n\";\r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n\r\n                for (var i = 0; i < rooms.length; ++i) {\r\n                    GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name,rooms[i].playerCount);\r\n                    console.log(\"Room name: \"+rooms[i].name);\r\n                    stateText+=\"Room: \"+rooms[i].name+\"\\n\";\r\n                }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever there is change in rooms list (room added,updated,removed etc)\r\n            @method onRoomListUpdate\r\n            @param {object} rooms\r\n            @param {object} roomsUpdated\r\n            @param {object} roomsAdded\r\n            @param {object} roomsRemoved\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onRoomListUpdate = function (rooms, roomsUpdated, roomsAdded, roomsRemoved) {\r\n            GamePlayReferenceManager.Instance.Get_UIManager().ResetRoomList();\r\n       \r\n            for (var i = 0; i < rooms.length; ++i) {\r\n                GamePlayReferenceManager.Instance.Get_UIManager().UpdateRoomsList_SpectateUI(rooms[i].name,rooms[i].playerCount);\r\n                console.log(\"Room name: \"+rooms[i].name);\r\n                stateText+=\"Room: \"+rooms[i].name+\"\\n\";\r\n            }\r\n            console.log(\"Rooms List updated: \" + roomsUpdated.length + \" updated, \" + roomsAdded.length + \" added, \" + roomsRemoved.length + \" removed\");\r\n        }\r\n\r\n        /**\r\n            @summary function called locally by photon when even player joins room\r\n            @method onJoinRoom\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onJoinRoom = function () {\r\n            //#region Logs for game\r\n            console.log(\"Game \" + this.myRoom().name + \" joined\");           \r\n            console.log(PhotonRef.myActor());\r\n            console.log(PhotonRef.myRoom());\r\n            console.log(PhotonRef.myRoomActorsArray());\r\n            console.log(PhotonRef.myRoomActorsArray().length);\r\n            console.log(PhotonRef.myRoomActorsArray()[0].loadBalancingClient.userId);\r\n            console.log(PhotonRef.myRoom()._customProperties);\r\n            console.log(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]);\r\n            //#endregion\r\n\r\n           if(PhotonRef.myActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"]==true) //check if player who joined is spectate\r\n           {\r\n               MultiplayerController.Instance.JoinedRoom=true;\r\n               setTimeout(() => {cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\");}, 1000); //function in UIManager\r\n           }\r\n        }\r\n\r\n        /**\r\n            @summary function called remotely by photon when even player joins room\r\n            @method onActorJoin\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onActorJoin = function (actor) {\r\n            if(PhotonRef.myRoomActorCount()==MultiplayerController.Instance.MaxPlayers) //when max player required to start game has been added\r\n            {\r\n                console.log(\"all required players joined, starting the game..\")\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"players found\");\r\n                cc.systemEvent.emit(\"UpdateStatusWindow\",\"starting game...\");\r\n                MultiplayerController.Instance.JoinedRoom=true;\r\n                setTimeout(() => {cc.systemEvent.emit(\"ChangePanelScreen\",true,true,\"GamePlay\");}, 1000); //function in ui manager\r\n                MultiplayerController.Instance.UpdateRoomCustomProperites(true,PhotonRef.myRoomActorCount(),false,false,false,null,false,0);\r\n                //PhotonRef.myRoom().setCustomProperty(\"Player\",PhotonRef.myRoomActorCount(),true);  \r\n            }\r\n            \r\n            console.log(\"actor \" + actor.actorNr + \" joined\");\r\n            console.error(\"Total Players: \"+PhotonRef.myRoomActorCount());\r\n            console.log(PhotonRef.myRoom());\r\n        },\r\n\r\n        \r\n\r\n        /**\r\n            @summary function called remotely by photon when even player leaves a room\r\n            @method onActorLeave\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onActorLeave = function (actor) {\r\n            if(MultiplayerController.Instance.JoinedRoom==true)\r\n            {   \r\n                if(!actor.customProperties.PlayerSessionData.GameOver)\r\n                {\r\n                if(!MultiplayerController.Instance.LeaveRoom)\r\n                {\r\n                    if(actor.customProperties.RoomEssentials.IsSpectate)\r\n                    {\r\n                        console.log(\"spectator left, so dont mind, cont game\");\r\n                        console.log(\"actor \" + actor.actorNr + \" left\");\r\n                        GamePlayReferenceManager.Instance.Get_GameManager().CheckTurnOnSpectateLeave_SpectateManager();\r\n                    }\r\n                    else\r\n                    {\r\n                        console.log(\"actor \" + actor.actorNr + \" left\");\r\n\r\n                        MultiplayerController.Instance.JoinedRoom=false;\r\n                        MultiplayerController.Instance.ResetState();\r\n                        MultiplayerController.Instance.DisconnectPhoton();\r\n\r\n                        if(MultiplayerController.Instance.getSceneName()==\"GamePlay\") //if scene is gameplay let player finish game forcefully\r\n                        {\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"other player \"+actor.name+\" has left\",2000);\r\n                            setTimeout(() => {\r\n                                GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n                                GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n                                GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n                                GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n                                GamePlayReferenceManager.Instance.RemovePersistNode();\r\n                                cc.director.loadScene(\"Splash\");\r\n                            }, 2100);\r\n                        }\r\n                    }\r\n                }\r\n              }\r\n            }\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon when even player own properties got changed\r\n            @method onActorPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onActorPropertiesChange = function (actor) {\r\n            \r\n        }\r\n\r\n        /**\r\n            @summary function called by photon when even player room properties got changed\r\n            @method onMyRoomPropertiesChange\r\n            @param {object} actor\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onMyRoomPropertiesChange = function () {\r\n            \r\n        }\r\n\r\n         /**\r\n            @summary function called by photon to handle errors\r\n            @method onError\r\n            @param {object} errorCode\r\n             @param {object} errorMsg\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onError = function (errorCode, errorMsg) {\r\n           console.log(\"Error \" + errorCode + \": \" + errorMsg);\r\n        }\r\n\r\n        /**\r\n            @summary function called by photon whenever an event is received with some data\r\n            @method onEvent\r\n            @param {object} code\r\n            @param {object} content\r\n            @param {object} actorNr\r\n            @returns no return\r\n        **/ \r\n        PhotonRef.onEvent = function (code, content, actorNr) {\r\n            MultiplayerController.Instance.CheckReferences();\r\n            switch (code) {\r\n                case 1://receving playerdata info\r\n                    console.log(\"received player data\")\r\n                    var PlayerInfoData = content.PlayerInfo;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(1,senderName,senderID,PlayerInfoData);\r\n                   \r\n                    break;\r\n                case 2: //start turn raise event\r\n                    console.log(\"received start turn event\")\r\n                    var _Turn = content.TurnNumber;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(2,senderName,senderID,_Turn);\r\n                          \r\n                    break;\r\n                case 3: // dice count\r\n                    console.log(\"received dice count\")\r\n                    var _dice = content.DiceCount;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(3,senderName,senderID,_dice);\r\n\r\n                    break;\r\n                case 4: //receing user id of player who has completed turn\r\n                    console.log(\"received player turn completed\")\r\n                    var _ID = content.UID;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n\r\n                    MultiplayerController.Instance.CallRecieveEvent(4,senderName,senderID,_ID);\r\n\r\n                    break;\r\n                case 5: //receiving card data (index) so other users can sync them\r\n                    console.log(\"received card data\")\r\n                    var _card = content.CardData;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(5,senderName,senderID,_card);\r\n\r\n                    break;\r\n                case 6: //receive game over data\r\n                    console.log(\"received game over call\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(6,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 7: //receive one Question data\r\n                    console.log(\"received one question data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(7,senderName,senderID,_data);\r\n\r\n                    break;\r\n                case 8: //receive one Question response data\r\n                    console.log(\"received one questio response data\")\r\n                    var _data = content.Data;\r\n                    var senderName = content.senderName;\r\n                    var senderID = content.senderID;\r\n                    \r\n                    MultiplayerController.Instance.CallRecieveEvent(8,senderName,senderID,_data);\r\n\r\n                    break;\r\n                default:\r\n            }\r\n        }    \r\n     },\r\n     \r\n});\r\n\r\nmodule.exports=MultiplayerController;"]}