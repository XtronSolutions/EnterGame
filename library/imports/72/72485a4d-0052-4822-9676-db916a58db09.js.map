{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["_isTest","_diceinput1","_diceinput2","PreviousDiceRoll1","PreviousDiceRoll2","PreviousDiceRoll3","PreviousDiceRoll4","PreviousDiceRoll5","userGameOver","BotGameOver","TotalCounterReached","EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","PartnerName","LocationsName","LoanTaken","LoanAmount","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","BankruptAmount","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","TotalHBCash","TotalBMCash","TotalGoldCash","TotalLoanBalance","TotalStocksCash","GameOver","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","Backspaces","isGameOver","OneQuestionIndex","OneQuestions","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","BotGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","SelectedMode","statics","Instance","ResetAllVariables","InputTestDice1","_val","InputTestDice2","onLoad","TurnNumber","TurnCompleted","CheckReferences","Get_MultiplayerController","GetSelectedMode","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","console","error","CheckSpectate","log","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","GetMyIndex","myIndex","_actor","PhotonActor","customProperties","PlayerSessionData","_allActors","index","SyncDataToPlayerGameInfo","AssignPlayerGameUI","EnablePlayerNodes","CloseInitialScreen_SpectateMode","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","_lastIndex","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","UpdateVisualData","RefreshDataAutomatically","TurnHandler","_turn","_playerMatched","ToggleTurnProgress","ToggleDecision_TurnDecision","ResetTurnVariable","RollDice","DiceRollScreen","PlayerInfo","RoomActors","ShowToast","ToggleSkipNextTurn","_ind","MainSessionData","MyData","_counter","StartTurn","ReceiveBankruptData","_isBankrupted","bankrupted","turn","_playerData","PlayerDataMain","StartTurnAfterBankrupt","_randomIndex","getRandom","SetName","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","myRoomActorsArray","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","Dice1","Dice2","_newRoll","RollOneDice","RollTwoDices","callUponCard","_spaceID","valueIndex","StartDiceRoll","SendingData","isBot","completeCardTurn","AllPlayersGameCompleted","CallGameComplete","_isBot","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","_gold","_stocks","_diceRandom","OnceOrShare","GoldCash","StockCash","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","SyncGameOver","_UID","infoText","statusText","DisconnectData","ShowResultScreen","max","SelectedInd","SessionData","_value","ZoomCameraOut","playercompleted","TweenPlayer","min","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ProcessPayDay_TurnDecision","ToPos","_newpos","TogglePayDay","_st1","_St2","ExpandBusiness_TurnDecision","amount","_locationName","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","SetCardFunctionality","SetGivenCash","SetStartAnyBusinessWithoutCash","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","_forSelectedBusiness","_SelectedBusinessIndex","HBAmount","_title","AssignData_PayDay","ToggleSkipPayDay_Whole","Bankrupt_TurnDecision","SendProfit_Partner_TurnDecision","_amount","_uID","ID","ReceiveProfit_Partner_TurnDecision","_iD","_myIndex","ToggleDoublePayNextTurn","_state","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","QuestionPopUp_OtherUser_OneQuestion","_userID","UserID","_questionIndex","Question","UserIndex","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_questionAsked","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_myData","_roomData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_PayAmount_OneQuestion","RaiseEventDecision_OneQuestion","OneQuestionDecision_AnswerQuestion_OneQuestion","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","ReceiveEventDecision_OneQuestion","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","_loanTaken","ReceiveGoBackSpacesData_spaceFunctionality","_spaces","backspaces","Counter","TweenPlayer_GoBackSpaces","speed","GoBackSpaces_spaceFunctionality","module","exports"],"mappings":";;;;;;AAAA,IAAIA,OAAO,GAAG,KAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,iBAAiB,GAAG,CAAC,CAAzB;AACA,IAAIC,iBAAiB,GAAG,CAAC,CAAzB;AAEA,IAAIC,iBAAiB,GAAG,CAAC,CAAzB;AACA,IAAIC,iBAAiB,GAAG,CAAC,CAAzB;AAEA,IAAIC,iBAAiB,GAAG,CAAC,CAAzB;AAEA,IAAIC,YAAY,GAAG,KAAnB;AACA,IAAIC,WAAW,GAAG,KAAlB;AACA,IAAIC,mBAAmB,GAAG,KAA1B,EAEA;AACA;;AACA,IAAIC,gBAAgB,GAAGC,EAAE,CAACC,IAAH,CAAQ;AAC3BC,EAAAA,IAAI,EAAC,CADsB;AAE3BC,EAAAA,SAAS,EAAE,CAFgB;AAEK;AAChCC,EAAAA,cAAc,EAAE,CAHW,CAGK;;AAHL,CAAR,CAAvB,EAMA;;AACA,IAAIC,YAAY,GAAGL,EAAE,CAACM,KAAH,CAAS;AACxBC,EAAAA,IAAI,EAAE,cADkB;AAE5BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,cADE;AAERC,IAAAA,YAAY,EACb;AACIC,MAAAA,WAAW,EAAC,MADhB;AAEIC,MAAAA,IAAI,EAAEb,gBAFV;AAGI,iBAASA,gBAAgB,CAACG,IAH9B;AAIIW,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAHS;AASRC,IAAAA,uBAAuB,EACxB;AACIJ,MAAAA,WAAW,EAAE,MADjB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAVS;AAgBRG,IAAAA,YAAY,EACb;AACIN,MAAAA,WAAW,EAAE,MADjB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAjBS;AAuBPI,IAAAA,MAAM,EACJ;AACIP,MAAAA,WAAW,EAAE,QADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAxBK;AA8BNM,IAAAA,aAAa,EACZ;AACIT,MAAAA,WAAW,EAAE,eADjB;AAEI,iBAAS,KAFb;AAGIU,MAAAA,IAAI,EAACrB,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA/BK;AAqCLS,IAAAA,SAAS,EACL;AACIZ,MAAAA,WAAW,EAAC,WADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKHC,MAAAA,OAAO,EAAE;AALN,KAtCC;AA4CLU,IAAAA,WAAW,EACP;AACIb,MAAAA,WAAW,EAAC,aADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA7CC;AAmDJW,IAAAA,aAAa,EACV;AACId,MAAAA,WAAW,EAAC,eADhB;AAEIC,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAACgB,IAAJ,CAFV;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KApDC;AA0DJY,IAAAA,SAAS,EACN;AACIf,MAAAA,WAAW,EAAC,WADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE;AAJlB,KA3DC;AAgEJc,IAAAA,UAAU,EACP;AACIhB,MAAAA,WAAW,EAAC,YADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE;AAJlB;AAjEC,GAFgB;AA2E5Be,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AA5E2B,CAAT,CAAnB,EA8EA;;AACA,IAAIC,qBAAqB,GAAG7B,EAAE,CAACM,KAAH,CAAS;AACjCC,EAAAA,IAAI,EAAE,uBAD2B;AAErCC,EAAAA,UAAU,EAAE;AACRsB,IAAAA,iBAAiB,EAClB;AACInB,MAAAA,WAAW,EAAC,mBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAFS;AAQRiB,IAAAA,YAAY,EACb;AACIpB,MAAAA,WAAW,EAAC,cADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KATS;AAeRkB,IAAAA,cAAc,EACf;AACIrB,MAAAA,WAAW,EAAC,gBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAhBS;AAsBRmB,IAAAA,gBAAgB,EACjB;AACItB,MAAAA,WAAW,EAAC,kBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAvBS;AA6BRoB,IAAAA,gBAAgB,EACjB;AACIvB,MAAAA,WAAW,EAAC,kBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ;AA9BS,GAFyB;AAwCrCc,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AAzCoC,CAAT,CAA5B,EA2CA;;AACA,IAAIO,SAAS,GAAGnC,EAAE,CAACM,KAAH,CAAS;AACrBC,EAAAA,IAAI,EAAE,WADe;AAEzBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,WADE;AAERQ,IAAAA,YAAY,EACb;AACIN,MAAAA,WAAW,EAAC,cADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAHS;AASRsB,IAAAA,WAAW,EACZ;AACIzB,MAAAA,WAAW,EAAE,aADjB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb;AAVS,GAFa;AAoBzBc,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AArBwB,CAAT,CAAhB,EAwBA;;AACA,IAAIS,UAAU,GAAGrC,EAAE,CAACM,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAC,YADiB;AAE1BC,EAAAA,UAAU,EAAE;AACR8B,IAAAA,UAAU,EACX;AACI3B,MAAAA,WAAW,EAAC,YADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAFS;AAQRyB,IAAAA,SAAS,EACV;AACI5B,MAAAA,WAAW,EAAC,WADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KATS;AAeR0B,IAAAA,QAAQ,EACL;AACI7B,MAAAA,WAAW,EAAE,UADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAhBK;AAsBR2B,IAAAA,KAAK,EACF;AACI9B,MAAAA,WAAW,EAAE,OADjB;AAEI,iBAAS,KAFb;AAGIU,MAAAA,IAAI,EAACrB,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAvBK;AA6BR4B,IAAAA,YAAY,EACb;AACI/B,MAAAA,WAAW,EAAC,UADhB;AAEIC,MAAAA,IAAI,EAAE,CAACP,YAAD,CAFV;AAGI,iBAAS,EAHb;AAIIQ,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA9BS;AAoCR6B,IAAAA,iBAAiB,EAClB;AACIhC,MAAAA,WAAW,EAAC,mBADhB;AAEIC,MAAAA,IAAI,EAAEiB,qBAFV;AAGI,iBAAS,IAHb;AAIIhB,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KArCS;AA2CR8B,IAAAA,eAAe,EAChB;AACIjC,MAAAA,WAAW,EAAC,iBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA5CS;AAkDR+B,IAAAA,oBAAoB,EACrB;AACIlC,MAAAA,WAAW,EAAC,sBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAnDS;AAyDRgC,IAAAA,oBAAoB,EACrB;AACInC,MAAAA,WAAW,EAAC,sBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA1DS;AAgERiC,IAAAA,UAAU,EACX;AACIpC,MAAAA,WAAW,EAAC,QADhB;AAEIC,MAAAA,IAAI,EAAE,CAACuB,SAAD,CAFV;AAGI,iBAAS,EAHb;AAIItB,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAjES;AAuERkC,IAAAA,IAAI,EACD;AACIrC,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAxEK;AA8ERmC,IAAAA,SAAS,EACN;AACItC,MAAAA,WAAW,EAAE,WADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA/EK;AAqFRoC,IAAAA,UAAU,EACP;AACIvC,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAtFK;AA4FRY,IAAAA,SAAS,EACN;AACIf,MAAAA,WAAW,EAAE,WADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA7FK;AAmGPa,IAAAA,UAAU,EACR;AACIhB,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KApGK;AA0GRqC,IAAAA,eAAe,EACZ;AACIxC,MAAAA,WAAW,EAAE,iBADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA3GK;AAiHRsC,IAAAA,YAAY,EACT;AACIzC,MAAAA,WAAW,EAAE,cADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAlHK;AAwHRuC,IAAAA,UAAU,EACP;AACI1C,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAzHK;AA+HRwC,IAAAA,cAAc,EACX;AACI3C,MAAAA,WAAW,EAAE,gBADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAhIK;AAsIRyC,IAAAA,kBAAkB,EACf;AACI5C,MAAAA,WAAW,EAAE,oBADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAvIK;AA6IR0C,IAAAA,iBAAiB,EACd;AACI7C,MAAAA,WAAW,EAAE,mBADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA9IK;AAoJR2C,IAAAA,sBAAsB,EACnB;AACI9C,MAAAA,WAAW,EAAE,wBADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE;AAJlB,KArJK;AA0JP6C,IAAAA,cAAc,EACR;AACI/C,MAAAA,WAAW,EAAC,gBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE;AAJlB,KA3JC;AAgKP8C,IAAAA,UAAU,EACJ;AACIhD,MAAAA,WAAW,EAAC,YADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIHN,MAAAA,YAAY,EAAE;AAJX,KAjKC;AAuKR+C,IAAAA,WAAW,EACJ;AACIjD,MAAAA,WAAW,EAAC,aADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIHN,MAAAA,YAAY,EAAE;AAJX,KAxKC;AA8KRgD,IAAAA,WAAW,EACJ;AACIlD,MAAAA,WAAW,EAAC,aADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIHN,MAAAA,YAAY,EAAE;AAJX,KA/KC;AAqLRiD,IAAAA,aAAa,EACN;AACInD,MAAAA,WAAW,EAAC,eADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIHN,MAAAA,YAAY,EAAE;AAJX,KAtLC;AA4LRkD,IAAAA,gBAAgB,EACT;AACIpD,MAAAA,WAAW,EAAC,kBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIHN,MAAAA,YAAY,EAAE;AAJX,KA7LC;AAmMRmD,IAAAA,eAAe,EACR;AACIrD,MAAAA,WAAW,EAAC,iBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE;AAJlB,KApMC;AAyMRoD,IAAAA,QAAQ,EACD;AACItD,MAAAA,WAAW,EAAC,UADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE;AAJlB;AA1MC,GAFc;AAkN1Be,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AAnNyB,CAAT,CAAjB,EAsNA;AAEA;AACA;;AACA,IAAIsC,WAAW,GAAC,CAAhB;AACA,IAAIC,QAAQ,GAAC,CAAb;AACA,IAAIC,QAAQ,GAAC,CAAb;AACA,IAAIC,UAAU,GAAC,KAAf;AACA,IAAIC,wBAAwB,GAAC,IAA7B;AACA,IAAIC,cAAc,GAAC,EAAnB;AACA,IAAIC,qBAAqB,GAAC,EAA1B;AAEA,IAAIC,YAAY,GAAC,KAAjB;AACA,IAAIC,YAAY,GAAC,KAAjB,EAEA;;AACA,IAAIC,kBAAkB,GAAC,KAAvB;AACA,IAAIC,aAAa,GAAC,KAAlB;AACA,IAAIC,eAAe,GAAC,KAApB,EAA2B;;AAC3B,IAAIC,iBAAiB,GAAC,KAAtB,EAA6B;;AAC7B,IAAIC,iBAAiB,GAAC,KAAtB,EAA6B;;AAC7B,IAAIC,iBAAiB,GAAC,KAAtB;AACA,IAAIC,cAAc,GAAC,KAAnB;AAEA,IAAIC,UAAU,GAAC,CAAf;AACA,IAAIC,UAAU,GAAC,KAAf;AACA,IAAIC,gBAAgB,GAAC,CAAC,CAAtB;AACA,IAAIC,YAAY,GAChB,CACI,wCADJ,EAEI,0BAFJ,EAGI,2BAHJ,EAII,wCAJJ,EAKI,gDALJ,CADA;AASA,IAAIC,oBAAoB,GAAC,IAAzB;AAEA,IAAIC,WAAW,GAACvF,EAAE,CAACM,KAAH,CAAS;AACrBC,EAAAA,IAAI,EAAC,aADgB;AAErB,aAASP,EAAE,CAACwF,SAFS;AAGrBhF,EAAAA,UAAU,EAAE;AACRiF,IAAAA,cAAc,EAAE;AACZ,iBAAS,EADG;AAEZ7E,MAAAA,IAAI,EAAE,CAACyB,UAAD,CAFM;AAGZxB,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KADR;AAMR4E,IAAAA,WAAW,EAAE;AACT,iBAAS,EADA;AAET9E,MAAAA,IAAI,EAAE,CAACyB,UAAD,CAFG;AAGTxB,MAAAA,YAAY,EAAE,IAHL;AAITC,MAAAA,OAAO,EAAE;AAJA,KANL;AAWR6E,IAAAA,UAAU,EAAE;AACR,iBAAQ,IADA;AAER/E,MAAAA,IAAI,EAAEZ,EAAE,CAAC4F,IAFD;AAGR/E,MAAAA,YAAY,EAAE,IAHN;AAIRC,MAAAA,OAAO,EAAC;AAJA,KAXJ;AAgBR+E,IAAAA,UAAU,EAAE;AACR,iBAAQ,IADA;AAERjF,MAAAA,IAAI,EAAEZ,EAAE,CAAC4F,IAFD;AAGR/E,MAAAA,YAAY,EAAE,IAHN;AAIRC,MAAAA,OAAO,EAAC;AAJA,KAhBJ;AAqBRgF,IAAAA,WAAW,EAAE;AACT,iBAAQ,EADC;AAETlF,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAAC4F,IAAJ,CAFG;AAGT/E,MAAAA,YAAY,EAAE,IAHL;AAITC,MAAAA,OAAO,EAAC;AAJC,KArBL;AA0BRiF,IAAAA,cAAc,EAAE;AACZ,iBAAQ,EADI;AAEZnF,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAAC4F,IAAJ,CAFM;AAGZ/E,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAC;AAJI,KA1BR;AA+BRkF,IAAAA,kBAAkB,EAAE;AAChB,iBAAQ,EADQ;AAEhBpF,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAAC4F,IAAJ,CAFU;AAGhB/E,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAC;AAJQ,KA/BZ;AAoCPmF,IAAAA,YAAY,EAAE;AACX,iBAAQ,CADG;AAEXrF,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFE;AAGXN,MAAAA,YAAY,EAAE,IAHH;AAIXC,MAAAA,OAAO,EAAE;AAJE;AApCP,GAHS;AA+CrBoF,EAAAA,OAAO,EAAE;AACL7D,IAAAA,UAAU,EAAEA,UADP;AAELhC,IAAAA,YAAY,EAACA,YAFR;AAGLwB,IAAAA,qBAAqB,EAACA,qBAHjB;AAIL9B,IAAAA,gBAAgB,EAACA,gBAJZ;AAKLoG,IAAAA,QAAQ,EAAC;AALJ,GA/CY;AAuDrBC,EAAAA,iBAvDqB,+BAwDrB;AACI/G,IAAAA,WAAW,GAAG,EAAd;AACAC,IAAAA,WAAW,GAAG,EAAd;AACAC,IAAAA,iBAAiB,GAAG,CAAC,CAArB;AACAC,IAAAA,iBAAiB,GAAG,CAAC,CAArB;AAEAC,IAAAA,iBAAiB,GAAG,CAAC,CAArB;AACAC,IAAAA,iBAAiB,GAAG,CAAC,CAArB;AAEAC,IAAAA,iBAAiB,GAAG,CAAC,CAArB;AAEAC,IAAAA,YAAY,GAAG,KAAf;AACAC,IAAAA,WAAW,GAAG,KAAd;AAEAqE,IAAAA,WAAW,GAAC,CAAZ;AACAC,IAAAA,QAAQ,GAAC,CAAT;AACAC,IAAAA,QAAQ,GAAC,CAAT;AACAC,IAAAA,UAAU,GAAC,KAAX;AACAC,IAAAA,wBAAwB,GAAC,IAAzB;AACAC,IAAAA,cAAc,GAAC,EAAf;AACAC,IAAAA,qBAAqB,GAAC,EAAtB;AAEAC,IAAAA,YAAY,GAAC,KAAb;AACAC,IAAAA,YAAY,GAAC,KAAb,CAvBJ,CAyBI;;AACAC,IAAAA,kBAAkB,GAAC,KAAnB;AACAC,IAAAA,aAAa,GAAC,KAAd;AACAC,IAAAA,eAAe,GAAC,KAAhB,CA5BJ,CA4B2B;;AACvBC,IAAAA,iBAAiB,GAAC,KAAlB,CA7BJ,CA6B6B;;AACzBC,IAAAA,iBAAiB,GAAC,KAAlB,CA9BJ,CA8B6B;;AACzBC,IAAAA,iBAAiB,GAAC,KAAlB;AACAC,IAAAA,cAAc,GAAC,KAAf;AAEAC,IAAAA,UAAU,GAAC,CAAX;AACAC,IAAAA,UAAU,GAAC,KAAX;AACAC,IAAAA,gBAAgB,GAAC,CAAC,CAAlB;AACAC,IAAAA,YAAY,GACZ,CACI,wCADJ,EAEI,0BAFJ,EAGI,2BAHJ,EAII,wCAJJ,EAKI,gDALJ,CADA;AASAC,IAAAA,oBAAoB,GAAC,IAArB;AACAxF,IAAAA,mBAAmB,GAAG,KAAtB;AAEH,GAzGoB;AA2GrBuG,EAAAA,cA3GqB,0BA2GNC,IA3GM,EA4GrB;AACI,QAAIlH,OAAJ,EAAa;AACTC,MAAAA,WAAW,GAAGiH,IAAd;AACH;AACJ,GAhHoB;AAkHrBC,EAAAA,cAlHqB,0BAkHND,IAlHM,EAmHrB;AACI,QAAIlH,OAAJ,EAAa;AACTE,MAAAA,WAAW,GAAGgH,IAAd;AACH;AACJ,GAvHoB;AAwHrB;;AAEA;;;;;;AAMAE,EAAAA,MAhIqB,oBAgIZ;AACL,SAAKJ,iBAAL;AACAb,IAAAA,WAAW,CAACY,QAAZ,GAAqB,IAArB;AACA,SAAKM,UAAL,GAAgB,CAAhB;AACA,SAAKC,aAAL,GAAmB,KAAnB;AACAnC,IAAAA,cAAc,GAAC,EAAf;AACA,SAAKoC,eAAL;AACA,SAAKV,YAAL,GAAkB3B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DC,eAA9D,EAAlB;AACA,SAAKC,gBAAL;AAEA,SAAKC,eAAL,GAAqB,CAArB;AACA,SAAKC,WAAL,GAAiB,CAAjB;AACA,SAAKC,aAAL,GAAmB,KAAnB;AACAjC,IAAAA,iBAAiB,GAAC,KAAlB;AACH,GA9IoB;;AAgJrB;;;;;;AAMA2B,EAAAA,eAtJqB,6BAuJpB;AACG,QAAG,CAACrC,wBAAD,IAA6BA,wBAAwB,IAAE,IAA1D,EACAA,wBAAwB,GAAC4C,OAAO,CAAC,0BAAD,CAAhC;AACF,GA1JmB;;AA4JrB;;;;;;AAMAJ,EAAAA,gBAlKqB,8BAkKD;AAChB,SAAKK,MAAL,GAAY,KAAKtB,UAAL,CAAgBuB,YAAhB,CAA6BpH,EAAE,CAACmH,MAAhC,CAAZ;AACA,SAAKE,eAAL,GAAqB,KAArB;AACA,SAAK5B,cAAL,GAAoB,EAApB;AACAvB,IAAAA,WAAW,GAAC,CAAZ;AACAC,IAAAA,QAAQ,GAAC,CAAT;AACAC,IAAAA,QAAQ,GAAC,CAAT;AAEAkD,IAAAA,OAAO,CAACC,KAAR,CAAc,KAAKtB,YAAnB;;AACA,QAAG,KAAKA,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI;AACA,YAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DY,aAA9D,MAA+E,IAAlF,EACA;AACIF,UAAAA,OAAO,CAACG,GAAR,CAAY,sCAAoCnD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,cAAxG,CAAhD,EADJ,CAEI;;AACA,cAAGtD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,cAAxG,KAAyH,IAA5H,EACA;AACItD,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DC,oCAA1D,CAA+F,IAA/F;AACA,gBAAIC,OAAO,GAACzD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,gBAAxG,CAAZ;AACA,iBAAKnC,cAAL,GAAoBsC,OAApB;AAEAT,YAAAA,OAAO,CAACG,GAAR,CAAY,KAAKhC,cAAjB;AAEAnB,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DoB,UAA9D,GAAyE,KAAKvC,cAAL,CAAoBwC,MAA7F,CAPJ,CAQI;;AACA,iBAAKC,2BAAL;AACA,iBAAKzB,UAAL,GAAgBnC,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,YAAxG,CAAhB;AACA,iBAAKO,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;AACH,WAbD,MAeA;AACI;AACAnC,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DC,oCAA1D,CAA+F,IAA/F;AACAxD,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DO,0BAA1D;AACH;AACJ,SAxBD,MA0BA;AACI9D,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DQ,8BAA1D,CAAyF,IAAzF,EAA8F,KAA9F,EAAoG,KAAKpC,YAAzG;AACH;AACJ,OAhCD,MAgCM,IAAG,KAAKA,YAAL,IAAmB,CAAtB,EAAyB;AAC/B;AACI3B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DQ,8BAA1D,CAAyF,IAAzF,EAA8F,KAA9F,EAAoG,KAAKpC,YAAzG;AACH;AACJ,GA/MoB;AAiNrB;AACAqC,EAAAA,aAlNqB,2BAkNJ;AACb,WAAO,KAAK7B,UAAZ;AACH,GApNoB;AAsNrB8B,EAAAA,UAtNqB,wBAuNrB;AACI,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,MAAM,GAAGnE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAA1G;AACA,QAAIC,UAAU,GAAG,KAAKpD,cAAtB;;AAEA,SAAK,IAAIqD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,UAAU,CAACZ,MAAvC,EAA+Ca,KAAK,EAApD,EAAwD;AACtD,UAAIL,MAAM,CAAClG,SAAP,IAAoBsG,UAAU,CAACC,KAAD,CAAV,CAAkBvG,SAA1C,EACA;AACIiG,QAAAA,OAAO,GAAGM,KAAV;AACA;AACH;AACF;;AAED,WAAON,OAAP;AACH,GArOoB;AAsOrB;AAEA;AAEAN,EAAAA,2BA1OqB,yCA2OrB;AACI,QAAIH,OAAO,GAACzD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,gBAAxG,CAAZ;AACAN,IAAAA,OAAO,CAACC,KAAR,CAAcQ,OAAd;AACA,SAAKtC,cAAL,GAAsBsC,OAAtB;AACA,SAAKgB,wBAAL,CAA8B,CAA9B;AACAzE,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DoB,UAA9D,GAAyE,KAAKvC,cAAL,CAAoBwC,MAA7F;AACA,SAAKe,kBAAL;AACA,SAAKC,iBAAL;AACA3E,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DqB,+BAA1D;;AAGA,SAAK,IAAIJ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKrD,cAAL,CAAoBwC,MAAhD,EAAwDa,KAAK,EAA7D,EAAiE;AAC7D,UAAI,KAAKrD,cAAL,CAAoBqD,KAApB,EAA2BtF,iBAA3B,GAA+C,CAA/C,IAAoD,KAAKiC,cAAL,CAAoBqD,KAApB,EAA2BrF,sBAA3B,IAAmD,IAAvG,IAA+G,CAAC,KAAKgC,cAAL,CAAoBqD,KAApB,EAA2BpF,cAA/I,EAA+J;AAC3J,YAAIyF,MAAM,GAAGnJ,EAAE,CAACoJ,IAAH,CAAQ9E,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D,KAAK7D,cAAL,CAAoBqD,KAApB,EAA2BtF,iBAArF,EAAwG+F,iBAAxG,CAA0HC,QAA1H,CAAmIC,CAA3I,EAA8InF,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D,KAAK7D,cAAL,CAAoBqD,KAApB,EAA2BtF,iBAArF,EAAwG+F,iBAAxG,CAA0HC,QAA1H,CAAmIE,CAAjR,CAAb;;AACA,aAAK3D,cAAL,CAAoB+C,KAApB,EAA2Ba,WAA3B,CAAuCR,MAAM,CAACM,CAA9C,EAAiDN,MAAM,CAACO,CAAxD;AACH;;AAED,UAAI,KAAKjE,cAAL,CAAoBqD,KAApB,EAA2BpF,cAA/B,EACA;AACI,YAAIkG,UAAU,GAAGtF,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DrB,MAA1D,GAAmE,CAApF;;AACA,YAAIkB,MAAM,GAAGnJ,EAAE,CAACoJ,IAAH,CAAQ9E,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DM,UAA1D,EAAsEL,iBAAtE,CAAwFC,QAAxF,CAAiGC,CAAzG,EAA4GnF,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DM,UAA1D,EAAsEL,iBAAtE,CAAwFC,QAAxF,CAAiGE,CAA7M,CAAb;;AACA,aAAK3D,cAAL,CAAoB+C,KAApB,EAA2Ba,WAA3B,CAAuCR,MAAM,CAACM,CAA9C,EAAiDN,MAAM,CAACO,CAAxD;AACH;AACJ;;AAEDpC,IAAAA,OAAO,CAACG,GAAR,CAAY,oBAAZ;;AAEA,SAAK,IAAIqB,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DoB,UAA1F,EAAsGc,OAAK,EAA3G,EAA+G;AAC3G,WAAK/C,cAAL,CAAoB+C,OAApB,EAA2Be,MAA3B,GAAkC,IAAlC;AACH;AACJ,GAzQoB;AA2QrBC,EAAAA,wCA3QqB,sDA4QrB;AACE,QAAIC,qBAAqB,GAACzF,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EsC,gBAA7E,EAA1B;;AACA,QAAGzF,cAAc,CAAC0D,MAAf,IAAuB8B,qBAA1B,EACA;AACExF,MAAAA,cAAc,GAAC,EAAf;AACA,WAAKmC,aAAL,GAAmB,IAAnB;;AAEA,UAAG,KAAKjB,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACA;AACI,aAAKxE,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuDU,WAAvD;AACAI,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EwB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKzE,cAAL,CAAoB,KAAKgB,UAAzB,CAAnH;AACA,aAAK0D,UAAL;AACA7C,QAAAA,OAAO,CAACG,GAAR,CAAYnD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,EAAZ;AACApB,QAAAA,OAAO,CAACG,GAAR,CAAY,+BAA6B,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnE,UAA9E;AACH;AACF;AAEF,GA7RoB;AA+RrB;AAGA;;AAED;;;;;;AAMD8H,EAAAA,iBA1SuB,6BA0SLC,KA1SK,EA2SvB;AACM/F,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EF,KAA5E;AACL,GA7SsB;AA+SvBG,EAAAA,mBA/SuB,iCAgTvB;AACEC,IAAAA,YAAY,CAACnF,oBAAD,CAAZ;AACD,GAlTsB;AAoTvBoF,EAAAA,mBApTuB,iCAqTvB;AAAA;;AACI,QAAG,KAAKzE,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACEqB,QAAAA,OAAO,CAACC,KAAR,CAAcvC,iBAAd;;AACA,YAAGA,iBAAiB,IAAE,IAAtB,EACA;AACIyF,UAAAA,YAAY,CAACnF,oBAAD,CAAZ;AACAgC,UAAAA,OAAO,CAACC,KAAR,CAAc,KAAKP,WAAnB;AACAhC,UAAAA,iBAAiB,GAAC,KAAlB;;AACA,cAAG,CAAC,KAAKiC,aAAT,EACA;AACI,iBAAKA,aAAL,GAAmB,IAAnB;AACA3C,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D,KAAKtC,WAA/D,EAA4EuC,iBAA5E,CAA8FnC,YAA9F,CAA2G,cAA3G,EAA2HuD,eAA3H,CAA2I,KAA3I,EAAiJ,KAAK5D,eAAtJ;AACH;AACJ,SAVD,MAYA;AACIzB,UAAAA,oBAAoB,GAACsF,UAAU,CAAC,YAAM;AAAE;AACpC,YAAA,KAAI,CAACF,mBAAL;AACH,WAF8B,EAE5B,GAF4B,CAA/B;AAGH;AACF;AACJ,GA3UsB;AA6UvBG,EAAAA,gBA7UuB,8BA8UvB;AACE,SAAK5D,aAAL,GAAmB,KAAnB;AACD,GAhVsB;AAkVvB6D,EAAAA,mBAlVuB,+BAkVHT,KAlVG,EAmVvB;AAEE,SAAK1D,eAAL;AACAW,IAAAA,OAAO,CAACG,GAAR,CAAY4C,KAAZ;AAEA,QAAIU,UAAU,GAACV,KAAK,CAACW,UAArB;AACA,QAAIC,OAAO,GAACZ,KAAK,CAACY,OAAlB;AAEA,SAAKlE,eAAL,GAAqBgE,UAArB;AACA,SAAK/D,WAAL,GAAiBiE,OAAjB;AAGA3D,IAAAA,OAAO,CAACC,KAAR,CAAcvC,iBAAd;;AAEA,QAAG,KAAKiB,YAAL,IAAmB,CAAtB,EACA;AACI,UAAG,KAAKR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACI3F,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D2B,OAA1D,EAAmE1B,iBAAnE,CAAqFnC,YAArF,CAAkG,cAAlG,EAAkHuD,eAAlH,CAAkI,IAAlI,EAAuII,UAAvI,EADJ,KAGI/F,iBAAiB,GAAC,IAAlB;AACP,KAND,MAMM,IAAG,KAAKiB,YAAL,IAAmB,CAAtB,EACN;AACI,UAAG,KAAKR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChE,KAArC,IAA4C,KAA/C,EACI6B,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D2B,OAA1D,EAAmE1B,iBAAnE,CAAqFnC,YAArF,CAAkG,cAAlG,EAAkHuD,eAAlH,CAAkI,IAAlI,EAAuII,UAAvI,EADJ,KAGIzG,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D2B,OAA1D,EAAmE1B,iBAAnE,CAAqFnC,YAArF,CAAkG,cAAlG,EAAkHuD,eAAlH,CAAkI,KAAlI,EAAwII,UAAxI,EAAmJ,IAAnJ;AACP;;AAEDzD,IAAAA,OAAO,CAACC,KAAR,CAAcvC,iBAAd;AAGD,GAlXsB;;AAoXtB;;;;;;AAMDkG,EAAAA,sBA1XuB,oCA2XvB;AACI,QAAG,KAAKjF,YAAL,IAAmB,CAAtB,EACA;AACE,UAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAAwH,KAA3H,EACA;AACI9G,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EjG,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAA9K;AACH;AACF,KAND,MAMM,IAAG,KAAKhE,YAAL,IAAmB,CAAtB,EACN;AACIqB,MAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd;AACFjD,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4E,KAAK9E,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAAjH;AACD;AACJ,GAvYsB;AA0YvB8I,EAAAA,WA1YuB,yBA2YvB;AACE,QAAG,KAAK5F,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACA;AACI3F,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EwB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKzE,cAAL,CAAoB,KAAKgB,UAAzB,CAAnH;AACH;AACJ,GAhZwB;;AAkZvB;;;;;;AAMA6E,EAAAA,wBAxZuB,oCAwZEC,IAxZF,EAyZvB;AACI,QAAG,KAAKtF,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACE,YAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAAwH,KAA3H,EACA;AACI9D,UAAAA,OAAO,CAACG,GAAR,CAAYlD,cAAc,CAAC0D,MAA3B;AAEA,cAAG1D,cAAc,CAAC0D,MAAf,IAAuB,CAA1B,EACQ1D,cAAc,CAACiH,IAAf,CAAoBD,IAApB;AAER,cAAIE,WAAW,GAAClH,cAAc,CAAC0D,MAA/B;AACA,cAAIyD,OAAO,GAAC,KAAZ;;AACA,eAAK,IAAI5C,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG2C,WAA5B,EAAyC3C,KAAK,EAA9C,EAAkD;AAC1C,gBAAGvE,cAAc,CAACuE,KAAD,CAAd,IAAuByC,IAA1B,EACAG,OAAO,GAAC,IAAR;AACP;;AAED,cAAG,CAACA,OAAJ,EACA;AACInH,YAAAA,cAAc,CAACiH,IAAf,CAAoBD,IAApB;AACH;;AACDjE,UAAAA,OAAO,CAACG,GAAR,CAAYlD,cAAZ;AACA+C,UAAAA,OAAO,CAACG,GAAR,CAAYlD,cAAc,CAAC0D,MAA3B,EAlBJ,CAoBI;;AACA,cAAI8B,qBAAqB,GAAC,KAAKtE,cAAL,CAAoBwC,MAA9C;;AACA,cAAG1D,cAAc,CAAC0D,MAAf,IAAuB8B,qBAA1B,EACA;AACIxF,YAAAA,cAAc,GAAC,EAAf;AACA,iBAAKmC,aAAL,GAAmB,IAAnB;;AAEA,gBAAG,KAAKjB,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACA;AACI,mBAAKxE,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuDU,WAAvD,CADJ,CAEI;;AACA,mBAAKiG,UAAL;AACA7C,cAAAA,OAAO,CAACG,GAAR,CAAYnD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,EAAZ;AACApB,cAAAA,OAAO,CAACG,GAAR,CAAY,+BAA6B,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnE,UAA9E;AACH;AACJ;AACJ;AACA,OAxCH,MAwCQ,IAAG,KAAK2D,YAAL,IAAmB,CAAtB,EACN;AACI,WAAKS,aAAL,GAAmB,IAAnB;AACA,WAAKjB,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuDU,WAAvD;AACA,WAAKiG,UAAL;AACH;AACN,GAxcsB;;AA0ctB;;;;;;AAMCA,EAAAA,UAhdqB,wBAidrB;AACI,QAAG,KAAKlE,YAAL,IAAmB,CAAtB,EACA;AACI,WAAKoF,WAAL;AACH;;AAED,QAAG,KAAK5E,UAAL,GAAgB,KAAKhB,cAAL,CAAoBwC,MAApB,GAA2B,CAA9C,EACI,KAAKxB,UAAL,GAAgB,KAAKA,UAAL,GAAgB,CAAhC,CADJ,KAGI,KAAKA,UAAL,GAAgB,CAAhB;AAEJnC,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4E,KAAK9D,UAAjF;AACH,GA7doB;AA+drBkF,EAAAA,gBA/dqB,8BAgerB;AACI,SAAK,IAAI7C,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKhD,WAAL,CAAiBmC,MAA7C,EAAqDa,KAAK,EAA1D,EAA8D;AAC1D,WAAKhD,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH;AACJ,GApeoB;;AAserB;;;;;;AAMAC,EAAAA,WA5eqB,uBA4eTC,KA5eS,EA6erB;AAAA;;AACI,SAAKH,gBAAL;AACArE,IAAAA,OAAO,CAACC,KAAR,CAAc,WAASuE,KAAvB;AACA,QAAIC,cAAc,GAAC,KAAnB;AACAnH,IAAAA,aAAa,GAAC,KAAd;;AACA,QAAGP,UAAH,EAAe;AACf;AACI,YAAGC,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAAwH,IAA3H,EACA;AACI/G,UAAAA,UAAU,GAAG,KAAb;AACH;;AAEDiD,QAAAA,OAAO,CAACG,GAAR,CAAY,MAAZ;AACAmD,QAAAA,UAAU,CAAC,YAAM;AACb,UAAA,MAAI,CAACiB,WAAL,CAAiBC,KAAjB;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OAXD,MAaA;AACI,WAAKrF,UAAL,GAAgBqF,KAAhB;;AACA,UAAG,KAAK7F,YAAL,IAAmB,CAAtB,EACA;AACI,YAAG,KAAKR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACA;AACI8B,UAAAA,cAAc,GAAC,IAAf;AACAnH,UAAAA,aAAa,GAAC,KAAKa,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDZ,YAArE;;AACA,cAAI,CAAC,KAAK0D,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/C,cAA1C,EAA0D;AACtD,iBAAKsI,kBAAL,CAAwB,IAAxB;;AACA,gBAAI,CAACpH,aAAL,EAAoB;AAChBgG,cAAAA,UAAU,CAAC,YAAM;AACbtG,gBAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DoE,2BAA1D,CAAsF,IAAtF;AACA3H,gBAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DqE,iBAA1D;AACH,eAHS,EAGP,IAHO,CAAV;AAIA5E,cAAAA,OAAO,CAACG,GAAR,CAAY,mBAAmB,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnE,UAApE;AACH;AACJ;AACJ,SAdD,MAgBA;AACI,eAAK0J,kBAAL,CAAwB,KAAxB;AACH;AAEJ,OAtBD,MAsBM,IAAG,KAAK/F,YAAL,IAAmB,CAAtB,EACN;AACIqB,QAAAA,OAAO,CAACG,GAAR,CAAY,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChE,KAAjD;AACA6E,QAAAA,OAAO,CAACG,GAAR,CAAY,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDZ,YAAnE;AACAuF,QAAAA,OAAO,CAACG,GAAR,CAAY7H,YAAZ;;AACA,YAAG,KAAK6F,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChE,KAArC,IAA4C,KAA/C,EACA;AACIsJ,UAAAA,cAAc,GAAG,IAAjB;AACAnH,UAAAA,aAAa,GAAG,KAAKa,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDZ,YAAvE;;AACA,cAAI,CAACnC,YAAL,EAAmB;AACf,iBAAKoM,kBAAL,CAAwB,IAAxB;;AACA,gBAAI,CAACpH,aAAL,EAAoB;AAChBgG,cAAAA,UAAU,CAAC,YAAM;AACbtG,gBAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DoE,2BAA1D,CAAsF,IAAtF;AACA3H,gBAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DqE,iBAA1D;AACH,eAHS,EAGP,IAHO,CAAV;AAIA5E,cAAAA,OAAO,CAACG,GAAR,CAAY,mBAAmB,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnE,UAApE;AACH;AACJ;AACJ,SAdD,MAeI;AACJ;AACIyJ,YAAAA,cAAc,GAAG,IAAjB;AACAnH,YAAAA,aAAa,GAAG,KAAKa,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDZ,YAAvE;;AACA,gBAAI,CAAClC,WAAL,EAAkB;AACd,mBAAKmM,kBAAL,CAAwB,KAAxB;;AACA,kBAAI,CAACpH,aAAL,EAAoB;AAChBgG,gBAAAA,UAAU,CAAC,YAAM;AACb,kBAAA,MAAI,CAACuB,QAAL;AACH,iBAFS,EAEP,IAFO,CAAV;AAGH;AACJ;AACJ;AACJ;;AAED,WAAKhE,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;;AAEA,WAAK,IAAIqC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKhD,WAAL,CAAiBmC,MAA7C,EAAqDa,KAAK,EAA1D,EAA8D;AAC1D,aAAKhD,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DgF,cAA7D,CAA4EvC,MAA5E,GAAmF,KAAnF;AACA,aAAK/D,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH;;AAGD,UAAG,KAAK3F,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI3B,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFuC,iBAAtF,CAAwG,YAAxG,EAAqH,KAAKzD,UAA1H,EAAqI,IAArI;AACAa,UAAAA,OAAO,CAACG,GAAR,CAAY,cAAY,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnE,UAA7D;AACAgF,UAAAA,OAAO,CAACG,GAAR,CAAY,KAAK3B,WAAL,CAAiB,KAAKW,UAAtB,EAAkCW,YAAlC,CAA+C,sBAA/C,EAAuEiF,UAAnF;AACA/E,UAAAA,OAAO,CAACG,GAAR,CAAYnD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,EAAZ;AACApB,UAAAA,OAAO,CAACG,GAAR,CAAYnD,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D0F,UAA9D,EAAZ;AACA,eAAKvD,wBAAL,CAA8B,CAA9B,EANJ,CASI;;AACA,cAAGzE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAAwH,IAA3H,EACI,KAAKlD,2BAAL;AACP,SAhFL,CAkFI;;;AACA,UAAG6D,cAAc,IAAInH,aAArB,EACA;AACIP,QAAAA,UAAU,GAAC,KAAX;AACAC,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,uBAApE,EAA4F,IAA5F;AACA,aAAKC,kBAAL,CAAwB,KAAxB;AACA,aAAKrC,UAAL;AACA,aAAK6B,kBAAL,CAAwB,KAAxB;AACH;;AAED,UAAGD,cAAc,IAAI,KAAKtG,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/C,cAA1D,EACA;AACIkH,QAAAA,UAAU,CAAC,YAAM;AACbvG,UAAAA,UAAU,GAAC,KAAX;;AACA,UAAA,MAAI,CAAC8F,UAAL;;AACA,UAAA,MAAI,CAAC6B,kBAAL,CAAwB,KAAxB;AACH,SAJS,EAIP,GAJO,CAAV;AAMH;AAEJ;AACJ,GAtmBoB;AAwmBrBjD,EAAAA,wBAxmBqB,oCAwmBI0D,IAxmBJ,EAymBrB;AACI,QAAIC,eAAe,GAACpI,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D0F,UAA9D,EAApB;AACA,QAAIK,MAAM,GAACrI,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,EAAX;AACA,QAAIkE,QAAQ,GAACH,IAAb;AACAnF,IAAAA,OAAO,CAACG,GAAR,CAAY,KAAKhC,cAAL,CAAoBmH,QAApB,EAA8BrK,SAA1C;AACA+E,IAAAA,OAAO,CAACG,GAAR,CAAYkF,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0CrG,SAAtD,EALJ,CAMI;AACD;;AACK,SAAK,IAAIuG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG4D,eAAe,CAACzE,MAA5C,EAAoDa,KAAK,EAAzD,EAA6D;AACrD,UAAG,KAAKrD,cAAL,CAAoBmH,QAApB,EAA8BrK,SAA9B,IAAyCmK,eAAe,CAAC5D,KAAD,CAAf,CAAuBH,gBAAvB,CAAwCC,iBAAxC,CAA0DrG,SAAtG,EACA;AACI,aAAKkD,cAAL,CAAoBmH,QAApB,IAA8BF,eAAe,CAAC5D,KAAD,CAAf,CAAuBH,gBAAvB,CAAwCC,iBAAtE;;AAEA,YAAGgE,QAAQ,GAAC,KAAKnH,cAAL,CAAoBwC,MAApB,GAA2B,CAAvC,EACA;AACI2E,UAAAA,QAAQ;AACRtF,UAAAA,OAAO,CAACG,GAAR,CAAY,qBAAmBmF,QAA/B;AACA,eAAK7D,wBAAL,CAA8B6D,QAA9B;AACH,SALD,MAMI;AACAtF,UAAAA,OAAO,CAACG,GAAR,CAAY,KAAKhC,cAAjB;AACH;AACJ;AACJ,KAvBb,CAwBI;AACD;AACK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACP,GA9oBoB;;AAgpBrB;;;;;;AAMAoH,EAAAA,SAtpBqB,uBAupBrB;AACIvF,IAAAA,OAAO,CAACG,GAAR,CAAY,KAAKhC,cAAjB;AACA,SAAKuD,kBAAL;AACA,SAAKC,iBAAL;AACA,SAAKxC,UAAL,GAAgB,CAAhB,CAJJ,CAIuB;AAEnB;;AACAnC,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4E,KAAK9D,UAAjF;AAIH,GAlqBoB;AAoqBrBqG,EAAAA,mBApqBqB,+BAoqBDzC,KApqBC,EAqqBrB;AACI;AACA,QAAI0C,aAAa,GAAC1C,KAAK,CAACf,IAAN,CAAW0D,UAA7B;AACA,QAAIlB,KAAK,GAACzB,KAAK,CAACf,IAAN,CAAW2D,IAArB;AACA,QAAIC,WAAW,GAAC7C,KAAK,CAACf,IAAN,CAAW6D,cAA3B;AAEA7F,IAAAA,OAAO,CAACG,GAAR,CAAY4C,KAAZ,EANJ,CAOI;AACA;AACA;;AAEA,SAAK5E,cAAL,CAAoBqG,KAApB,IAA2BoB,WAA3B;AAEA,SAAKlE,kBAAL,CAAwB,IAAxB;AACA,SAAKC,iBAAL,CAAuB,IAAvB;AAEA,SAAKd,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;;AAEA,SAAK,IAAIqC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKhD,WAAL,CAAiBmC,MAA7C,EAAqDa,KAAK,EAA1D,EAA8D;AAC1D,WAAKhD,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DgF,cAA7D,CAA4EvC,MAA5E,GAAqF,KAArF;AACA,WAAK/D,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH;;AAED,QAAG,KAAK3F,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI3B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFuC,iBAAtF,CAAwG,YAAxG,EAAqH,KAAKzD,UAA1H,EAAqI,IAArI;AACA,aAAKsC,wBAAL,CAA8B,CAA9B,EAFJ,CAII;;AACA,YAAGzE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAAwH,IAA3H,EACI,KAAKlD,2BAAL;AACP;AACJ,GArsBoB;AAusBrBkF,EAAAA,sBAvsBqB,oCAwsBrB;AACI,SAAKpE,kBAAL,CAAwB,IAAxB;AACA,SAAKC,iBAAL,CAAuB,IAAvB;AACA2B,IAAAA,UAAU,CAAC,YAAM;AACbtG,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DoE,2BAA1D,CAAsF,IAAtF;AACA3H,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DqE,iBAA1D;AACH,KAHS,EAGP,IAHO,CAAV;AAKA,SAAK/D,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;;AAEA,SAAK,IAAIqC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKhD,WAAL,CAAiBmC,MAA7C,EAAqDa,KAAK,EAA1D,EAA8D;AAC1D,WAAKhD,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DgF,cAA7D,CAA4EvC,MAA5E,GAAqF,KAArF;AACA,WAAK/D,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH;;AAED,QAAG,KAAK3F,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI3B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFuC,iBAAtF,CAAwG,YAAxG,EAAqH,KAAKzD,UAA1H,EAAqI,IAArI;AACA,aAAKsC,wBAAL,CAA8B,CAA9B,EAFJ,CAII;;AACA,YAAGzE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAAwH,IAA3H,EACI,KAAKlD,2BAAL;AACP;AACJ,GAhuBoB;AAiuBrB;AAGA;;AACC;;;;;;AAMDc,EAAAA,kBA3uBqB,8BA2uBF+D,aA3uBE,EA4uBrB;AAAA,QADmBA,aACnB;AADmBA,MAAAA,aACnB,GADiC,KACjC;AAAA;;AACI,QAAG,KAAK9G,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI,YAAG,CAAC8G,aAAJ,EACA;AACI,cAAIM,YAAY,GAAC,KAAKC,SAAL,CAAe,CAAf,EAAiB,KAAK5H,WAAL,CAAiBuC,MAAlC,CAAjB;;AACA,eAAKxC,cAAL,CAAoB+F,IAApB,CAAyB,KAAK9F,WAAL,CAAiB2H,YAAjB,CAAzB;AACA/I,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DoB,UAA9D,GAAyE,CAAzE;AACH;AACJ;;AAED,SAAK,IAAIc,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DoB,UAA1F,EAAsGc,KAAK,EAA3G,EAA+G;AAC3G,WAAKhD,WAAL,CAAiBgD,KAAjB,EAAwBe,MAAxB,GAA+B,IAA/B;AACA,WAAK/D,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DiF,UAA7D,GAAwE,KAAK5G,cAAL,CAAoBqD,KAApB,CAAxE;AACA,WAAKhD,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DmG,OAA7D,CAAqE,KAAK9H,cAAL,CAAoBqD,KAApB,EAA2BxG,UAAhG;AACA,WAAKwD,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH;AACJ,GA7vBoB;AA+vBrBzD,EAAAA,YA/vBqB,wBA+vBRqF,gBA/vBQ,EA+vBSC,MA/vBT,EAgwBrB;AACI,QAAGD,gBAAH,EACA;AACI,WAAK1H,WAAL,CAAiB2H,MAAjB,EAAyBrG,YAAzB,CAAsC,sBAAtC,EAA8DiF,UAA9D,GAAyE,KAAK5G,cAAL,CAAoBgI,MAApB,CAAzE;;AAEA,WAAK,IAAI3E,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DoB,UAA1F,EAAsGc,KAAK,EAA3G,EAA+G;AAC3G,YAAG2E,MAAM,IAAE3E,KAAX,EACA;AACI,eAAKhD,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DsG,mBAA7D,CAAiF,IAAjF;AACA,eAAK5H,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DuG,oBAA7D,CAAkF,IAAlF;AACA,eAAK7H,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH,SALD,MAOA;AACI,eAAK9F,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACA,eAAK9F,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DsG,mBAA7D,CAAiF,KAAjF;AACA,eAAK5H,WAAL,CAAiBgD,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DuG,oBAA7D,CAAkF,KAAlF;AACH;AACJ;AACJ;AACJ,GApxBoB;;AAsxBpB;;;;;;AAMD1E,EAAAA,iBA5xBqB,6BA4xBH8D,aA5xBG,EA6xBrB;AAAA,QADkBA,aAClB;AADkBA,MAAAA,aAClB,GADgC,KAChC;AAAA;;AACI,QAAG,CAACA,aAAJ,EACA;AACI,WAAK,IAAIjE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKrD,cAAL,CAAoBwC,MAAhD,EAAwDa,KAAK,EAA7D,EAAiE;AAC7D,YAAG,KAAKrD,cAAL,CAAoBqD,KAApB,EAA2BlG,eAA3B,IAA4C,CAA5C,IAAiD,CAAC,KAAK6C,cAAL,CAAoBqD,KAApB,EAA2BrF,sBAAhF,EACI,KAAKsC,cAAL,CAAoB+C,KAApB,EAA2Ba,WAA3B,CAAuC,KAAK3D,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCC,CAA3E,EAA6E,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCE,CAAjH,EADJ,KAEK,IAAG,KAAKjE,cAAL,CAAoBqD,KAApB,EAA2BjG,oBAA3B,IAAiD,CAAjD,IAAsD,CAAC,KAAK4C,cAAL,CAAoBqD,KAApB,EAA2BrF,sBAArF,EACD,KAAKsC,cAAL,CAAoB+C,KAApB,EAA2Ba,WAA3B,CAAuC,KAAK3D,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCC,CAA3E,EAA6E,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCE,CAAjH;AACP;AACJ,KARD,MASA;AACI,UAAG,KAAKjE,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC7D,eAArC,IAAsD,CAAzD,EACI,KAAKmD,cAAL,CAAoB,KAAKU,UAAzB,EAAqCkD,WAArC,CAAiD,KAAK3D,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCC,CAArF,EAAuF,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCE,CAA3H,EADJ,KAEK,IAAG,KAAKjE,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC5D,oBAArC,IAA2D,CAA9D,EACD,KAAKkD,cAAL,CAAoB,KAAKU,UAAzB,EAAqCkD,WAArC,CAAiD,KAAK3D,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCC,CAArF,EAAuF,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BwD,QAA3B,CAAoCE,CAA3H;AACP;;AAED,SAAK,IAAIZ,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DoB,UAA1F,EAAsGc,OAAK,EAA3G,EAA+G;AAC3G,WAAK/C,cAAL,CAAoB+C,OAApB,EAA2Be,MAA3B,GAAkC,IAAlC;AACH;AACJ,GAjzBoB;AAmzBrB+D,EAAAA,yBAnzBqB,uCAozBrB;AACI,QAAIC,SAAS,GAAC,KAAK9H,cAAL,CAAoB,KAAKU,UAAzB,EAAqCqH,qBAArC,CAA2D9N,EAAE,CAACoJ,IAAH,CAAQ,CAAR,EAAU,GAAV,CAA3D,CAAd;AACA,SAAKvD,UAAL,CAAgB2D,QAAhB,GAAyB,KAAK3D,UAAL,CAAgBkI,MAAhB,CAAuBC,oBAAvB,CAA4CH,SAA5C,CAAzB;AAEA,QAAII,KAAK,GAACJ,SAAS,CAACnE,CAAV,GAAY1J,EAAE,CAACkO,OAAH,CAAWC,MAAjC;AACA,SAAKhH,MAAL,CAAYiH,SAAZ,GAAsB,CAAtB;AACH,GA1zBoB;AA4zBrBC,EAAAA,UA5zBqB,wBA4zBP;AACV,QAAG,KAAKhH,eAAR,EACI,KAAKuG,yBAAL;AACP,GA/zBoB;AAi0BrBU,EAAAA,YAj0BqB,wBAi0BRC,KAj0BQ,EAk0BrB;AACI,QAAIC,MAAM,GAACD,KAAK,CAACE,KAAjB;AACA,QAAIC,MAAM,GAACH,KAAK,CAACI,KAAjB;;AACA,QAAIC,OAAO,GAACJ,MAAM,GAACE,MAAnB;;AAEArK,IAAAA,UAAU,GAAC,IAAX;AACA,SAAK4C,aAAL,GAAmB,KAAnB;;AAEA,QAAG,KAAKhB,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI,aAAK,IAAI6C,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,GAAiG5G,MAA7H,EAAqIa,KAAK,EAA1I,EAA8I;AAC1I,cAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,GAAiG/F,KAAjG,EAAwGH,gBAAxG,CAAyHW,IAAzH,CAA8HW,MAA9H,IAAsI,KAAKxE,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAA9K,EACA;AACI+E,YAAAA,OAAO,CAACG,GAAR,CAAY,oBAAkB,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnE,UAAnE;AACA,iBAAKmD,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuDc,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,GAAiG/F,KAAjG,EAAwGH,gBAAxG,CAAyHC,iBAAzH,CAA2IpF,iBAAlM;AACH;AACJ;AACJ;;AAED,QAAG,KAAKiC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,IAAwD,CAAxD,IAA6D,CAAC,KAAKiC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChD,sBAAtG,EACA;AACI,UAAG,KAAKgC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAArC,CAAkD,CAAlD,EAAqDhC,YAArD,IAAmE,CAAtE,EACA;AACIwD,QAAAA,WAAW,GAAC,CAAZ;AACA,aAAKuB,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChD,sBAArC,GAA4D,IAA5D;AACA6D,QAAAA,OAAO,CAACC,KAAR,CAAcrD,WAAd;AACH,OALD,MAOA;AACI,aAAKuB,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChD,sBAArC,GAA4D,IAA5D;AACAS,QAAAA,WAAW,GAAC,EAAZ;AACAoD,QAAAA,OAAO,CAACC,KAAR,CAAcrD,WAAd;AACH;AACJ,KAdD,MAgBA;AACI,UAAG,KAAKuB,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,IAAwD,EAA3D,EACI,KAAKiC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuD,KAAKiC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuD,EAA9G,CADJ,KAGI,KAAKiC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuD,KAAKiC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAuD,CAA9G;AAEJU,MAAAA,WAAW,GAAC,KAAKuB,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAAjD;AACA8D,MAAAA,OAAO,CAACC,KAAR,CAAcrD,WAAW,GAAC,CAA1B;AACH;;AAGDE,IAAAA,QAAQ,GAACwK,OAAT;AACAzK,IAAAA,QAAQ,GAAC,CAAT;AACAG,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DiH,2BAA1D,CAAsF1K,QAAtF;;AAEA,SAAK,IAAI0E,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAG,KAAKhD,WAAL,CAAiBmC,MAA7C,EAAqDa,OAAK,EAA1D,EAA8D;AAC1D,UAAG,KAAKrC,UAAL,IAAiBqC,OAApB,EACA;AACI,aAAKhD,WAAL,CAAiBgD,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DgF,cAA7D,CAA4EvC,MAA5E,GAAmF,IAAnF;;AACA,aAAK/D,WAAL,CAAiBgD,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DgF,cAA7D,CAA4EhF,YAA5E,CAAyF,gBAAzF,EAA2G2H,WAA3G,CAAuHP,MAAvH,EAA+HE,MAA/H;;AACA,aAAK5I,WAAL,CAAiBgD,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH,OALD,MAOA;AACI,aAAK9F,WAAL,CAAiBgD,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DgF,cAA7D,CAA4EvC,MAA5E,GAAqF,KAArF;;AACA,aAAK/D,WAAL,CAAiBgD,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DwE,wBAA7D;AACH;AACJ,KA9DL,CAgEI;AACA;AACA;;AACH,GAr4BoB;AAu4BrBoD,EAAAA,gBAv4BqB,8BAw4BrB;AACI,QAAInB,SAAS,GAAC,KAAK9H,cAAL,CAAoB,KAAKU,UAAzB,EAAqCqH,qBAArC,CAA2D9N,EAAE,CAACoJ,IAAH,CAAQ,CAAR,EAAU,GAAV,CAA3D,CAAd;;AACA,QAAI6F,IAAI,GAAC,KAAKpJ,UAAL,CAAgBkI,MAAhB,CAAuBC,oBAAvB,CAA4CH,SAA5C,CAAT;;AACA,SAAKqB,WAAL,CAAiBD,IAAjB,EAAsB,IAAtB,EAA2B,GAA3B;AACH,GA54BoB;AA84BrBE,EAAAA,cA94BqB,0BA84BNC,QA94BM,EA+4BrB;AACI,QAAIC,WAAW,GAAC,CAAhB;AACA,QAAIC,YAAY,GAAC,CAAjB;;AACA,SAAK,IAAIxG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,GAAiG5G,MAA7H,EAAqIa,KAAK,EAA1I,EAA8I;AAC1I,UAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,GAAiG/F,KAAjG,EAAwGH,gBAAxG,CAAyHW,IAAzH,CAA8HW,MAA9H,IAAsI,KAAKxE,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAA9K,EACA;AACI;AACA+M,QAAAA,YAAY,GAAChL,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,GAAiG/F,KAAjG,EAAwGH,gBAAxG,CAAyHC,iBAAzH,CAA2IpF,iBAAxJ;AACH;AACJ;;AAEH,QAAG8L,YAAY,GAAC,CAAb,GAAe,CAAlB,EACA;AACEhI,MAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;AACA8H,MAAAA,WAAW,GAACC,YAAY,GAACF,QAAb,GAAsB,CAAlC;AACA,UAAIG,QAAQ,GAACC,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D+F,WAA1D,EAAuE9F,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAArB;AACApI,MAAAA,OAAO,CAACC,KAAR,CAAc,YAAUgI,QAAxB;AACD,KAND,MAQA;AACEF,MAAAA,WAAW,GAACC,YAAY,GAACF,QAAzB;AACA,UAAIG,QAAQ,GAACC,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0D+F,WAA1D,EAAuE9F,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAArB;AACApI,MAAAA,OAAO,CAACC,KAAR,CAAc,YAAUgI,QAAxB;AACD;AAEF,GAx6BoB;AA06BrBpD,EAAAA,QAAQ,EAAC,oBACT;AACI,QAAI,CAAChH,UAAL,EAAiB;AACb,UAAIwK,KAAJ;AACA,UAAIC,KAAJ;;AACA,UAAIxQ,OAAO,IAAI,KAAKqG,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChE,KAArC,IAA8C,KAA7D,EAAoE;AAChEkN,QAAAA,KAAK,GAAGH,QAAQ,CAACnQ,WAAD,CAAhB;AACAuQ,QAAAA,KAAK,GAAGJ,QAAQ,CAAClQ,WAAD,CAAhB;AACH,OAHD,MAIK,IAAI,KAAKmG,cAAL,CAAoB,KAAKgB,UAAzB,EAAqChE,KAArC,IAA8C,IAA9C,IAAsDrD,OAA1D,EAAmE;AACpEuQ,QAAAA,KAAK,GAAG,EAAR;AACAC,QAAAA,KAAK,GAAG,EAAR;AACH,OAHI,MAIA;AACDD,QAAAA,KAAK,GAAG,KAAKrC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAR;AACAsC,QAAAA,KAAK,GAAG,KAAKtC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAR;AAEA,YAAI/N,iBAAiB,IAAIoQ,KAAzB,EACIA,KAAK,GAAG,KAAKrC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAR;AAEJ,YAAI9N,iBAAiB,IAAIoQ,KAAzB,EACIA,KAAK,GAAG,KAAKtC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAR;AAEJ/N,QAAAA,iBAAiB,GAAGoQ,KAApB;AACAnQ,QAAAA,iBAAiB,GAAGoQ,KAApB;AACH,OAvBY,CA0Bb;AACA;;;AAEAxL,MAAAA,QAAQ,GAAGuL,KAAK,GAAGC,KAAnB;AACA,UAAIC,QAAQ,GAAG;AAAEpB,QAAAA,KAAK,EAAEkB,KAAT;AAAgBhB,QAAAA,KAAK,EAAEiB;AAAvB,OAAf,CA9Ba,CA+Bb;AACA;;AACAtI,MAAAA,OAAO,CAACG,GAAR,CAAY,kBAAkBrD,QAAlB,GAA6B,UAA7B,GAA0CuL,KAA1C,GAAkD,UAAlD,GAA+DC,KAA3E;AAEAtL,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA6EsF,QAA7E;AACH;AACJ,GAj9BoB;AAm9BrBC,EAAAA,WAn9BqB,yBAo9BrB;AACI,QAAIH,KAAK,GAAG,KAAKrC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAZ;AAEA,QAAI3N,iBAAiB,IAAIgQ,KAAzB,EACIA,KAAK,GAAC,KAAKrC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAN;AAEA3N,IAAAA,iBAAiB,GAAGgQ,KAApB;AAEJ,WAAOA,KAAP;AACH,GA79BoB;AA+9BrBI,EAAAA,YA/9BqB,0BAg+BrB;AACI,QAAIJ,KAAK,GAAC,KAAKrC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACA,QAAIsC,KAAK,GAAG,KAAKtC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAZ;AAEA,QAAI7N,iBAAiB,IAAIkQ,KAAzB,EACIA,KAAK,GAAC,KAAKrC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAN;AAEJ,QAAI5N,iBAAiB,IAAIkQ,KAAzB,EACIA,KAAK,GAAG,KAAKtC,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAR;AAEA7N,IAAAA,iBAAiB,GAAGkQ,KAApB;AACAjQ,IAAAA,iBAAiB,GAAGkQ,KAApB;AAEJ,WAAQD,KAAK,GAACC,KAAd;AACH,GA9+BoB;AAg/BrBI,EAAAA,YAh/BqB,0BAi/BrB;AACI,QAAI,CAAC7K,UAAL,EAAiB;AACb,UAAIjB,WAAW,GAAGI,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DrB,MAA5E,EAAoF;AAChF,YAAIgI,QAAQ,GAAGT,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAAvB;;AACA,aAAKjK,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCjD,iBAArC,GAAyDU,WAAzD;;AACA,YAAI+L,QAAQ,IAAI,CAAZ,IAAiBA,QAAQ,IAAI,CAAjC,EAAoC;AACpC;AACI,gBAAIlF,UAAU,GAAG,KAAKuC,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAjB,CADJ,CAGI;;AACA,gBAAI2C,QAAQ,IAAI,CAAhB,EAAmB;AACnB;AACI;AACA;AACA;AACAlF,gBAAAA,UAAU,GAAG,CAAb;AACH,eAND,MAMO,IAAIkF,QAAQ,IAAI,CAAhB,EAAmB;AAC1B;AACI,oBAAIC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,CAAjB;AACA,oBAAIpH,KAAK,GAAG,KAAKwE,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAZ;AACAvC,gBAAAA,UAAU,GAAGmF,UAAU,CAACpH,KAAD,CAAvB,CAHJ,CAII;AACH,eANM,MAOF,IAAImH,QAAQ,IAAI,CAAhB,EAAmB;AACxB;AACI,oBAAIC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,CAA7B,CAAjB;AACA,oBAAIpH,KAAK,GAAG,KAAKwE,SAAL,CAAe,CAAf,EAAkB,EAAlB,CAAZ;AACAvC,gBAAAA,UAAU,GAAGmF,UAAU,CAACpH,KAAD,CAAvB,CAHJ,CAII;AACH,eANI,MAQA,IAAImH,QAAQ,IAAI,CAAhB,EAAmB;AACxB;AACI,oBAAIC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,EAAV,EAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,CAAjB;AACA,oBAAIpH,KAAK,GAAG,KAAKwE,SAAL,CAAe,CAAf,EAAkB,CAAlB,CAAZ;AACAvC,gBAAAA,UAAU,GAAGmF,UAAU,CAACpH,KAAD,CAAvB,CAHJ,CAII;AACH;;AAGDzE,YAAAA,UAAU,GAAG,KAAb;AACAiD,YAAAA,OAAO,CAACC,KAAR,CAAc0I,QAAd;;AAEA,gBAAI,KAAKhK,YAAL,IAAqB,CAAzB,EAA4B;AAC5B;AACI,oBAAIgK,QAAQ,IAAE,EAAd,EAAkB;AAClB;AACI/L,oBAAAA,WAAW,GAAGA,WAAW,GAAG,CAA5B;AACA,yBAAKiM,aAAL;AACH,mBAJD,MAMI;AACA,sBAAI,KAAK1K,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAkD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAAxJ,EAAgK;AAC5J,wBAAImG,WAAW,GAAG;AAAE,oCAAcrF,UAAhB;AAA4B,iCAAW7G;AAAvC,qBAAlB;AACA,yBAAKkG,iBAAL,CAAuBgG,WAAvB;AACH,mBAHD,MAIK;AACD,yBAAK1F,mBAAL;AACH;AACJ;AACJ,eAjBD,MAiBO,IAAI,KAAKzE,YAAL,IAAqB,CAAzB,EAA4B;AACnC;AACI,oBAAIgK,QAAQ,IAAE,EAAd,EAAkB;AAClB;AACI/L,oBAAAA,WAAW,GAAGA,WAAW,GAAG,CAA5B;AACA,yBAAKiM,aAAL;AACH,mBAJD,MAMA;AACI,sBAAIC,WAAW,GAAG;AAAE,kCAAcrF,UAAhB;AAA4B,+BAAW7G;AAAvC,mBAAlB;AACA,uBAAKkG,iBAAL,CAAuBgG,WAAvB;AACH;AACJ;AACJ,WApED,MAqEK;AACD/L,UAAAA,UAAU,GAAG,KAAb;AACAiD,UAAAA,OAAO,CAACG,GAAR,CAAY,uEAAZ;AACA,eAAKyD,sBAAL;AACH;AACJ,OA7ED,MA8EK;AACD,YAAI,KAAKjF,YAAL,IAAqB,CAAzB,EAA4B;AACxB,cAAI,CAACd,UAAL,EAAiB;AACb,gBAAI,KAAKM,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC4J,KAArC,IAA8CxQ,WAAlD,EACI,KAAKyQ,gBAAL;AAEJ,gBAAI,CAAC,KAAK7K,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC4J,KAAtC,IAA+CzQ,YAAnD,EACI,KAAK0Q,gBAAL;AACP;AACJ,SARD,MASK,IAAI,KAAKrK,YAAL,IAAqB,CAAzB,EAA4B;AAC7B,cAAI,CAACd,UAAL,EAAiB;AACb,gBAAI,KAAKM,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/C,cAAzC,EACI,KAAK4M,gBAAL;AACP;AACJ;AACJ;AACJ,KAhGD,MAkGA;AACI,WAAKC,uBAAL;AACH;AACJ,GAvlCoB;AAylCrBD,EAAAA,gBAzlCqB,8BA0lCrB;AACIjM,IAAAA,UAAU,GAAC,KAAX;AACAiD,IAAAA,OAAO,CAACG,GAAR,CAAY,uEAAZ;AACA,SAAKyD,sBAAL;AACH,GA9lCoB;AAgmCrBsF,EAAAA,gBAhmCqB,4BAgmCJC,MAhmCI,EAimCrB;AAAA,QADiBA,MACjB;AADiBA,MAAAA,MACjB,GADwB,KACxB;AAAA;;AACI,QAAGA,MAAM,IAAE,KAAX,EACA;AACI,UAAG,KAAKhL,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACA;AACI,YAAIyG,YAAY,GAAC,KAAKjK,UAAtB;;AACA,YAAG,KAAKhB,cAAL,CAAoBiL,YAApB,EAAkChN,cAAlC,IAAkD,KAArD,EACA;AACI,eAAK+B,cAAL,CAAoBiL,YAApB,EAAkChN,cAAlC,GAAiD,IAAjD;AAEA,cAAIiN,KAAK,GAAC,KAAKlL,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCzD,IAA/C;;AACA,cAAI4N,QAAQ,GAACtM,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiF9N,eAA9F;;AACA,cAAIkO,QAAQ,GAACxM,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiF7N,oBAA9F;;AACA,cAAIkO,WAAW,GAACzM,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiF5N,oBAAjG;;AAEA,cAAIkO,UAAU,GAAC,CAAf;;AACA,eAAK,IAAIlI,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiFhO,YAAjF,CAA8FuF,MAA1H,EAAkIa,KAAK,EAAvI,EAA2I;AACvI,gBAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiFhO,YAAjF,CAA8FoG,KAA9F,EAAqGpH,SAAxG,EACA;AACIsP,cAAAA,UAAU,IAAE1M,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiFhO,YAAjF,CAA8FoG,KAA9F,EAAqGnH,UAAjH;AACH;AACJ;;AAED,cAAIsP,KAAK,GAAG,KAAKxL,cAAL,CAAoBiL,YAApB,EAAkCzN,SAA9C;AACA,cAAIiO,OAAO,GAAG,KAAKzL,cAAL,CAAoBiL,YAApB,EAAkCxN,UAAhD;;AAEA,cAAIiO,WAAW,GAAG,KAAKpB,YAAL,EAAlB;;AACA,cAAIqB,WAAW,GAAGD,WAAW,GAAG,IAAhC;AAEA,cAAIE,QAAQ,GAAGD,WAAW,GAAGH,KAA7B;AACA,cAAIK,SAAS,GAAGF,WAAW,GAAGF,OAA9B;AAGA,cAAIK,MAAM,GAAC,CAACT,QAAQ,GAACC,WAAV,IAAuB,MAAlC;AAEA,cAAIS,MAAM,GAAC,CAAX;AACA,cAAGZ,QAAQ,IAAE,CAAb,EACIY,MAAM,GAAC,KAAP,CADJ,KAEK,IAAGZ,QAAQ,IAAE,CAAb,EACDY,MAAM,GAAC,QAAM,KAAb,CADC,KAEA,IAAGZ,QAAQ,IAAE,CAAb,EACDY,MAAM,GAAC,QAAM,KAAN,GAAY,KAAnB;AAEJ,cAAIC,WAAW,GAACd,KAAK,GAACY,MAAN,GAAaC,MAAb,GAAoBH,QAApB,GAA6BC,SAA7B,GAAuCN,UAAvD;AAEA,eAAKvL,cAAL,CAAoBiL,YAApB,EAAkC/M,UAAlC,GAA+C8N,WAA/C;AACA,eAAKhM,cAAL,CAAoBiL,YAApB,EAAkC9M,WAAlC,GAAgD4N,MAAhD;AACA,eAAK/L,cAAL,CAAoBiL,YAApB,EAAkC7M,WAAlC,GAAgD0N,MAAhD;AACA,eAAK9L,cAAL,CAAoBiL,YAApB,EAAkC5M,aAAlC,GAAkDuN,QAAlD;AACA,eAAK5L,cAAL,CAAoBiL,YAApB,EAAkC1M,eAAlC,GAAoDsN,SAApD;AACA,eAAK7L,cAAL,CAAoBiL,YAApB,EAAkC3M,gBAAlC,GAAqDiN,UAArD;AACA1M,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EwB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKzE,cAAL,CAAoB,KAAKgB,UAAzB,CAAnH;AAEH;AACJ;AACJ,KAtDD,MAwDA;AACI,UAAIiK,YAAY,GAAC,KAAKjK,UAAtB;;AACA,UAAG,KAAKhB,cAAL,CAAoBiL,YAApB,EAAkChN,cAAlC,IAAkD,KAArD,EACA;AACI,aAAK+B,cAAL,CAAoBiL,YAApB,EAAkChN,cAAlC,GAAiD,IAAjD;AAEA,YAAIiN,KAAK,GAAC,KAAKlL,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCzD,IAA/C;AACA,YAAI4N,QAAQ,GAAC,KAAKnL,cAAL,CAAoBiL,YAApB,EAAkC9N,eAA/C;AACA,YAAIkO,QAAQ,GAAC,KAAKrL,cAAL,CAAoBiL,YAApB,EAAkC7N,oBAA/C;AACA,YAAIkO,WAAW,GAAC,KAAKtL,cAAL,CAAoBiL,YAApB,EAAkC5N,oBAAlD;AAEA,YAAIkO,UAAU,GAAC,CAAf;;AACA,aAAK,IAAIlI,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAG,KAAKrD,cAAL,CAAoBiL,YAApB,EAAkChO,YAAlC,CAA+CuF,MAA3E,EAAmFa,OAAK,EAAxF,EAA4F;AACxF,cAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiFhO,YAAjF,CAA8FoG,OAA9F,EAAqGpH,SAAxG,EACA;AACIsP,YAAAA,UAAU,IAAE1M,wBAAwB,CAAC6B,QAAzB,CAAkC0K,eAAlC,GAAoDpL,cAApD,CAAmEiL,YAAnE,EAAiFhO,YAAjF,CAA8FoG,OAA9F,EAAqGnH,UAAjH;AACH;AACJ;;AAEG,YAAIsP,KAAK,GAAG,KAAKxL,cAAL,CAAoBiL,YAApB,EAAkCzN,SAA9C;AACA,YAAIiO,OAAO,GAAG,KAAKzL,cAAL,CAAoBiL,YAApB,EAAkCxN,UAAhD;;AAEA,YAAIiO,WAAW,GAAG,KAAKpB,YAAL,EAAlB;;AACA,YAAIqB,WAAW,GAAGD,WAAW,GAAG,IAAhC;AAEA,YAAIE,QAAQ,GAAGD,WAAW,GAAGH,KAA7B;AACA,YAAIK,SAAS,GAAGF,WAAW,GAAGF,OAA9B;AAGA,YAAIK,MAAM,GAAC,CAACT,QAAQ,GAACC,WAAV,IAAuB,MAAlC;AAEA,YAAIS,MAAM,GAAC,CAAX;AACA,YAAGZ,QAAQ,IAAE,CAAb,EACIY,MAAM,GAAC,KAAP,CADJ,KAEK,IAAGZ,QAAQ,IAAE,CAAb,EACDY,MAAM,GAAC,QAAM,KAAb,CADC,KAEA,IAAGZ,QAAQ,IAAE,CAAb,EACDY,MAAM,GAAC,QAAM,KAAN,GAAY,KAAnB;AAEJ,YAAIC,WAAW,GAACd,KAAK,GAACY,MAAN,GAAaC,MAAb,GAAoBH,QAApB,GAA6BC,SAA7B,GAAuCN,UAAvD;AAEA,aAAKvL,cAAL,CAAoBiL,YAApB,EAAkC/M,UAAlC,GAA+C8N,WAA/C;AACA,aAAKhM,cAAL,CAAoBiL,YAApB,EAAkC9M,WAAlC,GAAgD4N,MAAhD;AACA,aAAK/L,cAAL,CAAoBiL,YAApB,EAAkC7M,WAAlC,GAAgD0N,MAAhD;AACA,aAAK9L,cAAL,CAAoBiL,YAApB,EAAkC5M,aAAlC,GAAkDuN,QAAlD;AACA,aAAK5L,cAAL,CAAoBiL,YAApB,EAAkC1M,eAAlC,GAAoDsN,SAApD;AACA,aAAK7L,cAAL,CAAoBiL,YAApB,EAAkC3M,gBAAlC,GAAqDiN,UAArD;AACH;AACR;AACJ,GA3sCoB;AA6sCtBU,EAAAA,yBA7sCsB,qCA6sCIrH,KA7sCJ,EA8sCtB;AACK/F,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EF,KAA5E;AACJ,GAhtCqB;AAktCtBsH,EAAAA,YAltCsB,wBAktCTC,IAltCS,EAmtCtB;AACI,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAU,GAAG,EAAjB;;AACH,QAAG,KAAK7L,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI3B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DmL,cAA9D;AACA5M,QAAAA,UAAU,GAAG,IAAb;AACA,YAAIuH,eAAe,GAACpI,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D0F,UAA9D,EAApB;AACA,YAAIK,MAAM,GAACrI,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,EAAX;AACApB,QAAAA,OAAO,CAACG,GAAR,CAAYmK,IAAZ;AACAtK,QAAAA,OAAO,CAACG,GAAR,CAAYkF,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0CrG,SAAtD;AACA+B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAA7F,CAA+G3E,QAA/G,GAAwH,IAAxH;;AAEA,YAAIK,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAA0H,IAA9H,EAAoI;AAEhI,cAAIqC,MAAM,GAAG,CAAC,CAAd;;AACA,eAAK,IAAI3E,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG4D,eAAe,CAACzE,MAA5C,EAAoDa,KAAK,EAAzD,EAA6D;AACzD,gBAAI4D,eAAe,CAAC5D,KAAD,CAAf,CAAuBH,gBAAvB,CAAwCC,iBAAxC,CAA0DrG,SAA1D,IAAuEqP,IAA3E,EACA;AACInE,cAAAA,MAAM,GAAG3E,KAAT;AACA;AACH;AACJ;;AAEDgJ,UAAAA,UAAU,GAAG,iBAAepF,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2DtG,UAAvF;AACAuP,UAAAA,QAAQ,GACJ,qBAAqBnF,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2D5F,IAAhF,GAAuF,IAAvF,GACA,iCADA,GACoC0J,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2DhF,WAD/F,GAC6G,IAD7G,GAEA,uCAFA,GAE0C8I,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2D/E,WAFrG,GAEmH,IAFnH,GAGA,gBAHA,GAGmB6I,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2D9E,aAH9E,GAG8F,IAH9F,GAIA,kBAJA,GAIqB4I,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2D5E,eAJhF,GAIkG,IAJlG,GAKA,kBALA,GAKqB0I,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2D7E,gBALhF,GAKmG,IALnG,GAMA,uBANA,GAM0B2I,eAAe,CAACe,MAAD,CAAf,CAAwB9E,gBAAxB,CAAyCC,iBAAzC,CAA2DjF,UANrF,GAMkG,IAPtG;AASAW,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DmK,gBAA1D,CAA2EF,UAA3E,EAAuFD,QAAvF,EArBgI,CAuBhI;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACH,SAjCD,MAkCK;AACD,cAAIlF,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0CrG,SAA1C,IAAuDqP,IAA3D,EAAiE;AAE7D;AACAE,YAAAA,UAAU,GAAG,kCAAb;AACAD,YAAAA,QAAQ,GACJ,qBAAqBlF,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C5F,IAA/D,GAAsE,IAAtE,GACA,iCADA,GACoC2J,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0ChF,WAD9E,GAC4F,IAD5F,GAEA,uCAFA,GAE0C+I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C/E,WAFpF,GAEkG,IAFlG,GAGA,gBAHA,GAGmB8I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C9E,aAH7D,GAG6E,IAH7E,GAIA,kBAJA,GAIqB6I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C5E,eAJ/D,GAIiF,IAJjF,GAKA,kBALA,GAKqB2I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C7E,gBAL/D,GAKkF,IALlF,GAMA,uBANA,GAM0B4I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0CjF,UANpE,GAMiF,IAPrF;AASAW,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DmK,gBAA1D,CAA2EF,UAA3E,EAAuFD,QAAvF,EAb6D,CAc7D;AACA;AACA;AACA;AACA;AACA;AACH,WApBD,MAqBK;AAED;AACAC,YAAAA,UAAU,GAAG,wCAAb;AACAD,YAAAA,QAAQ,GACJ,qBAAqBlF,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C5F,IAA/D,GAAsE,IAAtE,GACA,iCADA,GACoC2J,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0ChF,WAD9E,GAC4F,IAD5F,GAEA,uCAFA,GAE0C+I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C/E,WAFpF,GAEkG,IAFlG,GAGA,gBAHA,GAGmB8I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C9E,aAH7D,GAG6E,IAH7E,GAIA,kBAJA,GAIqB6I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C5E,eAJ/D,GAIiF,IAJjF,GAKA,kBALA,GAKqB2I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0C7E,gBAL/D,GAKkF,IALlF,GAMA,uBANA,GAM0B4I,MAAM,CAAChE,gBAAP,CAAwBC,iBAAxB,CAA0CjF,UANpE,GAMiF,IAPrF;AASAW,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DmK,gBAA1D,CAA2EF,UAA3E,EAAuFD,QAAvF,EAbC,CAeD;AACA;AACA;AACA;AACA;AACA;AACH,WA3CA,CA6CD;AACA;AACA;;AACH;AACJ,OA7FD,MA8FK,IAAG,KAAK5L,YAAL,IAAmB,CAAtB,EAAwB;AAC7B;AACId,QAAAA,UAAU,GAAG,IAAb;AACA,YAAIuH,eAAe,GAAC,KAAKjH,cAAzB;AACA,YAAIkH,MAAM,GAAC,KAAKlH,cAAL,CAAoB,CAApB,CAAX;AACA6B,QAAAA,OAAO,CAACG,GAAR,CAAYmK,IAAZ;AACAtK,QAAAA,OAAO,CAACG,GAAR,CAAYkF,MAAM,CAACpK,SAAnB;AACA,aAAKkD,cAAL,CAAoB,CAApB,EAAuBxB,QAAvB,GAAgC,IAAhC;;AAEA,YAAG0I,MAAM,CAACpK,SAAP,IAAkBqP,IAArB,EACA;AACI;AACAE,UAAAA,UAAU,GAAG,kCAAb;AACAD,UAAAA,QAAQ,GACA,qBAAqBlF,MAAM,CAAC3J,IAA5B,GAAmC,IAAnC,GACA,iCADA,GACoC2J,MAAM,CAAC/I,WAD3C,GACyD,IADzD,GAEA,uCAFA,GAE0C+I,MAAM,CAAC9I,WAFjD,GAE+D,IAF/D,GAGA,gBAHA,GAGmB8I,MAAM,CAAC7I,aAH1B,GAG0C,IAH1C,GAIA,kBAJA,GAIqB6I,MAAM,CAAC3I,eAJ5B,GAI8C,IAJ9C,GAKA,kBALA,GAKqB2I,MAAM,CAAC5I,gBAL5B,GAK+C,IAL/C,GAMA,uBANA,GAM0B4I,MAAM,CAAChJ,UANjC,GAM8C,IAN9C,GAOA,8BAPA,GAOiC,KAAK8B,cAAL,CAAoB,CAApB,EAAuB9B,UAPxD,GAOqE,IAR7E;AAUAW,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DmK,gBAA1D,CAA2EF,UAA3E,EAAuFD,QAAvF,EAbJ,CAgBI;AACA;AACA;AACA;AACA;AACA;AACH,SAvBD,MAyBA;AACI;AAEAC,UAAAA,UAAU,GAAG,wCAAb;AACAD,UAAAA,QAAQ,GACA,qBAAqBlF,MAAM,CAAC3J,IAA5B,GAAmC,IAAnC,GACA,iCADA,GACoC2J,MAAM,CAAC/I,WAD3C,GACyD,IADzD,GAEA,uCAFA,GAE0C+I,MAAM,CAAC9I,WAFjD,GAE+D,IAF/D,GAGA,gBAHA,GAGmB8I,MAAM,CAAC7I,aAH1B,GAG0C,IAH1C,GAIA,kBAJA,GAIqB6I,MAAM,CAAC3I,eAJ5B,GAI8C,IAJ9C,GAKA,kBALA,GAKqB2I,MAAM,CAAC5I,gBAL5B,GAK+C,IAL/C,GAMA,uBANA,GAM0B4I,MAAM,CAAChJ,UANjC,GAM8C,IAN9C,GAOA,8BAPA,GAOiC,KAAK8B,cAAL,CAAoB,CAApB,EAAuB9B,UAPxD,GAOqE,IAR7E;AAUAW,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DmK,gBAA1D,CAA2EF,UAA3E,EAAuFD,QAAvF,EAdJ,CAiBI;AACA;AACA;AACA;AACA;AACA;AACH,SAxDL,CA0DI;AACA;AACA;;AAEH;AAED,GAr3CqB;AAu3CrBtB,EAAAA,uBAv3CqB,qCAw3CrB;AACQ,QAAI0B,GAAG,GAAG,CAAV;AACA,QAAIC,WAAW,GAAG,CAAlB;AACA,QAAIC,WAAW,GAAG,KAAK1M,cAAvB;;AACA,SAAK,IAAIqD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGqJ,WAAW,CAAClK,MAAxC,EAAgDa,KAAK,EAArD,EAAyD;AACrD,UAAIsJ,MAAM,GAAGD,WAAW,CAACrJ,KAAD,CAAX,CAAmBnF,UAAhC;;AAEA,UAAIyO,MAAM,GAAGH,GAAb,EAAkB;AACdC,QAAAA,WAAW,GAAGpJ,KAAd;AACAmJ,QAAAA,GAAG,GAAGG,MAAN;AACH;AACJ;;AAED,SAAK,IAAItJ,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGqJ,WAAW,CAAClK,MAAxC,EAAgDa,OAAK,EAArD,EAAyD;AACrD,UAAIsJ,MAAM,GAAGD,WAAW,CAACrJ,OAAD,CAAX,CAAmBnF,UAAhC;AACA2D,MAAAA,OAAO,CAACG,GAAR,CAAY2K,MAAZ;AACP;;AAEG9K,IAAAA,OAAO,CAACG,GAAR,CAAY,4BAA4B0K,WAAW,CAACD,WAAD,CAAX,CAAyB3P,SAAjE;AACA,SAAKmP,yBAAL,CAA+BS,WAAW,CAACD,WAAD,CAAX,CAAyB3P,SAAxD;AACP,GA54CoB;AA64CrB4N,EAAAA,aAAa,EAAC,yBACd;AAAA;;AACI,QAAGjM,WAAW,IAAEI,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DrB,MAA1E,EACA;AACIX,MAAAA,OAAO,CAACG,GAAR,CAAY,UAAZ;AACA,WAAK4K,aAAL;AAEAzH,MAAAA,UAAU,CAAC,YAAM;AACb,YAAG,MAAI,CAAC3E,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI,gBAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FwC,cAA7F,CAA4GC,UAA5G,IAAwH,KAA3H,EACA;AACI,cAAA,MAAI,CAACoF,gBAAL;;AACA,kBAAI8B,eAAe,GAAC,CAApB;AAEA,kBAAI5F,eAAe,GAACpI,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D0F,UAA9D,EAApB;;AACA,mBAAK,IAAIxD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG4D,eAAe,CAACzE,MAA5C,EAAoDa,KAAK,EAAzD,EAA6D;AACzD,oBAAG4D,eAAe,CAAC5D,KAAD,CAAf,CAAuBH,gBAAvB,CAAwCC,iBAAxC,CAA0DlF,cAA7D,EACA;AACI4O,kBAAAA,eAAe;AAClB;AACJ;;AAED,kBAAGA,eAAe,IAAE,MAAI,CAAC7M,cAAL,CAAoBwC,MAAxC,EAAgD;AAChD;AACI9C,kBAAAA,UAAU,GAAC,IAAX;;AACA,sBAAI,CAACV,YAAD,IAAiB,CAACC,YAAtB,EAAoC;AAChC,oBAAA,MAAI,CAAC6L,uBAAL;AACH;AAEJ,iBAPD,MAQA;AACI,oBAAI,CAACpL,UAAL,EAAiB;AACb,sBAAI,CAACV,YAAD,IAAiB,CAACC,YAAtB,EAAoC;AAChCL,oBAAAA,UAAU,GAAG,KAAb;;AACA,oBAAA,MAAI,CAACiM,gBAAL;AACH;AACJ;AACJ;AACJ;AACJ,WAhCD,MAiCK,IAAG,MAAI,CAACrK,YAAL,IAAmB,CAAtB,EAAwB;AAC7B;AACI,gBAAI,MAAI,CAACR,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqChE,KAAzC,EACI5C,WAAW,GAAG,IAAd,CADJ,KAGID,YAAY,GAAG,IAAf;AAEJ0H,YAAAA,OAAO,CAACG,GAAR,CAAY,mBAAmB7H,YAA/B;AACA0H,YAAAA,OAAO,CAACG,GAAR,CAAY,kBAAkB5H,WAA9B;;AACA,YAAA,MAAI,CAAC2Q,gBAAL,CAAsB,IAAtB;;AACA,gBAAI8B,eAAe,GAAC,CAApB;AAEA,gBAAI5F,eAAe,GAAC,MAAI,CAACjH,cAAzB;;AACA,iBAAK,IAAIqD,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAG4D,eAAe,CAACzE,MAA5C,EAAoDa,OAAK,EAAzD,EAA6D;AACzD,kBAAG4D,eAAe,CAAC5D,OAAD,CAAf,CAAuBpF,cAA1B,EACI4O,eAAe;AACtB;;AAED,gBAAGA,eAAe,IAAE,MAAI,CAAC7M,cAAL,CAAoBwC,MAAxC,EAAgD;AAChD;AACQpI,gBAAAA,WAAW,GAAG,IAAd;AACAD,gBAAAA,YAAY,GAAG,IAAf;AACAuF,gBAAAA,UAAU,GAAG,IAAb;;AAEJ,oBAAI,CAACV,YAAD,IAAiB,CAACC,YAAtB,EAAoC;AAChC,kBAAA,MAAI,CAAC6L,uBAAL;AACH;AACJ,eATD,MAUA;AACI,kBAAI,CAACpL,UAAL,EAAiB;AACb,oBAAI,CAACV,YAAD,IAAiB,CAACC,YAAtB,EAAoC;AAChCL,kBAAAA,UAAU,GAAG,KAAb;;AACA,kBAAA,MAAI,CAACiM,gBAAL;AACH;AACJ;AACJ;AACJ;AACJ,OAvES,EAuEP,IAvEO,CAAV;AAwEH,KA7ED,MA+EA;AACI,UAAI,CAACnL,UAAL,EAAiB;AACbhB,QAAAA,QAAQ,GAAGA,QAAQ,GAAG,CAAtB;;AACA,YAAIgF,MAAM,GAAGnJ,EAAE,CAACoJ,IAAH,CAAQ9E,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFC,QAAzF,CAAkGC,CAA1G,EAA6GnF,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAA/M,CAAb;;AACA,aAAK6I,WAAL,CAAiB,KAAKxM,cAAL,CAAoB,KAAKU,UAAzB,CAAjB,EAAuD0C,MAAvD;AACH;AACJ;AACJ,GAr+CoB;AAu+CrBmE,EAAAA,SAAS,EAAC,mBAASkF,GAAT,EAAaP,GAAb,EACV;AACI,WAAOQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBV,GAAG,GAAGO,GAAvB,CAAX,IAA2CA,GAAlD,CADJ,CAC2D;AAC1D,GA1+CoB;AA4+CrBtD,EAAAA,WAAW,EAAE,qBAAUD,IAAV,EAAgB2D,MAAhB,EAAuBC,IAAvB,EAA6B;AAAA;;AACtC7S,IAAAA,EAAE,CAAC8S,KAAH,CAAS,KAAKjN,UAAd,EACCkN,EADD,CACIF,IADJ,EACU;AAAErJ,MAAAA,QAAQ,EAAExJ,EAAE,CAACgT,EAAH,CAAM/D,IAAI,CAACxF,CAAX,EAAcwF,IAAI,CAACvF,CAAnB;AAAZ,KADV,EAC6C;AAACuJ,MAAAA,MAAM,EAAC;AAAR,KAD7C,EAECC,IAFD,CAEM,YAAM;AACZ,UAAGN,MAAH,EACI,MAAI,CAACO,YAAL,GADJ,KAGI,MAAI,CAACd,aAAL;AACH,KAPD,EAQCe,KARD;AASH,GAt/CoB;AAw/CrBD,EAAAA,YAx/CqB,0BAw/CL;AAAA;;AACZvI,IAAAA,UAAU,CAAC,YAAM;AACZ,UAAG,MAAI,CAACzD,MAAL,CAAYiH,SAAZ,GAAsB,CAAzB,EACA;AACG,QAAA,MAAI,CAACjH,MAAL,CAAYiH,SAAZ,GAAsB,MAAI,CAACjH,MAAL,CAAYiH,SAAZ,GAAsB,IAA5C;;AACA,QAAA,MAAI,CAAC+E,YAAL;AACF,OAJD,MAMA;AACG,QAAA,MAAI,CAAChM,MAAL,CAAYiH,SAAZ,GAAsB,CAAtB;AACA,QAAA,MAAI,CAAC/G,eAAL,GAAqB,IAArB;;AACA,QAAA,MAAI,CAAC8I,aAAL;AACF;AACH,KAZO,EAYL,EAZK,CAAV;AAaH,GAtgDoB;AAwgDrBkD,EAAAA,qBAxgDqB,iCAwgDC5C,MAxgDD,EAygDrB;AAAA,QADsBA,MACtB;AADsBA,MAAAA,MACtB,GAD6B,KAC7B;AAAA;;AACI,QAAIvM,WAAW,GAAGI,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DrB,MAA5E,EAAoF;AAChF,UAAIuH,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAAR,IAAwJ,CAA5J,EACIjL,YAAY,GAAG,IAAf;AAEJ,UAAI+K,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAAR,IAAwJ,CAA5J,EACIhL,YAAY,GAAG,IAAf;AACP;;AAEDC,IAAAA,kBAAkB,GAAC,KAAKc,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDb,iBAA1E;;AACA,QAAG2C,YAAY,IAAI,CAACC,YAAjB,IAAiC,CAACC,kBAArC,EACA;AACI;AACA;AACA,WAAK2O,0BAAL,CAAgC,KAAhC,EAAsC7C,MAAtC;AACH,KALD,MAMK,IAAI/L,YAAD,IAAmBD,YAAY,IAAIE,kBAAtC,EACL;AACI;AACA;AACA,WAAK2O,0BAAL,CAAgC,IAAhC,EAAqC7C,MAArC;AACH,KALI,MAOL;AACI,WAAKT,YAAL;AACH;AACJ,GAniDoB;AAqiDrBqC,EAAAA,aAriDqB,2BAqiDJ;AAAA;;AACbzH,IAAAA,UAAU,CAAC,YAAM;AACb,UAAG,MAAI,CAACzD,MAAL,CAAYiH,SAAZ,IAAuB,CAA1B,EACA;AACG,QAAA,MAAI,CAAC/G,eAAL,GAAqB,KAArB;AACA,QAAA,MAAI,CAACF,MAAL,CAAYiH,SAAZ,GAAsB,MAAI,CAACjH,MAAL,CAAYiH,SAAZ,GAAsB,IAA5C;;AACA,QAAA,MAAI,CAACiE,aAAL;AACF,OALD,MAOA;AACI,QAAA,MAAI,CAACxM,UAAL,CAAgB2D,QAAhB,GAAyBxJ,EAAE,CAACoJ,IAAH,CAAQ,CAAR,EAAU,CAAV,CAAzB;AACA,QAAA,MAAI,CAACjC,MAAL,CAAYiH,SAAZ,GAAsB,CAAtB;AAEA9J,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DiH,2BAA1D,CAAsF,CAAtF;;AAEA,YAAI,MAAI,CAAC7I,YAAL,IAAqB,CAAzB,EACA;AACI,cAAI,MAAI,CAACR,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqChE,KAArC,IAA8C,CAAC5C,WAAnD,EAAgE;AACxD,YAAA,MAAI,CAACwT,qBAAL,CAA2B,MAAI,CAAC5N,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqChE,KAAhE;AACP,WAFD,MAEO;AACH,gBAAI,CAAC,MAAI,CAACgD,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqChE,KAAtC,IAA+C,CAAC7C,YAApD,EAAkE;AAC1D,cAAA,MAAI,CAACyT,qBAAL,CAA2B,MAAI,CAAC5N,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqChE,KAAhE;AACP;AACJ;AACJ;;AAED,YAAG,MAAI,CAACwD,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI,gBAAG,MAAI,CAACR,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACI,MAAI,CAACoJ,qBAAL,GADJ,KAGI,MAAI,CAACrD,YAAL;AACP;AAEJ;AACH,KAlCQ,EAkCN,EAlCM,CAAV;AAoCH,GA1kDoB;AA4kDrBuC,EAAAA,WAAW,EAAE,qBAAU3M,IAAV,EAAe2N,KAAf,EAAsB;AAAA;;AAC/BvT,IAAAA,EAAE,CAAC8S,KAAH,CAASlN,IAAT,EAAe;AAAf,KACCmN,EADD,CACI,KADJ,EACW;AAAEvJ,MAAAA,QAAQ,EAAExJ,EAAE,CAACgT,EAAH,CAAMO,KAAK,CAAC9J,CAAZ,EAAe8J,KAAK,CAAC7J,CAArB;AAAZ,KADX,EACgD;AAACuJ,MAAAA,MAAM,EAAC;AAAR,KADhD,EAECC,IAFD,CAEM,YAAM;AACZ,UAAG/O,QAAQ,GAACC,QAAZ,EACA;AACIkD,QAAAA,OAAO,CAACG,GAAR,CAAYtD,QAAQ,GAAG,GAAX,GAAiBD,WAA7B;;AAEA,YAAI,MAAI,CAAC+B,YAAL,IAAqB,CAAzB,EAA4B;AAC5B;AACI,gBAAI,MAAI,CAACR,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqChE,KAAzC,EAAgD;AAE5C,kBAAI,CAAC5C,WAAL,EAAkB;AACd,oBAAI2P,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAAR,IAAwJ,CAA5J,EACIjL,YAAY,GAAG,IAAf;AACP,eAHD,MAIA;AACI6C,gBAAAA,OAAO,CAACG,GAAR,CAAY,kBAAZ;AACH;AACJ,aATD,MAWA;AACI,kBAAI,CAAC7H,YAAL,EAAmB;AACf,oBAAI4P,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAAR,IAAwJ,CAA5J,EACIjL,YAAY,GAAG,IAAf;AACP,eAHD,MAIA;AACI6C,gBAAAA,OAAO,CAACG,GAAR,CAAY,4BAAZ;AACH;AACJ,aApBL,CAsBG;;AACF;;AAED,YAAG,MAAI,CAACxB,YAAL,IAAmB,CAAtB,EACA;AACI,cAAG,MAAI,CAACR,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACA;AACI,gBAAI,CAAC,MAAI,CAACxE,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqC/C,cAA1C,EAA0D;AACtD,kBAAI8L,QAAQ,CAAClL,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFnC,YAAzF,CAAsG,cAAtG,EAAsHqI,SAAtH,CAAgIC,UAAjI,CAAR,IAAwJ,CAA5J,EACIjL,YAAY,GAAG,IAAf;AACP,aAHD,MAIA;AACI6C,cAAAA,OAAO,CAACG,GAAR,CAAY,wBAAwB,MAAI,CAAChC,cAAL,CAAoB,MAAI,CAACgB,UAAzB,EAAqCnE,UAAzE;AACH;AACJ;AACJ;;AAED,YAAI4B,WAAW,GAAGI,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DrB,MAA5E,EAAoF;AAChF,cAAI/D,WAAW,IAAI,EAAnB,EACIA,WAAW,GAAGA,WAAW,GAAG,EAA5B,CADJ,KAGIA,WAAW,GAAGA,WAAW,GAAG,CAA5B;AACP,SALD,MAKO;AACCA,UAAAA,WAAW,GAAGA,WAAW,GAAG,CAA5B;AACAC,UAAAA,QAAQ,GAAGC,QAAX;AACP,SAnDL,CAqDI;;;AACAkD,QAAAA,OAAO,CAACG,GAAR,CAAYtD,QAAQ,GAAC,GAAT,GAAaD,WAAzB;;AAEA,QAAA,MAAI,CAACiM,aAAL,GAxDJ,CAyDI;;AAEH,OA5DD,MA8DA;AACI,YAAIqD,OAAO,GAACxT,EAAE,CAACoJ,IAAH,CAAQ,CAAR,EAAU,CAAV,CAAZ;;AACA,QAAA,MAAI,CAAC8F,WAAL,CAAiBsE,OAAjB,EAA0B,KAA1B,EAAiC,GAAjC,EAFJ,CAE2C;;AAC1C;AAEA,KAtED,EAuECJ,KAvED;AAwEH,GArpDoB;AAupDrB;AAEAK,EAAAA,YAzpDqB,wBAypDRC,IAzpDQ,EAypDHC,IAzpDG,EA0pDrB;AACIlP,IAAAA,YAAY,GAACiP,IAAb;AACAhP,IAAAA,YAAY,GAACiP,IAAb;AACH,GA7pDoB;AA+pDrBC,EAAAA,2BA/pDqB,uCA+pDOC,MA/pDP,EA+pDcpG,MA/pDd,EA+pDqBqG,aA/pDrB,EA+pDmCC,oBA/pDnC,EA+pDgEC,UA/pDhE,EA+pD+EC,4BA/pD/E,EAgqDrB;AAAA,QADwDF,oBACxD;AADwDA,MAAAA,oBACxD,GAD+E,KAC/E;AAAA;;AAAA,QADqFC,UACrF;AADqFA,MAAAA,UACrF,GADkG,CAClG;AAAA;;AAAA,QADoGC,4BACpG;AADoGA,MAAAA,4BACpG,GADiI,KACjI;AAAA;;AACI,QAAI,KAAKxO,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAArC,CAAkD+K,MAAlD,EAA0DhM,aAA1D,CAAwEwG,MAAxE,GAAiF,CAArF,EAAwF;AACpF,UAAI,CAAC8L,oBAAL,EAA2B;AACvB,YAAI,KAAKtO,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCzD,IAArC,IAA6C6Q,MAAjD,EAAyD;AACrD,eAAKpO,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCzD,IAArC,GAA4C,KAAKyC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCzD,IAArC,GAA4C6Q,MAAxF;AACA,eAAKpO,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC3D,oBAArC,GAA4D,KAAK2C,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC3D,oBAArC,GAA4D,CAAxH;;AACA,eAAK2C,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAArC,CAAkD+K,MAAlD,EAA0DhM,aAA1D,CAAwE+J,IAAxE,CAA6EsI,aAA7E;;AACAxP,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,+CAApE,EAAqH,IAArH;AACA3B,UAAAA,UAAU,CAAC,YAAM;AACbtG,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DqM,sCAA1D;AACH,WAFS,EAEP,IAFO,CAAV;AAGH,SARD,MASK;AACD5P,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,uEAAuEsH,MAA3I;AACH;AACJ,OAbD,MAcK;AACD,YAAIG,UAAU,IAAIH,MAAlB,EAA0B;AACtBG,UAAAA,UAAU,GAAGA,UAAU,GAAGH,MAA1B;AACA,eAAKpO,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC3D,oBAArC,GAA4D,KAAK2C,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC3D,oBAArC,GAA4D,CAAxH;;AACA,eAAK2C,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAArC,CAAkD+K,MAAlD,EAA0DhM,aAA1D,CAAwE+J,IAAxE,CAA6EsI,aAA7E;;AACAxP,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,+CAApE,EAAqH,IAArH;AACA3B,UAAAA,UAAU,CAAC,YAAM;AACbtG,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DqM,sCAA1D;AACH,WAFS,EAEP,IAFO,CAAV;AAGH,SARD,MASK;AACD5P,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,uEAAuEsH,MAAvE,GAAgF,gBAAhF,GAAmGG,UAAvK;AACH;AACJ;AACJ,KA7BD,MA8BA;AACI1P,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,oEAApE;AACH;AAEJ,GAnsDoB;AAqsDrB4H,EAAAA,2CArsDqB,uDAqsDuBJ,oBArsDvB,EAqsDoDC,UArsDpD,EAqsDmEC,4BArsDnE,EAssDrB;AAAA,QAD4CF,oBAC5C;AAD4CA,MAAAA,oBAC5C,GADmE,KACnE;AAAA;;AAAA,QADyEC,UACzE;AADyEA,MAAAA,UACzE,GADsF,CACtF;AAAA;;AAAA,QADwFC,4BACxF;AADwFA,MAAAA,4BACxF,GADqH,KACrH;AAAA;;AACIzP,IAAAA,qBAAqB,GAAC,EAAtB;AAEA8C,IAAAA,OAAO,CAACG,GAAR,CAAY,KAAKhC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAAjD;;AACA,SAAK,IAAI0R,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3O,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAArC,CAAkDuF,MAAtE,EAA8EmM,CAAC,EAA/E,EAAmF;AAC/E,UAAG5E,QAAQ,CAAC,KAAK/J,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAArC,CAAkD0R,CAAlD,EAAqD1T,YAAtD,CAAR,IAA6E,CAAhF,EAAmF;AACnF;AACI,cAAI2T,IAAI,GAAGrU,EAAE,CAACsU,WAAH,CAAehQ,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0M,mBAA1D,CAA8EC,oBAA7F,CAAX;AACAH,UAAAA,IAAI,CAACtG,MAAL,GAAczJ,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0M,mBAA1D,CAA8EE,2BAA5F;AACAJ,UAAAA,IAAI,CAACjN,YAAL,CAAkB,uBAAlB,EAA2CsN,gBAA3C,CAA4DN,CAA5D;AACAC,UAAAA,IAAI,CAACjN,YAAL,CAAkB,uBAAlB,EAA2CmG,OAA3C,CAAmD,KAAK9H,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC/D,YAArC,CAAkD0R,CAAlD,EAAqDnT,YAAxG;AACAoT,UAAAA,IAAI,CAACjN,YAAL,CAAkB,uBAAlB,EAA2CuN,oBAA3C,CAAgEZ,oBAAhE;AACAM,UAAAA,IAAI,CAACjN,YAAL,CAAkB,uBAAlB,EAA2CwN,YAA3C,CAAwDZ,UAAxD;AACAK,UAAAA,IAAI,CAACjN,YAAL,CAAkB,uBAAlB,EAA2CyN,8BAA3C,CAA0EZ,4BAA1E;AACAI,UAAAA,IAAI,CAACjN,YAAL,CAAkB,uBAAlB,EAA2C0N,YAA3C;AACAtQ,UAAAA,qBAAqB,CAACgH,IAAtB,CAA2B6I,IAA3B;AACH;AACJ;;AACD/M,IAAAA,OAAO,CAACG,GAAR,CAAYjD,qBAAZ;AACA,WAAOA,qBAAqB,CAACyD,MAA7B;AACH,GA1tDoB;AA4tDrB8M,EAAAA,qBA5tDqB,mCA6tDrB;AACI,SAAK,IAAIjM,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGtE,qBAAqB,CAACyD,MAAlD,EAA0Da,KAAK,EAA/D,EAAmE;AAC/DtE,MAAAA,qBAAqB,CAACsE,KAAD,CAArB,CAA6BkM,OAA7B;AACH;;AAEDxQ,IAAAA,qBAAqB,GAAC,EAAtB;AACH,GAnuDoB;AAquDrByQ,EAAAA,yBAruDqB,qCAquDKC,KAruDL,EAquDWC,YAruDX,EAquDwBC,SAruDxB,EAsuDrB;AACI,QAAGA,SAAH,EACA;AACI,UAAIC,MAAM,GAAC,IAAIlT,SAAJ,EAAX;;AACAkT,MAAAA,MAAM,CAACpU,YAAP,GAAoBiU,KAApB;AACAG,MAAAA,MAAM,CAACjT,WAAP,GAAmB+S,YAAnB;AAEA,WAAK1P,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC1D,UAArC,CAAgDyI,IAAhD,CAAqD6J,MAArD;AACH;AACJ,GA/uDoB;AAivDrB/B,EAAAA,0BAjvDqB,sCAivDMgC,eAjvDN,EAivD4B7E,MAjvD5B,EAivDyC8E,oBAjvDzC,EAivDoEC,sBAjvDpE,EAivD6FC,QAjvD7F,EAivDwG3E,QAjvDxG,EAivDmHC,WAjvDnH,EAkvDrB;AAAA;;AAAA,QAD2BuE,eAC3B;AAD2BA,MAAAA,eAC3B,GAD2C,KAC3C;AAAA;;AAAA,QADiD7E,MACjD;AADiDA,MAAAA,MACjD,GADwD,KACxD;AAAA;;AAAA,QAD8D8E,oBAC9D;AAD8DA,MAAAA,oBAC9D,GADmF,KACnF;AAAA;;AAAA,QADyFC,sBACzF;AADyFA,MAAAA,sBACzF,GADgH,CAChH;AAAA;;AAAA,QADkHC,QAClH;AADkHA,MAAAA,QAClH,GAD2H,CAC3H;AAAA;;AAAA,QAD6H3E,QAC7H;AAD6HA,MAAAA,QAC7H,GADsI,CACtI;AAAA;;AAAA,QADwIC,WACxI;AADwIA,MAAAA,WACxI,GADoJ,CACpJ;AAAA;;AACI,QAAIwE,oBAAJ,EAA0B;AACtB,UAAIG,MAAM,GAAG,QAAb;AACApR,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D8N,iBAA1D,CAA4ED,MAA5E,EAAmF,KAAnF,EAA0F,KAA1F,EAAiG,KAAjG,EAAwGjF,MAAxG,EAA+G8E,oBAA/G,EAAoIC,sBAApI,EAA2JC,QAA3J,EAAoK3E,QAApK,EAA6KC,WAA7K;AACH,KAHD,MAIK;AACDlM,MAAAA,eAAe,GAAG,KAAKY,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDX,cAAzE;AACA8C,MAAAA,iBAAiB,GAAG,KAAKW,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDV,gBAA3E;AACA8C,MAAAA,iBAAiB,GAAG,KAAKU,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDT,gBAA3E;;AAEA,UAAI2C,eAAJ,EAAqB;AACrB;AACI,eAAK+Q,sBAAL,CAA4B,KAA5B;;AAEA,cAAI,CAACnF,MAAL,EAAa;AACTnM,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,kBAApE,EAAwF,IAAxF;AACA3B,YAAAA,UAAU,CAAC,YAAM;AACb,cAAA,MAAI,CAACoF,YAAL;AACH,aAFS,EAEP,IAFO,CAAV;AAGH,WALD,MAKO;AACH1I,YAAAA,OAAO,CAACG,GAAR,CAAY,kBAAZ;AACAmD,YAAAA,UAAU,CAAC,YAAM;AACb,cAAA,MAAI,CAACoF,YAAL;AACH,aAFS,EAEP,GAFO,CAAV;AAGH;AACJ,SAfD,MAgBK;AACD,YAAI0F,MAAM,GAAG,EAAb;AAEA,YAAIJ,eAAJ,EACII,MAAM,GAAG,cAAT,CADJ,KAGIA,MAAM,GAAG,QAAT;AAEJpR,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D8N,iBAA1D,CAA4ED,MAA5E,EAAoFJ,eAApF,EAAqGxQ,iBAArG,EAAwHC,iBAAxH,EAA2I0L,MAA3I;AACH;AACJ;AACJ,GAvxDoB;AAyxDrBoF,EAAAA,qBAzxDqB,mCA0xDrB;AACI,SAAKpQ,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCpD,UAArC,GAAgD,IAAhD;AACA,SAAKoC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnD,cAArC,IAAqD,CAArD;AACAgB,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0DQ,8BAA1D,CAAyF,IAAzF,EAA8F,KAA9F,EAAoG,KAAKpC,YAAzG,EAAsH,KAAKR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCpD,UAA3J,EAAsK,KAAKoC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCnD,cAA3M;AACH,GA9xDoB;AAgyDrBwS,EAAAA,+BAhyDqB,2CAgyDWC,OAhyDX,EAgyDmBC,IAhyDnB,EAiyDrB;AACI,QAAI3L,KAAK,GAAG;AAAEf,MAAAA,IAAI,EAAE;AAAEtG,QAAAA,IAAI,EAAE+S,OAAR;AAAiBE,QAAAA,EAAE,EAAED;AAArB;AAAR,KAAZ;AACA1R,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,EAA1E,EAA8EF,KAA9E;AACH,GApyDoB;AAsyDrB6L,EAAAA,kCAtyDqB,8CAsyDc7L,KAtyDd,EAuyDrB;AACI,QAAI/F,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8DY,aAA9D,MAAiF,KAArF,EACA;AACI,UAAIuO,OAAO,GAAG1L,KAAK,CAACf,IAAN,CAAWtG,IAAzB;AACA,UAAImT,GAAG,GAAC9L,KAAK,CAACf,IAAN,CAAW2M,EAAnB;;AAEA,UAAIG,QAAQ,GAAG,KAAK7N,UAAL,EAAf;;AAEA,UAAI,KAAK9C,cAAL,CAAoB2Q,QAApB,EAA8B7T,SAA9B,IAA2C4T,GAA/C,EAAoD;AAEhD,YAAI,KAAK1Q,cAAL,CAAoB2Q,QAApB,EAA8B1S,cAA9B,IAAgD,IAApD,EAA0D;AACtD,eAAK+B,cAAL,CAAoB2Q,QAApB,EAA8BzS,UAA9B,IAA0CoS,OAA1C;AACH;;AAED,aAAKtQ,cAAL,CAAoB2Q,QAApB,EAA8BpT,IAA9B,IAAsC+S,OAAtC;AACAzR,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,kCAAkCwJ,OAAlC,GAA4C,qBAAhH,EAAsI,IAAtI;AACAzR,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EwB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKzE,cAAL,CAAoB2Q,QAApB,CAAnH;AACH;AACJ;AACJ,GA1zDoB;AA4zDzB;AAEI;AACAC,EAAAA,uBA/zDqB,mCA+zDGC,MA/zDH,EAg0DrB;AACI3R,IAAAA,kBAAkB,GAAC2R,MAAnB;AACA,SAAK7Q,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDb,iBAAvD,GAAyE6C,kBAAzE;AACH,GAn0DoB;AAq0DrB6H,EAAAA,kBAr0DqB,8BAq0DF8J,MAr0DE,EAs0DrB;AACI1R,IAAAA,aAAa,GAAC0R,MAAd;AACA,SAAK7Q,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDZ,YAAvD,GAAoE6C,aAApE;AACH,GAz0DoB;AA20DrBgR,EAAAA,sBA30DqB,kCA20DEU,MA30DF,EA40DrB;AACIzR,IAAAA,eAAe,GAACyR,MAAhB;AACA,SAAK7Q,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDX,cAAvD,GAAsE6C,eAAtE;AACH,GA/0DoB;AAi1DrB0R,EAAAA,0BAj1DqB,sCAi1DMD,MAj1DN,EAk1DrB;AACIxR,IAAAA,iBAAiB,GAACwR,MAAlB;AACA,SAAK7Q,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDV,gBAAvD,GAAwE6C,iBAAxE;AACH,GAr1DoB;AAu1DrB0R,EAAAA,+BAv1DqB,2CAu1DWF,MAv1DX,EAw1DrB;AACIvR,IAAAA,iBAAiB,GAACuR,MAAlB;AACA,SAAK7Q,cAAL,CAAoB,KAAKgB,UAAzB,EAAqC9D,iBAArC,CAAuDT,gBAAvD,GAAwE6C,iBAAxE;AACH,GA31DoB;AA61DrBiH,EAAAA,kBA71DqB,8BA61DFsK,MA71DE,EA81DrB;AACIrR,IAAAA,cAAc,GAACqR,MAAf;AACH,GAh2DoB;AAk2DrBG,EAAAA,kBAl2DqB,gCAm2DrB;AACI,WAAOxR,cAAP;AACH,GAr2DoB;AAu2DrByR,EAAAA,qBAv2DqB,mCAw2DrB;AACI,QAAIC,WAAW,GAAC,CAAC,CAAjB;;AACA,QAAG,KAAKlR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAArC,GAAqD,CAAxD,EACA;AACIwT,MAAAA,WAAW,GAAC,KAAKlR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAAjD;AACA,WAAKsC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAArC,GAAqD,CAArD;AACH,KAJD,MAMA;AACIwT,MAAAA,WAAW,GAAC,CAAZ;AACH;;AAED,WAAOA,WAAP;AACH,GAr3DoB;AAu3DrBC,EAAAA,sBAv3DqB,kCAu3DEC,WAv3DF,EAw3DrB;AACI,QAAIC,gBAAgB,GAAC,CAAC,CAAtB;;AACA,QAAG,KAAKrR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAArC,GAAqD,CAAxD,EACA;AACI2T,MAAAA,gBAAgB,GAAC,KAAKrR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAArC,IAAsD0T,WAAvE;AACH,KAHD,MAKA;AACIC,MAAAA,gBAAgB,GAAC,CAAjB;AACH;;AAED,WAAOA,gBAAP;AACH,GAp4DoB;AAs4DrBC,EAAAA,iBAt4DqB,6BAs4DHC,OAt4DG,EAu4DrB;AACI,QAAIjB,OAAO,GAAC,CAAC,CAAb;;AACA,QAAG,KAAKtQ,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAArC,GAAqD,CAAxD,EACA;AACI6T,MAAAA,OAAO,GAAEA,OAAO,GAAC,GAAjB;AACAjB,MAAAA,OAAO,GAAC,KAAKtQ,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAArC,IAAsD6T,OAA9D;AACA,WAAKvR,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCtD,eAArC,GAAqD,CAArD;AACA,WAAKsC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCzD,IAArC,IAA2C+S,OAA3C;AACH,KAND,MAQA;AACIA,MAAAA,OAAO,GAAC,CAAR;AACH;;AAED,WAAOA,OAAP;AACH,GAt5DoB;AAw5DrBkB,EAAAA,mCAx5DqB,+CAw5De5M,KAx5Df,EAy5DrB;AACI,QAAI6M,OAAO,GAAC7M,KAAK,CAAC8M,MAAlB;AACA,QAAIC,cAAc,GAAC/M,KAAK,CAACgN,QAAzB;AACA,QAAI3G,YAAY,GAACrG,KAAK,CAACiN,SAAvB;;AACA,QAAIC,kBAAkB,GAACjT,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,EAAvB;;AAEA,QAAGqP,OAAO,IAAE5S,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAA7F,CAA+GrG,SAA3H,EACA;AACI+E,MAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ;;AAEA8P,MAAAA,kBAAkB,CAACC,uCAAnB,CAA2D,IAA3D;;AAEApS,MAAAA,gBAAgB,GAACgS,cAAjB;AACA,UAAIK,cAAc,GAACpS,YAAY,CAAC+R,cAAc,GAAC,CAAhB,CAA/B;;AACAG,MAAAA,kBAAkB,CAACG,sCAAnB,CAA0DD,cAA1D;AACH;AACJ,GAz6DoB;AA26DrBE,EAAAA,mCA36DqB,+CA26DeC,WA36Df,EA46DrB;AAAA,QADoCA,WACpC;AADoCA,MAAAA,WACpC,GADgD,KAChD;AAAA;;AACI,QAAIL,kBAAkB,GAACjT,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,EAAvB;;AACA,QAAIgQ,OAAJ;;AACA,QAAIC,SAAJ;;AACA,QAAG,KAAK7R,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI6R,QAAAA,SAAS,GAACxT,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,EAAV;AACAgJ,QAAAA,OAAO,GAACvT,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAArG;AACH,OAJD,MAKK,IAAG,KAAK3C,YAAL,IAAmB,CAAtB,EAAwB;AAC7B;AACI4R,QAAAA,OAAO,GAAC,KAAKpS,cAAL,CAAoB,CAApB,CAAR;AACAqS,QAAAA,SAAS,GAAC,KAAKrS,cAAf;AACH;;AACD8R,IAAAA,kBAAkB,CAACQ,oCAAnB,CAAwD,IAAxD;;AACAR,IAAAA,kBAAkB,CAACS,mCAAnB;;AACAT,IAAAA,kBAAkB,CAACU,mCAAnB,CAAuDJ,OAAvD,EAA+DC,SAA/D,EAAyEF,WAAzE,EAAqF,KAAK3R,YAA1F;AAEH,GA97DoB;AAg8DrBiS,EAAAA,yCAh8DqB,uDAi8DrB;AACI,QAAIL,OAAO,GAACvT,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAAzG;;AACA,QAAI2O,kBAAkB,GAACjT,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,EAAvB;;AAEA,QAAGgQ,OAAO,CAAC7U,IAAR,IAAc,IAAjB,EACA;AACI,WAAK,IAAI8F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKrD,cAAL,CAAoBwC,MAAhD,EAAwDa,KAAK,EAA7D,EAAiE;AAC7D,YAAG+O,OAAO,CAACtV,SAAR,IAAmB,KAAKkD,cAAL,CAAoBqD,KAApB,EAA2BvG,SAAjD,EACA;AACI,eAAKkD,cAAL,CAAoBqD,KAApB,EAA2B9F,IAA3B,IAAiC,IAAjC;AACAsB,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EwB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKzE,cAAL,CAAoBqD,KAApB,CAAnH;AACA;AACH;AACJ;;AAEDxE,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,mDAApE,EAAwH,IAAxH;;AACAgL,MAAAA,kBAAkB,CAACC,uCAAnB,CAA2D,KAA3D;;AACA,WAAKW,8BAAL,CAAoC,IAApC,EAAyC,KAAzC,EAA+C,CAAC,CAAhD,EAAkDN,OAAO,CAACtV,SAA1D;AACH,KAdD,MAgBA;AACI+B,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,6BAApE;AACH;AACJ,GAx9DoB;AA09DrB6L,EAAAA,8CA19DqB,4DA29DrB;AACI,QAAIb,kBAAkB,GAACjT,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,EAAvB;;AACA,QAAIgQ,OAAO,GAACvT,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAAzG;AACAtE,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,8CAApE,EAAmH,IAAnH;;AACAgL,IAAAA,kBAAkB,CAACC,uCAAnB,CAA2D,KAA3D;;AACA,SAAKW,8BAAL,CAAoC,KAApC,EAA0C,IAA1C,EAA+C/S,gBAA/C,EAAgEyS,OAAO,CAACtV,SAAxE;AACH,GAj+DoB;AAm+DrB4V,EAAAA,8BAn+DqB,0CAm+DUE,eAn+DV,EAm+D0BC,oBAn+D1B,EAm+D+ClB,cAn+D/C,EAm+D8DmB,OAn+D9D,EAo+DrB;AACI,QAAIlO,KAAK,GAAC;AAACmO,MAAAA,WAAW,EAACH,eAAb;AAA6BI,MAAAA,gBAAgB,EAACH,oBAA9C;AAAmEI,MAAAA,aAAa,EAACtB,cAAjF;AAAgGnB,MAAAA,EAAE,EAACsC;AAAnG,KAAV;AACAjU,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EF,KAA5E;AACH,GAv+DoB;AAy+DrBsO,EAAAA,gCAz+DqB,4CAy+DYtO,KAz+DZ,EA0+DrB;AAAA;;AACI,QAAIkN,kBAAkB,GAACjT,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,EAAvB;;AACA,QAAG,KAAKpC,cAAL,CAAoB,KAAKgB,UAAzB,EAAqClE,SAArC,IAAgD+B,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FW,IAA7F,CAAkGW,MAArJ,EACA;AACI,UAAIoO,eAAe,GAAChO,KAAK,CAACmO,WAA1B;AACA,UAAIF,oBAAoB,GAACjO,KAAK,CAACoO,gBAA/B;AACA,UAAIrB,cAAc,GAAC/M,KAAK,CAACqO,aAAzB;AACA,UAAI1C,IAAI,GAAC3L,KAAK,CAAC4L,EAAf;;AAEA,UAAGoC,eAAH,EACA;AACI/T,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D+Q,sCAA1D,CAAiG,KAAjG;AACA,aAAKnT,cAAL,CAAoB,KAAKgB,UAAzB,EAAqCzD,IAArC,IAA2C,IAA3C;AACAsB,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CAAoE,0GAApE,EAA+K,IAA/K;;AACAgL,QAAAA,kBAAkB,CAACQ,oCAAnB,CAAwD,KAAxD;;AACA,aAAKzH,gBAAL;AAEH,OARD,MAQM,IAAGgI,oBAAH,EACN;AACI,YAAIO,oBAAoB,GAAC,CAAzB;;AACA,YAAIC,WAAW,GAACxU,wBAAwB,CAAC6B,QAAzB,CAAkCS,yBAAlC,GAA8Dc,YAA9D,GAA6EmH,iBAA7E,EAAhB;;AAEA,aAAK,IAAI/F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGgQ,WAAW,CAAC7Q,MAAxC,EAAgDa,KAAK,EAArD,EAAyD;AACrD,cAAGkN,IAAI,IAAE8C,WAAW,CAAChQ,KAAD,CAAX,CAAmBH,gBAAnB,CAAoCC,iBAApC,CAAsDrG,SAA/D,EACA;AACIsW,YAAAA,oBAAoB,GAAC/P,KAArB;AACA;AACH;AACJ;;AAED,YAAGsO,cAAc,IAAE,CAAnB,EAAqB;AACrB;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkClQ,gBAAlC,CAAmDC,iBAAnD,CAAqErF,kBAAxE,EACA;AACIe,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,sEADD,EACwE,IADxE;AAEH,aAJD,MAKA;AACIjI,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,0EADD,EAC4E,IAD5E;AAEH;AACJ,WAXD,MAWM,IAAG6K,cAAc,IAAE,CAAnB,EAAqB;AAC3B;AACI,gBAAI2B,UAAU,GAAC,KAAf;;AACA,iBAAK,IAAIjQ,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGgQ,WAAW,CAACD,oBAAD,CAAX,CAAkClQ,gBAAlC,CAAmDC,iBAAnD,CAAqElG,YAArE,CAAkFuF,MAA9G,EAAsHa,OAAK,EAA3H,EAA+H;AAC3H,kBAAGgQ,WAAW,CAACD,oBAAD,CAAX,CAAkClQ,gBAAlC,CAAmDC,iBAAnD,CAAqElG,YAArE,CAAkFoG,OAAlF,EAAyFpH,SAA5F,EACA;AACIqX,gBAAAA,UAAU,GAAC,IAAX;AACA;AACH;AACJ;;AAED,gBAAGA,UAAH,EACA;AACIzU,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,6CADD,EAC+C,IAD/C;AAEH,aAJD,MAKA;AACIjI,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,gDADD,EACkD,IADlD;AAEH;AACJ,WApBK,MAoBA,IAAG6K,cAAc,IAAE,CAAnB,EAAqB;AAC3B;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkClQ,gBAAlC,CAAmDC,iBAAnD,CAAqEvF,UAAxE,EACA;AACIiB,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,iDAA+CuM,WAAW,CAACD,oBAAD,CAAX,CAAkClQ,gBAAlC,CAAmDC,iBAAnD,CAAqEtF,cAApH,GAAmI,WADpI,EACgJ,IADhJ;AAEH,aAJD,MAKA;AACIgB,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,iDADD,EACmD,IADnD;AAEH;AACJ,WAXK,MAWA,IAAG6K,cAAc,IAAE,CAAnB,EAAqB;AAC3B;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkClQ,gBAAlC,CAAmDC,iBAAnD,CAAqEjG,iBAArE,CAAuFZ,YAA1F,EACA;AACIuC,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,iDADD,EACmD,IADnD;AAEH,aAJD,MAKA;AACIjI,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,qDADD,EACuD,IADvD;AAEH;AACJ,WAXK,MAYD,IAAG6K,cAAc,IAAE,CAAnB,EAAqB;AAC1B;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkClQ,gBAAlC,CAAmDC,iBAAnD,CAAqEjG,iBAArE,CAAuFb,iBAA1F,EACA;AACIwC,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,wDADD,EAC0D,IAD1D;AAEH,aAJD,MAKA;AACIjI,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkC0B,qBAAlC,GAA0D0E,SAA1D,CACC,4DADD,EAC8D,IAD9D;AAEH;AACJ;;AAED3B,QAAAA,UAAU,CAAC,YAAM;AACb2M,UAAAA,kBAAkB,CAACQ,oCAAnB,CAAwD,KAAxD;;AACA,UAAA,MAAI,CAACzH,gBAAL;AACH,SAHS,EAGP,IAHO,CAAV;AAIH;AACJ;AACJ,GAjlEoB;AAmlErB0I,EAAAA,0CAnlEqB,sDAmlEsB3O,KAnlEtB,EAolErB;AAAA;;AACI,QAAGhG,UAAU,IAAE,IAAf,EACA;AACIuG,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,OAAI,CAACoO,0CAAL,CAAgD3O,KAAhD;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KALD,MAOA;AACI,UAAI4O,OAAO,GAAC5O,KAAK,CAACf,IAAN,CAAW4P,UAAvB;AACA,UAAItM,QAAQ,GAACvC,KAAK,CAACf,IAAN,CAAW6P,OAAxB;;AAEA,UAAIhQ,MAAM,GAACnJ,EAAE,CAACoJ,IAAH,CAAQ9E,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DsD,QAAQ,GAAC1H,UAAnE,EAA+EqE,iBAA/E,CAAiGC,QAAjG,CAA0GC,CAAlH,EAAoHnF,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAAtN,CAAX;;AACA,WAAK0P,wBAAL,CAA8B,KAAKrT,cAAL,CAAoB,KAAKU,UAAzB,CAA9B,EAAmE0C,MAAnE,EAA0E,GAA1E;AAEAjF,MAAAA,WAAW,GAAC0I,QAAZ;;AACA,UAAIzD,MAAM,GAACnJ,EAAE,CAACoJ,IAAH,CAAQ9E,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFC,QAAzF,CAAkGC,CAA1G,EAA4GnF,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAA9M,CAAX;;AACA,WAAK0P,wBAAL,CAA8B,KAAKrT,cAAL,CAAoB,KAAKU,UAAzB,CAA9B,EAAmE0C,MAAnE;AACH;AACJ,GAvmEoB;AAymErBiQ,EAAAA,wBAAwB,EAAE,kCAAUxT,IAAV,EAAe2N,KAAf,EAAqB8F,KAArB,EAAgC;AAAA,QAAXA,KAAW;AAAXA,MAAAA,KAAW,GAAL,GAAK;AAAA;;AACtDrZ,IAAAA,EAAE,CAAC8S,KAAH,CAASlN,IAAT,EACCmN,EADD,CACIsG,KADJ,EACW;AAAE7P,MAAAA,QAAQ,EAAExJ,EAAE,CAACgT,EAAH,CAAMO,KAAK,CAAC9J,CAAZ,EAAe8J,KAAK,CAAC7J,CAArB;AAAZ,KADX,EACgD;AAACuJ,MAAAA,MAAM,EAAC;AAAR,KADhD,EAECC,IAFD,CAEM,YAAM,CACX,CAHD,EAICE,KAJD;AAKH,GA/mEoB;AAinErBkG,EAAAA,+BAjnEqB,6CAknErB;AACIpV,IAAAA,WAAW,IAAEgB,UAAb;;AAEA,QAAG,KAAKe,YAAL,IAAmB,CAAtB,EACA;AACI,UAAIoE,KAAK,GAAC;AAACf,QAAAA,IAAI,EAAC;AAAC4P,UAAAA,UAAU,EAAChU,UAAZ;AAAuBiU,UAAAA,OAAO,EAACjV;AAA/B;AAAN,OAAV;AACAI,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCmE,0BAAlC,GAA+DC,UAA/D,CAA0E,EAA1E,EAA6EF,KAA7E;AACH;;AAED,QAAIlB,MAAM,GAACnJ,EAAE,CAACoJ,IAAH,CAAQ9E,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFC,QAAzF,CAAkGC,CAA1G,EAA4GnF,wBAAwB,CAAC6B,QAAzB,CAAkCkD,gBAAlC,GAAqDC,IAArD,CAA0DpF,WAA1D,EAAuEqF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAA9M,CAAX;;AACA,SAAK0P,wBAAL,CAA8B,KAAKrT,cAAL,CAAoB,KAAKU,UAAzB,CAA9B,EAAmE0C,MAAnE;AACA,SAAKmH,gBAAL;AACH,GA9nEoB,CAioErB;AACA;;AAloEqB,CAAT,CAAhB,EAooEA;;AACAiJ,MAAM,CAACC,OAAP,GAAkBjU,WAAlB,EACA","sourceRoot":"/","sourcesContent":["var _isTest = false;\r\nvar _diceinput1 = \"\";\r\nvar _diceinput2 = \"\";\r\nvar PreviousDiceRoll1 = -1;\r\nvar PreviousDiceRoll2 = -1;\r\n\r\nvar PreviousDiceRoll3 = -1;\r\nvar PreviousDiceRoll4 = -1;\r\n\r\nvar PreviousDiceRoll5 = -1;\r\n\r\nvar userGameOver = false;\r\nvar BotGameOver = false;\r\nvar TotalCounterReached = false;\r\n\r\n//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n    None:0,\r\n    HomeBased: 1,                   //a business that you operate out of your home\r\n    brickAndmortar: 2               //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n    name: \"BusinessInfo\",\r\nproperties: { \r\n    Name: \"BusinessData\",\r\n    BusinessType:\r\n   {\r\n       displayName:\"Mode\",\r\n       type: EnumBusinessType,\r\n       default: EnumBusinessType.None,\r\n       serializable: true,\r\n       tooltip:\"Business catogory for players\",}, \r\n    BusinessTypeDescription:\r\n   {\r\n       displayName: \"Type\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Type (by name) of business player is opening\",},\r\n    BusinessName:\r\n   {\r\n       displayName: \"Name\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Name of the business player is opening\",},\r\n     Amount:\r\n       {\r\n           displayName: \"Amount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"balance of business\",},\r\n      IsPartnership:\r\n       {\r\n           displayName: \"IsPartnership\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has done partnership with someone with current business\",},\r\n       PartnerID:\r\n           {\r\n               displayName:\"PartnerID\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n        tooltip: \"ID of the partner with whom player has formed partnership\",},\r\n       PartnerName:\r\n           {\r\n               displayName:\"PartnerName\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n               tooltip:\"name of the partner with whom player has formed partnership\",},\r\n        LocationsName:\r\n           {\r\n               displayName:\"LocationsName\",\r\n               type: [cc.Text],\r\n               default: [],\r\n               serializable: true,\r\n               tooltip:\"if player owns brick and mortar he/she can expand to new location\",},\r\n        LoanTaken:\r\n           {\r\n               displayName:\"LoanTaken\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n        LoanAmount:\r\n           {\r\n               displayName:\"LoanAmount\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n    name: \"CardDataFunctionality\",\r\nproperties: { \r\n    NextTurnDoublePay:\r\n   {\r\n       displayName:\"NextTurnDoublePay\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if its going to be double pay day on next payday for current player\"}, \r\n    SkipNextTurn:\r\n   {\r\n       displayName:\"SkipNextTurn\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if turn is going to skipped on next turn for current player\"}, \r\n    SkipNextPayday:\r\n   {\r\n       displayName:\"SkipNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday is going to skipped on next payday for current player\"}, \r\n    SkipHMNextPayday:\r\n   {\r\n       displayName:\"SkipHMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for home based buisiness is going to skipped on next payday for current player\"},\r\n    SkipBMNextPayday:\r\n   {\r\n       displayName:\"SkipBMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\"}, \r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n    name: \"StockInfo\",\r\nproperties: { \r\n    Name: \"StockData\",\r\n    BusinessName:\r\n   {\r\n       displayName:\"BusinessName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the business in which stocks will be held\",}, \r\n    ShareAmount:\r\n   {\r\n       displayName: \"ShareAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip: \"Share amount of the stock\",},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n    name:\"PlayerData\",\r\nproperties: { \r\n    PlayerName:\r\n   {\r\n       displayName:\"PlayerName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the player\",},\r\n    PlayerUID:\r\n   {\r\n       displayName:\"PlayerUID\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"ID of the player\",},\r\n    AvatarID:\r\n       {\r\n           displayName: \"AvatarID\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"id reference for player avatar selection\",},\r\n    IsBot:\r\n       {\r\n           displayName: \"IsBot\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if current player is bot\",}, \r\n    NoOfBusiness:\r\n   {\r\n       displayName:\"Business\",\r\n       type: [BusinessInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of business a player can own\",}, \r\n    CardFunctionality:\r\n   {\r\n       displayName:\"CardFunctionality\",\r\n       type: CardDataFunctionality,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"card functionality stored by player\",}, \r\n    HomeBasedAmount:\r\n   {\r\n       displayName:\"HomeBasedAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of home based business a player owns\",}, \r\n    BrickAndMortarAmount:\r\n   {\r\n       displayName:\"BrickAndMortarAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of brick and mortar business a player owns\",}, \r\n    TotalLocationsAmount:\r\n   {\r\n       displayName:\"TotalLocationsAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of locations of all brick and mortar businessess\",}, \r\n    NoOfStocks:\r\n   {\r\n       displayName:\"Stocks\",\r\n       type: [StockInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of stock a player owns\",}, \r\n    Cash:\r\n       {\r\n           displayName: \"PlayerCash\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of cash player owns\",},\r\n    GoldCount:\r\n       {\r\n           displayName: \"GoldCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of gold a player owns\",},\r\n    StockCount:\r\n       {\r\n           displayName: \"StockCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of stocks a player owns\",},\r\n    LoanTaken:\r\n       {\r\n           displayName: \"LoanTaken\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has taken loan from bank or not\",},\r\n     LoanAmount:\r\n       {\r\n           displayName: \"LoanAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of loan taken from the bank\",},\r\n    MarketingAmount:\r\n       {\r\n           displayName: \"MarketingAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"marketing amount a player owns\",},\r\n    LawyerStatus:\r\n       {\r\n           displayName: \"LawyerStatus\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has hired a lawyer or not\",},\r\n    IsBankrupt:\r\n       {\r\n           displayName: \"IsBankrupt\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has been Bankrupted or not\",},\r\n    BankruptAmount:\r\n       {\r\n           displayName: \"BankruptAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"keep track how much time player has been bankrupted\",},\r\n    SkippedLoanPayment:\r\n       {\r\n           displayName: \"SkippedLoanPayment\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has skipped loan payment\",},\r\n    PlayerRollCounter:\r\n       {\r\n           displayName: \"PlayerRollCounter\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"integer to store roll countor for player\",},\r\n    InitialCounterAssigned:\r\n       {\r\n           displayName: \"InitialCounterAssigned\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,},\r\n     isGameFinished:\r\n           {\r\n               displayName:\"isGameFinished\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n     TotalScore:\r\n           {\r\n               displayName:\"TotalScore\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalHBCash:\r\n           {\r\n               displayName:\"TotalHBCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalBMCash:\r\n           {\r\n               displayName:\"TotalBMCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalGoldCash:\r\n           {\r\n               displayName:\"TotalGoldCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalLoanBalance:\r\n           {\r\n               displayName:\"TotalLoanBalance\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n        serializable: true,\r\n    },\r\n    TotalStocksCash:\r\n           {\r\n               displayName:\"TotalStocksCash\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n    GameOver:\r\n           {\r\n               displayName:\"GameOver\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n},\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter=0;\r\nvar DiceTemp=0;\r\nvar DiceRoll=0;\r\nvar IsTweening=false;\r\nvar GamePlayReferenceManager=null;\r\nvar TurnCheckArray=[];\r\nvar BusinessLocationNodes=[];\r\n\r\nvar PassedPayDay=false;\r\nvar DoublePayDay=false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay=false;\r\nvar _skipNextTurn=false;\r\nvar _skipNextPayday=false; //skip whole pay day\r\nvar _skipHMNextPayday=false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived=false;\r\nvar TurnInProgress=false;\r\n\r\nvar Backspaces=3;\r\nvar isGameOver=false;\r\nvar OneQuestionIndex=-1;\r\nvar OneQuestions=\r\n[\r\n    \"you have skipped loan previous payday?\",\r\n    \"you have taken any loan?\",\r\n    \"you have bankrupted ever?\",\r\n    \"your next turn is going to be skipped?\",\r\n    \"your next payday is going to be double payday?\"\r\n];\r\n\r\nvar CardDisplaySetTimout=null;\r\n\r\nvar GameManager=cc.Class({\r\n    name:\"GameManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PlayerGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n        BotGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all bot's data\"},\r\n        PlayerNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for player\",},    \r\n        CameraNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for camera\",},    \r\n        AllPlayerUI: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of ui of all players\",},      \r\n        AllPlayerNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of node of all players inside gameplay\",},   \r\n        StartLocationNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of attay of locations\",},   \r\n         SelectedMode: {\r\n            default:0,                \r\n            type: cc.Integer,\r\n            serializable: true,\r\n            tooltip: \"integer reference for game mode 1 means bot and 2 means real players\",\r\n        },  \r\n    },\r\n\r\n    statics: {\r\n        PlayerData: PlayerData,\r\n        BusinessInfo:BusinessInfo,\r\n        CardDataFunctionality:CardDataFunctionality,\r\n        EnumBusinessType:EnumBusinessType,\r\n        Instance:null\r\n    },\r\n\r\n    ResetAllVariables()\r\n    {\r\n        _diceinput1 = \"\";\r\n        _diceinput2 = \"\";\r\n        PreviousDiceRoll1 = -1;\r\n        PreviousDiceRoll2 = -1;\r\n\r\n        PreviousDiceRoll3 = -1;\r\n        PreviousDiceRoll4 = -1;\r\n\r\n        PreviousDiceRoll5 = -1;\r\n\r\n        userGameOver = false;\r\n        BotGameOver = false;\r\n\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;\r\n        IsTweening=false;\r\n        GamePlayReferenceManager=null;\r\n        TurnCheckArray=[];\r\n        BusinessLocationNodes=[];\r\n\r\n        PassedPayDay=false;\r\n        DoublePayDay=false;\r\n\r\n        //cards functionality\r\n        _nextTurnDoublePay=false;\r\n        _skipNextTurn=false;\r\n        _skipNextPayday=false; //skip whole pay day\r\n        _skipHMNextPayday=false; //skip pay day for home based businessess only\r\n        _skipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\n        CardEventReceived=false;\r\n        TurnInProgress=false;\r\n\r\n        Backspaces=3;\r\n        isGameOver=false;\r\n        OneQuestionIndex=-1;\r\n        OneQuestions=\r\n        [\r\n            \"you have skipped loan previous payday?\",\r\n            \"you have taken any loan?\",\r\n            \"you have bankrupted ever?\",\r\n            \"your next turn is going to be skipped?\",\r\n            \"your next payday is going to be double payday?\"\r\n        ];\r\n                \r\n        CardDisplaySetTimout=null;\r\n        TotalCounterReached = false;\r\n\r\n    },\r\n\r\n    InputTestDice1(_val)\r\n    {\r\n        if (_isTest) {\r\n            _diceinput1 = _val;\r\n        }\r\n    },\r\n\r\n    InputTestDice2(_val)\r\n    {\r\n        if (_isTest) {\r\n            _diceinput2 = _val;\r\n        }\r\n    },\r\n    //#region All Functions of GameManager\r\n    \r\n    /**\r\n    @summary called when instance of class is created\r\n    @method onLoad\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    onLoad() {\r\n        this.ResetAllVariables();\r\n        GameManager.Instance=this;\r\n        this.TurnNumber=0;\r\n        this.TurnCompleted=false;\r\n        TurnCheckArray=[];\r\n        this.CheckReferences();\r\n        this.SelectedMode=GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n        this.Init_GameManager();   \r\n        \r\n        this.RandomCardIndex=0;\r\n        this.CardCounter=0;\r\n        this.CardDisplayed=false;\r\n        CardEventReceived=false;\r\n    },\r\n\r\n    /**\r\n    @summary called to assign reference of required classes\r\n    @method CheckReferences\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    /**\r\n    @summary initial gamemanager essetials\r\n    @method Init_GameManager\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    Init_GameManager () {\r\n        this.Camera=this.CameraNode.getComponent(cc.Camera);\r\n        this.isCameraZooming=false;\r\n        this.PlayerGameInfo=[];\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;  \r\n\r\n        console.error(this.SelectedMode);\r\n        if(this.SelectedMode==2) //game is being played by real players\r\n        {\r\n            //if joined player is spectate\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate()==true)\r\n            {\r\n                console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n                //if inital setup has been done and game is under way\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\")==true)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n                    this.PlayerGameInfo=AllData;\r\n\r\n                    console.log(this.PlayerGameInfo);\r\n\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n                    //this.SyncDataToPlayerGameInfo(0);\r\n                    this.SyncAllData_SpectateManager();\r\n                    this.TurnNumber=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n                    this.UpdateGameUI(true,this.TurnNumber);            \r\n                }\r\n                else\r\n                {\r\n                    //this.EnablePlayerNodes();\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n            }\r\n        }else if(this.SelectedMode==1) //game is being played by bot along with one player\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n        }\r\n    },\r\n\r\n    //#region public functions to get data (accessible from other classes)\r\n    GetTurnNumber () {\r\n        return this.TurnNumber;\r\n    },\r\n\r\n    GetMyIndex()\r\n    {\r\n        var myIndex = 0;\r\n        var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _allActors = this.PlayerGameInfo;\r\n\r\n        for (let index = 0; index < _allActors.length; index++) {\r\n          if (_actor.PlayerUID == _allActors[index].PlayerUID)\r\n          {\r\n              myIndex = index;\r\n              break;\r\n          }\r\n        }\r\n\r\n        return myIndex;\r\n    },\r\n    //#endregion\r\n\r\n    //#region SpectateMode Code\r\n\r\n    SyncAllData_SpectateManager()\r\n    {\r\n        var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n        console.error(AllData);\r\n        this.PlayerGameInfo = AllData;\r\n        this.SyncDataToPlayerGameInfo(0);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            if (this.PlayerGameInfo[index].PlayerRollCounter > 0 && this.PlayerGameInfo[index].InitialCounterAssigned==true && !this.PlayerGameInfo[index].isGameFinished) {\r\n                var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n                this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n            }\r\n\r\n            if (this.PlayerGameInfo[index].isGameFinished)\r\n            {\r\n                var _lastIndex = GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length - 1;\r\n                var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.y);\r\n                this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n            }\r\n        }\r\n\r\n        console.log(\"synced playernodes\");\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    CheckTurnOnSpectateLeave_SpectateManager()\r\n    {\r\n      var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region functions related to Turn Mechanism and card mechanism\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n    @method RaiseEventForCard\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventForCard(_data)\r\n  {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5,_data);\r\n  },\r\n\r\n  ClearDisplayTimeout()\r\n  {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers()\r\n  {\r\n      if(this.SelectedMode==2) //for real players\r\n      {\r\n        console.error(CardEventReceived);\r\n        if(CardEventReceived==true)\r\n        {\r\n            clearTimeout(CardDisplaySetTimout);\r\n            console.error(this.CardCounter);\r\n            CardEventReceived=false;\r\n            if(!this.CardDisplayed)\r\n            {\r\n                this.CardDisplayed=true;\r\n                GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,this.RandomCardIndex);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            CardDisplaySetTimout=setTimeout(() => { //check after every 0.5 seconds\r\n                this.DisplayCardOnOthers();\r\n            }, 500);\r\n        }\r\n      }\r\n  },\r\n\r\n  ResetCardDisplay()\r\n  {\r\n    this.CardDisplayed=false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data)\r\n  {\r\n\r\n    this.CheckReferences();\r\n    console.log(_data);\r\n\r\n    var RandomCard=_data.randomCard;\r\n    var counter=_data.counter;\r\n\r\n    this.RandomCardIndex=RandomCard;\r\n    this.CardCounter=counter;\r\n\r\n   \r\n    console.error(CardEventReceived);\r\n\r\n    if(this.SelectedMode==2)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            CardEventReceived=true;\r\n    }else if(this.SelectedMode==1)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,RandomCard,true);\r\n    }\r\n\r\n    console.error(CardEventReceived);\r\n\r\n    \r\n  },\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n    @method RaiseEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventTurnComplete()\r\n  {\r\n      if(this.SelectedMode==2)\r\n      {\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n        }\r\n      }else if(this.SelectedMode==1)\r\n      {\r\n          console.error(\"reaised for turn complete\");\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,this.PlayerGameInfo[this.TurnNumber].PlayerUID);\r\n      }\r\n  },\r\n\r\n\r\n  SyncAllData()\r\n  {\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n    }  \r\n},\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n    @method ReceiveEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  ReceiveEventTurnComplete(_uid)\r\n  {\r\n      if(this.SelectedMode==2)//real players\r\n      {\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n            console.log(TurnCheckArray.length);\r\n\r\n            if(TurnCheckArray.length==0)\r\n                    TurnCheckArray.push(_uid); \r\n\r\n            var ArrayLength=TurnCheckArray.length;\r\n            var IDFound=false;\r\n            for (let index = 0; index < ArrayLength; index++) {\r\n                    if(TurnCheckArray[index]==_uid)\r\n                    IDFound=true;\r\n            }\r\n\r\n            if(!IDFound)\r\n            {\r\n                TurnCheckArray.push(_uid);\r\n            }\r\n            console.log(TurnCheckArray);\r\n            console.log(TurnCheckArray.length);\r\n\r\n            // var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n            var TotalConnectedPlayers=this.PlayerGameInfo.length;\r\n            if(TurnCheckArray.length==TotalConnectedPlayers)\r\n            {\r\n                TurnCheckArray=[];\r\n                this.TurnCompleted=true;\r\n\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n                    //this.SyncAllData();\r\n                    this.ChangeTurn();\r\n                    console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                    console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                }\r\n            }\r\n        }\r\n        }else if(this.SelectedMode==1)\r\n        {\r\n            this.TurnCompleted=true;\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            this.ChangeTurn();\r\n        }\r\n  },\r\n\r\n   /**\r\n    @summary called when dice animation is played on all players\r\n    @method ChangeTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    ChangeTurn()\r\n    {\r\n        if(this.SelectedMode==2)\r\n        {\r\n            this.SyncAllData();\r\n        }\r\n\r\n        if(this.TurnNumber<this.PlayerGameInfo.length-1)\r\n            this.TurnNumber=this.TurnNumber+1;\r\n        else\r\n            this.TurnNumber=0;\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    UpdateVisualData()\r\n    {\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n    },\r\n\r\n    /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n    @method TurnHandler\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    TurnHandler(_turn)\r\n    {\r\n        this.UpdateVisualData();\r\n        console.error(\"Turn: \"+_turn);\r\n        var _playerMatched=false;\r\n        _skipNextTurn=false;\r\n        if(IsTweening) //check if animation of turn being played on other players \r\n        {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n            {\r\n                IsTweening = false;\r\n            }\r\n                \r\n            console.log(\"here\");\r\n            setTimeout(() => {\r\n                this.TurnHandler(_turn);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            this.TurnNumber=_turn;\r\n            if(this.SelectedMode==2)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {    \r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n                        this.ToggleTurnProgress(true);\r\n                        if (!_skipNextTurn) {\r\n                            setTimeout(() => {\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                            }, 1000);\r\n                            console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                        }\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.ToggleTurnProgress(false);\r\n                }\r\n                    \r\n            }else if(this.SelectedMode==1)\r\n            {\r\n                console.log(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                console.log(this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn);\r\n                console.log(userGameOver);\r\n                if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n                {\r\n                    _playerMatched = true;\r\n                    _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if (!userGameOver) {\r\n                        this.ToggleTurnProgress(true);\r\n                        if (!_skipNextTurn) {\r\n                            setTimeout(() => {\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                            }, 1000);\r\n                            console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                        }\r\n                    }\r\n                }\r\n                else//turn decisions for bot\r\n                {\r\n                    _playerMatched = true;\r\n                    _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if (!BotGameOver) {\r\n                        this.ToggleTurnProgress(false);\r\n                        if (!_skipNextTurn) {\r\n                            setTimeout(() => {\r\n                                this.RollDice();\r\n                            }, 1000);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n            for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n            }\r\n\r\n\r\n            if(this.SelectedMode==2)//for real players\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n                console.log(\"Turn Of: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                console.log(this.AllPlayerUI[this.TurnNumber].getComponent('PlayerProfileManager').PlayerInfo);\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n                this.SyncDataToPlayerGameInfo(0);\r\n\r\n\r\n                //force sync spectator after completion of each turn\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                    this.SyncAllData_SpectateManager();\r\n            }\r\n\r\n            //skip this turn as skip turn has been called before\r\n            if(_playerMatched && _skipNextTurn)\r\n            {\r\n                IsTweening=false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\",1200);\r\n                this.ToggleSkipNextTurn(false);\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n            if(_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n            {\r\n                setTimeout(() => {\r\n                    IsTweening=false;\r\n                    this.ChangeTurn();\r\n                    this.ToggleTurnProgress(false);   \r\n                }, 500);\r\n               \r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    SyncDataToPlayerGameInfo(_ind)\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        var _counter=_ind;\r\n        console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        //if(this.PlayerGameInfo[_counter].PlayerUID!=MyData.customProperties.PlayerSessionData.PlayerUID) //dont update my own data\r\n       // {\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(this.PlayerGameInfo[_counter].PlayerUID==MainSessionData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        this.PlayerGameInfo[_counter]=MainSessionData[index].customProperties.PlayerSessionData;\r\n                        \r\n                        if(_counter<this.PlayerGameInfo.length-1)\r\n                        {\r\n                            _counter++;\r\n                            console.log(\"adding counter: \"+_counter);\r\n                            this.SyncDataToPlayerGameInfo(_counter);\r\n                        }\r\n                        else{\r\n                            console.log(this.PlayerGameInfo);\r\n                        }\r\n                    }\r\n                }\r\n        //}\r\n       // else\r\n            // {\r\n            //     if(_counter<this.PlayerGameInfo.length-1)\r\n            //         {\r\n            //             _counter++;\r\n            //             console.log(\"adding counter: \"+_counter);\r\n            //             this.SyncDataToPlayerGameInfo(_counter);\r\n            //         }\r\n            //     else{\r\n            //             console.log(this.PlayerGameInfo);\r\n            //         }\r\n            // }\r\n    },  \r\n\r\n    /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    StartTurn()\r\n    {\r\n        console.log(this.PlayerGameInfo);\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        this.TurnNumber=0; //reseting the turn number on start of the game\r\n\r\n        //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n        \r\n      \r\n        \r\n    },\r\n\r\n    ReceiveBankruptData(_data)\r\n    {\r\n        //other player has been bankrupted\r\n        var _isBankrupted=_data.Data.bankrupted;\r\n        var _turn=_data.Data.turn;\r\n        var _playerData=_data.Data.PlayerDataMain;\r\n\r\n        console.log(_data);\r\n        // console.log(_isBankrupted);\r\n        // console.log(_turn);\r\n        // console.log(_playerData);\r\n\r\n        this.PlayerGameInfo[_turn]=_playerData;\r\n\r\n        this.AssignPlayerGameUI(true);\r\n        this.EnablePlayerNodes(true);\r\n\r\n        this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n        \r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n        }\r\n    },\r\n\r\n    StartTurnAfterBankrupt()\r\n    {\r\n        this.AssignPlayerGameUI(true);\r\n        this.EnablePlayerNodes(true);\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n        }, 1000);\r\n\r\n        this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n        \r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n        }\r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region Function for gameplay\r\n     /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    AssignPlayerGameUI(_isBankrupted=false)\r\n    {\r\n        if(this.SelectedMode==1) //for bot\r\n        {\r\n            if(!_isBankrupted)\r\n            {\r\n                var _randomIndex=this.getRandom(0,this.BotGameInfo.length)\r\n                this.PlayerGameInfo.push(this.BotGameInfo[_randomIndex]);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=2;\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerUI[index].active=true;\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[index];\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').SetName(this.PlayerGameInfo[index].PlayerName);\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        }\r\n    },\r\n\r\n    UpdateGameUI(_toggleHighlight,_index)\r\n    {\r\n        if(_toggleHighlight)\r\n        {\r\n            this.AllPlayerUI[_index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[_index];\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n                if(_index==index)\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n                }\r\n                else\r\n                {\r\n                    this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(false);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    EnablePlayerNodes(_isBankrupted=false)\r\n    {\r\n        if(!_isBankrupted)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(this.PlayerGameInfo[index].HomeBasedAmount==1 && !this.PlayerGameInfo[index].InitialCounterAssigned)   \r\n                    this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n                else if(this.PlayerGameInfo[index].BrickAndMortarAmount==1 && !this.PlayerGameInfo[index].InitialCounterAssigned)   \r\n                    this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n            }\r\n        }else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].HomeBasedAmount==1)   \r\n                this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n            else if(this.PlayerGameInfo[this.TurnNumber].BrickAndMortarAmount==1)   \r\n                this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    SetFollowCameraProperties()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        this.CameraNode.position=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n   \r\n        let ratio=targetPos.y/cc.winSize.height;\r\n        this.Camera.zoomRatio=2;\r\n    },\r\n\r\n    lateUpdate () {\r\n        if(this.isCameraZooming)    \r\n            this.SetFollowCameraProperties();\r\n    },\r\n\r\n    syncDiceRoll(_roll)\r\n    {\r\n        var _dice1=_roll.dice1;\r\n        var _dice2=_roll.dice2;\r\n        var _result=_dice1+_dice2;\r\n\r\n        IsTweening=true;\r\n        this.CardDisplayed=false;\r\n\r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n                {\r\n                    console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n                } \r\n            }\r\n        }\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==2)\r\n            {\r\n                RollCounter=0;\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                console.error(RollCounter);\r\n            }\r\n            else\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                RollCounter=13;\r\n                console.error(RollCounter);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==12)\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+21;  \r\n            else\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+1;\r\n\r\n            RollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n            console.error(RollCounter-1);\r\n        }\r\n        \r\n\r\n        DiceRoll=_result;\r\n        DiceTemp=0;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            if(this.TurnNumber==index)\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=true;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1, _dice2);\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n            }\r\n            else\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n            }  \r\n        }\r\n\r\n        // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        // this.TweenCamera(_pos,true,0.4);   \r\n    },\r\n\r\n    DiceFuntionality()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        this.TweenCamera(_pos,true,0.4);  \r\n    },\r\n\r\n    TempCheckSpace(_rolling)\r\n    {\r\n        var tempcounter=0;\r\n        var tempcounter2=0;\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                tempcounter2=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n      if(tempcounter2-1<0)\r\n      {\r\n        console.error(\"starting from oblivion\");\r\n        tempcounter=tempcounter2+_rolling-1;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n      else\r\n      {\r\n        tempcounter=tempcounter2+_rolling;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n\r\n    },\r\n\r\n    RollDice:function()\r\n    {\r\n        if (!isGameOver) {\r\n            var Dice1;\r\n            var Dice2;\r\n            if (_isTest && this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n                Dice1 = parseInt(_diceinput1);\r\n                Dice2 = parseInt(_diceinput2);\r\n            }\r\n            else if (this.PlayerGameInfo[this.TurnNumber].IsBot == true && _isTest) {\r\n                Dice1 = 10;\r\n                Dice2 = 10;\r\n            }\r\n            else {\r\n                Dice1 = this.getRandom(1, 7);\r\n                Dice2 = this.getRandom(1, 7);\r\n            \r\n                if (PreviousDiceRoll1 == Dice1)\r\n                    Dice1 = this.getRandom(1, 7);\r\n\r\n                if (PreviousDiceRoll2 == Dice2)\r\n                    Dice2 = this.getRandom(1, 7);\r\n                \r\n                PreviousDiceRoll1 = Dice1;\r\n                PreviousDiceRoll2 = Dice2;\r\n            }\r\n         \r\n\r\n            // var Dice1=20;\r\n            // var Dice2=1;\r\n\r\n            DiceRoll = Dice1 + Dice2;\r\n            var _newRoll = { dice1: Dice1, dice2: Dice2 }\r\n            //DiceRoll=23;\r\n            //this.TempCheckSpace(DiceRoll);\r\n            console.log(\"dice number: \" + DiceRoll + \", Dice1:\" + Dice1 + \", Dice2:\" + Dice2);\r\n\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3, _newRoll);\r\n        }\r\n    },\r\n\r\n    RollOneDice()\r\n    {\r\n        var Dice1 = this.getRandom(1, 7);\r\n        \r\n        if (PreviousDiceRoll5 == Dice1)\r\n            Dice1=this.getRandom(1,7);   \r\n                \r\n            PreviousDiceRoll5 = Dice1;\r\n\r\n        return Dice1;\r\n    },\r\n\r\n    RollTwoDices()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2 = this.getRandom(1, 7);\r\n        \r\n        if (PreviousDiceRoll3 == Dice1)\r\n            Dice1=this.getRandom(1,7);   \r\n\r\n        if (PreviousDiceRoll4 == Dice2)\r\n            Dice2 = this.getRandom(1, 7);   \r\n                \r\n            PreviousDiceRoll3 = Dice1;\r\n            PreviousDiceRoll4 = Dice2;\r\n\r\n        return (Dice1+Dice2);\r\n    },\r\n\r\n    callUponCard()\r\n    {\r\n        if (!isGameOver) {\r\n            if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n                var _spaceID = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n                if (_spaceID != 6 && _spaceID != 7) //6 means payday and 7 means double payday, 9 menas sell space\r\n                {\r\n                    var RandomCard = this.getRandom(0, 15);\r\n            \r\n                    //for testing only\r\n                    if (_spaceID == 2) //landed on some big business\r\n                    {\r\n                        // var valueIndex=[0,1,7,10,2,3,4,5,6,8];\r\n                        // var index=this.getRandom(0,10);\r\n                        // RandomCard=valueIndex[index];\r\n                        RandomCard = 1;\r\n                    } else if (_spaceID == 5) //landed on some losses cards\r\n                    {\r\n                        var valueIndex = [0, 1, 5, 6, 2, 7, 3, 4, 8, 9];\r\n                        var index = this.getRandom(0, 10);\r\n                        RandomCard = valueIndex[index];\r\n                        //RandomCard = 9;\r\n                    }\r\n                    else if (_spaceID == 3) //landed on some marketing cards\r\n                    {\r\n                        var valueIndex = [0, 7, 3, 8, 13, 9, 1, 2, 4, 5];\r\n                        var index = this.getRandom(0, 10);\r\n                        RandomCard = valueIndex[index];\r\n                        //RandomCard = 5;\r\n                    }\r\n\r\n                    else if (_spaceID == 1) //landed on some wild cards\r\n                    {\r\n                        var valueIndex = [0, 1, 6, 10, 2, 3, 4];\r\n                        var index = this.getRandom(0, 7);\r\n                        RandomCard = valueIndex[index];\r\n                        //RandomCard = 4;\r\n                    }\r\n            \r\n\r\n                    IsTweening = false;\r\n                    console.error(_spaceID);\r\n\r\n                    if (this.SelectedMode == 2) //for real player\r\n                    {\r\n                        if (_spaceID==12) // if player landed on finish space\r\n                        {\r\n                            RollCounter = RollCounter + 5;\r\n                            this.StartDiceRoll();\r\n                        }\r\n                        else\r\n                            {\r\n                            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                                var SendingData = { \"randomCard\": RandomCard, \"counter\": RollCounter };\r\n                                this.RaiseEventForCard(SendingData);\r\n                            }\r\n                            else {\r\n                                this.DisplayCardOnOthers();\r\n                            }\r\n                        }\r\n                    } else if (this.SelectedMode == 1) //for bot\r\n                    {\r\n                        if (_spaceID==12) // if player landed on finish space\r\n                        {\r\n                            RollCounter = RollCounter + 5;\r\n                            this.StartDiceRoll();\r\n                        }\r\n                        else\r\n                        {\r\n                            var SendingData = { \"randomCard\": RandomCard, \"counter\": RollCounter };\r\n                            this.RaiseEventForCard(SendingData);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    IsTweening = false;\r\n                    console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n                    this.RaiseEventTurnComplete();\r\n                }\r\n            }\r\n            else {\r\n                if (this.SelectedMode == 1) {\r\n                    if (!isGameOver) {\r\n                        if (this.PlayerGameInfo[this.TurnNumber].isBot && BotGameOver)\r\n                            this.completeCardTurn();\r\n                \r\n                        if (!this.PlayerGameInfo[this.TurnNumber].isBot && userGameOver)\r\n                            this.completeCardTurn();\r\n                    }\r\n                }\r\n                else if (this.SelectedMode == 2) {\r\n                    if (!isGameOver) {\r\n                        if (this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n                            this.completeCardTurn();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            this.AllPlayersGameCompleted();\r\n        }\r\n    },\r\n\r\n    completeCardTurn()\r\n    {\r\n        IsTweening=false;\r\n        console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n        this.RaiseEventTurnComplete();\r\n    },\r\n\r\n    CallGameComplete(_isBot=false)\r\n    {\r\n        if(_isBot==false)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                var _playerIndex=this.TurnNumber;\r\n                if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n                {\r\n                    this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                    var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                    var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                    var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                    var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                    var loanAmount=0;\r\n                    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                        } \r\n                    }\r\n\r\n                    var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n                    var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n                    var _diceRandom = this.RollTwoDices();\r\n                    var OnceOrShare = _diceRandom * 1000;\r\n\r\n                    var GoldCash = OnceOrShare * _gold;\r\n                    var StockCash = OnceOrShare * _stocks;\r\n\r\n\r\n                    var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                    var HMCash=0;\r\n                    if(HMAmount==1)\r\n                        HMCash=60000;\r\n                    else if(HMAmount==2)\r\n                        HMCash=25000+60000;\r\n                    else if(HMAmount==3)\r\n                        HMCash=25000+25000+60000;\r\n\r\n                    var TotalAssets=_cash+BMCash+HMCash+GoldCash+StockCash-loanAmount;\r\n\r\n                    this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n                    this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n                    \r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=this.TurnNumber;\r\n            if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n            {\r\n                this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                var HMAmount=this.PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                var BMAmount=this.PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                var BMLocations=this.PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                var loanAmount=0;\r\n                for (let index = 0; index < this.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                    } \r\n                }\r\n\r\n                    var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n                    var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n                    var _diceRandom = this.RollTwoDices();\r\n                    var OnceOrShare = _diceRandom * 1000;\r\n\r\n                    var GoldCash = OnceOrShare * _gold;\r\n                    var StockCash = OnceOrShare * _stocks;\r\n\r\n\r\n                    var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                    var HMCash=0;\r\n                    if(HMAmount==1)\r\n                        HMCash=60000;\r\n                    else if(HMAmount==2)\r\n                        HMCash=25000+60000;\r\n                    else if(HMAmount==3)\r\n                        HMCash=25000+25000+60000;\r\n\r\n                    var TotalAssets=_cash+BMCash+HMCash+GoldCash+StockCash-loanAmount;\r\n                \r\n                    this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n                    this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n                    this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n                }\r\n        }\r\n    },\r\n\r\n   RaiseEventForGameComplete(_data)\r\n   {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6,_data);\r\n   },\r\n\r\n   SyncGameOver(_UID)\r\n   {\r\n       var infoText = \"\";\r\n       var statusText = \"\";\r\n    if(this.SelectedMode==2)//for real players\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectData();\r\n        isGameOver = true;\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        console.log(_UID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver=true;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n            \r\n            var _index = -1;\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                if (MainSessionData[index].customProperties.PlayerSessionData.PlayerUID == _UID)\r\n                {\r\n                    _index = index;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n            statusText = \"Game won by \"+MainSessionData[_index].customProperties.PlayerSessionData.PlayerName; \r\n            infoText =\r\n                \"Current Cash : $\" + MainSessionData[_index].customProperties.PlayerSessionData.Cash + \"\\n\" +\r\n                \"Home Based Businesses Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalHBCash + \"\\n\" +\r\n                \"Brick And Mortar Businesses Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalBMCash + \"\\n\" +\r\n                \"Gold Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalGoldCash + \"\\n\" +\r\n                \"Stocks Value : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalStocksCash + \"\\n\" +\r\n                \"Loan Balance : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalLoanBalance + \"\\n\" +\r\n                \"Total Cash Earned : $\" + MainSessionData[_index].customProperties.PlayerSessionData.TotalScore + \"\\n\";\r\n            \r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n\r\n            // GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            //     \"Highest Cash: \" + MainSessionData[_index].customProperties.PlayerSessionData.TotalScore + \"\\n\" + '\\n' +\r\n            //     \"Game won by \"+  MainSessionData[_index].customProperties.PlayerSessionData.PlayerName+ \"\\n\" + '\\n' + \"\\n\" +\r\n            //     \"Game will be restarted automatcally after 15 seconds\",\r\n            //     15000, false\r\n            // );\r\n\r\n            // setTimeout(() => {\r\n            //     GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n            // }, 15060);\r\n        }\r\n        else {\r\n            if (MyData.customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n                \r\n                //you won\r\n                statusText = \"Congrats! you have won the game.\"; \r\n                infoText =\r\n                    \"Current Cash : $\" + MyData.customProperties.PlayerSessionData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.customProperties.PlayerSessionData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.customProperties.PlayerSessionData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.customProperties.PlayerSessionData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.customProperties.PlayerSessionData.TotalScore + \"\\n\";\r\n                \r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n                // GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                //     \"Total Cash: \" + MyData.customProperties.PlayerSessionData.TotalScore + \"\\n\" + '\\n' +\r\n                //     \"Congrats! your cash is highest, you have won the game.\" + \"\\n\" + '\\n' + \"\\n\" +\r\n                //     \"Game will be restarted automatcally after 15 seconds\",\r\n                //     15000, false\r\n                // );\r\n            }\r\n            else {\r\n\r\n                //you lose\r\n                statusText = \"Unfortunately! you have lost the game.\"; \r\n                infoText =\r\n                    \"Current Cash : $\" + MyData.customProperties.PlayerSessionData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.customProperties.PlayerSessionData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.customProperties.PlayerSessionData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.customProperties.PlayerSessionData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.customProperties.PlayerSessionData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.customProperties.PlayerSessionData.TotalScore + \"\\n\";\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n\r\n                // GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                //     \"Total Cash: \" + MyData.customProperties.PlayerSessionData.TotalScore + \"\\n\" + '\\n' +\r\n                //     \"unfortunately you have lost the game.\" + \"\\n\" + '\\n' + \"\\n\" +\r\n                //     \"Game will be restarted automatcally after 15 seconds\",\r\n                //     15000, false\r\n                // );\r\n            }\r\n\r\n            // setTimeout(() => {\r\n            //     GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n            // }, 15060);\r\n        }\r\n    }\r\n    else if(this.SelectedMode==1)//with bot\r\n    {\r\n        isGameOver = true;\r\n        var MainSessionData=this.PlayerGameInfo;\r\n        var MyData=this.PlayerGameInfo[0];\r\n        console.log(_UID);\r\n        console.log(MyData.PlayerUID);\r\n        this.PlayerGameInfo[0].GameOver=true;\r\n\r\n        if(MyData.PlayerUID==_UID)\r\n        {\r\n            //you won\r\n            statusText = \"Congrats! you have won the game.\"; \r\n            infoText =\r\n                    \"Current Cash : $\" + MyData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.TotalScore + \"\\n\" +\r\n                    \"Other Player Earned Cash : $\" + this.PlayerGameInfo[1].TotalScore + \"\\n\";\r\n                \r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n\r\n       \r\n            // GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            //     \"Total Cash: \"+MyData.TotalScore+\"\\n\"+'\\n'+\r\n            //     \"Congrats! your cash is highest, you have won the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n            //     \"Game will be restarted automatcally after 15 seconds\",\r\n            //     15000,false\r\n            // );\r\n        }\r\n        else\r\n        {\r\n            //you lose\r\n\r\n            statusText = \"Unfortunately! you have lost the game.\"; \r\n            infoText =\r\n                    \"Current Cash : $\" + MyData.Cash + \"\\n\" +\r\n                    \"Home Based Businesses Value : $\" + MyData.TotalHBCash + \"\\n\" +\r\n                    \"Brick And Mortar Businesses Value : $\" + MyData.TotalBMCash + \"\\n\" +\r\n                    \"Gold Value : $\" + MyData.TotalGoldCash + \"\\n\" +\r\n                    \"Stocks Value : $\" + MyData.TotalStocksCash + \"\\n\" +\r\n                    \"Loan Balance : $\" + MyData.TotalLoanBalance + \"\\n\" +\r\n                    \"Total Cash Earned : $\" + MyData.TotalScore + \"\\n\" +\r\n                    \"Other Player Earned Cash : $\" + this.PlayerGameInfo[1].TotalScore + \"\\n\";\r\n                \r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n\r\n\r\n            // GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            //     \"Total Cash: \"+MyData.TotalScore+\"\\n\"+'\\n'+\r\n            //     \"unfortunately you have lost the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n            //     \"Game will be restarted automatcally after 15 seconds\",\r\n            //     15000,false\r\n            // );\r\n        }\r\n\r\n        // setTimeout(() => {\r\n        //     GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n        // }, 15060);\r\n\r\n    }\r\n\r\n   },\r\n\r\n    AllPlayersGameCompleted()\r\n    {\r\n            var max = 0;\r\n            var SelectedInd = 0;\r\n            var SessionData = this.PlayerGameInfo;\r\n            for (let index = 0; index < SessionData.length; index++) {\r\n                var _value = SessionData[index].TotalScore;\r\n\r\n                if (_value > max) {\r\n                    SelectedInd = index;\r\n                    max = _value;\r\n                }\r\n            }\r\n\r\n            for (let index = 0; index < SessionData.length; index++) {\r\n                var _value = SessionData[index].TotalScore;\r\n                console.log(_value);\r\n        }\r\n        \r\n            console.log(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n            this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n    },\r\n    StartDiceRoll:function()\r\n    {\r\n        if(RollCounter>=GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length)\r\n        {\r\n            console.log(\"Gameover\"); \r\n            this.ZoomCameraOut();\r\n\r\n            setTimeout(() => {\r\n                if(this.SelectedMode==2)//for real players\r\n                {\r\n                    if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n                    {\r\n                        this.CallGameComplete();\r\n                        var playercompleted=0;\r\n    \r\n                        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                        for (let index = 0; index < MainSessionData.length; index++) {\r\n                            if(MainSessionData[index].customProperties.PlayerSessionData.isGameFinished)\r\n                            {\r\n                                playercompleted++;\r\n                            }\r\n                        }\r\n                \r\n                        if(playercompleted==this.PlayerGameInfo.length) //game completed on all system\r\n                        {\r\n                            isGameOver=true;\r\n                            if (!PassedPayDay && !DoublePayDay) {\r\n                                this.AllPlayersGameCompleted();\r\n                            }\r\n\r\n                        }else\r\n                        {\r\n                            if (!isGameOver) {\r\n                                if (!PassedPayDay && !DoublePayDay) {\r\n                                    IsTweening = false;\r\n                                    this.completeCardTurn();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else if(this.SelectedMode==1)//for bot\r\n                {\r\n                    if (this.PlayerGameInfo[this.TurnNumber].IsBot) \r\n                        BotGameOver = true;\r\n                    else\r\n                        userGameOver = true;\r\n                    \r\n                    console.log(\"usergameover: \" + userGameOver);\r\n                    console.log(\"botgameover: \" + BotGameOver);\r\n                    this.CallGameComplete(true);\r\n                    var playercompleted=0;\r\n    \r\n                    var MainSessionData=this.PlayerGameInfo;\r\n                    for (let index = 0; index < MainSessionData.length; index++) {\r\n                        if(MainSessionData[index].isGameFinished)\r\n                            playercompleted++;\r\n                    }\r\n                \r\n                    if(playercompleted==this.PlayerGameInfo.length) //gamecompleted on all systems\r\n                    {\r\n                            BotGameOver = true;\r\n                            userGameOver = true;\r\n                            isGameOver = true;\r\n                        \r\n                        if (!PassedPayDay && !DoublePayDay) {\r\n                            this.AllPlayersGameCompleted();\r\n                        }\r\n                    }else\r\n                    {\r\n                        if (!isGameOver) {\r\n                            if (!PassedPayDay && !DoublePayDay) {\r\n                                IsTweening = false;\r\n                                this.completeCardTurn();\r\n                            }\r\n                        }\r\n                    }\r\n                } \r\n            }, 1500);\r\n        }\r\n        else\r\n        {\r\n            if (!isGameOver) {\r\n                DiceTemp = DiceTemp + 1;\r\n                var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n                this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n            }\r\n        }\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    TweenCamera: function (_pos, isZoom,time) {   \r\n        cc.tween(this.CameraNode)\r\n        .to(time, { position: cc.v2(_pos.x, _pos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(isZoom)\r\n            this.ZoomCameraIn();\r\n        else\r\n            this.ZoomCameraOut();\r\n        })\r\n        .start();\r\n    },\r\n\r\n    ZoomCameraIn () {\r\n        setTimeout(() => {\r\n             if(this.Camera.zoomRatio<2)\r\n             {\r\n                this.Camera.zoomRatio=this.Camera.zoomRatio+0.03;\r\n                this.ZoomCameraIn();\r\n             }\r\n             else\r\n             {\r\n                this.Camera.zoomRatio=2;\r\n                this.isCameraZooming=true;\r\n                this.StartDiceRoll();\r\n             }\r\n          }, 10);\r\n    },\r\n\r\n    CheckPayDayConditions(_isBot=false)\r\n    {\r\n        if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n            if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6)\r\n                PassedPayDay = true;\r\n                    \r\n            if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 7)\r\n                DoublePayDay = true;\r\n        }\r\n\r\n        _nextTurnDoublePay=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n        if(PassedPayDay && !DoublePayDay && !_nextTurnDoublePay)\r\n        {\r\n            //this.ToggleDoublePayNextTurn(false);\r\n            //this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(false,_isBot);\r\n        }\r\n        else if((DoublePayDay) || (PassedPayDay && _nextTurnDoublePay))\r\n        {\r\n            //this.ToggleDoublePayNextTurn(false);\r\n            //this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(true,_isBot);\r\n        }\r\n        else\r\n        {\r\n            this.callUponCard();\r\n        }\r\n    },\r\n\r\n    ZoomCameraOut () {\r\n        setTimeout(() => {\r\n            if(this.Camera.zoomRatio>=1)\r\n            {\r\n               this.isCameraZooming=false;\r\n               this.Camera.zoomRatio=this.Camera.zoomRatio-0.03;\r\n               this.ZoomCameraOut();\r\n            }\r\n            else\r\n            {\r\n                this.CameraNode.position=cc.Vec2(0,0);\r\n                this.Camera.zoomRatio=1;\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n                \r\n                if (this.SelectedMode == 1)\r\n                {\r\n                    if (this.PlayerGameInfo[this.TurnNumber].IsBot && !BotGameOver) {\r\n                            this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                    } else {\r\n                        if (!this.PlayerGameInfo[this.TurnNumber].IsBot && !userGameOver) {\r\n                                this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                        }\r\n                    }  \r\n                }\r\n\r\n                if(this.SelectedMode==2) //real player\r\n                {\r\n                    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                        this.CheckPayDayConditions();\r\n                    else\r\n                        this.callUponCard();\r\n                }\r\n                \r\n            }\r\n         }, 10);\r\n         \r\n    },\r\n\r\n    TweenPlayer: function (Node,ToPos) {\r\n        cc.tween(Node) //0.4\r\n        .to(0.004, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(DiceTemp<DiceRoll)\r\n        {\r\n            console.log(DiceTemp + \" \" + RollCounter);\r\n            \r\n            if (this.SelectedMode == 1) //for bot\r\n            {\r\n                if (this.PlayerGameInfo[this.TurnNumber].IsBot) {\r\n                    \r\n                    if (!BotGameOver) {\r\n                        if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6)\r\n                            PassedPayDay = true;\r\n                    } else\r\n                    {\r\n                        console.log(\"bot game is over\");\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    if (!userGameOver) {\r\n                        if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6)\r\n                            PassedPayDay = true;\r\n                    } else\r\n                    {\r\n                        console.log(\"user game is over skipping\");\r\n                    }\r\n                }\r\n\r\n               // console.log(PassedPayDay);\r\n            }\r\n\r\n            if(this.SelectedMode==2)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n                        if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType) == 6)\r\n                            PassedPayDay = true;\r\n                    } else\r\n                    {\r\n                        console.log(\"Game finished for: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n                if (RollCounter == 12)\r\n                    RollCounter = RollCounter + 21;\r\n                else\r\n                    RollCounter = RollCounter + 1;\r\n            } else {\r\n                    RollCounter = RollCounter + 1;\r\n                    DiceTemp = DiceRoll;\r\n            }\r\n\r\n            //DiceTemp=DiceTemp+1; \r\n            console.log(DiceTemp+\" \"+RollCounter);\r\n            \r\n            this.StartDiceRoll();\r\n            //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n           \r\n        }\r\n        else\r\n        {\r\n            var _newpos=cc.Vec2(0,0);\r\n            this.TweenCamera(_newpos, false, 0.6); //zoomout\r\n        }\r\n\r\n        })\r\n        .start();\r\n    },\r\n\r\n    //rules implmentation during turn (turn decisions)\r\n\r\n    TogglePayDay(_st1,_St2)\r\n    {\r\n        PassedPayDay=_st1;\r\n        DoublePayDay=_St2;\r\n    },\r\n\r\n    ExpandBusiness_TurnDecision(amount,_index,_locationName,_isCardFunctionality = false,_GivenCash = 0,_StartAnyBusinessWithoutCash=false)\r\n    {\r\n        if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.length < 3) {\r\n            if (!_isCardFunctionality) {\r\n                if (this.PlayerGameInfo[this.TurnNumber].Cash >= amount) {\r\n                    this.PlayerGameInfo[this.TurnNumber].Cash = this.PlayerGameInfo[this.TurnNumber].Cash - amount;\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n                    this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n                    }, 1200);\r\n                }\r\n                else {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount);\r\n                }\r\n            }\r\n            else {\r\n                if (_GivenCash >= amount) {\r\n                    _GivenCash = _GivenCash - amount;\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n                    this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n                    }, 1200);\r\n                }\r\n                else {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount + \", Cash Given $\" + _GivenCash);\r\n                }\r\n            }\r\n        } else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You cannot own more than three brick and mortar business locations\");\r\n        }\r\n\r\n    },\r\n\r\n    GenerateExpandBusiness_Prefabs_TurnDecision(_isCardFunctionality = false,_GivenCash = 0,_StartAnyBusinessWithoutCash=false)\r\n    {\r\n        BusinessLocationNodes=[];\r\n\r\n        console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n        for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n            if(parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType)==2) //this means there is brick and mortar in list\r\n            {\r\n                var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n                node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n                node.getComponent('ExpandBusinessHandler').SetBusinessIndex(i);\r\n                node.getComponent('ExpandBusinessHandler').SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n                node.getComponent('ExpandBusinessHandler').SetCardFunctionality(_isCardFunctionality);\r\n                node.getComponent('ExpandBusinessHandler').SetGivenCash(_GivenCash);\r\n                node.getComponent('ExpandBusinessHandler').SetStartAnyBusinessWithoutCash(_StartAnyBusinessWithoutCash);\r\n                node.getComponent('ExpandBusinessHandler').ResetEditBox();\r\n                BusinessLocationNodes.push(node);\r\n            } \r\n        }\r\n        console.log(BusinessLocationNodes);\r\n        return BusinessLocationNodes.length;\r\n    },\r\n\r\n    DestroyGeneratedNodes()\r\n    {\r\n        for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n            BusinessLocationNodes[index].destroy();\r\n        }\r\n\r\n        BusinessLocationNodes=[];\r\n    },\r\n\r\n    UpdateStocks_TurnDecision(_name,_ShareAmount,_isAdding)\r\n    {\r\n        if(_isAdding)\r\n        {\r\n            var _stock=new StockInfo();\r\n            _stock.BusinessName=_name;\r\n            _stock.ShareAmount=_ShareAmount;\r\n\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n        }\r\n    },\r\n\r\n    ProcessPayDay_TurnDecision(_isDoublePayDay=false,_isBot=false,_forSelectedBusiness=false,_SelectedBusinessIndex=0,HBAmount=0,BMAmount=0,BMLocations=0)\r\n    {\r\n        if (_forSelectedBusiness) {\r\n            var _title = \"PayDay\";\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title,false, false, false, _isBot,_forSelectedBusiness,_SelectedBusinessIndex,HBAmount,BMAmount,BMLocations);\r\n        }\r\n        else {\r\n            _skipNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n            _skipHMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n            _skipBMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n            if (_skipNextPayday) //if previously skip payday was stored by any card\r\n            {\r\n                this.ToggleSkipPayDay_Whole(false);\r\n\r\n                if (!_isBot) {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\", 1600);\r\n                    setTimeout(() => {\r\n                        this.callUponCard();\r\n                    }, 1650);\r\n                } else {\r\n                    console.log(\"Skipping PayDay.\");\r\n                    setTimeout(() => {\r\n                        this.callUponCard();\r\n                    }, 800);\r\n                }\r\n            }\r\n            else {\r\n                var _title = \"\";\r\n\r\n                if (_isDoublePayDay)\r\n                    _title = \"DoublePayDay\";\r\n                else\r\n                    _title = \"PayDay\";\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, _isDoublePayDay, _skipHMNextPayday, _skipBMNextPayday, _isBot);\r\n            }\r\n        }\r\n    },\r\n\r\n    Bankrupt_TurnDecision()\r\n    {\r\n        this.PlayerGameInfo[this.TurnNumber].IsBankrupt=true;\r\n        this.PlayerGameInfo[this.TurnNumber].BankruptAmount+=1;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode,this.PlayerGameInfo[this.TurnNumber].IsBankrupt,this.PlayerGameInfo[this.TurnNumber].BankruptAmount);\r\n    },\r\n\r\n    SendProfit_Partner_TurnDecision(_amount,_uID)\r\n    {\r\n        var _data = { Data: { Cash: _amount, ID: _uID } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(13, _data);\r\n    },\r\n\r\n    ReceiveProfit_Partner_TurnDecision(_data)\r\n    {\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false)\r\n        {\r\n            var _amount = _data.Data.Cash;\r\n            var _iD=_data.Data.ID;\r\n           \r\n            var _myIndex = this.GetMyIndex();\r\n            \r\n            if (this.PlayerGameInfo[_myIndex].PlayerUID == _iD) {\r\n\r\n                if (this.PlayerGameInfo[_myIndex].isGameFinished == true) { \r\n                    this.PlayerGameInfo[_myIndex].TotalScore+=_amount;\r\n                }\r\n\r\n                this.PlayerGameInfo[_myIndex].Cash += _amount;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have received profit of $\" + _amount + \" from your partner.\",2800);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n            }\r\n        }\r\n    },\r\n\r\n//#endregion\r\n   \r\n    //#region Cards Rules\r\n    ToggleDoublePayNextTurn(_state)\r\n    {\r\n        _nextTurnDoublePay=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay=_nextTurnDoublePay;\r\n    },\r\n\r\n    ToggleSkipNextTurn(_state)\r\n    {\r\n        _skipNextTurn=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn=_skipNextTurn;\r\n    },\r\n\r\n    ToggleSkipPayDay_Whole(_state)\r\n    {\r\n        _skipNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday=_skipNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_HomeBased(_state)\r\n    {\r\n        _skipHMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday=_skipHMNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_BrickAndMortar(_state)\r\n    {\r\n        _skipBMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday=_skipBMNextPayday;\r\n    },\r\n\r\n    ToggleTurnProgress(_state)\r\n    {\r\n        TurnInProgress=_state;\r\n    },\r\n\r\n    ReturnTurnProgress()\r\n    {\r\n        return TurnInProgress;\r\n    },\r\n\r\n    LoseAllMarketingMoney()\r\n    {\r\n        var _loseAmount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _loseAmount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n        }\r\n        else\r\n        {\r\n            _loseAmount=0;\r\n        }\r\n\r\n        return _loseAmount\r\n    },\r\n\r\n    MultiplyMarketingMoney(_multiplier)\r\n    {\r\n        var _amountIncreased=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _amountIncreased=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_multiplier;\r\n        }\r\n        else\r\n        {\r\n            _amountIncreased=0;\r\n        }\r\n\r\n        return _amountIncreased\r\n    },\r\n\r\n    GetMarketingMoney(_profit)\r\n    {\r\n        var _amount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _profit=(_profit/100);\r\n            _amount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_profit;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n            this.PlayerGameInfo[this.TurnNumber].Cash+=_amount;\r\n        }\r\n        else\r\n        {\r\n            _amount=0;\r\n        }\r\n\r\n        return _amount\r\n    },\r\n\r\n    QuestionPopUp_OtherUser_OneQuestion(_data)\r\n    {\r\n        var _userID=_data.UserID;\r\n        var _questionIndex=_data.Question;\r\n        var _playerIndex=_data.UserIndex;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        \r\n        if(_userID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID)\r\n        {\r\n            console.log(\"ID matched\");\r\n\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n            OneQuestionIndex=_questionIndex;\r\n            var _questionAsked=OneQuestions[_questionIndex-1];\r\n            _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_questionAsked);\r\n        }\r\n    },\r\n\r\n    OneQuestionScreen_Space_OneQuestion(_isTurnOver=false)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData;\r\n        var _roomData;\r\n        if(this.SelectedMode==2) //for real players\r\n        {\r\n            _roomData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n            _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        }\r\n        else if(this.SelectedMode==1)//for bot\r\n        {\r\n            _myData=this.PlayerGameInfo[0];\r\n            _roomData=this.PlayerGameInfo;\r\n        }\r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n        _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n        _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData,_roomData,_isTurnOver,this.SelectedMode)\r\n    \r\n    },\r\n\r\n    OneQuestionDecision_PayAmount_OneQuestion()\r\n    {\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n        if(_myData.Cash>=5000)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(_myData.PlayerUID==this.PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    this.PlayerGameInfo[index].Cash-=5000;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);                \r\n                    break;\r\n                }\r\n            }\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\",1200);\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n            this.RaiseEventDecision_OneQuestion(true,false,-1,_myData.PlayerUID);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n        }\r\n    },\r\n\r\n    OneQuestionDecision_AnswerQuestion_OneQuestion()\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\",1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false,true,OneQuestionIndex,_myData.PlayerUID);\r\n    },\r\n\r\n    RaiseEventDecision_OneQuestion(_hasDonePayment,_hasAnsweredQuestion,_questionIndex,_UserID)\r\n    {\r\n        var _data={PaymentDone:_hasDonePayment,QuestionAnswered:_hasAnsweredQuestion,QuestionIndex:_questionIndex,ID:_UserID};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8,_data);\r\n    },\r\n\r\n    ReceiveEventDecision_OneQuestion(_data)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            var _hasDonePayment=_data.PaymentDone;\r\n            var _hasAnsweredQuestion=_data.QuestionAnswered;\r\n            var _questionIndex=_data.QuestionIndex;\r\n            var _uID=_data.ID;\r\n            \r\n            if(_hasDonePayment)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n                this.PlayerGameInfo[this.TurnNumber].Cash+=5000;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has refused to answer the question instead payed the cash amount, $5000 added to your cash amount\",2100);\r\n                _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                this.completeCardTurn();\r\n\r\n            }else if(_hasAnsweredQuestion)\r\n            {\r\n                var _selectedPlayerIndex=0;\r\n                var _actorsData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n                for (let index = 0; index < _actorsData.length; index++) {\r\n                    if(_uID==_actorsData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        _selectedPlayerIndex=index;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(_questionIndex==1)//have you skipped loan previous payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have skipped loan payement in previous payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have skipped loan payement in previous payday\",2100);\r\n                    }\r\n                }else if(_questionIndex==2)//Have you taken any loan?\r\n                {\r\n                    var _loanTaken=false;\r\n                    for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n                        if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            _loanTaken=true;\r\n                            break;\r\n                        } \r\n                    }\r\n\r\n                    if(_loanTaken)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have taken some loan\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have taken any loan\",2100);\r\n                    }\r\n                }else if(_questionIndex==3)//Are you bankrupted? if more than once, tell me the amount?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have been bankrupted \"+_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.BankruptAmount+\" time/es.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have been bankrupted\",2100);\r\n                    }\r\n                }else if(_questionIndex==4)//Is your turn going to be skipped next time?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will be skipped.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will not be skipped.\",2100);\r\n                    }\r\n                }\r\n                else if(_questionIndex==5)//Is it going to be double pay day your next payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will be double payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will not be double payday\",2100);\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                    this.completeCardTurn();\r\n                }, 2150);\r\n            }\r\n        }\r\n    },\r\n\r\n    ReceiveGoBackSpacesData_spaceFunctionality(_data)\r\n    {\r\n        if(IsTweening==true)\r\n        {\r\n            setTimeout(() => {\r\n                this.ReceiveGoBackSpacesData_spaceFunctionality(_data);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            var _spaces=_data.Data.backspaces;\r\n            var _counter=_data.Data.Counter;\r\n\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_counter+Backspaces].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos,0.1);\r\n\r\n            RollCounter=_counter;\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n\r\n    TweenPlayer_GoBackSpaces: function (Node,ToPos,speed=0.6) {\r\n        cc.tween(Node)\r\n        .to(speed, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        })\r\n        .start();\r\n    },\r\n\r\n    GoBackSpaces_spaceFunctionality()\r\n    {\r\n        RollCounter-=Backspaces;\r\n        \r\n        if(this.SelectedMode==2)\r\n        {\r\n            var _data={Data:{backspaces:Backspaces,Counter:RollCounter}};\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(10,_data);\r\n        }\r\n        \r\n        var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n        this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        this.completeCardTurn();\r\n    },\r\n\r\n\r\n    //#endregion\r\n    //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports  = GameManager;\r\n//#endregion"]}