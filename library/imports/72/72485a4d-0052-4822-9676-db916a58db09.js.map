{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","LocationsName","LoanTaken","LoanAmount","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","GameOver","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","isGameOver","OneQuestionIndex","OneQuestions","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","BotGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","SelectedMode","statics","Instance","onLoad","TurnNumber","TurnCompleted","CheckReferences","Get_MultiplayerController","GetSelectedMode","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","console","error","CheckSpectate","log","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","SyncDataToPlayerGameInfo","AssignPlayerGameUI","CloseInitialScreen_SpectateMode","index","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","PhotonActor","customProperties","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","TurnHandler","_turn","_playerMatched","ToggleTurnProgress","ToggleDecision_TurnDecision","ResetTurnVariable","RollDice","DiceRollScreen","PlayerInfo","RoomActors","ShowToast","ToggleSkipNextTurn","_ind","MainSessionData","MyData","_counter","PlayerSessionData","StartTurn","EnablePlayerNodes","_randomIndex","getRandom","SetName","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","myRoomActorsArray","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","Dice1","Dice2","_newRoll","RollOneDice","RollTwoDices","callUponCard","_spaceID","valueIndex","SendingData","completeCardTurn","CallGameComplete","_isBot","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","SyncGameOver","_UID","RestartGame","StartDiceRoll","ZoomCameraOut","playercompleted","max","SelectedInd","SessionData","_value","TweenPlayer","min","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ToggleDoublePayNextTurn","TogglePayDay","ProcessPayDay_TurnDecision","ToPos","_newpos","_st1","_St2","ExpandBusiness_TurnDecision","amount","_locationName","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","ToggleSkipPayDay_Whole","_title","AssignData_PayDay","_state","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","_amount","QuestionPopUp_OtherUser_OneQuestion","_userID","UserID","_questionIndex","Question","UserIndex","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_questionAsked","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_myData","_roomData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_PayAmount_OneQuestion","RaiseEventDecision_OneQuestion","OneQuestionDecision_AnswerQuestion_OneQuestion","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","ID","ReceiveEventDecision_OneQuestion","_uID","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","_loanTaken","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n    None:0,\r\n    HomeBased: 1,                   //a business that you operate out of your home\r\n    brickAndmortar: 2               //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n    name: \"BusinessInfo\",\r\nproperties: { \r\n    Name: \"BusinessData\",\r\n    BusinessType:\r\n   {\r\n       displayName:\"Mode\",\r\n       type: EnumBusinessType,\r\n       default: EnumBusinessType.None,\r\n       serializable: true,\r\n       tooltip:\"Business catogory for players\",}, \r\n    BusinessTypeDescription:\r\n   {\r\n       displayName: \"Type\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Type (by name) of business player is opening\",},\r\n    BusinessName:\r\n   {\r\n       displayName: \"Name\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Name of the business player is opening\",},\r\n     Amount:\r\n       {\r\n           displayName: \"Amount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"balance of business\",},\r\n      IsPartnership:\r\n       {\r\n           displayName: \"IsPartnership\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has done partnership with someone with current business\",},\r\n       PartnerID:\r\n           {\r\n               displayName:\"PartnerID\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n               tooltip:\"ID of the partner with whom player has formed partnership\",},\r\n        LocationsName:\r\n           {\r\n               displayName:\"LocationsName\",\r\n               type: [cc.Text],\r\n               default: [],\r\n               serializable: true,\r\n               tooltip:\"if player owns brick and mortar he/she can expand to new location\",},\r\n        LoanTaken:\r\n           {\r\n               displayName:\"LoanTaken\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n        LoanAmount:\r\n           {\r\n               displayName:\"LoanAmount\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n    name: \"CardDataFunctionality\",\r\nproperties: { \r\n    NextTurnDoublePay:\r\n   {\r\n       displayName:\"NextTurnDoublePay\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if its going to be double pay day on next payday for current player\"}, \r\n    SkipNextTurn:\r\n   {\r\n       displayName:\"SkipNextTurn\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if turn is going to skipped on next turn for current player\"}, \r\n    SkipNextPayday:\r\n   {\r\n       displayName:\"SkipNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday is going to skipped on next payday for current player\"}, \r\n    SkipHMNextPayday:\r\n   {\r\n       displayName:\"SkipHMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for home based buisiness is going to skipped on next payday for current player\"},\r\n    SkipBMNextPayday:\r\n   {\r\n       displayName:\"SkipBMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\"}, \r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n    name: \"StockInfo\",\r\nproperties: { \r\n    Name: \"StockData\",\r\n    BusinessName:\r\n   {\r\n       displayName:\"BusinessName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the business in which stocks will be held\",}, \r\n    ShareAmount:\r\n   {\r\n       displayName: \"ShareAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip: \"Share amount of the stock\",},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n    name:\"PlayerData\",\r\nproperties: { \r\n    PlayerName:\r\n   {\r\n       displayName:\"PlayerName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the player\",},\r\n    PlayerUID:\r\n   {\r\n       displayName:\"PlayerUID\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"ID of the player\",},\r\n    AvatarID:\r\n       {\r\n           displayName: \"AvatarID\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"id reference for player avatar selection\",},\r\n    IsBot:\r\n       {\r\n           displayName: \"IsBot\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if current player is bot\",}, \r\n    NoOfBusiness:\r\n   {\r\n       displayName:\"Business\",\r\n       type: [BusinessInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of business a player can own\",}, \r\n    CardFunctionality:\r\n   {\r\n       displayName:\"CardFunctionality\",\r\n       type: CardDataFunctionality,\r\n       default: {},\r\n       serializable: true,\r\n       tooltip:\"card functionality stored by player\",}, \r\n    HomeBasedAmount:\r\n   {\r\n       displayName:\"HomeBasedAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of home based business a player owns\",}, \r\n    BrickAndMortarAmount:\r\n   {\r\n       displayName:\"BrickAndMortarAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of brick and mortar business a player owns\",}, \r\n    TotalLocationsAmount:\r\n   {\r\n       displayName:\"TotalLocationsAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of locations of all brick and mortar businessess\",}, \r\n    NoOfStocks:\r\n   {\r\n       displayName:\"Stocks\",\r\n       type: [StockInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of stock a player owns\",}, \r\n    Cash:\r\n       {\r\n           displayName: \"PlayerCash\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of cash player owns\",},\r\n    GoldCount:\r\n       {\r\n           displayName: \"GoldCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of gold a player owns\",},\r\n    StockCount:\r\n       {\r\n           displayName: \"StockCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of stocks a player owns\",},\r\n    LoanTaken:\r\n       {\r\n           displayName: \"LoanTaken\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has taken loan from bank or not\",},\r\n     LoanAmount:\r\n       {\r\n           displayName: \"LoanAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of loan taken from the bank\",},\r\n    MarketingAmount:\r\n       {\r\n           displayName: \"MarketingAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"marketing amount a player owns\",},\r\n    LawyerStatus:\r\n       {\r\n           displayName: \"LawyerStatus\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has hired a lawyer or not\",},\r\n    IsBankrupt:\r\n       {\r\n           displayName: \"IsBankrupt\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has been Bankrupted or not\",},\r\n    SkippedLoanPayment:\r\n       {\r\n           displayName: \"SkippedLoanPayment\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has skipped loan payment\",},\r\n    PlayerRollCounter:\r\n       {\r\n           displayName: \"PlayerRollCounter\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"integer to store roll countor for player\",},\r\n    InitialCounterAssigned:\r\n       {\r\n           displayName: \"InitialCounterAssigned\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,},\r\n     isGameFinished:\r\n           {\r\n               displayName:\"isGameFinished\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n     TotalScore:\r\n           {\r\n               displayName:\"TotalScore\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n    GameOver:\r\n           {\r\n               displayName:\"GameOver\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n},\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter=0;\r\nvar DiceTemp=0;\r\nvar DiceRoll=0;\r\nvar IsTweening=false;\r\nvar GamePlayReferenceManager=null;\r\nvar TurnCheckArray=[];\r\nvar BusinessLocationNodes=[];\r\n\r\nvar PassedPayDay=false;\r\nvar DoublePayDay=false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay=false;\r\nvar _skipNextTurn=false;\r\nvar _skipNextPayday=false; //skip whole pay day\r\nvar _skipHMNextPayday=false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived=false;\r\nvar TurnInProgress=false;\r\n\r\nvar isGameOver=false;\r\nvar OneQuestionIndex=-1;\r\nvar OneQuestions=\r\n[\r\n    \"you have skipped loan previous payday?\",\r\n    \"you have taken any loan?\",\r\n    \"you have bankrupted ever?\",\r\n    \"your next turn is going to be skipped?\",\r\n    \"your next payday is going to be double payday?\"\r\n];\r\n\r\nvar CardDisplaySetTimout=null;\r\n\r\nvar GameManager=cc.Class({\r\n    name:\"GameManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PlayerGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n        BotGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all bot's data\"},\r\n        PlayerNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for player\",},    \r\n        CameraNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for camera\",},    \r\n        AllPlayerUI: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of ui of all players\",},      \r\n        AllPlayerNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of node of all players inside gameplay\",},   \r\n        StartLocationNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of attay of locations\",},   \r\n         SelectedMode: {\r\n            default:0,                \r\n            type: cc.Integer,\r\n            serializable: true,\r\n            tooltip:\"integer reference for game mode 1 means bot and 2 means real players\",},   \r\n    },\r\n    statics: {\r\n        PlayerData: PlayerData,\r\n        BusinessInfo:BusinessInfo,\r\n        EnumBusinessType:EnumBusinessType,\r\n        Instance:null\r\n    },\r\n\r\n    //#region All Functions of GameManager\r\n    \r\n    /**\r\n    @summary called when instance of class is created\r\n    @method onLoad\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    onLoad () {\r\n        GameManager.Instance=this;\r\n        this.TurnNumber=0;\r\n        this.TurnCompleted=false;\r\n        TurnCheckArray=[];\r\n        this.CheckReferences();\r\n        this.SelectedMode=GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n        this.Init_GameManager();   \r\n        \r\n        this.RandomCardIndex=0;\r\n        this.CardCounter=0;\r\n        this.CardDisplayed=false;\r\n        CardEventReceived=false;\r\n    },\r\n\r\n    /**\r\n    @summary called to assign reference of required classes\r\n    @method CheckReferences\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    /**\r\n    @summary initial gamemanager essetials\r\n    @method Init_GameManager\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    Init_GameManager () {\r\n        this.Camera=this.CameraNode.getComponent(cc.Camera);\r\n        this.isCameraZooming=false;\r\n        this.PlayerGameInfo=[];\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;  \r\n\r\n        console.error(this.SelectedMode);\r\n        if(this.SelectedMode==2) //game is being played by real players\r\n        {\r\n            //if joined player is spectate\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate()==true)\r\n            {\r\n                console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n                //if inital setup has been done and game is under way\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\")==true)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n                    this.PlayerGameInfo=AllData;\r\n\r\n                    console.log(this.PlayerGameInfo);\r\n\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n                    //this.SyncDataToPlayerGameInfo(0);\r\n                    this.SyncAllData_SpectateManager();\r\n                    this.TurnNumber=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n                    this.UpdateGameUI(true,this.TurnNumber);            \r\n                }\r\n                else\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n            }\r\n        }else if(this.SelectedMode==1) //game is being played by bot along with one player\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n        }\r\n    },\r\n\r\n    //#region public functions to get data (accessible from other classes)\r\n    GetTurnNumber () {\r\n        return this.TurnNumber;\r\n    },\r\n    //#endregion\r\n\r\n    //#region SpectateMode Code\r\n\r\n    SyncAllData_SpectateManager()\r\n    {\r\n        var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n        this.PlayerGameInfo=AllData;\r\n        this.SyncDataToPlayerGameInfo(0);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n        this.AssignPlayerGameUI();\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n            this.AllPlayerNodes[index].setPosition(_toPos.x,_toPos.y);\r\n        }\r\n\r\n        console.log(\"synced playernodes\");\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    CheckTurnOnSpectateLeave_SpectateManager()\r\n    {\r\n      var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region functions related to Turn Mechanism and card mechanism\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n    @method RaiseEventForCard\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventForCard(_data)\r\n  {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5,_data);\r\n  },\r\n\r\n  ClearDisplayTimeout()\r\n  {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers()\r\n  {\r\n      if(this.SelectedMode==2) //for real players\r\n      {\r\n        console.error(CardEventReceived);\r\n        if(CardEventReceived==true)\r\n        {\r\n            clearTimeout(CardDisplaySetTimout);\r\n            console.error(this.CardCounter);\r\n            CardEventReceived=false;\r\n            if(!this.CardDisplayed)\r\n            {\r\n                this.CardDisplayed=true;\r\n                GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,this.RandomCardIndex);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            CardDisplaySetTimout=setTimeout(() => { //check after every 0.5 seconds\r\n                this.DisplayCardOnOthers();\r\n            }, 500);\r\n        }\r\n      }\r\n  },\r\n\r\n  ResetCardDisplay()\r\n  {\r\n    this.CardDisplayed=false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data)\r\n  {\r\n\r\n    this.CheckReferences();\r\n    console.log(_data);\r\n\r\n    var RandomCard=_data.randomCard;\r\n    var counter=_data.counter;\r\n\r\n    this.RandomCardIndex=RandomCard;\r\n    this.CardCounter=counter;\r\n\r\n   \r\n    console.error(CardEventReceived);\r\n\r\n    if(this.SelectedMode==2)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            CardEventReceived=true;\r\n    }else if(this.SelectedMode==1)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,RandomCard,true);\r\n    }\r\n\r\n    console.error(CardEventReceived);\r\n\r\n    \r\n  },\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n    @method RaiseEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventTurnComplete()\r\n  {\r\n      if(this.SelectedMode==2)\r\n      {\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n        }\r\n      }else if(this.SelectedMode==1)\r\n      {\r\n          console.error(\"reaised for turn complete\");\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,this.PlayerGameInfo[this.TurnNumber].PlayerUID);\r\n      }\r\n  },\r\n\r\n\r\n  SyncAllData()\r\n  {\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n    }  \r\n},\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n    @method ReceiveEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  ReceiveEventTurnComplete(_uid)\r\n  {\r\n      if(this.SelectedMode==2)//real players\r\n      {\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n            console.log(TurnCheckArray.length);\r\n\r\n            if(TurnCheckArray.length==0)\r\n                    TurnCheckArray.push(_uid); \r\n\r\n            var ArrayLength=TurnCheckArray.length;\r\n            var IDFound=false;\r\n            for (let index = 0; index < ArrayLength; index++) {\r\n                    if(TurnCheckArray[index]==_uid)\r\n                    IDFound=true;\r\n            }\r\n\r\n            if(!IDFound)\r\n            {\r\n                TurnCheckArray.push(_uid);\r\n            }\r\n            console.log(TurnCheckArray);\r\n            console.log(TurnCheckArray.length);\r\n\r\n            // var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n            var TotalConnectedPlayers=this.PlayerGameInfo.length;\r\n            if(TurnCheckArray.length==TotalConnectedPlayers)\r\n            {\r\n                TurnCheckArray=[];\r\n                this.TurnCompleted=true;\r\n\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n                    //this.SyncAllData();\r\n                    this.ChangeTurn();\r\n                    console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                    console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                }\r\n            }\r\n        }\r\n        }else if(this.SelectedMode==1)\r\n        {\r\n\r\n            this.TurnCompleted=true;\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            this.ChangeTurn();\r\n        }\r\n  },\r\n\r\n   /**\r\n    @summary called when dice animation is played on all players\r\n    @method ChangeTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    ChangeTurn()\r\n    {\r\n        if(this.SelectedMode==2)\r\n        {\r\n            this.SyncAllData();\r\n        }\r\n\r\n        if(this.TurnNumber<this.PlayerGameInfo.length-1)\r\n            this.TurnNumber=this.TurnNumber+1;\r\n        else\r\n            this.TurnNumber=0;\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n    @method TurnHandler\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    TurnHandler(_turn)\r\n    {\r\n        console.error(\"Turn: \"+_turn);\r\n        var _playerMatched=false;\r\n        _skipNextTurn=false;\r\n        if(IsTweening) //check if animation of turn being played on other players \r\n        {\r\n            setTimeout(() => {\r\n                this.TurnHandler(_turn);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            this.TurnNumber=_turn;\r\n            if(this.SelectedMode==2)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {    \r\n                    this.ToggleTurnProgress(true);\r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if(!_skipNextTurn)\r\n                    {\r\n                        setTimeout(() => {\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                        }, 1000);\r\n                        console.log(\"its your turn \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.ToggleTurnProgress(false);\r\n                }\r\n                    \r\n            }else if(this.SelectedMode==1)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n                {\r\n                    this.ToggleTurnProgress(true);\r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if(!_skipNextTurn)\r\n                    {\r\n                        setTimeout(() => {\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                        }, 1000);\r\n                        console.log(\"its your turn \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    }\r\n                }\r\n                else//turn decisions for bot\r\n                {\r\n                    this.ToggleTurnProgress(false);\r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if(!_skipNextTurn)\r\n                    {\r\n                        setTimeout(() => {\r\n                            this.RollDice();\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n            for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n            }\r\n\r\n\r\n            if(this.SelectedMode==2)//for real players\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n                console.log(\"Turn Of: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                console.log(this.AllPlayerUI[this.TurnNumber].getComponent('PlayerProfileManager').PlayerInfo);\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n                this.SyncDataToPlayerGameInfo(0);\r\n\r\n\r\n                //force sync spectator after completion of each turn\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                    this.SyncAllData_SpectateManager();\r\n            }\r\n\r\n            //skip this turn as skip turn has been called before\r\n            if(_playerMatched && _skipNextTurn)\r\n            {\r\n                IsTweening=false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\",1200);\r\n                this.ToggleSkipNextTurn(false);\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n            if(_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n            {\r\n                IsTweening=false;\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    SyncDataToPlayerGameInfo(_ind)\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        var _counter=_ind;\r\n        console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        if(this.PlayerGameInfo[_counter].PlayerUID!=MyData.customProperties.PlayerSessionData.PlayerUID) //dont update my own data\r\n        {\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(this.PlayerGameInfo[_counter].PlayerUID==MainSessionData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        this.PlayerGameInfo[_counter]=MainSessionData[index].customProperties.PlayerSessionData;\r\n                        \r\n                        if(_counter<this.PlayerGameInfo.length-1)\r\n                        {\r\n                            _counter++;\r\n                            console.log(\"adding counter: \"+_counter);\r\n                            this.SyncDataToPlayerGameInfo(_counter);\r\n                        }\r\n                        else{\r\n                            console.log(this.PlayerGameInfo);\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        else\r\n            {\r\n                if(_counter<this.PlayerGameInfo.length-1)\r\n                    {\r\n                        _counter++;\r\n                        console.log(\"adding counter: \"+_counter);\r\n                        this.SyncDataToPlayerGameInfo(_counter);\r\n                    }\r\n                else{\r\n                        console.log(this.PlayerGameInfo);\r\n                    }\r\n            }\r\n    },  \r\n\r\n    /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    StartTurn()\r\n    {\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        this.TurnNumber=0; //reseting the turn number on start of the game\r\n\r\n        //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n        \r\n      \r\n        \r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region Function for gameplay\r\n     /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    AssignPlayerGameUI()\r\n    {\r\n        if(this.SelectedMode==1) //for bot\r\n        {\r\n                var _randomIndex=this.getRandom(0,this.BotGameInfo.length)\r\n                this.PlayerGameInfo.push(this.BotGameInfo[_randomIndex]);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=2;\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerUI[index].active=true;\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[index];\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').SetName(this.PlayerGameInfo[index].PlayerName);\r\n        }\r\n    },\r\n\r\n    UpdateGameUI(_toggleHighlight,_index)\r\n    {\r\n        if(_toggleHighlight)\r\n        {\r\n            this.AllPlayerUI[_index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[_index];\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n                if(_index==index)\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(true);\r\n                }\r\n                else\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(false);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    EnablePlayerNodes()\r\n    {\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            if(this.PlayerGameInfo[index].HomeBasedAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n            else if(this.PlayerGameInfo[index].BrickAndMortarAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    SetFollowCameraProperties()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        this.CameraNode.position=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n   \r\n        let ratio=targetPos.y/cc.winSize.height;\r\n        this.Camera.zoomRatio=2;\r\n    },\r\n\r\n    lateUpdate () {\r\n        if(this.isCameraZooming)    \r\n            this.SetFollowCameraProperties();\r\n    },\r\n\r\n    syncDiceRoll(_roll)\r\n    {\r\n        var _dice1=_roll.dice1;\r\n        var _dice2=_roll.dice2;\r\n        var _result=_dice1+_dice2;\r\n\r\n        IsTweening=true;\r\n        this.CardDisplayed=false;\r\n\r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n                {\r\n                    console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n                } \r\n            }\r\n        }\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==1)\r\n            {\r\n                RollCounter=0;\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                console.error(RollCounter);\r\n            }\r\n            else\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                RollCounter=13;\r\n                console.error(RollCounter);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==12)\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+21;  \r\n            else\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+1;\r\n\r\n            RollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n            console.error(RollCounter-1);\r\n        }\r\n        \r\n\r\n        DiceRoll=_result;\r\n        DiceTemp=0;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            if(this.TurnNumber==index)\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=true;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1,_dice2);\r\n            }\r\n            else\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n            }  \r\n        }\r\n\r\n        // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        // this.TweenCamera(_pos,true,0.4);   \r\n    },\r\n\r\n    DiceFuntionality()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        this.TweenCamera(_pos,true,0.4);  \r\n    },\r\n\r\n    TempCheckSpace(_rolling)\r\n    {\r\n        var tempcounter=0;\r\n        var tempcounter2=0;\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                tempcounter2=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n      if(tempcounter2-1<0)\r\n      {\r\n        console.error(\"starting from oblivion\");\r\n        tempcounter=tempcounter2+_rolling-1;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n      else\r\n      {\r\n        tempcounter=tempcounter2+_rolling;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n\r\n    },\r\n\r\n    RollDice:function()\r\n    {\r\n         var Dice1=this.getRandom(1,7);\r\n         var Dice2=this.getRandom(1,7);\r\n\r\n        // var Dice1=1;\r\n        // var Dice2=1;\r\n\r\n        DiceRoll=Dice1+Dice2;\r\n        var _newRoll={dice1:Dice1,dice2:Dice2}\r\n        //DiceRoll=23;\r\n        //this.TempCheckSpace(DiceRoll);\r\n        console.log(\"dice number: \"+DiceRoll+\", Dice1:\"+Dice1+\", Dice2:\"+Dice2);\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3,_newRoll); \r\n    },\r\n\r\n    RollOneDice()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        return Dice1;\r\n    },\r\n\r\n    RollTwoDices()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2=this.getRandom(1,7);\r\n        return (Dice1+Dice2);\r\n    },\r\n\r\n    callUponCard()\r\n    {\r\n        var _spaceID=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        if(_spaceID!=6 && _spaceID!=7) //6 means payday and 7 means double payday, 9 menas sell space\r\n        {\r\n            var RandomCard=this.getRandom(0,15);\r\n            \r\n            //for testing only\r\n            if(_spaceID==2) //landed on some big buseinss\r\n            {\r\n                var valueIndex=[0,1,7,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }else if(_spaceID==5) //landed on some losses cards\r\n            {\r\n                // var valueIndex=[0,5,6,2];\r\n                // var index=this.getRandom(0,4);\r\n                // RandomCard=valueIndex[index];\r\n                RandomCard=0;\r\n            }\r\n            else if(_spaceID==3) //landed on some marketing cards\r\n            {\r\n                var valueIndex=[0,7,3,8,13,9];\r\n                var index=this.getRandom(0,6);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            else if(_spaceID==1) //landed on some marketing cards\r\n            {\r\n                var valueIndex=[0,1,6,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            IsTweening=false;\r\n\r\n            if(this.SelectedMode==2) //for real player\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {    \r\n                    var SendingData={\"randomCard\":RandomCard,\"counter\":RollCounter};    \r\n                    this.RaiseEventForCard(SendingData);\r\n                }\r\n                else\r\n                {\r\n                    this.DisplayCardOnOthers();\r\n                }\r\n            }else if(this.SelectedMode==1) //for bot\r\n            {\r\n                var SendingData={\"randomCard\":RandomCard,\"counter\":RollCounter};    \r\n                this.RaiseEventForCard(SendingData);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            IsTweening=false;\r\n            console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n            this.RaiseEventTurnComplete();\r\n        }\r\n    },\r\n\r\n    completeCardTurn()\r\n    {\r\n        IsTweening=false;\r\n        console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n        this.RaiseEventTurnComplete();\r\n    },\r\n\r\n    CallGameComplete(_isBot=false)\r\n    {\r\n        if(_isBot==false)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                var _playerIndex=this.TurnNumber;\r\n                if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n                {\r\n                    this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                    var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                    var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                    var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                    var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                    var loanAmount=0;\r\n                    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                        } \r\n                    }\r\n\r\n                    var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                    var HMCash=0;\r\n                    if(HMAmount==1)\r\n                        HMCash=60000;\r\n                    else if(HMAmount==2)\r\n                        HMCash=25000+60000;\r\n                    else if(HMAmount==3)\r\n                        HMCash=25000+25000+60000;\r\n\r\n                    var TotalAssets=_cash+BMCash+HMCash-loanAmount;\r\n\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalScore=TotalAssets;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n                    \r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=this.TurnNumber;\r\n            if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n            {\r\n                this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                var HMAmount=this.PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                var BMAmount=this.PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                var BMLocations=this.PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                var loanAmount=0;\r\n                for (let index = 0; index < this.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                    } \r\n                }\r\n\r\n                    var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                    var HMCash=0;\r\n                    if(HMAmount==1)\r\n                        HMCash=60000;\r\n                    else if(HMAmount==2)\r\n                        HMCash=25000+60000;\r\n                    else if(HMAmount==3)\r\n                        HMCash=25000+25000+60000;\r\n\r\n                    var TotalAssets=_cash+BMCash+HMCash-loanAmount;\r\n\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalScore=TotalAssets;                    \r\n                }\r\n        }\r\n    },\r\n\r\n   RaiseEventForGameComplete(_data)\r\n   {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6,_data);\r\n   },\r\n\r\n   SyncGameOver(_UID)\r\n   {\r\n    \r\n    if(this.SelectedMode==2)//for real players\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        console.log(_UID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver=true;\r\n\r\n        if(MyData.customProperties.PlayerSessionData.PlayerUID==_UID)\r\n        {\r\n            //you won\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n                \"Congrats! your cash is highest, you have won the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n        else\r\n        {\r\n            //you lose\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n                \"unfortunately you have lost the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n        }, 15060);\r\n    }\r\n    else if(this.SelectedMode==1)//with bot\r\n    {\r\n        var MainSessionData=this.PlayerGameInfo;\r\n        var MyData=this.PlayerGameInfo[0];\r\n        console.log(_UID);\r\n        console.log(MyData.PlayerUID);\r\n        this.PlayerGameInfo[0].GameOver=true;\r\n\r\n        if(MyData.PlayerUID==_UID)\r\n        {\r\n            //you won\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.TotalScore+\"\\n\"+'\\n'+\r\n                \"Congrats! your cash is highest, you have won the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n        else\r\n        {\r\n            //you lose\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.TotalScore+\"\\n\"+'\\n'+\r\n                \"unfortunately you have lost the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n        }, 15060);\r\n\r\n    }\r\n\r\n   },\r\n\r\n    StartDiceRoll:function()\r\n    {\r\n        if(RollCounter>=GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length)\r\n        {\r\n            console.log(\"Gameover\");\r\n            isGameOver=true;\r\n            this.ZoomCameraOut();\r\n\r\n            if(this.SelectedMode==2)//for real players\r\n            {\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n                {\r\n\r\n                    this.CallGameComplete();\r\n                    var playercompleted=0;\r\n\r\n                    var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                    for (let index = 0; index < MainSessionData.length; index++) {\r\n                        if(MainSessionData[index].customProperties.PlayerSessionData.isGameFinished)\r\n                        {\r\n                            playercompleted++;\r\n                        }\r\n                    }\r\n            \r\n                \r\n                    if(playercompleted==this.PlayerGameInfo.length)\r\n                    {\r\n                        var max=0;\r\n                        var SelectedInd=0;\r\n                        var SessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                        for (let index = 0; index < SessionData.length; index++) {\r\n                            var _value = SessionData[index].customProperties.PlayerSessionData.TotalScore;\r\n\r\n                            if(_value > max)\r\n                            {\r\n                                SelectedInd=index;\r\n                                max=_value;\r\n                            }\r\n                        }\r\n\r\n                        console.log(\"game won by player id: \"+SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                    \r\n\r\n                        this.RaiseEventForGameComplete(SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                        //game completed on all systems\r\n                    }else\r\n                    {\r\n                        IsTweening=false;\r\n                        this.ChangeTurn();\r\n                    }\r\n                }\r\n            }\r\n            else if(this.SelectedMode==1)//for bot\r\n            {\r\n                this.CallGameComplete(true);\r\n                var playercompleted=0;\r\n\r\n                var MainSessionData=this.PlayerGameInfo;\r\n                for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(MainSessionData[index].isGameFinished)\r\n                    {\r\n                        playercompleted++;\r\n                    }\r\n                }\r\n            \r\n                \r\n                if(playercompleted==this.PlayerGameInfo.length)\r\n                {\r\n                        var max=0;\r\n                        var SelectedInd=0;\r\n                        var SessionData=this.PlayerGameInfo;\r\n                        for (let index = 0; index < SessionData.length; index++) {\r\n                            var _value = SessionData[index].TotalScore;\r\n\r\n                            if(_value > max)\r\n                            {\r\n                                SelectedInd=index;\r\n                                max=_value;\r\n                            }\r\n                        }\r\n\r\n                        console.log(\"game won by player id: \"+SessionData[SelectedInd].PlayerUID);\r\n                    \r\n\r\n                        this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n                        //game completed on all systems\r\n                }else\r\n                {\r\n                    IsTweening=false;\r\n                    this.ChangeTurn();\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            DiceTemp=DiceTemp+1; \r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    TweenCamera: function (_pos, isZoom,time) {   \r\n        cc.tween(this.CameraNode)\r\n        .to(time, { position: cc.v2(_pos.x, _pos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(isZoom)\r\n            this.ZoomCameraIn();\r\n        else\r\n            this.ZoomCameraOut();\r\n        })\r\n        .start();\r\n    },\r\n\r\n    ZoomCameraIn () {\r\n        setTimeout(() => {\r\n             if(this.Camera.zoomRatio<2)\r\n             {\r\n                this.Camera.zoomRatio=this.Camera.zoomRatio+0.03;\r\n                this.ZoomCameraIn();\r\n             }\r\n             else\r\n             {\r\n                this.Camera.zoomRatio=2;\r\n                this.isCameraZooming=true;\r\n                this.StartDiceRoll();\r\n             }\r\n          }, 10);\r\n    },\r\n\r\n    CheckPayDayConditions(_isBot=false)\r\n    {\r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n            PassedPayDay=true;\r\n                    \r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==7)\r\n            DoublePayDay=true;\r\n\r\n        _nextTurnDoublePay=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n        if(PassedPayDay && !DoublePayDay && !_nextTurnDoublePay)\r\n        {\r\n            this.ToggleDoublePayNextTurn(false);\r\n            this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(false,_isBot);\r\n        }\r\n        else if((DoublePayDay) || (PassedPayDay && _nextTurnDoublePay))\r\n        {\r\n            this.ToggleDoublePayNextTurn(false);\r\n            this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(true,_isBot);\r\n        }\r\n        else\r\n        {\r\n            this.callUponCard();\r\n        }\r\n    },\r\n\r\n    ZoomCameraOut () {\r\n        setTimeout(() => {\r\n            if(this.Camera.zoomRatio>=1)\r\n            {\r\n               this.isCameraZooming=false;\r\n               this.Camera.zoomRatio=this.Camera.zoomRatio-0.03;\r\n               this.ZoomCameraOut();\r\n            }\r\n            else\r\n            {\r\n                this.CameraNode.position=cc.Vec2(0,0);\r\n                this.Camera.zoomRatio=1;\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n                \r\n                if(!isGameOver)\r\n                {\r\n                    if(this.SelectedMode==2) //real player\r\n                    {\r\n                        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                            this.CheckPayDayConditions();\r\n                        else\r\n                            this.callUponCard();\r\n                    }else if(this.SelectedMode==1) //bot\r\n                    {\r\n                       // if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n                            this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                       // else\r\n                         //   this.callUponCard();\r\n                    }\r\n                }\r\n            }\r\n         }, 10);\r\n         \r\n    },\r\n\r\n    TweenPlayer: function (Node,ToPos) {\r\n        cc.tween(Node)\r\n        .to(0.4, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(DiceTemp<DiceRoll)\r\n        {\r\n            if(!isGameOver)\r\n            {\r\n                if(this.SelectedMode==2)\r\n                {\r\n                    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                    {\r\n                        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                            PassedPayDay=true;\r\n                    }\r\n                }\r\n                else if(this.SelectedMode==1)//for bot\r\n                {\r\n                    if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                        PassedPayDay=true;\r\n                }\r\n            }\r\n\r\n            if(RollCounter==12)\r\n                RollCounter=RollCounter+21;  \r\n            else\r\n                RollCounter=RollCounter+1;\r\n\r\n            //DiceTemp=DiceTemp+1; \r\n            console.log(DiceTemp+\" \"+RollCounter);\r\n            \r\n            this.StartDiceRoll();\r\n            //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n           \r\n        }\r\n        else\r\n        {\r\n            var _newpos=cc.Vec2(0,0);\r\n            this.TweenCamera(_newpos,false,0.6); //zoomout\r\n        }\r\n\r\n        })\r\n        .start();\r\n    },\r\n\r\n    //rules implmentation during turn (turn decisions)\r\n\r\n    TogglePayDay(_st1,_St2)\r\n    {\r\n        PassedPayDay=_st1;\r\n        DoublePayDay=_St2;\r\n    },\r\n\r\n    ExpandBusiness_TurnDecision(amount,_index,_locationName)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].Cash>=amount)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].Cash=this.PlayerGameInfo[this.TurnNumber].Cash-amount;\r\n            this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount=this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount+1;\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\",1000);\r\n            setTimeout(() => {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n            }, 1200);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \"+amount);\r\n        }\r\n\r\n    },\r\n\r\n    GenerateExpandBusiness_Prefabs_TurnDecision()\r\n    {\r\n        BusinessLocationNodes=[];\r\n\r\n        console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n        for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n            if(parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType)==2) //this means there is brick and mortar in list\r\n            {\r\n                var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n                node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n                node.getComponent('ExpandBusinessHandler').SetBusinessIndex(i);\r\n                node.getComponent('ExpandBusinessHandler').SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n                node.getComponent('ExpandBusinessHandler').ResetEditBox();\r\n                BusinessLocationNodes.push(node);\r\n            } \r\n        }\r\n        console.log(BusinessLocationNodes);\r\n        return BusinessLocationNodes.length;\r\n    },\r\n\r\n    DestroyGeneratedNodes()\r\n    {\r\n        for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n            BusinessLocationNodes[index].destroy();\r\n        }\r\n\r\n        BusinessLocationNodes=[];\r\n    },\r\n\r\n    UpdateStocks_TurnDecision(_name,_ShareAmount,_isAdding)\r\n    {\r\n        if(_isAdding)\r\n        {\r\n            var _stock=new StockInfo();\r\n            _stock.BusinessName=_name;\r\n            _stock.ShareAmount=_ShareAmount;\r\n\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n        }\r\n    },\r\n\r\n    ProcessPayDay_TurnDecision(_isDoublePayDay=false,_isBot=false)\r\n    {\r\n        _skipNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n        _skipHMNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n        _skipBMNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n        if(_skipNextPayday) //if previously skip payday was stored by any card\r\n        {\r\n            this.ToggleSkipPayDay_Whole(false);\r\n\r\n            if(!_isBot)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\",1600);\r\n                setTimeout(() => {\r\n                    this.callUponCard();\r\n                }, 1650);\r\n            }else\r\n            {\r\n                console.log(\"Skipping PayDay.\");\r\n                setTimeout(() => {\r\n                    this.callUponCard();\r\n                }, 800);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var _title=\"\";\r\n\r\n            if(_isDoublePayDay)\r\n                _title=\"DoublePayDay\";\r\n            else\r\n                _title=\"PayDay\";\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title,_isDoublePayDay,_skipHMNextPayday,_skipBMNextPayday,_isBot);\r\n        }\r\n    },\r\n\r\n//#endregion\r\n   \r\n    //#region Cards Rules\r\n    ToggleDoublePayNextTurn(_state)\r\n    {\r\n        _nextTurnDoublePay=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay=_nextTurnDoublePay;\r\n    },\r\n\r\n    ToggleSkipNextTurn(_state)\r\n    {\r\n        _skipNextTurn=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn=_skipNextTurn;\r\n    },\r\n\r\n    ToggleSkipPayDay_Whole(_state)\r\n    {\r\n        _skipNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday=_skipNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_HomeBased(_state)\r\n    {\r\n        _skipHMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday=_skipHMNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_BrickAndMortar(_state)\r\n    {\r\n        _skipBMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday=_skipBMNextPayday;\r\n    },\r\n\r\n    ToggleTurnProgress(_state)\r\n    {\r\n        TurnInProgress=_state;\r\n    },\r\n\r\n    ReturnTurnProgress()\r\n    {\r\n        return TurnInProgress;\r\n    },\r\n    LoseAllMarketingMoney()\r\n    {\r\n        var _loseAmount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _loseAmount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n        }\r\n        else\r\n        {\r\n            _loseAmount=0;\r\n        }\r\n\r\n        return _loseAmount\r\n    },\r\n\r\n    MultiplyMarketingMoney(_multiplier)\r\n    {\r\n        var _amountIncreased=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _amountIncreased=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_multiplier;\r\n        }\r\n        else\r\n        {\r\n            _amountIncreased=0;\r\n        }\r\n\r\n        return _amountIncreased\r\n    },\r\n\r\n    GetMarketingMoney(_profit)\r\n    {\r\n        var _amount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _profit=(_profit/100);\r\n            _amount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_profit;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n            this.PlayerGameInfo[this.TurnNumber].Cash+=_amount;\r\n        }\r\n        else\r\n        {\r\n            _amount=0;\r\n        }\r\n\r\n        return _amount\r\n    },\r\n\r\n    QuestionPopUp_OtherUser_OneQuestion(_data)\r\n    {\r\n        var _userID=_data.UserID;\r\n        var _questionIndex=_data.Question;\r\n        var _playerIndex=_data.UserIndex;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        \r\n        if(_userID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID)\r\n        {\r\n            console.log(\"ID matched\");\r\n\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n            OneQuestionIndex=_questionIndex;\r\n            var _questionAsked=OneQuestions[_questionIndex-1];\r\n            _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_questionAsked);\r\n        }\r\n    },\r\n\r\n    OneQuestionScreen_Space_OneQuestion(_isTurnOver=false)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData;\r\n        var _roomData;\r\n        if(this.SelectedMode==2) //for real players\r\n        {\r\n            _roomData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n            _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        }\r\n        else if(this.SelectedMode==1)//for bot\r\n        {\r\n            _myData=this.PlayerGameInfo[0];\r\n            _roomData=this.PlayerGameInfo;\r\n        }\r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n        _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n        _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData,_roomData,_isTurnOver,this.SelectedMode)\r\n    \r\n    },\r\n\r\n    OneQuestionDecision_PayAmount_OneQuestion()\r\n    {\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n        if(_myData.Cash>=5000)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(_myData.PlayerUID==this.PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    this.PlayerGameInfo[index].Cash-=5000;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);                \r\n                    break;\r\n                }\r\n            }\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\",1200);\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n            this.RaiseEventDecision_OneQuestion(true,false,-1,_myData.PlayerUID);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n        }\r\n    },\r\n\r\n    OneQuestionDecision_AnswerQuestion_OneQuestion()\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\",1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false,true,OneQuestionIndex,_myData.PlayerUID);\r\n    },\r\n\r\n    RaiseEventDecision_OneQuestion(_hasDonePayment,_hasAnsweredQuestion,_questionIndex,_UserID)\r\n    {\r\n        var _data={PaymentDone:_hasDonePayment,QuestionAnswered:_hasAnsweredQuestion,QuestionIndex:_questionIndex,ID:_UserID};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8,_data);\r\n    },\r\n\r\n    ReceiveEventDecision_OneQuestion(_data)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            var _hasDonePayment=_data.PaymentDone;\r\n            var _hasAnsweredQuestion=_data.QuestionAnswered;\r\n            var _questionIndex=_data.QuestionIndex;\r\n            var _uID=_data.ID;\r\n            \r\n            if(_hasDonePayment)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n                this.PlayerGameInfo[this.TurnNumber].Cash+=5000;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has refused to answer the question instead payed the cash amount, $5000 added to your cash amount\",2100);\r\n                _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                this.completeCardTurn();\r\n\r\n            }else if(_hasAnsweredQuestion)\r\n            {\r\n                var _selectedPlayerIndex=0;\r\n                var _actorsData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n                for (let index = 0; index < _actorsData.length; index++) {\r\n                    if(_uID==_actorsData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        _selectedPlayerIndex=index;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(_questionIndex==1)//have you skipped loan previous payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have skipped loan payement in previous payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have skipped loan payement in previous payday\",2100);\r\n                    }\r\n                }else if(_questionIndex==2)//Have you taken any loan?\r\n                {\r\n                    var _loanTaken=false;\r\n                    for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n                        if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            _loanTaken=true;\r\n                            break;\r\n                        } \r\n                    }\r\n\r\n                    if(_loanTaken)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have taken some loan\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have taken any loan\",2100);\r\n                    }\r\n                }else if(_questionIndex==3)//Are you bankrupted? if more than once, tell me the amount?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have been bankrupted\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have been bankrupted\",2100);\r\n                    }\r\n                }else if(_questionIndex==4)//Is your turn going to be skipped next time?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will be skipped.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will not be skipped.\",2100);\r\n                    }\r\n                }\r\n                else if(_questionIndex==5)//Is it going to be double pay day your next payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will be double payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will not be double payday\",2100);\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                    this.completeCardTurn();\r\n                }, 2150);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    //#endregion\r\n    //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports  = GameManager;\r\n//#endregion"]}