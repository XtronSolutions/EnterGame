{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["_isTest","_diceinput1","_diceinput2","EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","PartnerName","LocationsName","LoanTaken","LoanAmount","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","BankruptAmount","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","GameOver","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","Backspaces","isGameOver","OneQuestionIndex","OneQuestions","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","BotGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","SelectedMode","statics","Instance","InputTestDice1","_val","InputTestDice2","onLoad","TurnNumber","TurnCompleted","CheckReferences","Get_MultiplayerController","GetSelectedMode","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","console","error","CheckSpectate","log","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","GetMyIndex","myIndex","_actor","PhotonActor","customProperties","PlayerSessionData","_allActors","index","SyncDataToPlayerGameInfo","AssignPlayerGameUI","CloseInitialScreen_SpectateMode","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","TurnHandler","_turn","_playerMatched","ToggleTurnProgress","ToggleDecision_TurnDecision","ResetTurnVariable","RollDice","DiceRollScreen","PlayerInfo","RoomActors","ShowToast","ToggleSkipNextTurn","_ind","MainSessionData","MyData","_counter","StartTurn","EnablePlayerNodes","ReceiveBankruptData","_isBankrupted","bankrupted","turn","_playerData","PlayerDataMain","StartTurnAfterBankrupt","_randomIndex","getRandom","SetName","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","myRoomActorsArray","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","Dice1","Dice2","_newRoll","RollOneDice","RollTwoDices","callUponCard","_spaceID","valueIndex","SendingData","completeCardTurn","CallGameComplete","_isBot","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","SyncGameOver","_UID","RestartGame","StartDiceRoll","ZoomCameraOut","playercompleted","max","SelectedInd","SessionData","_value","TweenPlayer","min","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ToggleDoublePayNextTurn","TogglePayDay","ProcessPayDay_TurnDecision","ToPos","_newpos","_st1","_St2","ExpandBusiness_TurnDecision","amount","_locationName","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","ToggleSkipPayDay_Whole","_title","AssignData_PayDay","Bankrupt_TurnDecision","SendProfit_Partner_TurnDecision","_amount","_uID","ID","ReceiveProfit_Partner_TurnDecision","_iD","_myIndex","_state","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","QuestionPopUp_OtherUser_OneQuestion","_userID","UserID","_questionIndex","Question","UserIndex","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_questionAsked","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_myData","_roomData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_PayAmount_OneQuestion","RaiseEventDecision_OneQuestion","OneQuestionDecision_AnswerQuestion_OneQuestion","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","ReceiveEventDecision_OneQuestion","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","_loanTaken","ReceiveGoBackSpacesData_spaceFunctionality","_spaces","backspaces","Counter","TweenPlayer_GoBackSpaces","speed","GoBackSpaces_spaceFunctionality","module","exports"],"mappings":";;;;;;AAAA,IAAIA,OAAO,GAAG,KAAd;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,WAAW,GAAG,EAAlB,EAEA;AACA;;AACA,IAAIC,gBAAgB,GAAGC,EAAE,CAACC,IAAH,CAAQ;AAC3BC,EAAAA,IAAI,EAAC,CADsB;AAE3BC,EAAAA,SAAS,EAAE,CAFgB;AAEK;AAChCC,EAAAA,cAAc,EAAE,CAHW,CAGK;;AAHL,CAAR,CAAvB,EAMA;;AACA,IAAIC,YAAY,GAAGL,EAAE,CAACM,KAAH,CAAS;AACxBC,EAAAA,IAAI,EAAE,cADkB;AAE5BC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,cADE;AAERC,IAAAA,YAAY,EACb;AACIC,MAAAA,WAAW,EAAC,MADhB;AAEIC,MAAAA,IAAI,EAAEb,gBAFV;AAGI,iBAASA,gBAAgB,CAACG,IAH9B;AAIIW,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAHS;AASRC,IAAAA,uBAAuB,EACxB;AACIJ,MAAAA,WAAW,EAAE,MADjB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAVS;AAgBRG,IAAAA,YAAY,EACb;AACIN,MAAAA,WAAW,EAAE,MADjB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAjBS;AAuBPI,IAAAA,MAAM,EACJ;AACIP,MAAAA,WAAW,EAAE,QADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAxBK;AA8BNM,IAAAA,aAAa,EACZ;AACIT,MAAAA,WAAW,EAAE,eADjB;AAEI,iBAAS,KAFb;AAGIU,MAAAA,IAAI,EAACrB,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA/BK;AAqCLS,IAAAA,SAAS,EACL;AACIZ,MAAAA,WAAW,EAAC,WADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKHC,MAAAA,OAAO,EAAE;AALN,KAtCC;AA4CLU,IAAAA,WAAW,EACP;AACIb,MAAAA,WAAW,EAAC,aADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA7CC;AAmDJW,IAAAA,aAAa,EACV;AACId,MAAAA,WAAW,EAAC,eADhB;AAEIC,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAACgB,IAAJ,CAFV;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KApDC;AA0DJY,IAAAA,SAAS,EACN;AACIf,MAAAA,WAAW,EAAC,WADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE;AAJlB,KA3DC;AAgEJc,IAAAA,UAAU,EACP;AACIhB,MAAAA,WAAW,EAAC,YADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE;AAJlB;AAjEC,GAFgB;AA2E5Be,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AA5E2B,CAAT,CAAnB,EA+EA;;AACA,IAAIC,qBAAqB,GAAG7B,EAAE,CAACM,KAAH,CAAS;AACjCC,EAAAA,IAAI,EAAE,uBAD2B;AAErCC,EAAAA,UAAU,EAAE;AACRsB,IAAAA,iBAAiB,EAClB;AACInB,MAAAA,WAAW,EAAC,mBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAFS;AAQRiB,IAAAA,YAAY,EACb;AACIpB,MAAAA,WAAW,EAAC,cADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KATS;AAeRkB,IAAAA,cAAc,EACf;AACIrB,MAAAA,WAAW,EAAC,gBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAhBS;AAsBRmB,IAAAA,gBAAgB,EACjB;AACItB,MAAAA,WAAW,EAAC,kBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAvBS;AA6BRoB,IAAAA,gBAAgB,EACjB;AACIvB,MAAAA,WAAW,EAAC,kBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ;AA9BS,GAFyB;AAwCrCc,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AAzCoC,CAAT,CAA5B,EA2CA;;AACA,IAAIO,SAAS,GAAGnC,EAAE,CAACM,KAAH,CAAS;AACrBC,EAAAA,IAAI,EAAE,WADe;AAEzBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,IAAI,EAAE,WADE;AAERQ,IAAAA,YAAY,EACb;AACIN,MAAAA,WAAW,EAAC,cADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAHS;AASRsB,IAAAA,WAAW,EACZ;AACIzB,MAAAA,WAAW,EAAE,aADjB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb;AAVS,GAFa;AAoBzBc,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AArBwB,CAAT,CAAhB,EAwBA;;AACA,IAAIS,UAAU,GAAGrC,EAAE,CAACM,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAC,YADiB;AAE1BC,EAAAA,UAAU,EAAE;AACR8B,IAAAA,UAAU,EACX;AACI3B,MAAAA,WAAW,EAAC,YADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAFS;AAQRyB,IAAAA,SAAS,EACV;AACI5B,MAAAA,WAAW,EAAC,WADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACgB,IAFb;AAGI,iBAAS,EAHb;AAIIH,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KATS;AAeR0B,IAAAA,QAAQ,EACL;AACI7B,MAAAA,WAAW,EAAE,UADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAhBK;AAsBR2B,IAAAA,KAAK,EACF;AACI9B,MAAAA,WAAW,EAAE,OADjB;AAEI,iBAAS,KAFb;AAGIU,MAAAA,IAAI,EAACrB,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAvBK;AA6BR4B,IAAAA,YAAY,EACb;AACI/B,MAAAA,WAAW,EAAC,UADhB;AAEIC,MAAAA,IAAI,EAAE,CAACP,YAAD,CAFV;AAGI,iBAAS,EAHb;AAIIQ,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA9BS;AAoCR6B,IAAAA,iBAAiB,EAClB;AACIhC,MAAAA,WAAW,EAAC,mBADhB;AAEIC,MAAAA,IAAI,EAAEiB,qBAFV;AAGI,iBAAS,EAHb;AAIIhB,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KArCS;AA2CR8B,IAAAA,eAAe,EAChB;AACIjC,MAAAA,WAAW,EAAC,iBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA5CS;AAkDR+B,IAAAA,oBAAoB,EACrB;AACIlC,MAAAA,WAAW,EAAC,sBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAnDS;AAyDRgC,IAAAA,oBAAoB,EACrB;AACInC,MAAAA,WAAW,EAAC,sBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KA1DS;AAgERiC,IAAAA,UAAU,EACX;AACIpC,MAAAA,WAAW,EAAC,QADhB;AAEIC,MAAAA,IAAI,EAAE,CAACuB,SAAD,CAFV;AAGI,iBAAS,EAHb;AAIItB,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAC;AALZ,KAjES;AAuERkC,IAAAA,IAAI,EACD;AACIrC,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAxEK;AA8ERmC,IAAAA,SAAS,EACN;AACItC,MAAAA,WAAW,EAAE,WADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA/EK;AAqFRoC,IAAAA,UAAU,EACP;AACIvC,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAtFK;AA4FRY,IAAAA,SAAS,EACN;AACIf,MAAAA,WAAW,EAAE,WADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA7FK;AAmGPa,IAAAA,UAAU,EACR;AACIhB,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KApGK;AA0GRqC,IAAAA,eAAe,EACZ;AACIxC,MAAAA,WAAW,EAAE,iBADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA3GK;AAiHRsC,IAAAA,YAAY,EACT;AACIzC,MAAAA,WAAW,EAAE,cADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAlHK;AAwHRuC,IAAAA,UAAU,EACP;AACI1C,MAAAA,WAAW,EAAE,YADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAzHK;AA+HRwC,IAAAA,cAAc,EACX;AACI3C,MAAAA,WAAW,EAAE,gBADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAhIK;AAsIRyC,IAAAA,kBAAkB,EACf;AACI5C,MAAAA,WAAW,EAAE,oBADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KAvIK;AA6IR0C,IAAAA,iBAAiB,EACd;AACI7C,MAAAA,WAAW,EAAE,mBADjB;AAEI,iBAAS,CAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACmB,OAHZ;AAIIN,MAAAA,YAAY,EAAE,IAJlB;AAKIC,MAAAA,OAAO,EAAE;AALb,KA9IK;AAoJR2C,IAAAA,sBAAsB,EACnB;AACI9C,MAAAA,WAAW,EAAE,wBADjB;AAEI,iBAAS,KAFb;AAGIC,MAAAA,IAAI,EAACZ,EAAE,CAACsB,OAHZ;AAIIT,MAAAA,YAAY,EAAE;AAJlB,KArJK;AA0JP6C,IAAAA,cAAc,EACR;AACI/C,MAAAA,WAAW,EAAC,gBADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE;AAJlB,KA3JC;AAgKP8C,IAAAA,UAAU,EACJ;AACIhD,MAAAA,WAAW,EAAC,YADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFb;AAGI,iBAAS,CAHb;AAIIN,MAAAA,YAAY,EAAE;AAJlB,KAjKC;AAsKR+C,IAAAA,QAAQ,EACD;AACIjD,MAAAA,WAAW,EAAC,UADhB;AAEIC,MAAAA,IAAI,EAAEZ,EAAE,CAACsB,OAFb;AAGI,iBAAS,KAHb;AAIIT,MAAAA,YAAY,EAAE;AAJlB;AAvKC,GAFc;AA+K1Be,EAAAA,IAAI,EAAE,gBAAY,CAAE;AACnB;AAhLyB,CAAT,CAAjB,EAmLA;AAEA;AACA;;AACA,IAAIiC,WAAW,GAAC,CAAhB;AACA,IAAIC,QAAQ,GAAC,CAAb;AACA,IAAIC,QAAQ,GAAC,CAAb;AACA,IAAIC,UAAU,GAAC,KAAf;AACA,IAAIC,wBAAwB,GAAC,IAA7B;AACA,IAAIC,cAAc,GAAC,EAAnB;AACA,IAAIC,qBAAqB,GAAC,EAA1B;AAEA,IAAIC,YAAY,GAAC,KAAjB;AACA,IAAIC,YAAY,GAAC,KAAjB,EAEA;;AACA,IAAIC,kBAAkB,GAAC,KAAvB;AACA,IAAIC,aAAa,GAAC,KAAlB;AACA,IAAIC,eAAe,GAAC,KAApB,EAA2B;;AAC3B,IAAIC,iBAAiB,GAAC,KAAtB,EAA6B;;AAC7B,IAAIC,iBAAiB,GAAC,KAAtB,EAA6B;;AAC7B,IAAIC,iBAAiB,GAAC,KAAtB;AACA,IAAIC,cAAc,GAAC,KAAnB;AAEA,IAAIC,UAAU,GAAC,CAAf;AACA,IAAIC,UAAU,GAAC,KAAf;AACA,IAAIC,gBAAgB,GAAC,CAAC,CAAtB;AACA,IAAIC,YAAY,GAChB,CACI,wCADJ,EAEI,0BAFJ,EAGI,2BAHJ,EAII,wCAJJ,EAKI,gDALJ,CADA;AASA,IAAIC,oBAAoB,GAAC,IAAzB;AAEA,IAAIC,WAAW,GAAClF,EAAE,CAACM,KAAH,CAAS;AACrBC,EAAAA,IAAI,EAAC,aADgB;AAErB,aAASP,EAAE,CAACmF,SAFS;AAGrB3E,EAAAA,UAAU,EAAE;AACR4E,IAAAA,cAAc,EAAE;AACZ,iBAAS,EADG;AAEZxE,MAAAA,IAAI,EAAE,CAACyB,UAAD,CAFM;AAGZxB,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KADR;AAMRuE,IAAAA,WAAW,EAAE;AACT,iBAAS,EADA;AAETzE,MAAAA,IAAI,EAAE,CAACyB,UAAD,CAFG;AAGTxB,MAAAA,YAAY,EAAE,IAHL;AAITC,MAAAA,OAAO,EAAE;AAJA,KANL;AAWRwE,IAAAA,UAAU,EAAE;AACR,iBAAQ,IADA;AAER1E,MAAAA,IAAI,EAAEZ,EAAE,CAACuF,IAFD;AAGR1E,MAAAA,YAAY,EAAE,IAHN;AAIRC,MAAAA,OAAO,EAAC;AAJA,KAXJ;AAgBR0E,IAAAA,UAAU,EAAE;AACR,iBAAQ,IADA;AAER5E,MAAAA,IAAI,EAAEZ,EAAE,CAACuF,IAFD;AAGR1E,MAAAA,YAAY,EAAE,IAHN;AAIRC,MAAAA,OAAO,EAAC;AAJA,KAhBJ;AAqBR2E,IAAAA,WAAW,EAAE;AACT,iBAAQ,EADC;AAET7E,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAACuF,IAAJ,CAFG;AAGT1E,MAAAA,YAAY,EAAE,IAHL;AAITC,MAAAA,OAAO,EAAC;AAJC,KArBL;AA0BR4E,IAAAA,cAAc,EAAE;AACZ,iBAAQ,EADI;AAEZ9E,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAACuF,IAAJ,CAFM;AAGZ1E,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAC;AAJI,KA1BR;AA+BR6E,IAAAA,kBAAkB,EAAE;AAChB,iBAAQ,EADQ;AAEhB/E,MAAAA,IAAI,EAAE,CAACZ,EAAE,CAACuF,IAAJ,CAFU;AAGhB1E,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAC;AAJQ,KA/BZ;AAoCP8E,IAAAA,YAAY,EAAE;AACX,iBAAQ,CADG;AAEXhF,MAAAA,IAAI,EAAEZ,EAAE,CAACmB,OAFE;AAGXN,MAAAA,YAAY,EAAE,IAHH;AAIXC,MAAAA,OAAO,EAAE;AAJE;AApCP,GAHS;AA8CrB+E,EAAAA,OAAO,EAAE;AACLxD,IAAAA,UAAU,EAAEA,UADP;AAELhC,IAAAA,YAAY,EAACA,YAFR;AAGLN,IAAAA,gBAAgB,EAACA,gBAHZ;AAIL+F,IAAAA,QAAQ,EAAC;AAJJ,GA9CY;AAsDrBC,EAAAA,cAtDqB,0BAsDNC,IAtDM,EAuDrB;AACI,QAAIpG,OAAJ,EAAa;AACTC,MAAAA,WAAW,GAAGmG,IAAd;AACH;AACJ,GA3DoB;AA6DrBC,EAAAA,cA7DqB,0BA6DND,IA7DM,EA8DrB;AACI,QAAIpG,OAAJ,EAAa;AACTE,MAAAA,WAAW,GAAGkG,IAAd;AACH;AACJ,GAlEoB;AAmErB;;AAEA;;;;;;AAMAE,EAAAA,MA3EqB,oBA2EX;AACNhB,IAAAA,WAAW,CAACY,QAAZ,GAAqB,IAArB;AACA,SAAKK,UAAL,GAAgB,CAAhB;AACA,SAAKC,aAAL,GAAmB,KAAnB;AACAlC,IAAAA,cAAc,GAAC,EAAf;AACA,SAAKmC,eAAL;AACA,SAAKT,YAAL,GAAkB3B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DC,eAA9D,EAAlB;AACA,SAAKC,gBAAL;AAEA,SAAKC,eAAL,GAAqB,CAArB;AACA,SAAKC,WAAL,GAAiB,CAAjB;AACA,SAAKC,aAAL,GAAmB,KAAnB;AACAhC,IAAAA,iBAAiB,GAAC,KAAlB;AACH,GAxFoB;;AA0FrB;;;;;;AAMA0B,EAAAA,eAhGqB,6BAiGpB;AACG,QAAG,CAACpC,wBAAD,IAA6BA,wBAAwB,IAAE,IAA1D,EACAA,wBAAwB,GAAC2C,OAAO,CAAC,0BAAD,CAAhC;AACF,GApGmB;;AAsGrB;;;;;;AAMAJ,EAAAA,gBA5GqB,8BA4GD;AAChB,SAAKK,MAAL,GAAY,KAAKrB,UAAL,CAAgBsB,YAAhB,CAA6B9G,EAAE,CAAC6G,MAAhC,CAAZ;AACA,SAAKE,eAAL,GAAqB,KAArB;AACA,SAAK3B,cAAL,GAAoB,EAApB;AACAvB,IAAAA,WAAW,GAAC,CAAZ;AACAC,IAAAA,QAAQ,GAAC,CAAT;AACAC,IAAAA,QAAQ,GAAC,CAAT;AAEAiD,IAAAA,OAAO,CAACC,KAAR,CAAc,KAAKrB,YAAnB;;AACA,QAAG,KAAKA,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI;AACA,YAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DY,aAA9D,MAA+E,IAAlF,EACA;AACIF,UAAAA,OAAO,CAACG,GAAR,CAAY,sCAAoClD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,cAAxG,CAAhD,EADJ,CAEI;;AACA,cAAGrD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,cAAxG,KAAyH,IAA5H,EACA;AACIrD,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DC,oCAA1D,CAA+F,IAA/F;AACA,gBAAIC,OAAO,GAACxD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,gBAAxG,CAAZ;AACA,iBAAKlC,cAAL,GAAoBqC,OAApB;AAEAT,YAAAA,OAAO,CAACG,GAAR,CAAY,KAAK/B,cAAjB;AAEAnB,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DoB,UAA9D,GAAyE,KAAKtC,cAAL,CAAoBuC,MAA7F,CAPJ,CAQI;;AACA,iBAAKC,2BAAL;AACA,iBAAKzB,UAAL,GAAgBlC,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,YAAxG,CAAhB;AACA,iBAAKO,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;AACH,WAbD,MAeA;AACIlC,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DC,oCAA1D,CAA+F,IAA/F;AACAvD,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DO,0BAA1D;AACH;AACJ,SAvBD,MAyBA;AACI7D,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DQ,8BAA1D,CAAyF,IAAzF,EAA8F,KAA9F,EAAoG,KAAKnC,YAAzG;AACH;AACJ,OA/BD,MA+BM,IAAG,KAAKA,YAAL,IAAmB,CAAtB,EAAyB;AAC/B;AACI3B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DQ,8BAA1D,CAAyF,IAAzF,EAA8F,KAA9F,EAAoG,KAAKnC,YAAzG;AACH;AACJ,GAxJoB;AA0JrB;AACAoC,EAAAA,aA3JqB,2BA2JJ;AACb,WAAO,KAAK7B,UAAZ;AACH,GA7JoB;AA+JrB8B,EAAAA,UA/JqB,wBAgKrB;AACI,QAAIC,OAAO,GAAG,CAAd;AACA,QAAIC,MAAM,GAAGlE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAA1G;AACA,QAAIC,UAAU,GAAG,KAAKnD,cAAtB;;AAEA,SAAK,IAAIoD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,UAAU,CAACZ,MAAvC,EAA+Ca,KAAK,EAApD,EAAwD;AACtD,UAAIL,MAAM,CAAC5F,SAAP,IAAoBgG,UAAU,CAACC,KAAD,CAAV,CAAkBjG,SAA1C,EACA;AACI2F,QAAAA,OAAO,GAAGM,KAAV;AACA;AACH;AACF;;AAED,WAAON,OAAP;AACH,GA9KoB;AA+KrB;AAEA;AAEAN,EAAAA,2BAnLqB,yCAoLrB;AACI,QAAIH,OAAO,GAACxD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,gBAAxG,CAAZ;AACA,SAAKlC,cAAL,GAAoBqC,OAApB;AACA,SAAKgB,wBAAL,CAA8B,CAA9B;AACAxE,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DoB,UAA9D,GAAyE,KAAKtC,cAAL,CAAoBuC,MAA7F;AACA,SAAKe,kBAAL;AACAzE,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DoB,+BAA1D;;AAGA,SAAK,IAAIH,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKpD,cAAL,CAAoBuC,MAAhD,EAAwDa,KAAK,EAA7D,EAAiE;AAC7D,UAAII,MAAM,GAAC5I,EAAE,CAAC6I,IAAH,CAAQ5E,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D,KAAK3D,cAAL,CAAoBoD,KAApB,EAA2BhF,iBAArF,EAAwGwF,iBAAxG,CAA0HC,QAA1H,CAAmIC,CAA3I,EAA6IjF,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D,KAAK3D,cAAL,CAAoBoD,KAApB,EAA2BhF,iBAArF,EAAwGwF,iBAAxG,CAA0HC,QAA1H,CAAmIE,CAAhR,CAAX;;AACA,WAAKzD,cAAL,CAAoB8C,KAApB,EAA2BY,WAA3B,CAAuCR,MAAM,CAACM,CAA9C,EAAgDN,MAAM,CAACO,CAAvD;AACH;;AAEDnC,IAAAA,OAAO,CAACG,GAAR,CAAY,oBAAZ;;AAEA,SAAK,IAAIqB,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DoB,UAA1F,EAAsGc,OAAK,EAA3G,EAA+G;AAC3G,WAAK9C,cAAL,CAAoB8C,OAApB,EAA2Ba,MAA3B,GAAkC,IAAlC;AACH;AACJ,GAvMoB;AAyMrBC,EAAAA,wCAzMqB,sDA0MrB;AACE,QAAIC,qBAAqB,GAACtF,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EoC,gBAA7E,EAA1B;;AACA,QAAGtF,cAAc,CAACyD,MAAf,IAAuB4B,qBAA1B,EACA;AACErF,MAAAA,cAAc,GAAC,EAAf;AACA,WAAKkC,aAAL,GAAmB,IAAnB;;AAEA,UAAG,KAAKhB,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACI,aAAKrE,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuDK,WAAvD;AACAI,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EsB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKtE,cAAL,CAAoB,KAAKe,UAAzB,CAAnH;AACA,aAAKwD,UAAL;AACA3C,QAAAA,OAAO,CAACG,GAAR,CAAYlD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,EAAZ;AACApB,QAAAA,OAAO,CAACG,GAAR,CAAY,+BAA6B,KAAK/B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7D,UAA9E;AACH;AACF;AAEF,GA3NoB;AA6NrB;AAGA;;AAED;;;;;;AAMDsH,EAAAA,iBAxOuB,6BAwOLC,KAxOK,EAyOvB;AACM5F,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EF,KAA5E;AACL,GA3OsB;AA6OvBG,EAAAA,mBA7OuB,iCA8OvB;AACEC,IAAAA,YAAY,CAAChF,oBAAD,CAAZ;AACD,GAhPsB;AAkPvBiF,EAAAA,mBAlPuB,iCAmPvB;AAAA;;AACI,QAAG,KAAKtE,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACEoB,QAAAA,OAAO,CAACC,KAAR,CAActC,iBAAd;;AACA,YAAGA,iBAAiB,IAAE,IAAtB,EACA;AACIsF,UAAAA,YAAY,CAAChF,oBAAD,CAAZ;AACA+B,UAAAA,OAAO,CAACC,KAAR,CAAc,KAAKP,WAAnB;AACA/B,UAAAA,iBAAiB,GAAC,KAAlB;;AACA,cAAG,CAAC,KAAKgC,aAAT,EACA;AACI,iBAAKA,aAAL,GAAmB,IAAnB;AACA1C,YAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D,KAAKrC,WAA/D,EAA4EsC,iBAA5E,CAA8FlC,YAA9F,CAA2G,cAA3G,EAA2HqD,eAA3H,CAA2I,KAA3I,EAAiJ,KAAK1D,eAAtJ;AACH;AACJ,SAVD,MAYA;AACIxB,UAAAA,oBAAoB,GAACmF,UAAU,CAAC,YAAM;AAAE;AACpC,YAAA,KAAI,CAACF,mBAAL;AACH,WAF8B,EAE5B,GAF4B,CAA/B;AAGH;AACF;AACJ,GAzQsB;AA2QvBG,EAAAA,gBA3QuB,8BA4QvB;AACE,SAAK1D,aAAL,GAAmB,KAAnB;AACD,GA9QsB;AAgRvB2D,EAAAA,mBAhRuB,+BAgRHT,KAhRG,EAiRvB;AAEE,SAAKxD,eAAL;AACAW,IAAAA,OAAO,CAACG,GAAR,CAAY0C,KAAZ;AAEA,QAAIU,UAAU,GAACV,KAAK,CAACW,UAArB;AACA,QAAIC,OAAO,GAACZ,KAAK,CAACY,OAAlB;AAEA,SAAKhE,eAAL,GAAqB8D,UAArB;AACA,SAAK7D,WAAL,GAAiB+D,OAAjB;AAGAzD,IAAAA,OAAO,CAACC,KAAR,CAActC,iBAAd;;AAEA,QAAG,KAAKiB,YAAL,IAAmB,CAAtB,EACA;AACI,UAAG,KAAKR,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACIxF,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D0B,OAA1D,EAAmEzB,iBAAnE,CAAqFlC,YAArF,CAAkG,cAAlG,EAAkHqD,eAAlH,CAAkI,IAAlI,EAAuII,UAAvI,EADJ,KAGI5F,iBAAiB,GAAC,IAAlB;AACP,KAND,MAMM,IAAG,KAAKiB,YAAL,IAAmB,CAAtB,EACN;AACI,UAAG,KAAKR,cAAL,CAAoB,KAAKe,UAAzB,EAAqC1D,KAArC,IAA4C,KAA/C,EACIwB,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D0B,OAA1D,EAAmEzB,iBAAnE,CAAqFlC,YAArF,CAAkG,cAAlG,EAAkHqD,eAAlH,CAAkI,IAAlI,EAAuII,UAAvI,EADJ,KAGItG,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D0B,OAA1D,EAAmEzB,iBAAnE,CAAqFlC,YAArF,CAAkG,cAAlG,EAAkHqD,eAAlH,CAAkI,KAAlI,EAAwII,UAAxI,EAAmJ,IAAnJ;AACP;;AAEDvD,IAAAA,OAAO,CAACC,KAAR,CAActC,iBAAd;AAGD,GAhTsB;;AAkTtB;;;;;;AAMD+F,EAAAA,sBAxTuB,oCAyTvB;AACI,QAAG,KAAK9E,YAAL,IAAmB,CAAtB,EACA;AACE,UAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FsC,cAA7F,CAA4GC,UAA5G,IAAwH,KAA3H,EACA;AACI3G,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4E9F,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAA9K;AACH;AACF,KAND,MAMM,IAAG,KAAK7D,YAAL,IAAmB,CAAtB,EACN;AACIoB,MAAAA,OAAO,CAACC,KAAR,CAAc,2BAAd;AACFhD,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4E,KAAK3E,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAAjH;AACD;AACJ,GArUsB;AAwUvBsI,EAAAA,WAxUuB,yBAyUvB;AACE,QAAG,KAAKzF,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACIxF,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EsB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKtE,cAAL,CAAoB,KAAKe,UAAzB,CAAnH;AACH;AACJ,GA9UwB;;AAgVvB;;;;;;AAMA2E,EAAAA,wBAtVuB,oCAsVEC,IAtVF,EAuVvB;AACI,QAAG,KAAKnF,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACE,YAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FsC,cAA7F,CAA4GC,UAA5G,IAAwH,KAA3H,EACA;AACI5D,UAAAA,OAAO,CAACG,GAAR,CAAYjD,cAAc,CAACyD,MAA3B;AAEA,cAAGzD,cAAc,CAACyD,MAAf,IAAuB,CAA1B,EACQzD,cAAc,CAAC8G,IAAf,CAAoBD,IAApB;AAER,cAAIE,WAAW,GAAC/G,cAAc,CAACyD,MAA/B;AACA,cAAIuD,OAAO,GAAC,KAAZ;;AACA,eAAK,IAAI1C,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGyC,WAA5B,EAAyCzC,KAAK,EAA9C,EAAkD;AAC1C,gBAAGtE,cAAc,CAACsE,KAAD,CAAd,IAAuBuC,IAA1B,EACAG,OAAO,GAAC,IAAR;AACP;;AAED,cAAG,CAACA,OAAJ,EACA;AACIhH,YAAAA,cAAc,CAAC8G,IAAf,CAAoBD,IAApB;AACH;;AACD/D,UAAAA,OAAO,CAACG,GAAR,CAAYjD,cAAZ;AACA8C,UAAAA,OAAO,CAACG,GAAR,CAAYjD,cAAc,CAACyD,MAA3B,EAlBJ,CAoBI;;AACA,cAAI4B,qBAAqB,GAAC,KAAKnE,cAAL,CAAoBuC,MAA9C;;AACA,cAAGzD,cAAc,CAACyD,MAAf,IAAuB4B,qBAA1B,EACA;AACIrF,YAAAA,cAAc,GAAC,EAAf;AACA,iBAAKkC,aAAL,GAAmB,IAAnB;;AAEA,gBAAG,KAAKhB,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACI,mBAAKrE,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuDK,WAAvD,CADJ,CAEI;;AACA,mBAAK8F,UAAL;AACA3C,cAAAA,OAAO,CAACG,GAAR,CAAYlD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,EAAZ;AACApB,cAAAA,OAAO,CAACG,GAAR,CAAY,+BAA6B,KAAK/B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7D,UAA9E;AACH;AACJ;AACJ;AACA,OAxCH,MAwCQ,IAAG,KAAKsD,YAAL,IAAmB,CAAtB,EACN;AAEI,WAAKQ,aAAL,GAAmB,IAAnB;AACA,WAAKhB,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuDK,WAAvD;AACA,WAAK8F,UAAL;AACH;AACN,GAvYsB;;AAyYtB;;;;;;AAMCA,EAAAA,UA/YqB,wBAgZrB;AACI,QAAG,KAAK/D,YAAL,IAAmB,CAAtB,EACA;AACI,WAAKiF,WAAL;AACH;;AAED,QAAG,KAAK1E,UAAL,GAAgB,KAAKf,cAAL,CAAoBuC,MAApB,GAA2B,CAA9C,EACI,KAAKxB,UAAL,GAAgB,KAAKA,UAAL,GAAgB,CAAhC,CADJ,KAGI,KAAKA,UAAL,GAAgB,CAAhB;AAEJlC,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4E,KAAK5D,UAAjF;AACH,GA5ZoB;;AA8ZrB;;;;;;AAMAgF,EAAAA,WApaqB,uBAoaTC,KApaS,EAqarB;AAAA;;AACIpE,IAAAA,OAAO,CAACC,KAAR,CAAc,WAASmE,KAAvB;AACA,QAAIC,cAAc,GAAC,KAAnB;AACA9G,IAAAA,aAAa,GAAC,KAAd;;AACA,QAAGP,UAAH,EAAe;AACf;AACIoG,QAAAA,UAAU,CAAC,YAAM;AACb,UAAA,MAAI,CAACe,WAAL,CAAiBC,KAAjB;AACH,SAFS,EAEP,GAFO,CAAV;AAGH,OALD,MAOA;AACI,WAAKjF,UAAL,GAAgBiF,KAAhB;;AACA,UAAG,KAAKxF,YAAL,IAAmB,CAAtB,EACA;AACI,YAAG,KAAKR,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACI,eAAK6B,kBAAL,CAAwB,IAAxB;AACAD,UAAAA,cAAc,GAAC,IAAf;AACA9G,UAAAA,aAAa,GAAC,KAAKa,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDZ,YAArE;;AACA,cAAG,CAACwC,aAAJ,EACA;AACI6F,YAAAA,UAAU,CAAC,YAAM;AACbnG,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DgE,2BAA1D,CAAsF,IAAtF;AACAtH,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DiE,iBAA1D;AACH,aAHS,EAGP,IAHO,CAAV;AAIAxE,YAAAA,OAAO,CAACG,GAAR,CAAY,mBAAiB,KAAK/B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7D,UAAlE;AACH;AACJ,SAbD,MAeA;AACI,eAAKgJ,kBAAL,CAAwB,KAAxB;AACH;AAEJ,OArBD,MAqBM,IAAG,KAAK1F,YAAL,IAAmB,CAAtB,EACN;AACI,YAAG,KAAKR,cAAL,CAAoB,KAAKe,UAAzB,EAAqC1D,KAArC,IAA4C,KAA/C,EACA;AACI,eAAK6I,kBAAL,CAAwB,IAAxB;AACAD,UAAAA,cAAc,GAAC,IAAf;AACA9G,UAAAA,aAAa,GAAC,KAAKa,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDZ,YAArE;;AACA,cAAG,CAACwC,aAAJ,EACA;AACI6F,YAAAA,UAAU,CAAC,YAAM;AACbnG,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DgE,2BAA1D,CAAsF,IAAtF;AACAtH,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DiE,iBAA1D;AACH,aAHS,EAGP,IAHO,CAAV;AAIAxE,YAAAA,OAAO,CAACG,GAAR,CAAY,mBAAiB,KAAK/B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7D,UAAlE;AACH;AACJ,SAbD,MAcI;AACJ;AACI,iBAAKgJ,kBAAL,CAAwB,KAAxB;AACAD,YAAAA,cAAc,GAAC,IAAf;AACA9G,YAAAA,aAAa,GAAC,KAAKa,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDZ,YAArE;;AACA,gBAAG,CAACwC,aAAJ,EACA;AACI6F,cAAAA,UAAU,CAAC,YAAM;AACb,gBAAA,MAAI,CAACqB,QAAL;AACH,eAFS,EAEP,IAFO,CAAV;AAGH;AACJ;AACJ;;AAED,WAAK5D,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;;AAEA,WAAK,IAAIqC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK/C,WAAL,CAAiBkC,MAA7C,EAAqDa,KAAK,EAA1D,EAA8D;AAC1D,aAAK/C,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6D4E,cAA7D,CAA4ErC,MAA5E,GAAmF,KAAnF;AACH;;AAGD,UAAG,KAAKzD,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI3B,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFqC,iBAAtF,CAAwG,YAAxG,EAAqH,KAAKvD,UAA1H,EAAqI,IAArI;AACAa,UAAAA,OAAO,CAACG,GAAR,CAAY,cAAY,KAAK/B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7D,UAA7D;AACA0E,UAAAA,OAAO,CAACG,GAAR,CAAY,KAAK1B,WAAL,CAAiB,KAAKU,UAAtB,EAAkCW,YAAlC,CAA+C,sBAA/C,EAAuE6E,UAAnF;AACA3E,UAAAA,OAAO,CAACG,GAAR,CAAYlD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,EAAZ;AACApB,UAAAA,OAAO,CAACG,GAAR,CAAYlD,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DsF,UAA9D,EAAZ;AACA,eAAKnD,wBAAL,CAA8B,CAA9B,EANJ,CASI;;AACA,cAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FsC,cAA7F,CAA4GC,UAA5G,IAAwH,IAA3H,EACI,KAAKhD,2BAAL;AACP,SAzEL,CA2EI;;;AACA,UAAGyD,cAAc,IAAI9G,aAArB,EACA;AACIP,QAAAA,UAAU,GAAC,KAAX;AACAC,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,uBAApE,EAA4F,IAA5F;AACA,aAAKC,kBAAL,CAAwB,KAAxB;AACA,aAAKnC,UAAL;AACA,aAAK2B,kBAAL,CAAwB,KAAxB;AACH;;AAED,UAAGD,cAAc,IAAI,KAAKjG,cAAL,CAAoB,KAAKe,UAAzB,EAAqCzC,cAA1D,EACA;AACIM,QAAAA,UAAU,GAAC,KAAX;AACA,aAAK2F,UAAL;AACA,aAAK2B,kBAAL,CAAwB,KAAxB;AACH;AAEJ;AACJ,GA7gBoB;AA+gBrB7C,EAAAA,wBA/gBqB,oCA+gBIsD,IA/gBJ,EAghBrB;AACI,QAAIC,eAAe,GAAC/H,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DsF,UAA9D,EAApB;AACA,QAAIK,MAAM,GAAChI,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,EAAX;AACA,QAAI8D,QAAQ,GAACH,IAAb;AACA/E,IAAAA,OAAO,CAACG,GAAR,CAAY,KAAK/B,cAAL,CAAoB8G,QAApB,EAA8B3J,SAA1C;AACAyE,IAAAA,OAAO,CAACG,GAAR,CAAY8E,MAAM,CAAC5D,gBAAP,CAAwBC,iBAAxB,CAA0C/F,SAAtD;;AACA,QAAG,KAAK6C,cAAL,CAAoB8G,QAApB,EAA8B3J,SAA9B,IAAyC0J,MAAM,CAAC5D,gBAAP,CAAwBC,iBAAxB,CAA0C/F,SAAtF,EAAiG;AACjG;AACI,aAAK,IAAIiG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGwD,eAAe,CAACrE,MAA5C,EAAoDa,KAAK,EAAzD,EAA6D;AACrD,cAAG,KAAKpD,cAAL,CAAoB8G,QAApB,EAA8B3J,SAA9B,IAAyCyJ,eAAe,CAACxD,KAAD,CAAf,CAAuBH,gBAAvB,CAAwCC,iBAAxC,CAA0D/F,SAAtG,EACA;AACI,iBAAK6C,cAAL,CAAoB8G,QAApB,IAA8BF,eAAe,CAACxD,KAAD,CAAf,CAAuBH,gBAAvB,CAAwCC,iBAAtE;;AAEA,gBAAG4D,QAAQ,GAAC,KAAK9G,cAAL,CAAoBuC,MAApB,GAA2B,CAAvC,EACA;AACIuE,cAAAA,QAAQ;AACRlF,cAAAA,OAAO,CAACG,GAAR,CAAY,qBAAmB+E,QAA/B;AACA,mBAAKzD,wBAAL,CAA8ByD,QAA9B;AACH,aALD,MAMI;AACAlF,cAAAA,OAAO,CAACG,GAAR,CAAY,KAAK/B,cAAjB;AACH;AACJ;AACJ;AACR,OAlBD,MAoBI;AACI,UAAG8G,QAAQ,GAAC,KAAK9G,cAAL,CAAoBuC,MAApB,GAA2B,CAAvC,EACI;AACIuE,QAAAA,QAAQ;AACRlF,QAAAA,OAAO,CAACG,GAAR,CAAY,qBAAmB+E,QAA/B;AACA,aAAKzD,wBAAL,CAA8ByD,QAA9B;AACH,OALL,MAMI;AACIlF,QAAAA,OAAO,CAACG,GAAR,CAAY,KAAK/B,cAAjB;AACH;AACR;AACR,GArjBoB;;AAujBrB;;;;;;AAMA+G,EAAAA,SA7jBqB,uBA8jBrB;AACI,SAAKzD,kBAAL;AACA,SAAK0D,iBAAL;AACA,SAAKjG,UAAL,GAAgB,CAAhB,CAHJ,CAGuB;AAEnB;;AACAlC,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4E,KAAK5D,UAAjF;AAIH,GAxkBoB;AA0kBrBkG,EAAAA,mBA1kBqB,+BA0kBDxC,KA1kBC,EA2kBrB;AACI;AACA,QAAIyC,aAAa,GAACzC,KAAK,CAACd,IAAN,CAAWwD,UAA7B;AACA,QAAInB,KAAK,GAACvB,KAAK,CAACd,IAAN,CAAWyD,IAArB;AACA,QAAIC,WAAW,GAAC5C,KAAK,CAACd,IAAN,CAAW2D,cAA3B;AAEA1F,IAAAA,OAAO,CAACG,GAAR,CAAY0C,KAAZ,EANJ,CAOI;AACA;AACA;;AAEA,SAAKzE,cAAL,CAAoBgG,KAApB,IAA2BqB,WAA3B;AAEA,SAAK/D,kBAAL,CAAwB,IAAxB;AACA,SAAK0D,iBAAL,CAAuB,IAAvB;AAEA,SAAKvE,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;;AAEA,SAAK,IAAIqC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK/C,WAAL,CAAiBkC,MAA7C,EAAqDa,KAAK,EAA1D,EAA8D;AAC1D,WAAK/C,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6D4E,cAA7D,CAA4ErC,MAA5E,GAAmF,KAAnF;AACH;;AAED,QAAG,KAAKzD,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI3B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFqC,iBAAtF,CAAwG,YAAxG,EAAqH,KAAKvD,UAA1H,EAAqI,IAArI;AACA,aAAKsC,wBAAL,CAA8B,CAA9B,EAFJ,CAII;;AACA,YAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FsC,cAA7F,CAA4GC,UAA5G,IAAwH,IAA3H,EACI,KAAKhD,2BAAL;AACP;AACJ,GA1mBoB;AA4mBrB+E,EAAAA,sBA5mBqB,oCA6mBrB;AACI,SAAKjE,kBAAL,CAAwB,IAAxB;AACA,SAAK0D,iBAAL,CAAuB,IAAvB;AACAhC,IAAAA,UAAU,CAAC,YAAM;AACbnG,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DgE,2BAA1D,CAAsF,IAAtF;AACAtH,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DiE,iBAA1D;AACH,KAHS,EAGP,IAHO,CAAV;AAKA,SAAK3D,YAAL,CAAkB,IAAlB,EAAuB,KAAK1B,UAA5B;;AAEA,SAAK,IAAIqC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK/C,WAAL,CAAiBkC,MAA7C,EAAqDa,KAAK,EAA1D,EAA8D;AAC1D,WAAK/C,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6D4E,cAA7D,CAA4ErC,MAA5E,GAAmF,KAAnF;AACH;;AAED,QAAG,KAAKzD,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI3B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EC,MAA7E,GAAsFqC,iBAAtF,CAAwG,YAAxG,EAAqH,KAAKvD,UAA1H,EAAqI,IAArI;AACA,aAAKsC,wBAAL,CAA8B,CAA9B,EAFJ,CAII;;AACA,YAAGxE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FsC,cAA7F,CAA4GC,UAA5G,IAAwH,IAA3H,EACI,KAAKhD,2BAAL;AACP;AACJ,GApoBoB;AAqoBrB;AAGA;;AACC;;;;;;AAMDc,EAAAA,kBA/oBqB,8BA+oBF4D,aA/oBE,EAgpBrB;AAAA,QADmBA,aACnB;AADmBA,MAAAA,aACnB,GADiC,KACjC;AAAA;;AACI,QAAG,KAAK1G,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI,YAAG,CAAC0G,aAAJ,EACA;AACI,cAAIM,YAAY,GAAC,KAAKC,SAAL,CAAe,CAAf,EAAiB,KAAKxH,WAAL,CAAiBsC,MAAlC,CAAjB;;AACA,eAAKvC,cAAL,CAAoB4F,IAApB,CAAyB,KAAK3F,WAAL,CAAiBuH,YAAjB,CAAzB;AACA3I,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DoB,UAA9D,GAAyE,CAAzE;AACH;AACJ;;AAED,SAAK,IAAIc,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DoB,UAA1F,EAAsGc,KAAK,EAA3G,EAA+G;AAC3G,WAAK/C,WAAL,CAAiB+C,KAAjB,EAAwBa,MAAxB,GAA+B,IAA/B;AACA,WAAK5D,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6D6E,UAA7D,GAAwE,KAAKvG,cAAL,CAAoBoD,KAApB,CAAxE;AACA,WAAK/C,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DgG,OAA7D,CAAqE,KAAK1H,cAAL,CAAoBoD,KAApB,EAA2BlG,UAAhG;AACH;AACJ,GAhqBoB;AAkqBrBuF,EAAAA,YAlqBqB,wBAkqBRkF,gBAlqBQ,EAkqBSC,MAlqBT,EAmqBrB;AACI,QAAGD,gBAAH,EACA;AACI,WAAKtH,WAAL,CAAiBuH,MAAjB,EAAyBlG,YAAzB,CAAsC,sBAAtC,EAA8D6E,UAA9D,GAAyE,KAAKvG,cAAL,CAAoB4H,MAApB,CAAzE;;AAEA,WAAK,IAAIxE,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DoB,UAA1F,EAAsGc,KAAK,EAA3G,EAA+G;AAC3G,YAAGwE,MAAM,IAAExE,KAAX,EACA;AACI,eAAK/C,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DmG,mBAA7D,CAAiF,IAAjF;AACA,eAAKxH,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DoG,oBAA7D,CAAkF,IAAlF;AACH,SAJD,MAMA;AACI,eAAKzH,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DmG,mBAA7D,CAAiF,KAAjF;AACA,eAAKxH,WAAL,CAAiB+C,KAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6DoG,oBAA7D,CAAkF,KAAlF;AACH;AACJ;AACJ;AACJ,GArrBoB;;AAurBpB;;;;;;AAMDd,EAAAA,iBA7rBqB,6BA6rBHE,aA7rBG,EA8rBrB;AAAA,QADkBA,aAClB;AADkBA,MAAAA,aAClB,GADgC,KAChC;AAAA;;AACI,QAAG,CAACA,aAAJ,EACA;AACI,WAAK,IAAI9D,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKpD,cAAL,CAAoBuC,MAAhD,EAAwDa,KAAK,EAA7D,EAAiE;AAC7D,YAAG,KAAKpD,cAAL,CAAoBoD,KAApB,EAA2B5F,eAA3B,IAA4C,CAA/C,EACI,KAAK8C,cAAL,CAAoB8C,KAApB,EAA2BY,WAA3B,CAAuC,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCC,CAA3E,EAA6E,KAAKvD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCE,CAAjH,EADJ,KAEK,IAAG,KAAK/D,cAAL,CAAoBoD,KAApB,EAA2B3F,oBAA3B,IAAiD,CAApD,EACD,KAAK6C,cAAL,CAAoB8C,KAApB,EAA2BY,WAA3B,CAAuC,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCC,CAA3E,EAA6E,KAAKvD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCE,CAAjH;AACP;AACJ,KARD,MASA;AACI,UAAG,KAAK/D,cAAL,CAAoB,KAAKe,UAAzB,EAAqCvD,eAArC,IAAsD,CAAzD,EACI,KAAK8C,cAAL,CAAoB,KAAKS,UAAzB,EAAqCiD,WAArC,CAAiD,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCC,CAArF,EAAuF,KAAKvD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCE,CAA3H,EADJ,KAEK,IAAG,KAAK/D,cAAL,CAAoB,KAAKe,UAAzB,EAAqCtD,oBAArC,IAA2D,CAA9D,EACD,KAAK6C,cAAL,CAAoB,KAAKS,UAAzB,EAAqCiD,WAArC,CAAiD,KAAKzD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCC,CAArF,EAAuF,KAAKvD,kBAAL,CAAwB,CAAxB,EAA2BsD,QAA3B,CAAoCE,CAA3H;AACP;;AAED,SAAK,IAAIX,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DoB,UAA1F,EAAsGc,OAAK,EAA3G,EAA+G;AAC3G,WAAK9C,cAAL,CAAoB8C,OAApB,EAA2Ba,MAA3B,GAAkC,IAAlC;AACH;AACJ,GAltBoB;AAotBrB8D,EAAAA,yBAptBqB,uCAqtBrB;AACI,QAAIC,SAAS,GAAC,KAAK1H,cAAL,CAAoB,KAAKS,UAAzB,EAAqCkH,qBAArC,CAA2DrN,EAAE,CAAC6I,IAAH,CAAQ,CAAR,EAAU,GAAV,CAA3D,CAAd;AACA,SAAKrD,UAAL,CAAgByD,QAAhB,GAAyB,KAAKzD,UAAL,CAAgB8H,MAAhB,CAAuBC,oBAAvB,CAA4CH,SAA5C,CAAzB;AAEA,QAAII,KAAK,GAACJ,SAAS,CAACjE,CAAV,GAAYnJ,EAAE,CAACyN,OAAH,CAAWC,MAAjC;AACA,SAAK7G,MAAL,CAAY8G,SAAZ,GAAsB,CAAtB;AACH,GA3tBoB;AA6tBrBC,EAAAA,UA7tBqB,wBA6tBP;AACV,QAAG,KAAK7G,eAAR,EACI,KAAKoG,yBAAL;AACP,GAhuBoB;AAkuBrBU,EAAAA,YAluBqB,wBAkuBRC,KAluBQ,EAmuBrB;AACI,QAAIC,MAAM,GAACD,KAAK,CAACE,KAAjB;AACA,QAAIC,MAAM,GAACH,KAAK,CAACI,KAAjB;;AACA,QAAIC,OAAO,GAACJ,MAAM,GAACE,MAAnB;;AAEAjK,IAAAA,UAAU,GAAC,IAAX;AACA,SAAK2C,aAAL,GAAmB,KAAnB;;AAEA,QAAG,KAAKf,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI,aAAK,IAAI4C,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,GAAiGzG,MAA7H,EAAqIa,KAAK,EAA1I,EAA8I;AAC1I,cAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,GAAiG5F,KAAjG,EAAwGH,gBAAxG,CAAyHU,IAAzH,CAA8HU,MAA9H,IAAsI,KAAKrE,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAA9K,EACA;AACIyE,YAAAA,OAAO,CAACG,GAAR,CAAY,oBAAkB,KAAK/B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7D,UAAnE;AACA,iBAAK8C,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuDS,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,GAAiG5F,KAAjG,EAAwGH,gBAAxG,CAAyHC,iBAAzH,CAA2I9E,iBAAlM;AACH;AACJ;AACJ;;AAED,QAAG,KAAK4B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,IAAwD,CAAxD,IAA6D,CAAC,KAAK4B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC1C,sBAAtG,EACA;AACI,UAAG,KAAK2B,cAAL,CAAoB,KAAKe,UAAzB,EAAqCzD,YAArC,CAAkD,CAAlD,EAAqDhC,YAArD,IAAmE,CAAtE,EACA;AACImD,QAAAA,WAAW,GAAC,CAAZ;AACA,aAAKuB,cAAL,CAAoB,KAAKe,UAAzB,EAAqC1C,sBAArC,GAA4D,IAA5D;AACAuD,QAAAA,OAAO,CAACC,KAAR,CAAcpD,WAAd;AACH,OALD,MAOA;AACI,aAAKuB,cAAL,CAAoB,KAAKe,UAAzB,EAAqC1C,sBAArC,GAA4D,IAA5D;AACAI,QAAAA,WAAW,GAAC,EAAZ;AACAmD,QAAAA,OAAO,CAACC,KAAR,CAAcpD,WAAd;AACH;AACJ,KAdD,MAgBA;AACI,UAAG,KAAKuB,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,IAAwD,EAA3D,EACI,KAAK4B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuD,KAAK4B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuD,EAA9G,CADJ,KAGI,KAAK4B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuD,KAAK4B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuD,CAA9G;AAEJK,MAAAA,WAAW,GAAC,KAAKuB,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAAjD;AACAwD,MAAAA,OAAO,CAACC,KAAR,CAAcpD,WAAW,GAAC,CAA1B;AACH;;AAGDE,IAAAA,QAAQ,GAACoK,OAAT;AACArK,IAAAA,QAAQ,GAAC,CAAT;AACAG,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0D8G,2BAA1D,CAAsFtK,QAAtF;;AAEA,SAAK,IAAIyE,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAG,KAAK/C,WAAL,CAAiBkC,MAA7C,EAAqDa,OAAK,EAA1D,EAA8D;AAC1D,UAAG,KAAKrC,UAAL,IAAiBqC,OAApB,EACA;AACI,aAAK/C,WAAL,CAAiB+C,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6D4E,cAA7D,CAA4ErC,MAA5E,GAAmF,IAAnF;;AACA,aAAK5D,WAAL,CAAiB+C,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6D4E,cAA7D,CAA4E5E,YAA5E,CAAyF,gBAAzF,EAA2GwH,WAA3G,CAAuHP,MAAvH,EAA8HE,MAA9H;AACH,OAJD,MAMA;AACI,aAAKxI,WAAL,CAAiB+C,OAAjB,EAAwB1B,YAAxB,CAAqC,sBAArC,EAA6D4E,cAA7D,CAA4ErC,MAA5E,GAAmF,KAAnF;AACH;AACJ,KA5DL,CA8DI;AACA;AACA;;AACH,GApyBoB;AAsyBrBkF,EAAAA,gBAtyBqB,8BAuyBrB;AACI,QAAInB,SAAS,GAAC,KAAK1H,cAAL,CAAoB,KAAKS,UAAzB,EAAqCkH,qBAArC,CAA2DrN,EAAE,CAAC6I,IAAH,CAAQ,CAAR,EAAU,GAAV,CAA3D,CAAd;;AACA,QAAI2F,IAAI,GAAC,KAAKhJ,UAAL,CAAgB8H,MAAhB,CAAuBC,oBAAvB,CAA4CH,SAA5C,CAAT;;AACA,SAAKqB,WAAL,CAAiBD,IAAjB,EAAsB,IAAtB,EAA2B,GAA3B;AACH,GA3yBoB;AA6yBrBE,EAAAA,cA7yBqB,0BA6yBNC,QA7yBM,EA8yBrB;AACI,QAAIC,WAAW,GAAC,CAAhB;AACA,QAAIC,YAAY,GAAC,CAAjB;;AACA,SAAK,IAAIrG,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,GAAiGzG,MAA7H,EAAqIa,KAAK,EAA1I,EAA8I;AAC1I,UAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,GAAiG5F,KAAjG,EAAwGH,gBAAxG,CAAyHU,IAAzH,CAA8HU,MAA9H,IAAsI,KAAKrE,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAA9K,EACA;AACI;AACAsM,QAAAA,YAAY,GAAC5K,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,GAAiG5F,KAAjG,EAAwGH,gBAAxG,CAAyHC,iBAAzH,CAA2I9E,iBAAxJ;AACH;AACJ;;AAEH,QAAGqL,YAAY,GAAC,CAAb,GAAe,CAAlB,EACA;AACE7H,MAAAA,OAAO,CAACC,KAAR,CAAc,wBAAd;AACA2H,MAAAA,WAAW,GAACC,YAAY,GAACF,QAAb,GAAsB,CAAlC;AACA,UAAIG,QAAQ,GAACC,QAAQ,CAAC9K,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D6F,WAA1D,EAAuE5F,iBAAvE,CAAyFlC,YAAzF,CAAsG,cAAtG,EAAsHkI,SAAtH,CAAgIC,UAAjI,CAArB;AACAjI,MAAAA,OAAO,CAACC,KAAR,CAAc,YAAU6H,QAAxB;AACD,KAND,MAQA;AACEF,MAAAA,WAAW,GAACC,YAAY,GAACF,QAAzB;AACA,UAAIG,QAAQ,GAACC,QAAQ,CAAC9K,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0D6F,WAA1D,EAAuE5F,iBAAvE,CAAyFlC,YAAzF,CAAsG,cAAtG,EAAsHkI,SAAtH,CAAgIC,UAAjI,CAArB;AACAjI,MAAAA,OAAO,CAACC,KAAR,CAAc,YAAU6H,QAAxB;AACD;AAEF,GAv0BoB;AAy0BrBrD,EAAAA,QAAQ,EAAC,oBACT;AACI,QAAIyD,KAAJ;AACA,QAAIC,KAAJ;;AACA,QAAIvP,OAAO,IAAI,KAAKwF,cAAL,CAAoB,KAAKe,UAAzB,EAAqC1D,KAArC,IAA4C,KAA3D,EACA;AACIyM,MAAAA,KAAK,GAAGH,QAAQ,CAAClP,WAAD,CAAhB;AACAsP,MAAAA,KAAK,GAAGJ,QAAQ,CAACjP,WAAD,CAAhB;AACH,KAJD,MAKK,IAAI,KAAKsF,cAAL,CAAoB,KAAKe,UAAzB,EAAqC1D,KAArC,IAA8C,IAA9C,IAAsD7C,OAA1D,EACL;AACIsP,MAAAA,KAAK,GAAG,CAAR;AACAC,MAAAA,KAAK,GAAG,CAAR;AACH,KAJI,MAML;AACID,MAAAA,KAAK,GAAC,KAAKrC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAN;AACAsC,MAAAA,KAAK,GAAC,KAAKtC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAN;AACH,KAjBL,CAoBI;AACA;;;AAEA9I,IAAAA,QAAQ,GAACmL,KAAK,GAACC,KAAf;AACA,QAAIC,QAAQ,GAAC;AAACpB,MAAAA,KAAK,EAACkB,KAAP;AAAahB,MAAAA,KAAK,EAACiB;AAAnB,KAAb,CAxBJ,CAyBI;AACA;;AACAnI,IAAAA,OAAO,CAACG,GAAR,CAAY,kBAAgBpD,QAAhB,GAAyB,UAAzB,GAAoCmL,KAApC,GAA0C,UAA1C,GAAqDC,KAAjE;AAEAlL,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EqF,QAA5E;AACH,GAx2BoB;AA02BrBC,EAAAA,WA12BqB,yBA22BrB;AACI,QAAIH,KAAK,GAAC,KAAKrC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACA,WAAOqC,KAAP;AACH,GA92BoB;AAg3BrBI,EAAAA,YAh3BqB,0BAi3BrB;AACI,QAAIJ,KAAK,GAAC,KAAKrC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACA,QAAIsC,KAAK,GAAC,KAAKtC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACA,WAAQqC,KAAK,GAACC,KAAd;AACH,GAr3BoB;AAu3BrBI,EAAAA,YAv3BqB,0BAw3BrB;AACI,QAAIC,QAAQ,GAACT,QAAQ,CAAC9K,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFlC,YAAzF,CAAsG,cAAtG,EAAsHkI,SAAtH,CAAgIC,UAAjI,CAArB;;AACA,SAAK7J,cAAL,CAAoB,KAAKe,UAAzB,EAAqC3C,iBAArC,GAAuDK,WAAvD;;AACA,QAAG2L,QAAQ,IAAE,CAAV,IAAeA,QAAQ,IAAE,CAA5B,EAA+B;AAC/B;AACI,YAAIjF,UAAU,GAAC,KAAKsC,SAAL,CAAe,CAAf,EAAiB,EAAjB,CAAf,CADJ,CAGI;;AACA,YAAG2C,QAAQ,IAAE,CAAb,EAAgB;AAChB;AACI,gBAAIC,UAAU,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAAf;AACA,gBAAIjH,KAAK,GAAC,KAAKqE,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACAtC,YAAAA,UAAU,GAACkF,UAAU,CAACjH,KAAD,CAArB;AACH,WALD,MAKM,IAAGgH,QAAQ,IAAE,CAAb,EAAgB;AACtB;AACI,gBAAIC,UAAU,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,CAAT,EAAW,CAAX,EAAa,CAAb,EAAe,CAAf,EAAiB,CAAjB,EAAmB,CAAnB,CAAf;AACA,gBAAIjH,KAAK,GAAC,KAAKqE,SAAL,CAAe,CAAf,EAAiB,EAAjB,CAAV;AACAtC,YAAAA,UAAU,GAACkF,UAAU,CAACjH,KAAD,CAArB,CAHJ,CAII;AACH,WANK,MAOD,IAAGgH,QAAQ,IAAE,CAAb,EAAgB;AACrB;AACI,gBAAIC,UAAU,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,CAAP,EAAS,EAAT,EAAY,CAAZ,CAAf;AACA,gBAAIjH,KAAK,GAAC,KAAKqE,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACAtC,YAAAA,UAAU,GAACkF,UAAU,CAACjH,KAAD,CAArB;AACH,WALI,MAOA,IAAGgH,QAAQ,IAAE,CAAb,EAAgB;AACrB;AACI,gBAAIC,UAAU,GAAC,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,EAAO,EAAP,CAAf;AACA,gBAAIjH,KAAK,GAAC,KAAKqE,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAV;AACAtC,YAAAA,UAAU,GAACkF,UAAU,CAACjH,KAAD,CAArB;AACH;;AAEDxE,QAAAA,UAAU,GAAC,KAAX;;AAEA,YAAG,KAAK4B,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI,gBAAG,KAAKR,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACI,kBAAIiG,WAAW,GAAC;AAAC,8BAAanF,UAAd;AAAyB,2BAAU1G;AAAnC,eAAhB;AACA,mBAAK+F,iBAAL,CAAuB8F,WAAvB;AACH,aAJD,MAMA;AACI,mBAAKxF,mBAAL;AACH;AACJ,WAXD,MAWM,IAAG,KAAKtE,YAAL,IAAmB,CAAtB,EAAyB;AAC/B;AACI,gBAAI8J,WAAW,GAAC;AAAC,4BAAanF,UAAd;AAAyB,yBAAU1G;AAAnC,aAAhB;AACA,iBAAK+F,iBAAL,CAAuB8F,WAAvB;AACH;AACJ,OAjDD,MAmDA;AACI1L,MAAAA,UAAU,GAAC,KAAX;AACAgD,MAAAA,OAAO,CAACG,GAAR,CAAY,uEAAZ;AACA,WAAKuD,sBAAL;AACH;AACJ,GAn7BoB;AAq7BrBiF,EAAAA,gBAr7BqB,8BAs7BrB;AACI3L,IAAAA,UAAU,GAAC,KAAX;AACAgD,IAAAA,OAAO,CAACG,GAAR,CAAY,uEAAZ;AACA,SAAKuD,sBAAL;AACH,GA17BoB;AA47BrBkF,EAAAA,gBA57BqB,4BA47BJC,MA57BI,EA67BrB;AAAA,QADiBA,MACjB;AADiBA,MAAAA,MACjB,GADwB,KACxB;AAAA;;AACI,QAAGA,MAAM,IAAE,KAAX,EACA;AACI,UAAG,KAAKzK,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACI,YAAIqG,YAAY,GAAC,KAAK3J,UAAtB;;AACA,YAAG,KAAKf,cAAL,CAAoB0K,YAApB,EAAkCpM,cAAlC,IAAkD,KAArD,EACA;AACI,eAAK0B,cAAL,CAAoB0K,YAApB,EAAkCpM,cAAlC,GAAiD,IAAjD;AAEA,cAAIqM,KAAK,GAAC,KAAK3K,cAAL,CAAoB,KAAKe,UAAzB,EAAqCnD,IAA/C;;AACA,cAAIgN,QAAQ,GAAC/L,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFlN,eAA9F;;AACA,cAAIsN,QAAQ,GAACjM,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFjN,oBAA9F;;AACA,cAAIsN,WAAW,GAAClM,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFhN,oBAAjG;;AAEA,cAAIsN,UAAU,GAAC,CAAf;;AACA,eAAK,IAAI5H,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFpN,YAAjF,CAA8FiF,MAA1H,EAAkIa,KAAK,EAAvI,EAA2I;AACvI,gBAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFpN,YAAjF,CAA8F8F,KAA9F,EAAqG9G,SAAxG,EACA;AACI0O,cAAAA,UAAU,IAAEnM,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFpN,YAAjF,CAA8F8F,KAA9F,EAAqG7G,UAAjH;AACH;AACJ;;AAED,cAAI0O,MAAM,GAAC,CAACH,QAAQ,GAACC,WAAV,IAAuB,MAAlC;AAEA,cAAIG,MAAM,GAAC,CAAX;AACA,cAAGN,QAAQ,IAAE,CAAb,EACIM,MAAM,GAAC,KAAP,CADJ,KAEK,IAAGN,QAAQ,IAAE,CAAb,EACDM,MAAM,GAAC,QAAM,KAAb,CADC,KAEA,IAAGN,QAAQ,IAAE,CAAb,EACDM,MAAM,GAAC,QAAM,KAAN,GAAY,KAAnB;AAEJ,cAAIC,WAAW,GAACR,KAAK,GAACM,MAAN,GAAaC,MAAb,GAAoBF,UAApC;AAEA,eAAKhL,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxC,UAArC,GAAgD4M,WAAhD;AACAtM,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EsB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKtE,cAAL,CAAoB,KAAKe,UAAzB,CAAnH;AAEH;AACJ;AACJ,KAvCD,MAyCA;AACI,UAAI2J,YAAY,GAAC,KAAK3J,UAAtB;;AACA,UAAG,KAAKf,cAAL,CAAoB0K,YAApB,EAAkCpM,cAAlC,IAAkD,KAArD,EACA;AACI,aAAK0B,cAAL,CAAoB0K,YAApB,EAAkCpM,cAAlC,GAAiD,IAAjD;AAEA,YAAIqM,KAAK,GAAC,KAAK3K,cAAL,CAAoB,KAAKe,UAAzB,EAAqCnD,IAA/C;AACA,YAAIgN,QAAQ,GAAC,KAAK5K,cAAL,CAAoB0K,YAApB,EAAkClN,eAA/C;AACA,YAAIsN,QAAQ,GAAC,KAAK9K,cAAL,CAAoB0K,YAApB,EAAkCjN,oBAA/C;AACA,YAAIsN,WAAW,GAAC,KAAK/K,cAAL,CAAoB0K,YAApB,EAAkChN,oBAAlD;AAEA,YAAIsN,UAAU,GAAC,CAAf;;AACA,aAAK,IAAI5H,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAG,KAAKpD,cAAL,CAAoB0K,YAApB,EAAkCpN,YAAlC,CAA+CiF,MAA3E,EAAmFa,OAAK,EAAxF,EAA4F;AACxF,cAAGvE,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFpN,YAAjF,CAA8F8F,OAA9F,EAAqG9G,SAAxG,EACA;AACI0O,YAAAA,UAAU,IAAEnM,wBAAwB,CAAC6B,QAAzB,CAAkCmK,eAAlC,GAAoD7K,cAApD,CAAmE0K,YAAnE,EAAiFpN,YAAjF,CAA8F8F,OAA9F,EAAqG7G,UAAjH;AACH;AACJ;;AAEG,YAAI0O,MAAM,GAAC,CAACH,QAAQ,GAACC,WAAV,IAAuB,MAAlC;AAEA,YAAIG,MAAM,GAAC,CAAX;AACA,YAAGN,QAAQ,IAAE,CAAb,EACIM,MAAM,GAAC,KAAP,CADJ,KAEK,IAAGN,QAAQ,IAAE,CAAb,EACDM,MAAM,GAAC,QAAM,KAAb,CADC,KAEA,IAAGN,QAAQ,IAAE,CAAb,EACDM,MAAM,GAAC,QAAM,KAAN,GAAY,KAAnB;AAEJ,YAAIC,WAAW,GAACR,KAAK,GAACM,MAAN,GAAaC,MAAb,GAAoBF,UAApC;AAEA,aAAKhL,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxC,UAArC,GAAgD4M,WAAhD;AACH;AACR;AACJ,GAzgCoB;AA2gCtBC,EAAAA,yBA3gCsB,qCA2gCI3G,KA3gCJ,EA4gCtB;AACK5F,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EF,KAA5E;AACJ,GA9gCqB;AAghCtB4G,EAAAA,YAhhCsB,wBAghCTC,IAhhCS,EAihCtB;AAEC,QAAG,KAAK9K,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI,YAAIoG,eAAe,GAAC/H,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DsF,UAA9D,EAApB;AACA,YAAIK,MAAM,GAAChI,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,EAAX;AACApB,QAAAA,OAAO,CAACG,GAAR,CAAYuJ,IAAZ;AACA1J,QAAAA,OAAO,CAACG,GAAR,CAAY8E,MAAM,CAAC5D,gBAAP,CAAwBC,iBAAxB,CAA0C/F,SAAtD;AACA0B,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAA7F,CAA+G1E,QAA/G,GAAwH,IAAxH;;AAEA,YAAGqI,MAAM,CAAC5D,gBAAP,CAAwBC,iBAAxB,CAA0C/F,SAA1C,IAAqDmO,IAAxD,EACA;AACI;AACAzM,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACI,iBAAeI,MAAM,CAAC5D,gBAAP,CAAwBC,iBAAxB,CAA0C3E,UAAzD,GAAoE,IAApE,GAAyE,IAAzE,GACA,wDADA,GACyD,IADzD,GAC8D,IAD9D,GACmE,IADnE,GAEA,sDAHJ,EAII,KAJJ;AAMH,SATD,MAWA;AACI;AACAM,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACI,iBAAeI,MAAM,CAAC5D,gBAAP,CAAwBC,iBAAxB,CAA0C3E,UAAzD,GAAoE,IAApE,GAAyE,IAAzE,GACA,uCADA,GACwC,IADxC,GAC6C,IAD7C,GACkD,IADlD,GAEA,sDAHJ,EAII,KAJJ;AAMH;;AAEDyG,QAAAA,UAAU,CAAC,YAAM;AACbnG,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DqK,WAA9D;AACH,SAFS,EAEP,KAFO,CAAV;AAGH,OAhCD,MAiCK,IAAG,KAAK/K,YAAL,IAAmB,CAAtB,EAAwB;AAC7B;AACI,YAAIoG,eAAe,GAAC,KAAK5G,cAAzB;AACA,YAAI6G,MAAM,GAAC,KAAK7G,cAAL,CAAoB,CAApB,CAAX;AACA4B,QAAAA,OAAO,CAACG,GAAR,CAAYuJ,IAAZ;AACA1J,QAAAA,OAAO,CAACG,GAAR,CAAY8E,MAAM,CAAC1J,SAAnB;AACA,aAAK6C,cAAL,CAAoB,CAApB,EAAuBxB,QAAvB,GAAgC,IAAhC;;AAEA,YAAGqI,MAAM,CAAC1J,SAAP,IAAkBmO,IAArB,EACA;AACI;AACAzM,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACI,iBAAeI,MAAM,CAACtI,UAAtB,GAAiC,IAAjC,GAAsC,IAAtC,GACA,wDADA,GACyD,IADzD,GAC8D,IAD9D,GACmE,IADnE,GAEA,sDAHJ,EAII,KAJJ;AAMH,SATD,MAWA;AACI;AACAM,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACI,iBAAeI,MAAM,CAACtI,UAAtB,GAAiC,IAAjC,GAAsC,IAAtC,GACA,uCADA,GACwC,IADxC,GAC6C,IAD7C,GACkD,IADlD,GAEA,sDAHJ,EAII,KAJJ;AAMH;;AAEDyG,QAAAA,UAAU,CAAC,YAAM;AACbnG,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DqK,WAA9D;AACH,SAFS,EAEP,KAFO,CAAV;AAIH;AAED,GAvlCqB;AAylCrBC,EAAAA,aAAa,EAAC,yBACd;AACI,QAAG/M,WAAW,IAAEI,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DpB,MAA1E,EACA;AACIX,MAAAA,OAAO,CAACG,GAAR,CAAY,UAAZ;AACArC,MAAAA,UAAU,GAAC,IAAX;AACA,WAAK+L,aAAL;;AAEA,UAAG,KAAKjL,YAAL,IAAmB,CAAtB,EAAwB;AACxB;AACI,cAAG3B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FsC,cAA7F,CAA4GC,UAA5G,IAAwH,KAA3H,EACA;AAEI,iBAAKgF,gBAAL;AACA,gBAAIkB,eAAe,GAAC,CAApB;AAEA,gBAAI9E,eAAe,GAAC/H,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DsF,UAA9D,EAApB;;AACA,iBAAK,IAAIpD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGwD,eAAe,CAACrE,MAA5C,EAAoDa,KAAK,EAAzD,EAA6D;AACzD,kBAAGwD,eAAe,CAACxD,KAAD,CAAf,CAAuBH,gBAAvB,CAAwCC,iBAAxC,CAA0D5E,cAA7D,EACA;AACIoN,gBAAAA,eAAe;AAClB;AACJ;;AAGD,gBAAGA,eAAe,IAAE,KAAK1L,cAAL,CAAoBuC,MAAxC,EACA;AACI,kBAAIoJ,GAAG,GAAC,CAAR;AACA,kBAAIC,WAAW,GAAC,CAAhB;AACA,kBAAIC,WAAW,GAAChN,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DsF,UAA9D,EAAhB;;AACA,mBAAK,IAAIpD,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGyI,WAAW,CAACtJ,MAAxC,EAAgDa,OAAK,EAArD,EAAyD;AACrD,oBAAI0I,MAAM,GAAGD,WAAW,CAACzI,OAAD,CAAX,CAAmBH,gBAAnB,CAAoCC,iBAApC,CAAsD3E,UAAnE;;AAEA,oBAAGuN,MAAM,GAAGH,GAAZ,EACA;AACIC,kBAAAA,WAAW,GAACxI,OAAZ;AACAuI,kBAAAA,GAAG,GAACG,MAAJ;AACH;AACJ;;AAEDlK,cAAAA,OAAO,CAACG,GAAR,CAAY,4BAA0B8J,WAAW,CAACD,WAAD,CAAX,CAAyB3I,gBAAzB,CAA0CC,iBAA1C,CAA4D/F,SAAlG;AAGA,mBAAKiO,yBAAL,CAA+BS,WAAW,CAACD,WAAD,CAAX,CAAyB3I,gBAAzB,CAA0CC,iBAA1C,CAA4D/F,SAA3F,EAjBJ,CAkBI;AACH,aApBD,MAqBA;AACIyB,cAAAA,UAAU,GAAC,KAAX;AACA,mBAAK2F,UAAL;AACH;AACJ;AACJ,SA3CD,MA4CK,IAAG,KAAK/D,YAAL,IAAmB,CAAtB,EAAwB;AAC7B;AACI,eAAKgK,gBAAL,CAAsB,IAAtB;AACA,cAAIkB,eAAe,GAAC,CAApB;AAEA,cAAI9E,eAAe,GAAC,KAAK5G,cAAzB;;AACA,eAAK,IAAIoD,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGwD,eAAe,CAACrE,MAA5C,EAAoDa,OAAK,EAAzD,EAA6D;AACzD,gBAAGwD,eAAe,CAACxD,OAAD,CAAf,CAAuB9E,cAA1B,EACA;AACIoN,cAAAA,eAAe;AAClB;AACJ;;AAGD,cAAGA,eAAe,IAAE,KAAK1L,cAAL,CAAoBuC,MAAxC,EACA;AACQ,gBAAIoJ,GAAG,GAAC,CAAR;AACA,gBAAIC,WAAW,GAAC,CAAhB;AACA,gBAAIC,WAAW,GAAC,KAAK7L,cAArB;;AACA,iBAAK,IAAIoD,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGyI,WAAW,CAACtJ,MAAxC,EAAgDa,OAAK,EAArD,EAAyD;AACrD,kBAAI0I,MAAM,GAAGD,WAAW,CAACzI,OAAD,CAAX,CAAmB7E,UAAhC;;AAEA,kBAAGuN,MAAM,GAAGH,GAAZ,EACA;AACIC,gBAAAA,WAAW,GAACxI,OAAZ;AACAuI,gBAAAA,GAAG,GAACG,MAAJ;AACH;AACJ;;AAEDlK,YAAAA,OAAO,CAACG,GAAR,CAAY,4BAA0B8J,WAAW,CAACD,WAAD,CAAX,CAAyBzO,SAA/D;AAGA,iBAAKiO,yBAAL,CAA+BS,WAAW,CAACD,WAAD,CAAX,CAAyBzO,SAAxD,EAjBR,CAkBQ;AACP,WApBD,MAqBA;AACIyB,YAAAA,UAAU,GAAC,KAAX;AACA,iBAAK2F,UAAL;AACH;AACJ;AACJ,KA1FD,MA4FA;AACI7F,MAAAA,QAAQ,GAACA,QAAQ,GAAC,CAAlB;;AACA,UAAI8E,MAAM,GAAC5I,EAAE,CAAC6I,IAAH,CAAQ5E,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFC,QAAzF,CAAkGC,CAA1G,EAA4GjF,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAA9M,CAAX;;AACA,WAAKgI,WAAL,CAAiB,KAAKzL,cAAL,CAAoB,KAAKS,UAAzB,CAAjB,EAAsDyC,MAAtD;AACH;AACJ,GA5rCoB;AA8rCrBiE,EAAAA,SAAS,EAAC,mBAASuE,GAAT,EAAaL,GAAb,EACV;AACI,WAAOM,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBR,GAAG,GAAGK,GAAvB,CAAX,IAA2CA,GAAlD,CADJ,CAC2D;AAC1D,GAjsCoB;AAmsCrB3C,EAAAA,WAAW,EAAE,qBAAUD,IAAV,EAAgBgD,MAAhB,EAAuBC,IAAvB,EAA6B;AAAA;;AACtCzR,IAAAA,EAAE,CAAC0R,KAAH,CAAS,KAAKlM,UAAd,EACCmM,EADD,CACIF,IADJ,EACU;AAAExI,MAAAA,QAAQ,EAAEjJ,EAAE,CAAC4R,EAAH,CAAMpD,IAAI,CAACtF,CAAX,EAAcsF,IAAI,CAACrF,CAAnB;AAAZ,KADV,EAC6C;AAAC0I,MAAAA,MAAM,EAAC;AAAR,KAD7C,EAECC,IAFD,CAEM,YAAM;AACZ,UAAGN,MAAH,EACI,MAAI,CAACO,YAAL,GADJ,KAGI,MAAI,CAAClB,aAAL;AACH,KAPD,EAQCmB,KARD;AASH,GA7sCoB;AA+sCrBD,EAAAA,YA/sCqB,0BA+sCL;AAAA;;AACZ3H,IAAAA,UAAU,CAAC,YAAM;AACZ,UAAG,MAAI,CAACvD,MAAL,CAAY8G,SAAZ,GAAsB,CAAzB,EACA;AACG,QAAA,MAAI,CAAC9G,MAAL,CAAY8G,SAAZ,GAAsB,MAAI,CAAC9G,MAAL,CAAY8G,SAAZ,GAAsB,IAA5C;;AACA,QAAA,MAAI,CAACoE,YAAL;AACF,OAJD,MAMA;AACG,QAAA,MAAI,CAAClL,MAAL,CAAY8G,SAAZ,GAAsB,CAAtB;AACA,QAAA,MAAI,CAAC5G,eAAL,GAAqB,IAArB;;AACA,QAAA,MAAI,CAAC6J,aAAL;AACF;AACH,KAZO,EAYL,EAZK,CAAV;AAaH,GA7tCoB;AA+tCrBqB,EAAAA,qBA/tCqB,iCA+tCCpC,MA/tCD,EAguCrB;AAAA,QADsBA,MACtB;AADsBA,MAAAA,MACtB,GAD6B,KAC7B;AAAA;;AACI,QAAGd,QAAQ,CAAC9K,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFlC,YAAzF,CAAsG,cAAtG,EAAsHkI,SAAtH,CAAgIC,UAAjI,CAAR,IAAsJ,CAAzJ,EACI7K,YAAY,GAAC,IAAb;AAEJ,QAAG2K,QAAQ,CAAC9K,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFlC,YAAzF,CAAsG,cAAtG,EAAsHkI,SAAtH,CAAgIC,UAAjI,CAAR,IAAsJ,CAAzJ,EACI5K,YAAY,GAAC,IAAb;AAEJC,IAAAA,kBAAkB,GAAC,KAAKc,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDb,iBAA1E;;AACA,QAAGsC,YAAY,IAAI,CAACC,YAAjB,IAAiC,CAACC,kBAArC,EACA;AACI,WAAK4N,uBAAL,CAA6B,KAA7B;AACA,WAAKC,YAAL,CAAkB,KAAlB,EAAwB,KAAxB;AACA,WAAKC,0BAAL,CAAgC,KAAhC,EAAsCvC,MAAtC;AACH,KALD,MAMK,IAAIxL,YAAD,IAAmBD,YAAY,IAAIE,kBAAtC,EACL;AACI,WAAK4N,uBAAL,CAA6B,KAA7B;AACA,WAAKC,YAAL,CAAkB,KAAlB,EAAwB,KAAxB;AACA,WAAKC,0BAAL,CAAgC,IAAhC,EAAqCvC,MAArC;AACH,KALI,MAOL;AACI,WAAKN,YAAL;AACH;AACJ,GAxvCoB;AA0vCrBsB,EAAAA,aA1vCqB,2BA0vCJ;AAAA;;AACbzG,IAAAA,UAAU,CAAC,YAAM;AACb,UAAG,MAAI,CAACvD,MAAL,CAAY8G,SAAZ,IAAuB,CAA1B,EACA;AACG,QAAA,MAAI,CAAC5G,eAAL,GAAqB,KAArB;AACA,QAAA,MAAI,CAACF,MAAL,CAAY8G,SAAZ,GAAsB,MAAI,CAAC9G,MAAL,CAAY8G,SAAZ,GAAsB,IAA5C;;AACA,QAAA,MAAI,CAACkD,aAAL;AACF,OALD,MAOA;AACI,QAAA,MAAI,CAACrL,UAAL,CAAgByD,QAAhB,GAAyBjJ,EAAE,CAAC6I,IAAH,CAAQ,CAAR,EAAU,CAAV,CAAzB;AACA,QAAA,MAAI,CAAChC,MAAL,CAAY8G,SAAZ,GAAsB,CAAtB;AAEA1J,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0D8G,2BAA1D,CAAsF,CAAtF;;AAEA,YAAG,CAACvJ,UAAJ,EACA;AACI,cAAG,MAAI,CAACc,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACI,kBAAG,MAAI,CAACR,cAAL,CAAoB,MAAI,CAACe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACI,MAAI,CAACwI,qBAAL,GADJ,KAGI,MAAI,CAAC1C,YAAL;AACP,aAND,MAMM,IAAG,MAAI,CAAC3J,YAAL,IAAmB,CAAtB,EAAyB;AAC/B;AACG;AACK,cAAA,MAAI,CAACqM,qBAAL,CAA2B,MAAI,CAAC7M,cAAL,CAAoB,MAAI,CAACe,UAAzB,EAAqC1D,KAAhE,EAFR,CAGG;AACE;;AACJ;AACJ;AACJ;AACH,KA/BQ,EA+BN,EA/BM,CAAV;AAiCH,GA5xCoB;AA8xCrB0O,EAAAA,WAAW,EAAE,qBAAU5L,IAAV,EAAe8M,KAAf,EAAsB;AAAA;;AAC/BrS,IAAAA,EAAE,CAAC0R,KAAH,CAASnM,IAAT,EACCoM,EADD,CACI,GADJ,EACS;AAAE1I,MAAAA,QAAQ,EAAEjJ,EAAE,CAAC4R,EAAH,CAAMS,KAAK,CAACnJ,CAAZ,EAAemJ,KAAK,CAAClJ,CAArB;AAAZ,KADT,EAC8C;AAAC0I,MAAAA,MAAM,EAAC;AAAR,KAD9C,EAECC,IAFD,CAEM,YAAM;AACZ,UAAGhO,QAAQ,GAACC,QAAZ,EACA;AACI,YAAG,CAACe,UAAJ,EACA;AACI,cAAG,MAAI,CAACc,YAAL,IAAmB,CAAtB,EACA;AACI,gBAAG,MAAI,CAACR,cAAL,CAAoB,MAAI,CAACe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACI,kBAAGsF,QAAQ,CAAC9K,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFlC,YAAzF,CAAsG,cAAtG,EAAsHkI,SAAtH,CAAgIC,UAAjI,CAAR,IAAsJ,CAAzJ,EACI7K,YAAY,GAAC,IAAb;AACP;AACJ,WAPD,MAQK,IAAG,MAAI,CAACwB,YAAL,IAAmB,CAAtB,EAAwB;AAC7B;AACI,kBAAGmJ,QAAQ,CAAC9K,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFlC,YAAzF,CAAsG,cAAtG,EAAsHkI,SAAtH,CAAgIC,UAAjI,CAAR,IAAsJ,CAAzJ,EACI7K,YAAY,GAAC,IAAb;AACP;AACJ;;AAED,YAAGP,WAAW,IAAE,EAAhB,EACIA,WAAW,GAACA,WAAW,GAAC,EAAxB,CADJ,KAGIA,WAAW,GAACA,WAAW,GAAC,CAAxB,CArBR,CAuBI;;AACAmD,QAAAA,OAAO,CAACG,GAAR,CAAYrD,QAAQ,GAAC,GAAT,GAAaD,WAAzB;;AAEA,QAAA,MAAI,CAAC+M,aAAL,GA1BJ,CA2BI;;AAEH,OA9BD,MAgCA;AACI,YAAI0B,OAAO,GAACtS,EAAE,CAAC6I,IAAH,CAAQ,CAAR,EAAU,CAAV,CAAZ;;AACA,QAAA,MAAI,CAAC4F,WAAL,CAAiB6D,OAAjB,EAAyB,KAAzB,EAA+B,GAA/B,EAFJ,CAEyC;;AACxC;AAEA,KAxCD,EAyCCN,KAzCD;AA0CH,GAz0CoB;AA20CrB;AAEAG,EAAAA,YA70CqB,wBA60CRI,IA70CQ,EA60CHC,IA70CG,EA80CrB;AACIpO,IAAAA,YAAY,GAACmO,IAAb;AACAlO,IAAAA,YAAY,GAACmO,IAAb;AACH,GAj1CoB;AAm1CrBC,EAAAA,2BAn1CqB,uCAm1COC,MAn1CP,EAm1Cc1F,MAn1Cd,EAm1CqB2F,aAn1CrB,EAo1CrB;AACI,QAAG,KAAKvN,cAAL,CAAoB,KAAKe,UAAzB,EAAqCnD,IAArC,IAA2C0P,MAA9C,EACA;AACI,WAAKtN,cAAL,CAAoB,KAAKe,UAAzB,EAAqCnD,IAArC,GAA0C,KAAKoC,cAAL,CAAoB,KAAKe,UAAzB,EAAqCnD,IAArC,GAA0C0P,MAApF;AACA,WAAKtN,cAAL,CAAoB,KAAKe,UAAzB,EAAqCrD,oBAArC,GAA0D,KAAKsC,cAAL,CAAoB,KAAKe,UAAzB,EAAqCrD,oBAArC,GAA0D,CAApH;;AACA,WAAKsC,cAAL,CAAoB,KAAKe,UAAzB,EAAqCzD,YAArC,CAAkDsK,MAAlD,EAA0DvL,aAA1D,CAAwEuJ,IAAxE,CAA6E2H,aAA7E;;AACA1O,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,+CAApE,EAAoH,IAApH;AACAzB,MAAAA,UAAU,CAAC,YAAM;AACbnG,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DqL,sCAA1D;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KATD,MAWA;AACI3O,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,uEAAqE6G,MAAzI;AACH;AAEJ,GAp2CoB;AAs2CrBG,EAAAA,2CAt2CqB,yDAu2CrB;AACI1O,IAAAA,qBAAqB,GAAC,EAAtB;AAEA6C,IAAAA,OAAO,CAACG,GAAR,CAAY,KAAK/B,cAAL,CAAoB,KAAKe,UAAzB,EAAqCzD,YAAjD;;AACA,SAAK,IAAIoQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK1N,cAAL,CAAoB,KAAKe,UAAzB,EAAqCzD,YAArC,CAAkDiF,MAAtE,EAA8EmL,CAAC,EAA/E,EAAmF;AAC/E,UAAG/D,QAAQ,CAAC,KAAK3J,cAAL,CAAoB,KAAKe,UAAzB,EAAqCzD,YAArC,CAAkDoQ,CAAlD,EAAqDpS,YAAtD,CAAR,IAA6E,CAAhF,EAAmF;AACnF;AACI,cAAIqS,IAAI,GAAG/S,EAAE,CAACgT,WAAH,CAAe/O,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0D0L,mBAA1D,CAA8EC,oBAA7F,CAAX;AACAH,UAAAA,IAAI,CAACzF,MAAL,GAAcrJ,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0D0L,mBAA1D,CAA8EE,2BAA5F;AACAJ,UAAAA,IAAI,CAACjM,YAAL,CAAkB,uBAAlB,EAA2CsM,gBAA3C,CAA4DN,CAA5D;AACAC,UAAAA,IAAI,CAACjM,YAAL,CAAkB,uBAAlB,EAA2CgG,OAA3C,CAAmD,KAAK1H,cAAL,CAAoB,KAAKe,UAAzB,EAAqCzD,YAArC,CAAkDoQ,CAAlD,EAAqD7R,YAAxG;AACA8R,UAAAA,IAAI,CAACjM,YAAL,CAAkB,uBAAlB,EAA2CuM,YAA3C;AACAlP,UAAAA,qBAAqB,CAAC6G,IAAtB,CAA2B+H,IAA3B;AACH;AACJ;;AACD/L,IAAAA,OAAO,CAACG,GAAR,CAAYhD,qBAAZ;AACA,WAAOA,qBAAqB,CAACwD,MAA7B;AACH,GAx3CoB;AA03CrB2L,EAAAA,qBA13CqB,mCA23CrB;AACI,SAAK,IAAI9K,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGrE,qBAAqB,CAACwD,MAAlD,EAA0Da,KAAK,EAA/D,EAAmE;AAC/DrE,MAAAA,qBAAqB,CAACqE,KAAD,CAArB,CAA6B+K,OAA7B;AACH;;AAEDpP,IAAAA,qBAAqB,GAAC,EAAtB;AACH,GAj4CoB;AAm4CrBqP,EAAAA,yBAn4CqB,qCAm4CKC,KAn4CL,EAm4CWC,YAn4CX,EAm4CwBC,SAn4CxB,EAo4CrB;AACI,QAAGA,SAAH,EACA;AACI,UAAIC,MAAM,GAAC,IAAIzR,SAAJ,EAAX;;AACAyR,MAAAA,MAAM,CAAC3S,YAAP,GAAoBwS,KAApB;AACAG,MAAAA,MAAM,CAACxR,WAAP,GAAmBsR,YAAnB;AAEA,WAAKtO,cAAL,CAAoB,KAAKe,UAAzB,EAAqCpD,UAArC,CAAgDiI,IAAhD,CAAqD4I,MAArD;AACH;AACJ,GA74CoB;AA+4CrBxB,EAAAA,0BA/4CqB,sCA+4CMyB,eA/4CN,EA+4C4BhE,MA/4C5B,EAg5CrB;AAAA;;AAAA,QAD2BgE,eAC3B;AAD2BA,MAAAA,eAC3B,GAD2C,KAC3C;AAAA;;AAAA,QADiDhE,MACjD;AADiDA,MAAAA,MACjD,GADwD,KACxD;AAAA;;AACIrL,IAAAA,eAAe,GAAC,KAAKY,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDX,cAAvE;AACAyC,IAAAA,iBAAiB,GAAC,KAAKW,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDV,gBAAzE;AACAyC,IAAAA,iBAAiB,GAAC,KAAKU,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDT,gBAAzE;;AAEA,QAAGsC,eAAH,EAAoB;AACpB;AACI,aAAKsP,sBAAL,CAA4B,KAA5B;;AAEA,YAAG,CAACjE,MAAJ,EACA;AACI5L,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,kBAApE,EAAuF,IAAvF;AACAzB,UAAAA,UAAU,CAAC,YAAM;AACb,YAAA,MAAI,CAACmF,YAAL;AACH,WAFS,EAEP,IAFO,CAAV;AAGH,SAND,MAOA;AACIvI,UAAAA,OAAO,CAACG,GAAR,CAAY,kBAAZ;AACAiD,UAAAA,UAAU,CAAC,YAAM;AACb,YAAA,MAAI,CAACmF,YAAL;AACH,WAFS,EAEP,GAFO,CAAV;AAGH;AACJ,OAjBD,MAmBA;AACI,UAAIwE,MAAM,GAAC,EAAX;AAEA,UAAGF,eAAH,EACIE,MAAM,GAAC,cAAP,CADJ,KAGIA,MAAM,GAAC,QAAP;AAEJ9P,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DyM,iBAA1D,CAA4ED,MAA5E,EAAmFF,eAAnF,EAAmGpP,iBAAnG,EAAqHC,iBAArH,EAAuImL,MAAvI;AACH;AACJ,GAl7CoB;AAo7CrBoE,EAAAA,qBAp7CqB,mCAq7CrB;AACI,SAAK7O,cAAL,CAAoB,KAAKe,UAAzB,EAAqC9C,UAArC,GAAgD,IAAhD;AACA,SAAK+B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7C,cAArC,IAAqD,CAArD;AACAW,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DQ,8BAA1D,CAAyF,IAAzF,EAA8F,KAA9F,EAAoG,KAAKnC,YAAzG,EAAsH,KAAKR,cAAL,CAAoB,KAAKe,UAAzB,EAAqC9C,UAA3J,EAAsK,KAAK+B,cAAL,CAAoB,KAAKe,UAAzB,EAAqC7C,cAA3M;AACH,GAz7CoB;AA27CrB4Q,EAAAA,+BA37CqB,2CA27CWC,OA37CX,EA27CmBC,IA37CnB,EA47CrB;AACI,QAAIvK,KAAK,GAAG;AAAEd,MAAAA,IAAI,EAAE;AAAE/F,QAAAA,IAAI,EAAEmR,OAAR;AAAiBE,QAAAA,EAAE,EAAED;AAArB;AAAR,KAAZ;AACAnQ,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,EAA1E,EAA8EF,KAA9E;AACH,GA/7CoB;AAi8CrByK,EAAAA,kCAj8CqB,8CAi8CczK,KAj8Cd,EAk8CrB;AACI,QAAI5F,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8DY,aAA9D,MAAiF,KAArF,EACA;AACI,UAAIiN,OAAO,GAAGtK,KAAK,CAACd,IAAN,CAAW/F,IAAzB;AACA,UAAIuR,GAAG,GAAC1K,KAAK,CAACd,IAAN,CAAWsL,EAAnB;;AAEA,UAAIG,QAAQ,GAAG,KAAKvM,UAAL,EAAf;;AAEA,UAAI,KAAK7C,cAAL,CAAoBoP,QAApB,EAA8BjS,SAA9B,IAA2CgS,GAA/C,EAAoD;AAEhD,YAAI,KAAKnP,cAAL,CAAoBoP,QAApB,EAA8B9Q,cAA9B,IAAgD,IAApD,EAA0D;AACtD,eAAK0B,cAAL,CAAoBoP,QAApB,EAA8B7Q,UAA9B,IAA0CwQ,OAA1C;AACH;;AAED,aAAK/O,cAAL,CAAoBoP,QAApB,EAA8BxR,IAA9B,IAAsCmR,OAAtC;AACAlQ,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,kCAAkCsI,OAAlC,GAA4C,qBAAhH,EAAsI,IAAtI;AACAlQ,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EsB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKtE,cAAL,CAAoBoP,QAApB,CAAnH;AACH;AACJ;AACJ,GAr9CoB;AAu9CzB;AAEI;AACAtC,EAAAA,uBA19CqB,mCA09CGuC,MA19CH,EA29CrB;AACInQ,IAAAA,kBAAkB,GAACmQ,MAAnB;AACA,SAAKrP,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDb,iBAAvD,GAAyEwC,kBAAzE;AACH,GA99CoB;AAg+CrBwH,EAAAA,kBAh+CqB,8BAg+CF2I,MAh+CE,EAi+CrB;AACIlQ,IAAAA,aAAa,GAACkQ,MAAd;AACA,SAAKrP,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDZ,YAAvD,GAAoEwC,aAApE;AACH,GAp+CoB;AAs+CrBuP,EAAAA,sBAt+CqB,kCAs+CEW,MAt+CF,EAu+CrB;AACIjQ,IAAAA,eAAe,GAACiQ,MAAhB;AACA,SAAKrP,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDX,cAAvD,GAAsEwC,eAAtE;AACH,GA1+CoB;AA4+CrBkQ,EAAAA,0BA5+CqB,sCA4+CMD,MA5+CN,EA6+CrB;AACIhQ,IAAAA,iBAAiB,GAACgQ,MAAlB;AACA,SAAKrP,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDV,gBAAvD,GAAwEwC,iBAAxE;AACH,GAh/CoB;AAk/CrBkQ,EAAAA,+BAl/CqB,2CAk/CWF,MAl/CX,EAm/CrB;AACI/P,IAAAA,iBAAiB,GAAC+P,MAAlB;AACA,SAAKrP,cAAL,CAAoB,KAAKe,UAAzB,EAAqCxD,iBAArC,CAAuDT,gBAAvD,GAAwEwC,iBAAxE;AACH,GAt/CoB;AAw/CrB4G,EAAAA,kBAx/CqB,8BAw/CFmJ,MAx/CE,EAy/CrB;AACI7P,IAAAA,cAAc,GAAC6P,MAAf;AACH,GA3/CoB;AA6/CrBG,EAAAA,kBA7/CqB,gCA8/CrB;AACI,WAAOhQ,cAAP;AACH,GAhgDoB;AAkgDrBiQ,EAAAA,qBAlgDqB,mCAmgDrB;AACI,QAAIC,WAAW,GAAC,CAAC,CAAjB;;AACA,QAAG,KAAK1P,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAArC,GAAqD,CAAxD,EACA;AACI2R,MAAAA,WAAW,GAAC,KAAK1P,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAAjD;AACA,WAAKiC,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAArC,GAAqD,CAArD;AACH,KAJD,MAMA;AACI2R,MAAAA,WAAW,GAAC,CAAZ;AACH;;AAED,WAAOA,WAAP;AACH,GAhhDoB;AAkhDrBC,EAAAA,sBAlhDqB,kCAkhDEC,WAlhDF,EAmhDrB;AACI,QAAIC,gBAAgB,GAAC,CAAC,CAAtB;;AACA,QAAG,KAAK7P,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAArC,GAAqD,CAAxD,EACA;AACI8R,MAAAA,gBAAgB,GAAC,KAAK7P,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAArC,IAAsD6R,WAAvE;AACH,KAHD,MAKA;AACIC,MAAAA,gBAAgB,GAAC,CAAjB;AACH;;AAED,WAAOA,gBAAP;AACH,GA/hDoB;AAiiDrBC,EAAAA,iBAjiDqB,6BAiiDHC,OAjiDG,EAkiDrB;AACI,QAAIhB,OAAO,GAAC,CAAC,CAAb;;AACA,QAAG,KAAK/O,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAArC,GAAqD,CAAxD,EACA;AACIgS,MAAAA,OAAO,GAAEA,OAAO,GAAC,GAAjB;AACAhB,MAAAA,OAAO,GAAC,KAAK/O,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAArC,IAAsDgS,OAA9D;AACA,WAAK/P,cAAL,CAAoB,KAAKe,UAAzB,EAAqChD,eAArC,GAAqD,CAArD;AACA,WAAKiC,cAAL,CAAoB,KAAKe,UAAzB,EAAqCnD,IAArC,IAA2CmR,OAA3C;AACH,KAND,MAQA;AACIA,MAAAA,OAAO,GAAC,CAAR;AACH;;AAED,WAAOA,OAAP;AACH,GAjjDoB;AAmjDrBiB,EAAAA,mCAnjDqB,+CAmjDevL,KAnjDf,EAojDrB;AACI,QAAIwL,OAAO,GAACxL,KAAK,CAACyL,MAAlB;AACA,QAAIC,cAAc,GAAC1L,KAAK,CAAC2L,QAAzB;AACA,QAAI1F,YAAY,GAACjG,KAAK,CAAC4L,SAAvB;;AACA,QAAIC,kBAAkB,GAACzR,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,EAAvB;;AAEA,QAAG8N,OAAO,IAAEpR,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAA7F,CAA+G/F,SAA3H,EACA;AACIyE,MAAAA,OAAO,CAACG,GAAR,CAAY,YAAZ;;AAEAuO,MAAAA,kBAAkB,CAACC,uCAAnB,CAA2D,IAA3D;;AAEA5Q,MAAAA,gBAAgB,GAACwQ,cAAjB;AACA,UAAIK,cAAc,GAAC5Q,YAAY,CAACuQ,cAAc,GAAC,CAAhB,CAA/B;;AACAG,MAAAA,kBAAkB,CAACG,sCAAnB,CAA0DD,cAA1D;AACH;AACJ,GApkDoB;AAskDrBE,EAAAA,mCAtkDqB,+CAskDeC,WAtkDf,EAukDrB;AAAA,QADoCA,WACpC;AADoCA,MAAAA,WACpC,GADgD,KAChD;AAAA;;AACI,QAAIL,kBAAkB,GAACzR,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,EAAvB;;AACA,QAAIyO,OAAJ;;AACA,QAAIC,SAAJ;;AACA,QAAG,KAAKrQ,YAAL,IAAmB,CAAtB,EAAyB;AACzB;AACIqQ,QAAAA,SAAS,GAAChS,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,EAAV;AACA4H,QAAAA,OAAO,GAAC/R,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAArG;AACH,OAJD,MAKK,IAAG,KAAK1C,YAAL,IAAmB,CAAtB,EAAwB;AAC7B;AACIoQ,QAAAA,OAAO,GAAC,KAAK5Q,cAAL,CAAoB,CAApB,CAAR;AACA6Q,QAAAA,SAAS,GAAC,KAAK7Q,cAAf;AACH;;AACDsQ,IAAAA,kBAAkB,CAACQ,oCAAnB,CAAwD,IAAxD;;AACAR,IAAAA,kBAAkB,CAACS,mCAAnB;;AACAT,IAAAA,kBAAkB,CAACU,mCAAnB,CAAuDJ,OAAvD,EAA+DC,SAA/D,EAAyEF,WAAzE,EAAqF,KAAKnQ,YAA1F;AAEH,GAzlDoB;AA2lDrByQ,EAAAA,yCA3lDqB,uDA4lDrB;AACI,QAAIL,OAAO,GAAC/R,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAAzG;;AACA,QAAIoN,kBAAkB,GAACzR,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,EAAvB;;AAEA,QAAGyO,OAAO,CAAChT,IAAR,IAAc,IAAjB,EACA;AACI,WAAK,IAAIwF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAKpD,cAAL,CAAoBuC,MAAhD,EAAwDa,KAAK,EAA7D,EAAiE;AAC7D,YAAGwN,OAAO,CAACzT,SAAR,IAAmB,KAAK6C,cAAL,CAAoBoD,KAApB,EAA2BjG,SAAjD,EACA;AACI,eAAK6C,cAAL,CAAoBoD,KAApB,EAA2BxF,IAA3B,IAAiC,IAAjC;AACAiB,UAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EsB,iBAA5E,CAA8F,mBAA9F,EAAmH,KAAKtE,cAAL,CAAoBoD,KAApB,CAAnH;AACA;AACH;AACJ;;AAEDvE,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,mDAApE,EAAwH,IAAxH;;AACA6J,MAAAA,kBAAkB,CAACC,uCAAnB,CAA2D,KAA3D;;AACA,WAAKW,8BAAL,CAAoC,IAApC,EAAyC,KAAzC,EAA+C,CAAC,CAAhD,EAAkDN,OAAO,CAACzT,SAA1D;AACH,KAdD,MAgBA;AACI0B,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,6BAApE;AACH;AACJ,GAnnDoB;AAqnDrB0K,EAAAA,8CArnDqB,4DAsnDrB;AACI,QAAIb,kBAAkB,GAACzR,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,EAAvB;;AACA,QAAIyO,OAAO,GAAC/R,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FC,iBAAzG;AACArE,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,8CAApE,EAAmH,IAAnH;;AACA6J,IAAAA,kBAAkB,CAACC,uCAAnB,CAA2D,KAA3D;;AACA,SAAKW,8BAAL,CAAoC,KAApC,EAA0C,IAA1C,EAA+CvR,gBAA/C,EAAgEiR,OAAO,CAACzT,SAAxE;AACH,GA5nDoB;AA8nDrB+T,EAAAA,8BA9nDqB,0CA8nDUE,eA9nDV,EA8nD0BC,oBA9nD1B,EA8nD+ClB,cA9nD/C,EA8nD8DmB,OA9nD9D,EA+nDrB;AACI,QAAI7M,KAAK,GAAC;AAAC8M,MAAAA,WAAW,EAACH,eAAb;AAA6BI,MAAAA,gBAAgB,EAACH,oBAA9C;AAAmEI,MAAAA,aAAa,EAACtB,cAAjF;AAAgGlB,MAAAA,EAAE,EAACqC;AAAnG,KAAV;AACAzS,IAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,CAA1E,EAA4EF,KAA5E;AACH,GAloDoB;AAooDrBiN,EAAAA,gCApoDqB,4CAooDYjN,KApoDZ,EAqoDrB;AAAA;;AACI,QAAI6L,kBAAkB,GAACzR,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,EAAvB;;AACA,QAAG,KAAKnC,cAAL,CAAoB,KAAKe,UAAzB,EAAqC5D,SAArC,IAAgD0B,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8D8B,WAA9D,GAA4EC,gBAA5E,CAA6FU,IAA7F,CAAkGU,MAArJ,EACA;AACI,UAAI+M,eAAe,GAAC3M,KAAK,CAAC8M,WAA1B;AACA,UAAIF,oBAAoB,GAAC5M,KAAK,CAAC+M,gBAA/B;AACA,UAAIrB,cAAc,GAAC1L,KAAK,CAACgN,aAAzB;AACA,UAAIzC,IAAI,GAACvK,KAAK,CAACwK,EAAf;;AAEA,UAAGmC,eAAH,EACA;AACIvS,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DwP,sCAA1D,CAAiG,KAAjG;AACA,aAAK3R,cAAL,CAAoB,KAAKe,UAAzB,EAAqCnD,IAArC,IAA2C,IAA3C;AACAiB,QAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CAAoE,0GAApE,EAA+K,IAA/K;;AACA6J,QAAAA,kBAAkB,CAACQ,oCAAnB,CAAwD,KAAxD;;AACA,aAAKvG,gBAAL;AAEH,OARD,MAQM,IAAG8G,oBAAH,EACN;AACI,YAAIO,oBAAoB,GAAC,CAAzB;;AACA,YAAIC,WAAW,GAAChT,wBAAwB,CAAC6B,QAAzB,CAAkCQ,yBAAlC,GAA8Dc,YAA9D,GAA6EgH,iBAA7E,EAAhB;;AAEA,aAAK,IAAI5F,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGyO,WAAW,CAACtP,MAAxC,EAAgDa,KAAK,EAArD,EAAyD;AACrD,cAAG4L,IAAI,IAAE6C,WAAW,CAACzO,KAAD,CAAX,CAAmBH,gBAAnB,CAAoCC,iBAApC,CAAsD/F,SAA/D,EACA;AACIyU,YAAAA,oBAAoB,GAACxO,KAArB;AACA;AACH;AACJ;;AAED,YAAG+M,cAAc,IAAE,CAAnB,EAAqB;AACrB;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkC3O,gBAAlC,CAAmDC,iBAAnD,CAAqE/E,kBAAxE,EACA;AACIU,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,sEADD,EACwE,IADxE;AAEH,aAJD,MAKA;AACI5H,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,0EADD,EAC4E,IAD5E;AAEH;AACJ,WAXD,MAWM,IAAG0J,cAAc,IAAE,CAAnB,EAAqB;AAC3B;AACI,gBAAI2B,UAAU,GAAC,KAAf;;AACA,iBAAK,IAAI1O,OAAK,GAAG,CAAjB,EAAoBA,OAAK,GAAGyO,WAAW,CAACD,oBAAD,CAAX,CAAkC3O,gBAAlC,CAAmDC,iBAAnD,CAAqE5F,YAArE,CAAkFiF,MAA9G,EAAsHa,OAAK,EAA3H,EAA+H;AAC3H,kBAAGyO,WAAW,CAACD,oBAAD,CAAX,CAAkC3O,gBAAlC,CAAmDC,iBAAnD,CAAqE5F,YAArE,CAAkF8F,OAAlF,EAAyF9G,SAA5F,EACA;AACIwV,gBAAAA,UAAU,GAAC,IAAX;AACA;AACH;AACJ;;AAED,gBAAGA,UAAH,EACA;AACIjT,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,6CADD,EAC+C,IAD/C;AAEH,aAJD,MAKA;AACI5H,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,gDADD,EACkD,IADlD;AAEH;AACJ,WApBK,MAoBA,IAAG0J,cAAc,IAAE,CAAnB,EAAqB;AAC3B;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkC3O,gBAAlC,CAAmDC,iBAAnD,CAAqEjF,UAAxE,EACA;AACIY,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,iDAA+CoL,WAAW,CAACD,oBAAD,CAAX,CAAkC3O,gBAAlC,CAAmDC,iBAAnD,CAAqEhF,cAApH,GAAmI,WADpI,EACgJ,IADhJ;AAEH,aAJD,MAKA;AACIW,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,iDADD,EACmD,IADnD;AAEH;AACJ,WAXK,MAWA,IAAG0J,cAAc,IAAE,CAAnB,EAAqB;AAC3B;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkC3O,gBAAlC,CAAmDC,iBAAnD,CAAqE3F,iBAArE,CAAuFZ,YAA1F,EACA;AACIkC,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,iDADD,EACmD,IADnD;AAEH,aAJD,MAKA;AACI5H,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,qDADD,EACuD,IADvD;AAEH;AACJ,WAXK,MAYD,IAAG0J,cAAc,IAAE,CAAnB,EAAqB;AAC1B;AACI,gBAAG0B,WAAW,CAACD,oBAAD,CAAX,CAAkC3O,gBAAlC,CAAmDC,iBAAnD,CAAqE3F,iBAArE,CAAuFb,iBAA1F,EACA;AACImC,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,wDADD,EAC0D,IAD1D;AAEH,aAJD,MAKA;AACI5H,cAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCyB,qBAAlC,GAA0DsE,SAA1D,CACC,4DADD,EAC8D,IAD9D;AAEH;AACJ;;AAEDzB,QAAAA,UAAU,CAAC,YAAM;AACbsL,UAAAA,kBAAkB,CAACQ,oCAAnB,CAAwD,KAAxD;;AACA,UAAA,MAAI,CAACvG,gBAAL;AACH,SAHS,EAGP,IAHO,CAAV;AAIH;AACJ;AACJ,GA5uDoB;AA8uDrBwH,EAAAA,0CA9uDqB,sDA8uDsBtN,KA9uDtB,EA+uDrB;AAAA;;AACI,QAAG7F,UAAU,IAAE,IAAf,EACA;AACIoG,MAAAA,UAAU,CAAC,YAAM;AACb,QAAA,MAAI,CAAC+M,0CAAL,CAAgDtN,KAAhD;AACH,OAFS,EAEP,GAFO,CAAV;AAGH,KALD,MAOA;AACI,UAAIuN,OAAO,GAACvN,KAAK,CAACd,IAAN,CAAWsO,UAAvB;AACA,UAAInL,QAAQ,GAACrC,KAAK,CAACd,IAAN,CAAWuO,OAAxB;;AAEA,UAAI1O,MAAM,GAAC5I,EAAE,CAAC6I,IAAH,CAAQ5E,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DmD,QAAQ,GAACrH,UAAnE,EAA+EmE,iBAA/E,CAAiGC,QAAjG,CAA0GC,CAAlH,EAAoHjF,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAAtN,CAAX;;AACA,WAAKoO,wBAAL,CAA8B,KAAK7R,cAAL,CAAoB,KAAKS,UAAzB,CAA9B,EAAmEyC,MAAnE,EAA0E,GAA1E;AAEA/E,MAAAA,WAAW,GAACqI,QAAZ;;AACA,UAAItD,MAAM,GAAC5I,EAAE,CAAC6I,IAAH,CAAQ5E,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFC,QAAzF,CAAkGC,CAA1G,EAA4GjF,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAA9M,CAAX;;AACA,WAAKoO,wBAAL,CAA8B,KAAK7R,cAAL,CAAoB,KAAKS,UAAzB,CAA9B,EAAmEyC,MAAnE;AACH;AACJ,GAlwDoB;AAowDrB2O,EAAAA,wBAAwB,EAAE,kCAAUhS,IAAV,EAAe8M,KAAf,EAAqBmF,KAArB,EAAgC;AAAA,QAAXA,KAAW;AAAXA,MAAAA,KAAW,GAAL,GAAK;AAAA;;AACtDxX,IAAAA,EAAE,CAAC0R,KAAH,CAASnM,IAAT,EACCoM,EADD,CACI6F,KADJ,EACW;AAAEvO,MAAAA,QAAQ,EAAEjJ,EAAE,CAAC4R,EAAH,CAAMS,KAAK,CAACnJ,CAAZ,EAAemJ,KAAK,CAAClJ,CAArB;AAAZ,KADX,EACgD;AAAC0I,MAAAA,MAAM,EAAC;AAAR,KADhD,EAECC,IAFD,CAEM,YAAM,CACX,CAHD,EAICE,KAJD;AAKH,GA1wDoB;AA4wDrByF,EAAAA,+BA5wDqB,6CA6wDrB;AACI5T,IAAAA,WAAW,IAAEgB,UAAb;;AAEA,QAAG,KAAKe,YAAL,IAAmB,CAAtB,EACA;AACI,UAAIiE,KAAK,GAAC;AAACd,QAAAA,IAAI,EAAC;AAACsO,UAAAA,UAAU,EAACxS,UAAZ;AAAuByS,UAAAA,OAAO,EAACzT;AAA/B;AAAN,OAAV;AACAI,MAAAA,wBAAwB,CAAC6B,QAAzB,CAAkCgE,0BAAlC,GAA+DC,UAA/D,CAA0E,EAA1E,EAA6EF,KAA7E;AACH;;AAED,QAAIjB,MAAM,GAAC5I,EAAE,CAAC6I,IAAH,CAAQ5E,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFC,QAAzF,CAAkGC,CAA1G,EAA4GjF,wBAAwB,CAAC6B,QAAzB,CAAkCgD,gBAAlC,GAAqDC,IAArD,CAA0DlF,WAA1D,EAAuEmF,iBAAvE,CAAyFC,QAAzF,CAAkGE,CAA9M,CAAX;;AACA,SAAKoO,wBAAL,CAA8B,KAAK7R,cAAL,CAAoB,KAAKS,UAAzB,CAA9B,EAAmEyC,MAAnE;AACA,SAAK+G,gBAAL;AACH,GAzxDoB,CA4xDrB;AACA;;AA7xDqB,CAAT,CAAhB,EA+xDA;;AACA+H,MAAM,CAACC,OAAP,GAAkBzS,WAAlB,EACA","sourceRoot":"/","sourcesContent":["var _isTest = false;\r\nvar _diceinput1 = \"\";\r\nvar _diceinput2 = \"\";\r\n\r\n//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n    None:0,\r\n    HomeBased: 1,                   //a business that you operate out of your home\r\n    brickAndmortar: 2               //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n    name: \"BusinessInfo\",\r\nproperties: { \r\n    Name: \"BusinessData\",\r\n    BusinessType:\r\n   {\r\n       displayName:\"Mode\",\r\n       type: EnumBusinessType,\r\n       default: EnumBusinessType.None,\r\n       serializable: true,\r\n       tooltip:\"Business catogory for players\",}, \r\n    BusinessTypeDescription:\r\n   {\r\n       displayName: \"Type\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Type (by name) of business player is opening\",},\r\n    BusinessName:\r\n   {\r\n       displayName: \"Name\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Name of the business player is opening\",},\r\n     Amount:\r\n       {\r\n           displayName: \"Amount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"balance of business\",},\r\n      IsPartnership:\r\n       {\r\n           displayName: \"IsPartnership\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has done partnership with someone with current business\",},\r\n       PartnerID:\r\n           {\r\n               displayName:\"PartnerID\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n        tooltip: \"ID of the partner with whom player has formed partnership\",},\r\n       PartnerName:\r\n           {\r\n               displayName:\"PartnerName\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n               tooltip:\"name of the partner with whom player has formed partnership\",},\r\n        LocationsName:\r\n           {\r\n               displayName:\"LocationsName\",\r\n               type: [cc.Text],\r\n               default: [],\r\n               serializable: true,\r\n               tooltip:\"if player owns brick and mortar he/she can expand to new location\",},\r\n        LoanTaken:\r\n           {\r\n               displayName:\"LoanTaken\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n        LoanAmount:\r\n           {\r\n               displayName:\"LoanAmount\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n    name: \"CardDataFunctionality\",\r\nproperties: { \r\n    NextTurnDoublePay:\r\n   {\r\n       displayName:\"NextTurnDoublePay\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if its going to be double pay day on next payday for current player\"}, \r\n    SkipNextTurn:\r\n   {\r\n       displayName:\"SkipNextTurn\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if turn is going to skipped on next turn for current player\"}, \r\n    SkipNextPayday:\r\n   {\r\n       displayName:\"SkipNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday is going to skipped on next payday for current player\"}, \r\n    SkipHMNextPayday:\r\n   {\r\n       displayName:\"SkipHMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for home based buisiness is going to skipped on next payday for current player\"},\r\n    SkipBMNextPayday:\r\n   {\r\n       displayName:\"SkipBMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\"}, \r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n    name: \"StockInfo\",\r\nproperties: { \r\n    Name: \"StockData\",\r\n    BusinessName:\r\n   {\r\n       displayName:\"BusinessName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the business in which stocks will be held\",}, \r\n    ShareAmount:\r\n   {\r\n       displayName: \"ShareAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip: \"Share amount of the stock\",},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n    name:\"PlayerData\",\r\nproperties: { \r\n    PlayerName:\r\n   {\r\n       displayName:\"PlayerName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the player\",},\r\n    PlayerUID:\r\n   {\r\n       displayName:\"PlayerUID\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"ID of the player\",},\r\n    AvatarID:\r\n       {\r\n           displayName: \"AvatarID\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"id reference for player avatar selection\",},\r\n    IsBot:\r\n       {\r\n           displayName: \"IsBot\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if current player is bot\",}, \r\n    NoOfBusiness:\r\n   {\r\n       displayName:\"Business\",\r\n       type: [BusinessInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of business a player can own\",}, \r\n    CardFunctionality:\r\n   {\r\n       displayName:\"CardFunctionality\",\r\n       type: CardDataFunctionality,\r\n       default: {},\r\n       serializable: true,\r\n       tooltip:\"card functionality stored by player\",}, \r\n    HomeBasedAmount:\r\n   {\r\n       displayName:\"HomeBasedAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of home based business a player owns\",}, \r\n    BrickAndMortarAmount:\r\n   {\r\n       displayName:\"BrickAndMortarAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of brick and mortar business a player owns\",}, \r\n    TotalLocationsAmount:\r\n   {\r\n       displayName:\"TotalLocationsAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of locations of all brick and mortar businessess\",}, \r\n    NoOfStocks:\r\n   {\r\n       displayName:\"Stocks\",\r\n       type: [StockInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of stock a player owns\",}, \r\n    Cash:\r\n       {\r\n           displayName: \"PlayerCash\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of cash player owns\",},\r\n    GoldCount:\r\n       {\r\n           displayName: \"GoldCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of gold a player owns\",},\r\n    StockCount:\r\n       {\r\n           displayName: \"StockCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of stocks a player owns\",},\r\n    LoanTaken:\r\n       {\r\n           displayName: \"LoanTaken\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has taken loan from bank or not\",},\r\n     LoanAmount:\r\n       {\r\n           displayName: \"LoanAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of loan taken from the bank\",},\r\n    MarketingAmount:\r\n       {\r\n           displayName: \"MarketingAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"marketing amount a player owns\",},\r\n    LawyerStatus:\r\n       {\r\n           displayName: \"LawyerStatus\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has hired a lawyer or not\",},\r\n    IsBankrupt:\r\n       {\r\n           displayName: \"IsBankrupt\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has been Bankrupted or not\",},\r\n    BankruptAmount:\r\n       {\r\n           displayName: \"BankruptAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"keep track how much time player has been bankrupted\",},\r\n    SkippedLoanPayment:\r\n       {\r\n           displayName: \"SkippedLoanPayment\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has skipped loan payment\",},\r\n    PlayerRollCounter:\r\n       {\r\n           displayName: \"PlayerRollCounter\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"integer to store roll countor for player\",},\r\n    InitialCounterAssigned:\r\n       {\r\n           displayName: \"InitialCounterAssigned\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,},\r\n     isGameFinished:\r\n           {\r\n               displayName:\"isGameFinished\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n     TotalScore:\r\n           {\r\n               displayName:\"TotalScore\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n    GameOver:\r\n           {\r\n               displayName:\"GameOver\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n},\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter=0;\r\nvar DiceTemp=0;\r\nvar DiceRoll=0;\r\nvar IsTweening=false;\r\nvar GamePlayReferenceManager=null;\r\nvar TurnCheckArray=[];\r\nvar BusinessLocationNodes=[];\r\n\r\nvar PassedPayDay=false;\r\nvar DoublePayDay=false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay=false;\r\nvar _skipNextTurn=false;\r\nvar _skipNextPayday=false; //skip whole pay day\r\nvar _skipHMNextPayday=false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived=false;\r\nvar TurnInProgress=false;\r\n\r\nvar Backspaces=3;\r\nvar isGameOver=false;\r\nvar OneQuestionIndex=-1;\r\nvar OneQuestions=\r\n[\r\n    \"you have skipped loan previous payday?\",\r\n    \"you have taken any loan?\",\r\n    \"you have bankrupted ever?\",\r\n    \"your next turn is going to be skipped?\",\r\n    \"your next payday is going to be double payday?\"\r\n];\r\n\r\nvar CardDisplaySetTimout=null;\r\n\r\nvar GameManager=cc.Class({\r\n    name:\"GameManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PlayerGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n        BotGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all bot's data\"},\r\n        PlayerNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for player\",},    \r\n        CameraNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for camera\",},    \r\n        AllPlayerUI: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of ui of all players\",},      \r\n        AllPlayerNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of node of all players inside gameplay\",},   \r\n        StartLocationNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of attay of locations\",},   \r\n         SelectedMode: {\r\n            default:0,                \r\n            type: cc.Integer,\r\n            serializable: true,\r\n            tooltip: \"integer reference for game mode 1 means bot and 2 means real players\",\r\n        },  \r\n    },\r\n    statics: {\r\n        PlayerData: PlayerData,\r\n        BusinessInfo:BusinessInfo,\r\n        EnumBusinessType:EnumBusinessType,\r\n        Instance:null\r\n    },\r\n\r\n\r\n    InputTestDice1(_val)\r\n    {\r\n        if (_isTest) {\r\n            _diceinput1 = _val;\r\n        }\r\n    },\r\n\r\n    InputTestDice2(_val)\r\n    {\r\n        if (_isTest) {\r\n            _diceinput2 = _val;\r\n        }\r\n    },\r\n    //#region All Functions of GameManager\r\n    \r\n    /**\r\n    @summary called when instance of class is created\r\n    @method onLoad\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    onLoad () {\r\n        GameManager.Instance=this;\r\n        this.TurnNumber=0;\r\n        this.TurnCompleted=false;\r\n        TurnCheckArray=[];\r\n        this.CheckReferences();\r\n        this.SelectedMode=GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n        this.Init_GameManager();   \r\n        \r\n        this.RandomCardIndex=0;\r\n        this.CardCounter=0;\r\n        this.CardDisplayed=false;\r\n        CardEventReceived=false;\r\n    },\r\n\r\n    /**\r\n    @summary called to assign reference of required classes\r\n    @method CheckReferences\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    /**\r\n    @summary initial gamemanager essetials\r\n    @method Init_GameManager\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    Init_GameManager () {\r\n        this.Camera=this.CameraNode.getComponent(cc.Camera);\r\n        this.isCameraZooming=false;\r\n        this.PlayerGameInfo=[];\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;  \r\n\r\n        console.error(this.SelectedMode);\r\n        if(this.SelectedMode==2) //game is being played by real players\r\n        {\r\n            //if joined player is spectate\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate()==true)\r\n            {\r\n                console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n                //if inital setup has been done and game is under way\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\")==true)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n                    this.PlayerGameInfo=AllData;\r\n\r\n                    console.log(this.PlayerGameInfo);\r\n\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n                    //this.SyncDataToPlayerGameInfo(0);\r\n                    this.SyncAllData_SpectateManager();\r\n                    this.TurnNumber=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n                    this.UpdateGameUI(true,this.TurnNumber);            \r\n                }\r\n                else\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                    GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n                }\r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n            }\r\n        }else if(this.SelectedMode==1) //game is being played by bot along with one player\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode);\r\n        }\r\n    },\r\n\r\n    //#region public functions to get data (accessible from other classes)\r\n    GetTurnNumber () {\r\n        return this.TurnNumber;\r\n    },\r\n\r\n    GetMyIndex()\r\n    {\r\n        var myIndex = 0;\r\n        var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _allActors = this.PlayerGameInfo;\r\n\r\n        for (let index = 0; index < _allActors.length; index++) {\r\n          if (_actor.PlayerUID == _allActors[index].PlayerUID)\r\n          {\r\n              myIndex = index;\r\n              break;\r\n          }\r\n        }\r\n\r\n        return myIndex;\r\n    },\r\n    //#endregion\r\n\r\n    //#region SpectateMode Code\r\n\r\n    SyncAllData_SpectateManager()\r\n    {\r\n        var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n        this.PlayerGameInfo=AllData;\r\n        this.SyncDataToPlayerGameInfo(0);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n        this.AssignPlayerGameUI();\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n            this.AllPlayerNodes[index].setPosition(_toPos.x,_toPos.y);\r\n        }\r\n\r\n        console.log(\"synced playernodes\");\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    CheckTurnOnSpectateLeave_SpectateManager()\r\n    {\r\n      var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region functions related to Turn Mechanism and card mechanism\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n    @method RaiseEventForCard\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventForCard(_data)\r\n  {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5,_data);\r\n  },\r\n\r\n  ClearDisplayTimeout()\r\n  {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers()\r\n  {\r\n      if(this.SelectedMode==2) //for real players\r\n      {\r\n        console.error(CardEventReceived);\r\n        if(CardEventReceived==true)\r\n        {\r\n            clearTimeout(CardDisplaySetTimout);\r\n            console.error(this.CardCounter);\r\n            CardEventReceived=false;\r\n            if(!this.CardDisplayed)\r\n            {\r\n                this.CardDisplayed=true;\r\n                GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,this.RandomCardIndex);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            CardDisplaySetTimout=setTimeout(() => { //check after every 0.5 seconds\r\n                this.DisplayCardOnOthers();\r\n            }, 500);\r\n        }\r\n      }\r\n  },\r\n\r\n  ResetCardDisplay()\r\n  {\r\n    this.CardDisplayed=false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data)\r\n  {\r\n\r\n    this.CheckReferences();\r\n    console.log(_data);\r\n\r\n    var RandomCard=_data.randomCard;\r\n    var counter=_data.counter;\r\n\r\n    this.RandomCardIndex=RandomCard;\r\n    this.CardCounter=counter;\r\n\r\n   \r\n    console.error(CardEventReceived);\r\n\r\n    if(this.SelectedMode==2)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            CardEventReceived=true;\r\n    }else if(this.SelectedMode==1)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n        else\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,RandomCard,true);\r\n    }\r\n\r\n    console.error(CardEventReceived);\r\n\r\n    \r\n  },\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n    @method RaiseEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventTurnComplete()\r\n  {\r\n      if(this.SelectedMode==2)\r\n      {\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n        }\r\n      }else if(this.SelectedMode==1)\r\n      {\r\n          console.error(\"reaised for turn complete\");\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,this.PlayerGameInfo[this.TurnNumber].PlayerUID);\r\n      }\r\n  },\r\n\r\n\r\n  SyncAllData()\r\n  {\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n    }  \r\n},\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n    @method ReceiveEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  ReceiveEventTurnComplete(_uid)\r\n  {\r\n      if(this.SelectedMode==2)//real players\r\n      {\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n        {\r\n            console.log(TurnCheckArray.length);\r\n\r\n            if(TurnCheckArray.length==0)\r\n                    TurnCheckArray.push(_uid); \r\n\r\n            var ArrayLength=TurnCheckArray.length;\r\n            var IDFound=false;\r\n            for (let index = 0; index < ArrayLength; index++) {\r\n                    if(TurnCheckArray[index]==_uid)\r\n                    IDFound=true;\r\n            }\r\n\r\n            if(!IDFound)\r\n            {\r\n                TurnCheckArray.push(_uid);\r\n            }\r\n            console.log(TurnCheckArray);\r\n            console.log(TurnCheckArray.length);\r\n\r\n            // var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n            var TotalConnectedPlayers=this.PlayerGameInfo.length;\r\n            if(TurnCheckArray.length==TotalConnectedPlayers)\r\n            {\r\n                TurnCheckArray=[];\r\n                this.TurnCompleted=true;\r\n\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n                    //this.SyncAllData();\r\n                    this.ChangeTurn();\r\n                    console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                    console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                }\r\n            }\r\n        }\r\n        }else if(this.SelectedMode==1)\r\n        {\r\n\r\n            this.TurnCompleted=true;\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            this.ChangeTurn();\r\n        }\r\n  },\r\n\r\n   /**\r\n    @summary called when dice animation is played on all players\r\n    @method ChangeTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    ChangeTurn()\r\n    {\r\n        if(this.SelectedMode==2)\r\n        {\r\n            this.SyncAllData();\r\n        }\r\n\r\n        if(this.TurnNumber<this.PlayerGameInfo.length-1)\r\n            this.TurnNumber=this.TurnNumber+1;\r\n        else\r\n            this.TurnNumber=0;\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n    @method TurnHandler\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    TurnHandler(_turn)\r\n    {\r\n        console.error(\"Turn: \"+_turn);\r\n        var _playerMatched=false;\r\n        _skipNextTurn=false;\r\n        if(IsTweening) //check if animation of turn being played on other players \r\n        {\r\n            setTimeout(() => {\r\n                this.TurnHandler(_turn);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            this.TurnNumber=_turn;\r\n            if(this.SelectedMode==2)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {    \r\n                    this.ToggleTurnProgress(true);\r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if(!_skipNextTurn)\r\n                    {\r\n                        setTimeout(() => {\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                        }, 1000);\r\n                        console.log(\"its your turn \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    }\r\n                }\r\n                else\r\n                {\r\n                    this.ToggleTurnProgress(false);\r\n                }\r\n                    \r\n            }else if(this.SelectedMode==1)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n                {\r\n                    this.ToggleTurnProgress(true);\r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if(!_skipNextTurn)\r\n                    {\r\n                        setTimeout(() => {\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                        }, 1000);\r\n                        console.log(\"its your turn \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    }\r\n                }\r\n                else//turn decisions for bot\r\n                {\r\n                    this.ToggleTurnProgress(false);\r\n                    _playerMatched=true;\r\n                    _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                    if(!_skipNextTurn)\r\n                    {\r\n                        setTimeout(() => {\r\n                            this.RollDice();\r\n                        }, 1000);\r\n                    }\r\n                }\r\n            }\r\n\r\n            this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n            for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n            }\r\n\r\n\r\n            if(this.SelectedMode==2)//for real players\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n                console.log(\"Turn Of: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                console.log(this.AllPlayerUI[this.TurnNumber].getComponent('PlayerProfileManager').PlayerInfo);\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n                this.SyncDataToPlayerGameInfo(0);\r\n\r\n\r\n                //force sync spectator after completion of each turn\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                    this.SyncAllData_SpectateManager();\r\n            }\r\n\r\n            //skip this turn as skip turn has been called before\r\n            if(_playerMatched && _skipNextTurn)\r\n            {\r\n                IsTweening=false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\",1200);\r\n                this.ToggleSkipNextTurn(false);\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n            if(_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n            {\r\n                IsTweening=false;\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    SyncDataToPlayerGameInfo(_ind)\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        var _counter=_ind;\r\n        console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        if(this.PlayerGameInfo[_counter].PlayerUID!=MyData.customProperties.PlayerSessionData.PlayerUID) //dont update my own data\r\n        {\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(this.PlayerGameInfo[_counter].PlayerUID==MainSessionData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        this.PlayerGameInfo[_counter]=MainSessionData[index].customProperties.PlayerSessionData;\r\n                        \r\n                        if(_counter<this.PlayerGameInfo.length-1)\r\n                        {\r\n                            _counter++;\r\n                            console.log(\"adding counter: \"+_counter);\r\n                            this.SyncDataToPlayerGameInfo(_counter);\r\n                        }\r\n                        else{\r\n                            console.log(this.PlayerGameInfo);\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        else\r\n            {\r\n                if(_counter<this.PlayerGameInfo.length-1)\r\n                    {\r\n                        _counter++;\r\n                        console.log(\"adding counter: \"+_counter);\r\n                        this.SyncDataToPlayerGameInfo(_counter);\r\n                    }\r\n                else{\r\n                        console.log(this.PlayerGameInfo);\r\n                    }\r\n            }\r\n    },  \r\n\r\n    /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    StartTurn()\r\n    {\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        this.TurnNumber=0; //reseting the turn number on start of the game\r\n\r\n        //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n        \r\n      \r\n        \r\n    },\r\n\r\n    ReceiveBankruptData(_data)\r\n    {\r\n        //other player has been bankrupted\r\n        var _isBankrupted=_data.Data.bankrupted;\r\n        var _turn=_data.Data.turn;\r\n        var _playerData=_data.Data.PlayerDataMain;\r\n\r\n        console.log(_data);\r\n        // console.log(_isBankrupted);\r\n        // console.log(_turn);\r\n        // console.log(_playerData);\r\n\r\n        this.PlayerGameInfo[_turn]=_playerData;\r\n\r\n        this.AssignPlayerGameUI(true);\r\n        this.EnablePlayerNodes(true);\r\n\r\n        this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n        }\r\n        \r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n        }\r\n    },\r\n\r\n    StartTurnAfterBankrupt()\r\n    {\r\n        this.AssignPlayerGameUI(true);\r\n        this.EnablePlayerNodes(true);\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n        }, 1000);\r\n\r\n        this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n        }\r\n        \r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n        }\r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region Function for gameplay\r\n     /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    AssignPlayerGameUI(_isBankrupted=false)\r\n    {\r\n        if(this.SelectedMode==1) //for bot\r\n        {\r\n            if(!_isBankrupted)\r\n            {\r\n                var _randomIndex=this.getRandom(0,this.BotGameInfo.length)\r\n                this.PlayerGameInfo.push(this.BotGameInfo[_randomIndex]);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=2;\r\n            }\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerUI[index].active=true;\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[index];\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').SetName(this.PlayerGameInfo[index].PlayerName);\r\n        }\r\n    },\r\n\r\n    UpdateGameUI(_toggleHighlight,_index)\r\n    {\r\n        if(_toggleHighlight)\r\n        {\r\n            this.AllPlayerUI[_index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[_index];\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n                if(_index==index)\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(true);\r\n                }\r\n                else\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(false);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    EnablePlayerNodes(_isBankrupted=false)\r\n    {\r\n        if(!_isBankrupted)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(this.PlayerGameInfo[index].HomeBasedAmount==1)   \r\n                    this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n                else if(this.PlayerGameInfo[index].BrickAndMortarAmount==1)   \r\n                    this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n            }\r\n        }else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].HomeBasedAmount==1)   \r\n                this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n            else if(this.PlayerGameInfo[this.TurnNumber].BrickAndMortarAmount==1)   \r\n                this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    SetFollowCameraProperties()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        this.CameraNode.position=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n   \r\n        let ratio=targetPos.y/cc.winSize.height;\r\n        this.Camera.zoomRatio=2;\r\n    },\r\n\r\n    lateUpdate () {\r\n        if(this.isCameraZooming)    \r\n            this.SetFollowCameraProperties();\r\n    },\r\n\r\n    syncDiceRoll(_roll)\r\n    {\r\n        var _dice1=_roll.dice1;\r\n        var _dice2=_roll.dice2;\r\n        var _result=_dice1+_dice2;\r\n\r\n        IsTweening=true;\r\n        this.CardDisplayed=false;\r\n\r\n        if(this.SelectedMode==2)//for real players\r\n        {\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n                {\r\n                    console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                    this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n                } \r\n            }\r\n        }\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==1)\r\n            {\r\n                RollCounter=0;\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                console.error(RollCounter);\r\n            }\r\n            else\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                RollCounter=13;\r\n                console.error(RollCounter);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==12)\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+21;  \r\n            else\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+1;\r\n\r\n            RollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n            console.error(RollCounter-1);\r\n        }\r\n        \r\n\r\n        DiceRoll=_result;\r\n        DiceTemp=0;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            if(this.TurnNumber==index)\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=true;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1,_dice2);\r\n            }\r\n            else\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n            }  \r\n        }\r\n\r\n        // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        // this.TweenCamera(_pos,true,0.4);   \r\n    },\r\n\r\n    DiceFuntionality()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        this.TweenCamera(_pos,true,0.4);  \r\n    },\r\n\r\n    TempCheckSpace(_rolling)\r\n    {\r\n        var tempcounter=0;\r\n        var tempcounter2=0;\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                tempcounter2=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n      if(tempcounter2-1<0)\r\n      {\r\n        console.error(\"starting from oblivion\");\r\n        tempcounter=tempcounter2+_rolling-1;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n      else\r\n      {\r\n        tempcounter=tempcounter2+_rolling;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n\r\n    },\r\n\r\n    RollDice:function()\r\n    {\r\n        var Dice1;\r\n        var Dice2;\r\n        if (_isTest && this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n        {\r\n            Dice1 = parseInt(_diceinput1);\r\n            Dice2 = parseInt(_diceinput2);\r\n        }\r\n        else if (this.PlayerGameInfo[this.TurnNumber].IsBot == true && _isTest)\r\n        {\r\n            Dice1 = 1;\r\n            Dice2 = 1;\r\n        }\r\n        else\r\n        {\r\n            Dice1=this.getRandom(1,7);\r\n            Dice2=this.getRandom(1,7); \r\n        }\r\n         \r\n\r\n        // var Dice1=20;\r\n        // var Dice2=1;\r\n\r\n        DiceRoll=Dice1+Dice2;\r\n        var _newRoll={dice1:Dice1,dice2:Dice2}\r\n        //DiceRoll=23;\r\n        //this.TempCheckSpace(DiceRoll);\r\n        console.log(\"dice number: \"+DiceRoll+\", Dice1:\"+Dice1+\", Dice2:\"+Dice2);\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3,_newRoll); \r\n    },\r\n\r\n    RollOneDice()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        return Dice1;\r\n    },\r\n\r\n    RollTwoDices()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2=this.getRandom(1,7);\r\n        return (Dice1+Dice2);\r\n    },\r\n\r\n    callUponCard()\r\n    {\r\n        var _spaceID=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n        if(_spaceID!=6 && _spaceID!=7) //6 means payday and 7 means double payday, 9 menas sell space\r\n        {\r\n            var RandomCard=this.getRandom(0,15);\r\n            \r\n            //for testing only\r\n            if(_spaceID==2) //landed on some big buseinss\r\n            {\r\n                var valueIndex=[0,1,7,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }else if(_spaceID==5) //landed on some losses cards\r\n            {\r\n                var valueIndex=[0,1,5,6,2,7,3,4,8,9];\r\n                var index=this.getRandom(0,10);\r\n                RandomCard=valueIndex[index];\r\n                //RandomCard = 9;\r\n            }\r\n            else if(_spaceID==3) //landed on some marketing cards\r\n            {\r\n                var valueIndex=[0,7,3,8,13,9];\r\n                var index=this.getRandom(0,6);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            else if(_spaceID==1) //landed on some wild cards\r\n            {\r\n                var valueIndex=[0,1,6,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            IsTweening=false;\r\n\r\n            if(this.SelectedMode==2) //for real player\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {    \r\n                    var SendingData={\"randomCard\":RandomCard,\"counter\":RollCounter};    \r\n                    this.RaiseEventForCard(SendingData);\r\n                }\r\n                else\r\n                {\r\n                    this.DisplayCardOnOthers();\r\n                }\r\n            }else if(this.SelectedMode==1) //for bot\r\n            {\r\n                var SendingData={\"randomCard\":RandomCard,\"counter\":RollCounter};    \r\n                this.RaiseEventForCard(SendingData);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            IsTweening=false;\r\n            console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n            this.RaiseEventTurnComplete();\r\n        }\r\n    },\r\n\r\n    completeCardTurn()\r\n    {\r\n        IsTweening=false;\r\n        console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n        this.RaiseEventTurnComplete();\r\n    },\r\n\r\n    CallGameComplete(_isBot=false)\r\n    {\r\n        if(_isBot==false)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                var _playerIndex=this.TurnNumber;\r\n                if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n                {\r\n                    this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                    var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                    var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                    var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                    var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                    var loanAmount=0;\r\n                    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                        } \r\n                    }\r\n\r\n                    var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                    var HMCash=0;\r\n                    if(HMAmount==1)\r\n                        HMCash=60000;\r\n                    else if(HMAmount==2)\r\n                        HMCash=25000+60000;\r\n                    else if(HMAmount==3)\r\n                        HMCash=25000+25000+60000;\r\n\r\n                    var TotalAssets=_cash+BMCash+HMCash-loanAmount;\r\n\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalScore=TotalAssets;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n                    \r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=this.TurnNumber;\r\n            if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n            {\r\n                this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                var HMAmount=this.PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                var BMAmount=this.PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                var BMLocations=this.PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                var loanAmount=0;\r\n                for (let index = 0; index < this.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                    } \r\n                }\r\n\r\n                    var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                    var HMCash=0;\r\n                    if(HMAmount==1)\r\n                        HMCash=60000;\r\n                    else if(HMAmount==2)\r\n                        HMCash=25000+60000;\r\n                    else if(HMAmount==3)\r\n                        HMCash=25000+25000+60000;\r\n\r\n                    var TotalAssets=_cash+BMCash+HMCash-loanAmount;\r\n\r\n                    this.PlayerGameInfo[this.TurnNumber].TotalScore=TotalAssets;                    \r\n                }\r\n        }\r\n    },\r\n\r\n   RaiseEventForGameComplete(_data)\r\n   {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6,_data);\r\n   },\r\n\r\n   SyncGameOver(_UID)\r\n   {\r\n    \r\n    if(this.SelectedMode==2)//for real players\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        console.log(_UID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver=true;\r\n\r\n        if(MyData.customProperties.PlayerSessionData.PlayerUID==_UID)\r\n        {\r\n            //you won\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n                \"Congrats! your cash is highest, you have won the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n        else\r\n        {\r\n            //you lose\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n                \"unfortunately you have lost the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n        }, 15060);\r\n    }\r\n    else if(this.SelectedMode==1)//with bot\r\n    {\r\n        var MainSessionData=this.PlayerGameInfo;\r\n        var MyData=this.PlayerGameInfo[0];\r\n        console.log(_UID);\r\n        console.log(MyData.PlayerUID);\r\n        this.PlayerGameInfo[0].GameOver=true;\r\n\r\n        if(MyData.PlayerUID==_UID)\r\n        {\r\n            //you won\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.TotalScore+\"\\n\"+'\\n'+\r\n                \"Congrats! your cash is highest, you have won the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n        else\r\n        {\r\n            //you lose\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n                \"Total Cash: \"+MyData.TotalScore+\"\\n\"+'\\n'+\r\n                \"unfortunately you have lost the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n                \"Game will be restarted automatcally after 15 seconds\",\r\n                15000\r\n            );\r\n        }\r\n\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n        }, 15060);\r\n\r\n    }\r\n\r\n   },\r\n\r\n    StartDiceRoll:function()\r\n    {\r\n        if(RollCounter>=GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length)\r\n        {\r\n            console.log(\"Gameover\");\r\n            isGameOver=true;\r\n            this.ZoomCameraOut();\r\n\r\n            if(this.SelectedMode==2)//for real players\r\n            {\r\n                if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n                {\r\n\r\n                    this.CallGameComplete();\r\n                    var playercompleted=0;\r\n\r\n                    var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                    for (let index = 0; index < MainSessionData.length; index++) {\r\n                        if(MainSessionData[index].customProperties.PlayerSessionData.isGameFinished)\r\n                        {\r\n                            playercompleted++;\r\n                        }\r\n                    }\r\n            \r\n                \r\n                    if(playercompleted==this.PlayerGameInfo.length)\r\n                    {\r\n                        var max=0;\r\n                        var SelectedInd=0;\r\n                        var SessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                        for (let index = 0; index < SessionData.length; index++) {\r\n                            var _value = SessionData[index].customProperties.PlayerSessionData.TotalScore;\r\n\r\n                            if(_value > max)\r\n                            {\r\n                                SelectedInd=index;\r\n                                max=_value;\r\n                            }\r\n                        }\r\n\r\n                        console.log(\"game won by player id: \"+SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                    \r\n\r\n                        this.RaiseEventForGameComplete(SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                        //game completed on all systems\r\n                    }else\r\n                    {\r\n                        IsTweening=false;\r\n                        this.ChangeTurn();\r\n                    }\r\n                }\r\n            }\r\n            else if(this.SelectedMode==1)//for bot\r\n            {\r\n                this.CallGameComplete(true);\r\n                var playercompleted=0;\r\n\r\n                var MainSessionData=this.PlayerGameInfo;\r\n                for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(MainSessionData[index].isGameFinished)\r\n                    {\r\n                        playercompleted++;\r\n                    }\r\n                }\r\n            \r\n                \r\n                if(playercompleted==this.PlayerGameInfo.length)\r\n                {\r\n                        var max=0;\r\n                        var SelectedInd=0;\r\n                        var SessionData=this.PlayerGameInfo;\r\n                        for (let index = 0; index < SessionData.length; index++) {\r\n                            var _value = SessionData[index].TotalScore;\r\n\r\n                            if(_value > max)\r\n                            {\r\n                                SelectedInd=index;\r\n                                max=_value;\r\n                            }\r\n                        }\r\n\r\n                        console.log(\"game won by player id: \"+SessionData[SelectedInd].PlayerUID);\r\n                    \r\n\r\n                        this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n                        //game completed on all systems\r\n                }else\r\n                {\r\n                    IsTweening=false;\r\n                    this.ChangeTurn();\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            DiceTemp=DiceTemp+1; \r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    TweenCamera: function (_pos, isZoom,time) {   \r\n        cc.tween(this.CameraNode)\r\n        .to(time, { position: cc.v2(_pos.x, _pos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(isZoom)\r\n            this.ZoomCameraIn();\r\n        else\r\n            this.ZoomCameraOut();\r\n        })\r\n        .start();\r\n    },\r\n\r\n    ZoomCameraIn () {\r\n        setTimeout(() => {\r\n             if(this.Camera.zoomRatio<2)\r\n             {\r\n                this.Camera.zoomRatio=this.Camera.zoomRatio+0.03;\r\n                this.ZoomCameraIn();\r\n             }\r\n             else\r\n             {\r\n                this.Camera.zoomRatio=2;\r\n                this.isCameraZooming=true;\r\n                this.StartDiceRoll();\r\n             }\r\n          }, 10);\r\n    },\r\n\r\n    CheckPayDayConditions(_isBot=false)\r\n    {\r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n            PassedPayDay=true;\r\n                    \r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==7)\r\n            DoublePayDay=true;\r\n\r\n        _nextTurnDoublePay=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n        if(PassedPayDay && !DoublePayDay && !_nextTurnDoublePay)\r\n        {\r\n            this.ToggleDoublePayNextTurn(false);\r\n            this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(false,_isBot);\r\n        }\r\n        else if((DoublePayDay) || (PassedPayDay && _nextTurnDoublePay))\r\n        {\r\n            this.ToggleDoublePayNextTurn(false);\r\n            this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(true,_isBot);\r\n        }\r\n        else\r\n        {\r\n            this.callUponCard();\r\n        }\r\n    },\r\n\r\n    ZoomCameraOut () {\r\n        setTimeout(() => {\r\n            if(this.Camera.zoomRatio>=1)\r\n            {\r\n               this.isCameraZooming=false;\r\n               this.Camera.zoomRatio=this.Camera.zoomRatio-0.03;\r\n               this.ZoomCameraOut();\r\n            }\r\n            else\r\n            {\r\n                this.CameraNode.position=cc.Vec2(0,0);\r\n                this.Camera.zoomRatio=1;\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n                \r\n                if(!isGameOver)\r\n                {\r\n                    if(this.SelectedMode==2) //real player\r\n                    {\r\n                        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                            this.CheckPayDayConditions();\r\n                        else\r\n                            this.callUponCard();\r\n                    }else if(this.SelectedMode==1) //bot\r\n                    {\r\n                       // if(this.PlayerGameInfo[this.TurnNumber].IsBot==false)\r\n                            this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n                       // else\r\n                         //   this.callUponCard();\r\n                    }\r\n                }\r\n            }\r\n         }, 10);\r\n         \r\n    },\r\n\r\n    TweenPlayer: function (Node,ToPos) {\r\n        cc.tween(Node)\r\n        .to(0.4, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(DiceTemp<DiceRoll)\r\n        {\r\n            if(!isGameOver)\r\n            {\r\n                if(this.SelectedMode==2)\r\n                {\r\n                    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                    {\r\n                        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                            PassedPayDay=true;\r\n                    }\r\n                }\r\n                else if(this.SelectedMode==1)//for bot\r\n                {\r\n                    if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                        PassedPayDay=true;\r\n                }\r\n            }\r\n\r\n            if(RollCounter==12)\r\n                RollCounter=RollCounter+21;  \r\n            else\r\n                RollCounter=RollCounter+1;\r\n\r\n            //DiceTemp=DiceTemp+1; \r\n            console.log(DiceTemp+\" \"+RollCounter);\r\n            \r\n            this.StartDiceRoll();\r\n            //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n           \r\n        }\r\n        else\r\n        {\r\n            var _newpos=cc.Vec2(0,0);\r\n            this.TweenCamera(_newpos,false,0.6); //zoomout\r\n        }\r\n\r\n        })\r\n        .start();\r\n    },\r\n\r\n    //rules implmentation during turn (turn decisions)\r\n\r\n    TogglePayDay(_st1,_St2)\r\n    {\r\n        PassedPayDay=_st1;\r\n        DoublePayDay=_St2;\r\n    },\r\n\r\n    ExpandBusiness_TurnDecision(amount,_index,_locationName)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].Cash>=amount)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].Cash=this.PlayerGameInfo[this.TurnNumber].Cash-amount;\r\n            this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount=this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount+1;\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\",1000);\r\n            setTimeout(() => {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n            }, 1200);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \"+amount);\r\n        }\r\n\r\n    },\r\n\r\n    GenerateExpandBusiness_Prefabs_TurnDecision()\r\n    {\r\n        BusinessLocationNodes=[];\r\n\r\n        console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n        for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n            if(parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType)==2) //this means there is brick and mortar in list\r\n            {\r\n                var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n                node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n                node.getComponent('ExpandBusinessHandler').SetBusinessIndex(i);\r\n                node.getComponent('ExpandBusinessHandler').SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n                node.getComponent('ExpandBusinessHandler').ResetEditBox();\r\n                BusinessLocationNodes.push(node);\r\n            } \r\n        }\r\n        console.log(BusinessLocationNodes);\r\n        return BusinessLocationNodes.length;\r\n    },\r\n\r\n    DestroyGeneratedNodes()\r\n    {\r\n        for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n            BusinessLocationNodes[index].destroy();\r\n        }\r\n\r\n        BusinessLocationNodes=[];\r\n    },\r\n\r\n    UpdateStocks_TurnDecision(_name,_ShareAmount,_isAdding)\r\n    {\r\n        if(_isAdding)\r\n        {\r\n            var _stock=new StockInfo();\r\n            _stock.BusinessName=_name;\r\n            _stock.ShareAmount=_ShareAmount;\r\n\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n        }\r\n    },\r\n\r\n    ProcessPayDay_TurnDecision(_isDoublePayDay=false,_isBot=false)\r\n    {\r\n        _skipNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n        _skipHMNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n        _skipBMNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n        if(_skipNextPayday) //if previously skip payday was stored by any card\r\n        {\r\n            this.ToggleSkipPayDay_Whole(false);\r\n\r\n            if(!_isBot)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\",1600);\r\n                setTimeout(() => {\r\n                    this.callUponCard();\r\n                }, 1650);\r\n            }else\r\n            {\r\n                console.log(\"Skipping PayDay.\");\r\n                setTimeout(() => {\r\n                    this.callUponCard();\r\n                }, 800);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            var _title=\"\";\r\n\r\n            if(_isDoublePayDay)\r\n                _title=\"DoublePayDay\";\r\n            else\r\n                _title=\"PayDay\";\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title,_isDoublePayDay,_skipHMNextPayday,_skipBMNextPayday,_isBot);\r\n        }\r\n    },\r\n\r\n    Bankrupt_TurnDecision()\r\n    {\r\n        this.PlayerGameInfo[this.TurnNumber].IsBankrupt=true;\r\n        this.PlayerGameInfo[this.TurnNumber].BankruptAmount+=1;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true,false,this.SelectedMode,this.PlayerGameInfo[this.TurnNumber].IsBankrupt,this.PlayerGameInfo[this.TurnNumber].BankruptAmount);\r\n    },\r\n\r\n    SendProfit_Partner_TurnDecision(_amount,_uID)\r\n    {\r\n        var _data = { Data: { Cash: _amount, ID: _uID } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(13, _data);\r\n    },\r\n\r\n    ReceiveProfit_Partner_TurnDecision(_data)\r\n    {\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false)\r\n        {\r\n            var _amount = _data.Data.Cash;\r\n            var _iD=_data.Data.ID;\r\n           \r\n            var _myIndex = this.GetMyIndex();\r\n            \r\n            if (this.PlayerGameInfo[_myIndex].PlayerUID == _iD) {\r\n\r\n                if (this.PlayerGameInfo[_myIndex].isGameFinished == true) { \r\n                    this.PlayerGameInfo[_myIndex].TotalScore+=_amount;\r\n                }\r\n\r\n                this.PlayerGameInfo[_myIndex].Cash += _amount;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have received profit of $\" + _amount + \" from your partner.\",2800);\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n            }\r\n        }\r\n    },\r\n\r\n//#endregion\r\n   \r\n    //#region Cards Rules\r\n    ToggleDoublePayNextTurn(_state)\r\n    {\r\n        _nextTurnDoublePay=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay=_nextTurnDoublePay;\r\n    },\r\n\r\n    ToggleSkipNextTurn(_state)\r\n    {\r\n        _skipNextTurn=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn=_skipNextTurn;\r\n    },\r\n\r\n    ToggleSkipPayDay_Whole(_state)\r\n    {\r\n        _skipNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday=_skipNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_HomeBased(_state)\r\n    {\r\n        _skipHMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday=_skipHMNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_BrickAndMortar(_state)\r\n    {\r\n        _skipBMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday=_skipBMNextPayday;\r\n    },\r\n\r\n    ToggleTurnProgress(_state)\r\n    {\r\n        TurnInProgress=_state;\r\n    },\r\n\r\n    ReturnTurnProgress()\r\n    {\r\n        return TurnInProgress;\r\n    },\r\n\r\n    LoseAllMarketingMoney()\r\n    {\r\n        var _loseAmount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _loseAmount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n        }\r\n        else\r\n        {\r\n            _loseAmount=0;\r\n        }\r\n\r\n        return _loseAmount\r\n    },\r\n\r\n    MultiplyMarketingMoney(_multiplier)\r\n    {\r\n        var _amountIncreased=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _amountIncreased=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_multiplier;\r\n        }\r\n        else\r\n        {\r\n            _amountIncreased=0;\r\n        }\r\n\r\n        return _amountIncreased\r\n    },\r\n\r\n    GetMarketingMoney(_profit)\r\n    {\r\n        var _amount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _profit=(_profit/100);\r\n            _amount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_profit;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n            this.PlayerGameInfo[this.TurnNumber].Cash+=_amount;\r\n        }\r\n        else\r\n        {\r\n            _amount=0;\r\n        }\r\n\r\n        return _amount\r\n    },\r\n\r\n    QuestionPopUp_OtherUser_OneQuestion(_data)\r\n    {\r\n        var _userID=_data.UserID;\r\n        var _questionIndex=_data.Question;\r\n        var _playerIndex=_data.UserIndex;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        \r\n        if(_userID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID)\r\n        {\r\n            console.log(\"ID matched\");\r\n\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n            OneQuestionIndex=_questionIndex;\r\n            var _questionAsked=OneQuestions[_questionIndex-1];\r\n            _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_questionAsked);\r\n        }\r\n    },\r\n\r\n    OneQuestionScreen_Space_OneQuestion(_isTurnOver=false)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData;\r\n        var _roomData;\r\n        if(this.SelectedMode==2) //for real players\r\n        {\r\n            _roomData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n            _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        }\r\n        else if(this.SelectedMode==1)//for bot\r\n        {\r\n            _myData=this.PlayerGameInfo[0];\r\n            _roomData=this.PlayerGameInfo;\r\n        }\r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n        _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n        _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData,_roomData,_isTurnOver,this.SelectedMode)\r\n    \r\n    },\r\n\r\n    OneQuestionDecision_PayAmount_OneQuestion()\r\n    {\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n        if(_myData.Cash>=5000)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(_myData.PlayerUID==this.PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    this.PlayerGameInfo[index].Cash-=5000;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);                \r\n                    break;\r\n                }\r\n            }\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\",1200);\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n            this.RaiseEventDecision_OneQuestion(true,false,-1,_myData.PlayerUID);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n        }\r\n    },\r\n\r\n    OneQuestionDecision_AnswerQuestion_OneQuestion()\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\",1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false,true,OneQuestionIndex,_myData.PlayerUID);\r\n    },\r\n\r\n    RaiseEventDecision_OneQuestion(_hasDonePayment,_hasAnsweredQuestion,_questionIndex,_UserID)\r\n    {\r\n        var _data={PaymentDone:_hasDonePayment,QuestionAnswered:_hasAnsweredQuestion,QuestionIndex:_questionIndex,ID:_UserID};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8,_data);\r\n    },\r\n\r\n    ReceiveEventDecision_OneQuestion(_data)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            var _hasDonePayment=_data.PaymentDone;\r\n            var _hasAnsweredQuestion=_data.QuestionAnswered;\r\n            var _questionIndex=_data.QuestionIndex;\r\n            var _uID=_data.ID;\r\n            \r\n            if(_hasDonePayment)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n                this.PlayerGameInfo[this.TurnNumber].Cash+=5000;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has refused to answer the question instead payed the cash amount, $5000 added to your cash amount\",2100);\r\n                _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                this.completeCardTurn();\r\n\r\n            }else if(_hasAnsweredQuestion)\r\n            {\r\n                var _selectedPlayerIndex=0;\r\n                var _actorsData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n                for (let index = 0; index < _actorsData.length; index++) {\r\n                    if(_uID==_actorsData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        _selectedPlayerIndex=index;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(_questionIndex==1)//have you skipped loan previous payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have skipped loan payement in previous payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have skipped loan payement in previous payday\",2100);\r\n                    }\r\n                }else if(_questionIndex==2)//Have you taken any loan?\r\n                {\r\n                    var _loanTaken=false;\r\n                    for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n                        if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            _loanTaken=true;\r\n                            break;\r\n                        } \r\n                    }\r\n\r\n                    if(_loanTaken)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have taken some loan\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have taken any loan\",2100);\r\n                    }\r\n                }else if(_questionIndex==3)//Are you bankrupted? if more than once, tell me the amount?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have been bankrupted \"+_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.BankruptAmount+\" time/es.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have been bankrupted\",2100);\r\n                    }\r\n                }else if(_questionIndex==4)//Is your turn going to be skipped next time?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will be skipped.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will not be skipped.\",2100);\r\n                    }\r\n                }\r\n                else if(_questionIndex==5)//Is it going to be double pay day your next payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will be double payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will not be double payday\",2100);\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                    this.completeCardTurn();\r\n                }, 2150);\r\n            }\r\n        }\r\n    },\r\n\r\n    ReceiveGoBackSpacesData_spaceFunctionality(_data)\r\n    {\r\n        if(IsTweening==true)\r\n        {\r\n            setTimeout(() => {\r\n                this.ReceiveGoBackSpacesData_spaceFunctionality(_data);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            var _spaces=_data.Data.backspaces;\r\n            var _counter=_data.Data.Counter;\r\n\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_counter+Backspaces].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos,0.1);\r\n\r\n            RollCounter=_counter;\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n\r\n    TweenPlayer_GoBackSpaces: function (Node,ToPos,speed=0.6) {\r\n        cc.tween(Node)\r\n        .to(speed, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        })\r\n        .start();\r\n    },\r\n\r\n    GoBackSpaces_spaceFunctionality()\r\n    {\r\n        RollCounter-=Backspaces;\r\n        \r\n        if(this.SelectedMode==2)\r\n        {\r\n            var _data={Data:{backspaces:Backspaces,Counter:RollCounter}};\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(10,_data);\r\n        }\r\n        \r\n        var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n        this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        this.completeCardTurn();\r\n    },\r\n\r\n\r\n    //#endregion\r\n    //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports  = GameManager;\r\n//#endregion"]}