{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","LocationsName","LoanTaken","LoanAmount","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","GameOver","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","isGameOver","OneQuestionIndex","OneQuestions","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","statics","Instance","onLoad","TurnNumber","TurnCompleted","CheckReferences","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","Get_MultiplayerController","CheckSpectate","console","log","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","SyncDataToPlayerGameInfo","AssignPlayerGameUI","CloseInitialScreen_SpectateMode","index","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","PhotonActor","customProperties","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","error","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","ReceiveEventTurnComplete","_uid","push","ArrayLength","IDFound","TurnHandler","_turn","_playerMatched","ToggleTurnProgress","ToggleDecision_TurnDecision","ResetTurnVariable","DiceRollScreen","PlayerInfo","RoomActors","ShowToast","ToggleSkipNextTurn","_ind","MainSessionData","MyData","_counter","PlayerSessionData","StartTurn","EnablePlayerNodes","SetName","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","myRoomActorsArray","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","RollDice","Dice1","getRandom","Dice2","_newRoll","RollOneDice","RollTwoDices","callUponCard","_spaceID","valueIndex","SendingData","completeCardTurn","CallGameComplete","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","SyncGameOver","_UID","RestartGame","StartDiceRoll","ZoomCameraOut","playercompleted","max","SelectedInd","SessionData","_value","TweenPlayer","min","Math","floor","random","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ToggleDoublePayNextTurn","TogglePayDay","ProcessPayDay_TurnDecision","ToPos","_newpos","_st1","_St2","ExpandBusiness_TurnDecision","amount","_locationName","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","ToggleSkipPayDay_Whole","_title","AssignData_PayDay","_state","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","_amount","QuestionPopUp_OtherUser_OneQuestion","_userID","UserID","_questionIndex","Question","UserIndex","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_questionAsked","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_roomData","_myData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_PayAmount_OneQuestion","RaiseEventDecision_OneQuestion","OneQuestionDecision_AnswerQuestion_OneQuestion","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","ID","ReceiveEventDecision_OneQuestion","_uID","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","_loanTaken","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n    None:0,\r\n    HomeBased: 1,                   //a business that you operate out of your home\r\n    brickAndmortar: 2               //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n    name: \"BusinessInfo\",\r\nproperties: { \r\n    Name: \"BusinessData\",\r\n    BusinessType:\r\n   {\r\n       displayName:\"Mode\",\r\n       type: EnumBusinessType,\r\n       default: EnumBusinessType.None,\r\n       serializable: true,\r\n       tooltip:\"Business catogory for players\",}, \r\n    BusinessTypeDescription:\r\n   {\r\n       displayName: \"Type\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Type (by name) of business player is opening\",},\r\n    BusinessName:\r\n   {\r\n       displayName: \"Name\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip: \"Name of the business player is opening\",},\r\n     Amount:\r\n       {\r\n           displayName: \"Amount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"balance of business\",},\r\n      IsPartnership:\r\n       {\r\n           displayName: \"IsPartnership\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has done partnership with someone with current business\",},\r\n       PartnerID:\r\n           {\r\n               displayName:\"PartnerID\",\r\n               type: cc.Text,\r\n               default: \"\",\r\n               serializable: true,\r\n               tooltip:\"ID of the partner with whom player has formed partnership\",},\r\n        LocationsName:\r\n           {\r\n               displayName:\"LocationsName\",\r\n               type: [cc.Text],\r\n               default: [],\r\n               serializable: true,\r\n               tooltip:\"if player owns brick and mortar he/she can expand to new location\",},\r\n        LoanTaken:\r\n           {\r\n               displayName:\"LoanTaken\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n        LoanAmount:\r\n           {\r\n               displayName:\"LoanAmount\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n    name: \"CardDataFunctionality\",\r\nproperties: { \r\n    NextTurnDoublePay:\r\n   {\r\n       displayName:\"NextTurnDoublePay\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if its going to be double pay day on next payday for current player\"}, \r\n    SkipNextTurn:\r\n   {\r\n       displayName:\"SkipNextTurn\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if turn is going to skipped on next turn for current player\"}, \r\n    SkipNextPayday:\r\n   {\r\n       displayName:\"SkipNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday is going to skipped on next payday for current player\"}, \r\n    SkipHMNextPayday:\r\n   {\r\n       displayName:\"SkipHMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for home based buisiness is going to skipped on next payday for current player\"},\r\n    SkipBMNextPayday:\r\n   {\r\n       displayName:\"SkipBMNextPayday\",\r\n       type: cc.Boolean,\r\n       default: false,\r\n       serializable: true,\r\n       tooltip:\"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\"}, \r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n    name: \"StockInfo\",\r\nproperties: { \r\n    Name: \"StockData\",\r\n    BusinessName:\r\n   {\r\n       displayName:\"BusinessName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the business in which stocks will be held\",}, \r\n    ShareAmount:\r\n   {\r\n       displayName: \"ShareAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip: \"Share amount of the stock\",},\r\n},\r\n\r\nctor: function () { //constructor\r\n}\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n    name:\"PlayerData\",\r\nproperties: { \r\n    PlayerName:\r\n   {\r\n       displayName:\"PlayerName\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"name of the player\",},\r\n    PlayerUID:\r\n   {\r\n       displayName:\"PlayerUID\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: true,\r\n       tooltip:\"ID of the player\",},\r\n    AvatarID:\r\n       {\r\n           displayName: \"AvatarID\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"id reference for player avatar selection\",},\r\n    IsBot:\r\n       {\r\n           displayName: \"IsBot\",\r\n           default: false,\r\n           typw:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if current player is bot\",}, \r\n    NoOfBusiness:\r\n   {\r\n       displayName:\"Business\",\r\n       type: [BusinessInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of business a player can own\",}, \r\n    CardFunctionality:\r\n   {\r\n       displayName:\"CardFunctionality\",\r\n       type: CardDataFunctionality,\r\n       default: {},\r\n       serializable: true,\r\n       tooltip:\"card functionality stored by player\",}, \r\n    HomeBasedAmount:\r\n   {\r\n       displayName:\"HomeBasedAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of home based business a player owns\",}, \r\n    BrickAndMortarAmount:\r\n   {\r\n       displayName:\"BrickAndMortarAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of brick and mortar business a player owns\",}, \r\n    TotalLocationsAmount:\r\n   {\r\n       displayName:\"TotalLocationsAmount\",\r\n       type: cc.Integer,\r\n       default: 0,\r\n       serializable: true,\r\n       tooltip:\"number of locations of all brick and mortar businessess\",}, \r\n    NoOfStocks:\r\n   {\r\n       displayName:\"Stocks\",\r\n       type: [StockInfo],\r\n       default: [],\r\n       serializable: true,\r\n       tooltip:\"Number of stock a player owns\",}, \r\n    Cash:\r\n       {\r\n           displayName: \"PlayerCash\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of cash player owns\",},\r\n    GoldCount:\r\n       {\r\n           displayName: \"GoldCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of gold a player owns\",},\r\n    StockCount:\r\n       {\r\n           displayName: \"StockCount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"count of stocks a player owns\",},\r\n    LoanTaken:\r\n       {\r\n           displayName: \"LoanTaken\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has taken loan from bank or not\",},\r\n     LoanAmount:\r\n       {\r\n           displayName: \"LoanAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"Amount of loan taken from the bank\",},\r\n    MarketingAmount:\r\n       {\r\n           displayName: \"MarketingAmount\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"marketing amount a player owns\",},\r\n    LawyerStatus:\r\n       {\r\n           displayName: \"LawyerStatus\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has hired a lawyer or not\",},\r\n    IsBankrupt:\r\n       {\r\n           displayName: \"IsBankrupt\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has been Bankrupted or not\",},\r\n    SkippedLoanPayment:\r\n       {\r\n           displayName: \"SkippedLoanPayment\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,\r\n           tooltip: \"Check if player has skipped loan payment\",},\r\n    PlayerRollCounter:\r\n       {\r\n           displayName: \"PlayerRollCounter\",\r\n           default: 0,\r\n           type:cc.Integer,\r\n           serializable: true,\r\n           tooltip: \"integer to store roll countor for player\",},\r\n    InitialCounterAssigned:\r\n       {\r\n           displayName: \"InitialCounterAssigned\",\r\n           default: false,\r\n           type:cc.Boolean,\r\n           serializable: true,},\r\n     isGameFinished:\r\n           {\r\n               displayName:\"isGameFinished\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n     TotalScore:\r\n           {\r\n               displayName:\"TotalScore\",\r\n               type: cc.Integer,\r\n               default: 0,\r\n               serializable: true,},\r\n    GameOver:\r\n           {\r\n               displayName:\"GameOver\",\r\n               type: cc.Boolean,\r\n               default: false,\r\n               serializable: true,},\r\n},\r\nctor: function () { //constructor\r\n}\r\n\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter=0;\r\nvar DiceTemp=0;\r\nvar DiceRoll=0;\r\nvar IsTweening=false;\r\nvar GamePlayReferenceManager=null;\r\nvar TurnCheckArray=[];\r\nvar BusinessLocationNodes=[];\r\n\r\nvar PassedPayDay=false;\r\nvar DoublePayDay=false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay=false;\r\nvar _skipNextTurn=false;\r\nvar _skipNextPayday=false; //skip whole pay day\r\nvar _skipHMNextPayday=false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday=false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived=false;\r\nvar TurnInProgress=false;\r\n\r\nvar isGameOver=false;\r\nvar OneQuestionIndex=-1;\r\nvar OneQuestions=\r\n[\r\n    \"you have skipped loan previous payday?\",\r\n    \"you have taken any loan?\",\r\n    \"you have bankrupted ever?\",\r\n    \"your next turn is going to be skipped?\",\r\n    \"your next payday is going to be double payday?\"\r\n];\r\n\r\nvar CardDisplaySetTimout=null;\r\n\r\nvar GameManager=cc.Class({\r\n    name:\"GameManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        PlayerGameInfo: {\r\n            default: [],                \r\n            type: [PlayerData],\r\n            serializable: true,\r\n            tooltip: \"all player's data\"},\r\n        PlayerNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for player\",},    \r\n        CameraNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for camera\",},    \r\n        AllPlayerUI: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of ui of all players\",},      \r\n        AllPlayerNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of node of all players inside gameplay\",},   \r\n        StartLocationNodes: {\r\n            default:[],                \r\n            type: [cc.Node],\r\n            serializable: true,\r\n            tooltip:\"Node reference of attay of locations\",},   \r\n    },\r\n    statics: {\r\n        PlayerData: PlayerData,\r\n        BusinessInfo:BusinessInfo,\r\n        EnumBusinessType:EnumBusinessType,\r\n        Instance:null\r\n    },\r\n\r\n    //#region All Functions of GameManager\r\n    \r\n    /**\r\n    @summary called when instance of class is created\r\n    @method onLoad\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    onLoad () {\r\n        GameManager.Instance=this;\r\n        this.TurnNumber=0;\r\n        this.TurnCompleted=false;\r\n        TurnCheckArray=[];\r\n        this.CheckReferences();\r\n        this.Init_GameManager();   \r\n        \r\n        this.RandomCardIndex=0;\r\n        this.CardCounter=0;\r\n        this.CardDisplayed=false;\r\n        CardEventReceived=false;\r\n    },\r\n\r\n    /**\r\n    @summary called to assign reference of required classes\r\n    @method CheckReferences\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n     },\r\n\r\n    /**\r\n    @summary initial gamemanager essetials\r\n    @method Init_GameManager\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    Init_GameManager () {\r\n        this.Camera=this.CameraNode.getComponent(cc.Camera);\r\n        this.isCameraZooming=false;\r\n        this.PlayerGameInfo=[];\r\n        RollCounter=0;\r\n        DiceTemp=0;\r\n        DiceRoll=0;  \r\n\r\n        //if joined player is spectate\r\n        if(GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate()==true)\r\n        {\r\n            console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n            //if inital setup has been done and game is under way\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\")==true)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n                this.PlayerGameInfo=AllData;\r\n\r\n                console.log(this.PlayerGameInfo);\r\n\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n                //this.SyncDataToPlayerGameInfo(0);\r\n                this.SyncAllData_SpectateManager();\r\n                this.TurnNumber=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n                this.UpdateGameUI(true,this.TurnNumber);            \r\n            }\r\n            else\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true);\r\n        }\r\n    },\r\n\r\n    //#region public functions to get data (accessible from other classes)\r\n    GetTurnNumber () {\r\n        return this.TurnNumber;\r\n    },\r\n    //#endregion\r\n\r\n    //#region SpectateMode Code\r\n\r\n    SyncAllData_SpectateManager()\r\n    {\r\n        var AllData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n        this.PlayerGameInfo=AllData;\r\n        this.SyncDataToPlayerGameInfo(0);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers=this.PlayerGameInfo.length;\r\n        this.AssignPlayerGameUI();\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n            this.AllPlayerNodes[index].setPosition(_toPos.x,_toPos.y);\r\n        }\r\n\r\n        console.log(\"synced playernodes\");\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    CheckTurnOnSpectateLeave_SpectateManager()\r\n    {\r\n      var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n      if(TurnCheckArray.length==TotalConnectedPlayers)\r\n      {\r\n        TurnCheckArray=[];\r\n        this.TurnCompleted=true;\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n            this.ChangeTurn();\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        }\r\n      }\r\n\r\n    },\r\n\r\n    //#endregion\r\n\r\n\r\n    //#region functions related to Turn Mechanism and card mechanism\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n    @method RaiseEventForCard\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventForCard(_data)\r\n  {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5,_data);\r\n  },\r\n\r\n  ClearDisplayTimeout()\r\n  {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers()\r\n  {\r\n    console.error(CardEventReceived);\r\n    if(CardEventReceived==true)\r\n    {\r\n        clearTimeout(CardDisplaySetTimout);\r\n        console.error(this.CardCounter);\r\n        CardEventReceived=false;\r\n        if(!this.CardDisplayed)\r\n        {\r\n            this.CardDisplayed=true;\r\n            GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,this.RandomCardIndex);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        CardDisplaySetTimout=setTimeout(() => { //check after every 0.5 seconds\r\n            this.DisplayCardOnOthers();\r\n        }, 500);\r\n    }\r\n  },\r\n\r\n  ResetCardDisplay()\r\n  {\r\n    this.CardDisplayed=false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data)\r\n  {\r\n\r\n    this.CheckReferences();\r\n    console.log(_data);\r\n\r\n    var RandomCard=_data.randomCard;\r\n    var counter=_data.counter;\r\n\r\n    this.RandomCardIndex=RandomCard;\r\n    this.CardCounter=counter;\r\n\r\n   \r\n    console.error(CardEventReceived);\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(true,RandomCard);\r\n    }\r\n    else\r\n    {\r\n        CardEventReceived=true;\r\n        // if(IsTweening==false && this.CardDisplayed==false)\r\n        // {\r\n        //     GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent('SpaceHandler').OnLandedOnSpace(false,RandomCard);\r\n        //     this.CardDisplayed=true;\r\n        // }\r\n    }\r\n\r\n    console.error(CardEventReceived);\r\n\r\n    \r\n  },\r\n\r\n   /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n    @method RaiseEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  RaiseEventTurnComplete()\r\n  {\r\n    if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n    {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4,GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n    }\r\n  },\r\n\r\n\r\n  SyncAllData()\r\n  {\r\n    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n    }  \r\n},\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n    @method ReceiveEventTurnComplete\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n  ReceiveEventTurnComplete(_uid)\r\n  {\r\n      if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n      {\r\n        console.log(TurnCheckArray.length);\r\n\r\n        if(TurnCheckArray.length==0)\r\n                TurnCheckArray.push(_uid); \r\n\r\n        var ArrayLength=TurnCheckArray.length;\r\n        var IDFound=false;\r\n        for (let index = 0; index < ArrayLength; index++) {\r\n                if(TurnCheckArray[index]==_uid)\r\n                IDFound=true;\r\n        }\r\n\r\n        if(!IDFound)\r\n        {\r\n            TurnCheckArray.push(_uid);\r\n        }\r\n        console.log(TurnCheckArray);\r\n        console.log(TurnCheckArray.length);\r\n\r\n        // var TotalConnectedPlayers=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n        var TotalConnectedPlayers=this.PlayerGameInfo.length;\r\n        if(TurnCheckArray.length==TotalConnectedPlayers)\r\n        {\r\n            TurnCheckArray=[];\r\n            this.TurnCompleted=true;\r\n\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n                //this.SyncAllData();\r\n                this.ChangeTurn();\r\n                console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n                console.log(\"Change Turn is called by: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n        }\r\n    }\r\n  },\r\n\r\n   /**\r\n    @summary called when dice animation is played on all players\r\n    @method ChangeTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    ChangeTurn()\r\n    {\r\n        this.SyncAllData();\r\n\r\n        if(this.TurnNumber<this.PlayerGameInfo.length-1)\r\n            this.TurnNumber=this.TurnNumber+1;\r\n        else\r\n            this.TurnNumber=0;\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n\r\n    /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n    @method TurnHandler\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    TurnHandler(_turn)\r\n    {\r\n        var _playerMatched=false;\r\n        _skipNextTurn=false;\r\n        if(IsTweening) //check if animation of turn being played on other players \r\n        {\r\n            setTimeout(() => {\r\n                this.TurnHandler(_turn);\r\n            }, 800);\r\n        }\r\n        else\r\n        {\r\n            \r\n            this.TurnNumber=_turn;\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {\r\n                this.ToggleTurnProgress(true);\r\n                _playerMatched=true;\r\n                _skipNextTurn=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n                if(!_skipNextTurn)\r\n                {\r\n                    setTimeout(() => {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                    }, 1000);\r\n                    console.log(\"its your turn \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                }\r\n            }\r\n            else\r\n            {\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n            this.UpdateGameUI(true,this.TurnNumber);\r\n\r\n            for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n            }\r\n\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\",this.TurnNumber,true);\r\n            console.log(\"Turn Of: \"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            console.log(this.AllPlayerUI[this.TurnNumber].getComponent('PlayerProfileManager').PlayerInfo);\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n            console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors());\r\n            this.SyncDataToPlayerGameInfo(0);\r\n\r\n\r\n            //force sync spectator after completion of each turn\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==true)\r\n                this.SyncAllData_SpectateManager();\r\n\r\n            //skip this turn as skip turn has been called before\r\n            if(_playerMatched && _skipNextTurn)\r\n            {\r\n                IsTweening=false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\",1200);\r\n                this.ToggleSkipNextTurn(false);\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n            if(_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished)\r\n            {\r\n                IsTweening=false;\r\n                this.ChangeTurn();\r\n                this.ToggleTurnProgress(false);\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    SyncDataToPlayerGameInfo(_ind)\r\n    {\r\n        var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n        var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        var _counter=_ind;\r\n        console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        if(this.PlayerGameInfo[_counter].PlayerUID!=MyData.customProperties.PlayerSessionData.PlayerUID) //dont update my own data\r\n        {\r\n            for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(this.PlayerGameInfo[_counter].PlayerUID==MainSessionData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        this.PlayerGameInfo[_counter]=MainSessionData[index].customProperties.PlayerSessionData;\r\n                        \r\n                        if(_counter<this.PlayerGameInfo.length-1)\r\n                        {\r\n                            _counter++;\r\n                            console.log(\"adding counter: \"+_counter);\r\n                            this.SyncDataToPlayerGameInfo(_counter);\r\n                        }\r\n                        else{\r\n                            console.log(this.PlayerGameInfo);\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        else\r\n            {\r\n                if(_counter<this.PlayerGameInfo.length-1)\r\n                    {\r\n                        _counter++;\r\n                        console.log(\"adding counter: \"+_counter);\r\n                        this.SyncDataToPlayerGameInfo(_counter);\r\n                    }\r\n                else{\r\n                        console.log(this.PlayerGameInfo);\r\n                    }\r\n            }\r\n    },  \r\n\r\n    /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    StartTurn()\r\n    {\r\n        this.AssignPlayerGameUI();\r\n        this.EnablePlayerNodes();\r\n        this.TurnNumber=0; //reseting the turn number on start of the game\r\n\r\n        //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2,this.TurnNumber);\r\n    },\r\n    //#endregion\r\n\r\n\r\n    //#region Function for gameplay\r\n     /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    AssignPlayerGameUI()\r\n    {\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerUI[index].active=true;\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[index];\r\n            this.AllPlayerUI[index].getComponent('PlayerProfileManager').SetName(this.PlayerGameInfo[index].PlayerName);\r\n        }\r\n    },\r\n\r\n    UpdateGameUI(_toggleHighlight,_index)\r\n    {\r\n        if(_toggleHighlight)\r\n        {\r\n            this.AllPlayerUI[_index].getComponent('PlayerProfileManager').PlayerInfo=this.PlayerGameInfo[_index];\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n                if(_index==index)\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(true);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(true);\r\n                }\r\n                else\r\n                {\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleBGHighlighter(false);\r\n                    this.AllPlayerUI[index].getComponent('PlayerProfileManager').ToggleTextighlighter(false);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/ \r\n    EnablePlayerNodes()\r\n    {\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            if(this.PlayerGameInfo[index].HomeBasedAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x,this.StartLocationNodes[0].position.y);\r\n            else if(this.PlayerGameInfo[index].BrickAndMortarAmount==1)   \r\n                this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x,this.StartLocationNodes[1].position.y);\r\n        }\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n            this.AllPlayerNodes[index].active=true;\r\n        }\r\n    },\r\n\r\n    SetFollowCameraProperties()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        this.CameraNode.position=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n   \r\n        let ratio=targetPos.y/cc.winSize.height;\r\n        this.Camera.zoomRatio=2;\r\n    },\r\n\r\n    lateUpdate () {\r\n        if(this.isCameraZooming)    \r\n            this.SetFollowCameraProperties();\r\n    },\r\n\r\n    syncDiceRoll(_roll)\r\n    {\r\n        var _dice1=_roll.dice1;\r\n        var _dice2=_roll.dice2;\r\n        var _result=_dice1+_dice2;\r\n\r\n        IsTweening=true;\r\n        this.CardDisplayed=false;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned)\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==1)\r\n            {\r\n                RollCounter=0;\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                console.error(RollCounter);\r\n            }\r\n            else\r\n            {\r\n                this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned=true;\r\n                RollCounter=13;\r\n                console.error(RollCounter);\r\n            }\r\n        }\r\n        else\r\n        {\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter==12)\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+21;  \r\n            else\r\n                this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter+1;\r\n\r\n            RollCounter=this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n            console.error(RollCounter-1);\r\n        }\r\n        \r\n\r\n        DiceRoll=_result;\r\n        DiceTemp=0;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n        for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n            if(this.TurnNumber==index)\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=true;\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1,_dice2);\r\n            }\r\n            else\r\n            {\r\n                this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active=false;\r\n            }  \r\n        }\r\n\r\n        // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        // this.TweenCamera(_pos,true,0.4);   \r\n    },\r\n\r\n    DiceFuntionality()\r\n    {\r\n        let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n        var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n        this.TweenCamera(_pos,true,0.4);  \r\n    },\r\n\r\n    TempCheckSpace(_rolling)\r\n    {\r\n        var tempcounter=0;\r\n        var tempcounter2=0;\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID==this.PlayerGameInfo[this.TurnNumber].PlayerUID)\r\n            {\r\n                //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n                tempcounter2=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n            } \r\n        }\r\n\r\n        // console.error(tempcounter2+\" \"+_roll);\r\n        // if((tempcounter2+_roll)<33)\r\n        // {\r\n        //     if(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType==1)\r\n        //     {\r\n        //         tempcounter=0+_roll-1;\r\n        //         console.error(tempcounter);\r\n        //     }\r\n        //     else\r\n        //     {\r\n        //         tempcounter=13+_roll-1;\r\n        //         console.error(tempcounter);\r\n        //     }\r\n        // }\r\n        // else\r\n        // {\r\n        //     console.error(tempcounter2+\" \"+_roll);\r\n        //     tempcounter=tempcounter2+_roll;\r\n        // }\r\n\r\n      if(tempcounter2-1<0)\r\n      {\r\n        console.error(\"starting from oblivion\");\r\n        tempcounter=tempcounter2+_rolling-1;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n      else\r\n      {\r\n        tempcounter=tempcounter2+_rolling;\r\n        var dicetobe=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        console.error(\"to be: \"+dicetobe);\r\n      }\r\n\r\n    },\r\n\r\n    RollDice:function()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2=this.getRandom(1,7);\r\n\r\n        // var Dice1=4;\r\n        // var Dice2=4;\r\n\r\n        DiceRoll=Dice1+Dice2;\r\n        var _newRoll={dice1:Dice1,dice2:Dice2}\r\n        //DiceRoll=23;\r\n        //this.TempCheckSpace(DiceRoll);\r\n        console.log(\"dice number: \"+DiceRoll+\", Dice1:\"+Dice1+\", Dice2:\"+Dice2);\r\n\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3,_newRoll); \r\n    },\r\n\r\n    RollOneDice()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        return Dice1;\r\n    },\r\n\r\n    RollTwoDices()\r\n    {\r\n        var Dice1=this.getRandom(1,7);\r\n        var Dice2=this.getRandom(1,7);\r\n        return (Dice1+Dice2);\r\n    },\r\n\r\n    callUponCard()\r\n    {\r\n        var _spaceID=parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType);\r\n        if(_spaceID!=6 && _spaceID!=7) //6 means payday and 7 means double payday, 9 menas sell space\r\n        {\r\n            var RandomCard=this.getRandom(0,15);\r\n            \r\n            //for testing only\r\n            if(_spaceID==2) //landed on some big buseinss\r\n            {\r\n                var valueIndex=[0,1,7,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }else if(_spaceID==5) //landed on some losses cards\r\n            {\r\n                var valueIndex=[0,5,6,2];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n            else if(_spaceID==3) //landed on some marketing cards\r\n            {\r\n                var valueIndex=[0,7,3,8,13,9];\r\n                var index=this.getRandom(0,6);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            else if(_spaceID==1) //landed on some marketing cards\r\n            {\r\n                var valueIndex=[0,1,6,10];\r\n                var index=this.getRandom(0,4);\r\n                RandomCard=valueIndex[index];\r\n            }\r\n\r\n            IsTweening=false;\r\n            if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n            {    \r\n                var SendingData={\"randomCard\":RandomCard,\"counter\":RollCounter};    \r\n                this.RaiseEventForCard(SendingData);\r\n            }\r\n            else\r\n            {\r\n                this.DisplayCardOnOthers();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            IsTweening=false;\r\n            console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n            this.RaiseEventTurnComplete();\r\n        }\r\n    },\r\n\r\n    completeCardTurn()\r\n    {\r\n        IsTweening=false;\r\n        console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n        this.RaiseEventTurnComplete();\r\n    },\r\n\r\n    CallGameComplete()\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            var _playerIndex=this.TurnNumber;\r\n            if(this.PlayerGameInfo[_playerIndex].isGameFinished==false)\r\n            {\r\n                this.PlayerGameInfo[_playerIndex].isGameFinished=true;\r\n\r\n                var _cash=this.PlayerGameInfo[this.TurnNumber].Cash;\r\n                var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n                var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n                var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n                var loanAmount=0;\r\n                for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        loanAmount+=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                    } \r\n                }\r\n\r\n                var BMCash=(BMAmount+BMLocations)*150000;\r\n\r\n                var HMCash=0;\r\n                if(HMAmount==1)\r\n                    HMCash=60000;\r\n                else if(HMAmount==2)\r\n                    HMCash=25000+60000;\r\n                else if(HMAmount==3)\r\n                    HMCash=25000+25000+60000;\r\n\r\n                var TotalAssets=_cash+BMCash+HMCash-loanAmount;\r\n\r\n                this.PlayerGameInfo[this.TurnNumber].TotalScore=TotalAssets;\r\n                GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n                \r\n            }\r\n        }\r\n    },\r\n\r\n   RaiseEventForGameComplete(_data)\r\n   {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6,_data);\r\n   },\r\n\r\n   SyncGameOver(_UID)\r\n   {\r\n    var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var MyData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    console.log(_UID);\r\n    console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver=true;\r\n\r\n    if(MyData.customProperties.PlayerSessionData.PlayerUID==_UID)\r\n    {\r\n        //you won\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n            \"Congrats! your cash is highest, you have won the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n            \"Game will be restarted automatcally after 15 seconds\",\r\n            15000\r\n        );\r\n    }\r\n    else\r\n    {\r\n        //you lose\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n            \"Total Cash: \"+MyData.customProperties.PlayerSessionData.TotalScore+\"\\n\"+'\\n'+\r\n            \"unfortunately you have lost the game.\"+\"\\n\"+'\\n'+\"\\n\"+\r\n            \"Game will be restarted automatcally after 15 seconds\",\r\n            15000\r\n        );\r\n    }\r\n\r\n    setTimeout(() => {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n    }, 15060);\r\n\r\n   },\r\n\r\n    StartDiceRoll:function()\r\n    {\r\n        if(RollCounter>=GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length)\r\n        {\r\n            console.log(\"Gameover\");\r\n            isGameOver=true;\r\n            this.ZoomCameraOut();\r\n\r\n            if(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate==false)\r\n            {\r\n\r\n                this.CallGameComplete();\r\n                var playercompleted=0;\r\n\r\n                var MainSessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                for (let index = 0; index < MainSessionData.length; index++) {\r\n                    if(MainSessionData[index].customProperties.PlayerSessionData.isGameFinished)\r\n                    {\r\n                        playercompleted++;\r\n                    }\r\n                }\r\n        \r\n            \r\n                if(playercompleted==this.PlayerGameInfo.length)\r\n                {\r\n                    var max=0;\r\n                    var SelectedInd=0;\r\n                    var SessionData=GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n                    for (let index = 0; index < SessionData.length; index++) {\r\n                        var _value = SessionData[index].customProperties.PlayerSessionData.TotalScore;\r\n\r\n                        if(_value > max)\r\n                        {\r\n                            SelectedInd=index;\r\n                            max=_value;\r\n                        }\r\n                    }\r\n\r\n                    console.log(\"game won by player id: \"+SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                \r\n\r\n                    this.RaiseEventForGameComplete(SessionData[SelectedInd].customProperties.PlayerSessionData.PlayerUID);\r\n                    //game completed on all systems\r\n                }else\r\n                {\r\n                    IsTweening=false;\r\n                    this.ChangeTurn();\r\n                }\r\n            }\r\n        }\r\n        else\r\n        {\r\n            DiceTemp=DiceTemp+1; \r\n            var _toPos=cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x,GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n            this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber],_toPos);\r\n        }\r\n    },\r\n\r\n    getRandom:function(min,max)\r\n    {\r\n        return Math.floor(Math.random() * (max - min) ) + min; // min included and max excluded\r\n    },\r\n\r\n    TweenCamera: function (_pos, isZoom,time) {   \r\n        cc.tween(this.CameraNode)\r\n        .to(time, { position: cc.v2(_pos.x, _pos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(isZoom)\r\n            this.ZoomCameraIn();\r\n        else\r\n            this.ZoomCameraOut();\r\n        })\r\n        .start();\r\n    },\r\n\r\n    ZoomCameraIn () {\r\n        setTimeout(() => {\r\n             if(this.Camera.zoomRatio<2)\r\n             {\r\n                this.Camera.zoomRatio=this.Camera.zoomRatio+0.03;\r\n                this.ZoomCameraIn();\r\n             }\r\n             else\r\n             {\r\n                this.Camera.zoomRatio=2;\r\n                this.isCameraZooming=true;\r\n                this.StartDiceRoll();\r\n             }\r\n          }, 10);\r\n    },\r\n\r\n    CheckPayDayConditions()\r\n    {\r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n            PassedPayDay=true;\r\n                    \r\n        if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==7)\r\n            DoublePayDay=true;\r\n\r\n        _nextTurnDoublePay=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n        if(PassedPayDay && !DoublePayDay && !_nextTurnDoublePay)\r\n        {\r\n            this.ToggleDoublePayNextTurn(false);\r\n            this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(false);\r\n        }\r\n        else if((DoublePayDay) || (PassedPayDay && _nextTurnDoublePay))\r\n        {\r\n            this.ToggleDoublePayNextTurn(false);\r\n            this.TogglePayDay(false,false);\r\n            this.ProcessPayDay_TurnDecision(true);\r\n        }\r\n        else\r\n        {\r\n            this.callUponCard();\r\n        }\r\n    },\r\n\r\n    ZoomCameraOut () {\r\n        setTimeout(() => {\r\n            if(this.Camera.zoomRatio>=1)\r\n            {\r\n               this.isCameraZooming=false;\r\n               this.Camera.zoomRatio=this.Camera.zoomRatio-0.03;\r\n               this.ZoomCameraOut();\r\n            }\r\n            else\r\n            {\r\n                this.CameraNode.position=cc.Vec2(0,0);\r\n                this.Camera.zoomRatio=1;\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n                \r\n                if(!isGameOver)\r\n                {\r\n                    if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                        this.CheckPayDayConditions();\r\n                    else\r\n                        this.callUponCard();\r\n                }\r\n            }\r\n         }, 10);\r\n         \r\n    },\r\n\r\n    TweenPlayer: function (Node,ToPos) {\r\n        cc.tween(Node)\r\n        .to(0.4, { position: cc.v2(ToPos.x, ToPos.y)},{easing:\"quadInOut\"})\r\n        .call(() => {\r\n        if(DiceTemp<DiceRoll)\r\n        {\r\n            if(!isGameOver)\r\n            {\r\n                if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n                {\r\n                    if(parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent('SpaceHandler').SpaceData.SpacesType)==6)\r\n                        PassedPayDay=true;\r\n                }\r\n            }\r\n\r\n            if(RollCounter==12)\r\n                RollCounter=RollCounter+21;  \r\n            else\r\n                RollCounter=RollCounter+1;\r\n\r\n            //DiceTemp=DiceTemp+1; \r\n            console.log(DiceTemp+\" \"+RollCounter);\r\n            \r\n            this.StartDiceRoll();\r\n            //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n           \r\n        }\r\n        else\r\n        {\r\n            var _newpos=cc.Vec2(0,0);\r\n            this.TweenCamera(_newpos,false,0.6); //zoomout\r\n        }\r\n\r\n        })\r\n        .start();\r\n    },\r\n\r\n    //rules implmentation during turn (turn decisions)\r\n\r\n    TogglePayDay(_st1,_St2)\r\n    {\r\n        PassedPayDay=_st1;\r\n        DoublePayDay=_St2;\r\n    },\r\n\r\n    ExpandBusiness_TurnDecision(amount,_index,_locationName)\r\n    {\r\n        if(this.PlayerGameInfo[this.TurnNumber].Cash>=amount)\r\n        {\r\n            this.PlayerGameInfo[this.TurnNumber].Cash=this.PlayerGameInfo[this.TurnNumber].Cash-amount;\r\n            this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount=this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount+1;\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\",1000);\r\n            setTimeout(() => {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n            }, 1200);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \"+amount);\r\n        }\r\n\r\n    },\r\n\r\n    GenerateExpandBusiness_Prefabs_TurnDecision()\r\n    {\r\n        BusinessLocationNodes=[];\r\n\r\n        console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n        for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n            if(parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType)==2) //this means there is brick and mortar in list\r\n            {\r\n                var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n                node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n                node.getComponent('ExpandBusinessHandler').SetBusinessIndex(i);\r\n                node.getComponent('ExpandBusinessHandler').SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n                node.getComponent('ExpandBusinessHandler').ResetEditBox();\r\n                BusinessLocationNodes.push(node);\r\n            } \r\n        }\r\n        console.log(BusinessLocationNodes);\r\n        return BusinessLocationNodes.length;\r\n    },\r\n\r\n    DestroyGeneratedNodes()\r\n    {\r\n        for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n            BusinessLocationNodes[index].destroy();\r\n        }\r\n\r\n        BusinessLocationNodes=[];\r\n    },\r\n\r\n    UpdateStocks_TurnDecision(_name,_ShareAmount,_isAdding)\r\n    {\r\n        if(_isAdding)\r\n        {\r\n            var _stock=new StockInfo();\r\n            _stock.BusinessName=_name;\r\n            _stock.ShareAmount=_ShareAmount;\r\n\r\n            this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n        }\r\n    },\r\n\r\n    ProcessPayDay_TurnDecision(_isDoublePayDay=false)\r\n    {\r\n        _skipNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n        _skipHMNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n        _skipBMNextPayday=this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n        if(_skipNextPayday) //if previously skip payday was stored by any card\r\n        {\r\n            this.ToggleSkipPayDay_Whole(false);\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\",1600);\r\n            setTimeout(() => {\r\n                this.callUponCard();\r\n            }, 1650);\r\n        }\r\n        else\r\n        {\r\n            var _title=\"\";\r\n\r\n            if(_isDoublePayDay)\r\n                _title=\"DoublePayDay\";\r\n            else\r\n                _title=\"PayDay\";\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title,_isDoublePayDay,_skipHMNextPayday,_skipBMNextPayday);\r\n        }\r\n    },\r\n\r\n//#endregion\r\n   \r\n    //#region Cards Rules\r\n    ToggleDoublePayNextTurn(_state)\r\n    {\r\n        _nextTurnDoublePay=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay=_nextTurnDoublePay;\r\n    },\r\n\r\n    ToggleSkipNextTurn(_state)\r\n    {\r\n        _skipNextTurn=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn=_skipNextTurn;\r\n    },\r\n\r\n    ToggleSkipPayDay_Whole(_state)\r\n    {\r\n        _skipNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday=_skipNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_HomeBased(_state)\r\n    {\r\n        _skipHMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday=_skipHMNextPayday;\r\n    },\r\n\r\n    ToggleSkipPayDay_BrickAndMortar(_state)\r\n    {\r\n        _skipBMNextPayday=_state;\r\n        this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday=_skipBMNextPayday;\r\n    },\r\n\r\n    ToggleTurnProgress(_state)\r\n    {\r\n        TurnInProgress=_state;\r\n    },\r\n\r\n    ReturnTurnProgress()\r\n    {\r\n        return TurnInProgress;\r\n    },\r\n    LoseAllMarketingMoney()\r\n    {\r\n        var _loseAmount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _loseAmount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n        }\r\n        else\r\n        {\r\n            _loseAmount=0;\r\n        }\r\n\r\n        return _loseAmount\r\n    },\r\n\r\n    MultiplyMarketingMoney(_multiplier)\r\n    {\r\n        var _amountIncreased=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _amountIncreased=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_multiplier;\r\n        }\r\n        else\r\n        {\r\n            _amountIncreased=0;\r\n        }\r\n\r\n        return _amountIncreased\r\n    },\r\n\r\n    GetMarketingMoney(_profit)\r\n    {\r\n        var _amount=-1;\r\n        if(this.PlayerGameInfo[this.TurnNumber].MarketingAmount>0)\r\n        {\r\n            _profit=(_profit/100);\r\n            _amount=this.PlayerGameInfo[this.TurnNumber].MarketingAmount*=_profit;\r\n            this.PlayerGameInfo[this.TurnNumber].MarketingAmount=0;\r\n            this.PlayerGameInfo[this.TurnNumber].Cash+=_amount;\r\n        }\r\n        else\r\n        {\r\n            _amount=0;\r\n        }\r\n\r\n        return _amount\r\n    },\r\n\r\n    QuestionPopUp_OtherUser_OneQuestion(_data)\r\n    {\r\n        var _userID=_data.UserID;\r\n        var _questionIndex=_data.Question;\r\n        var _playerIndex=_data.UserIndex;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        \r\n        if(_userID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID)\r\n        {\r\n            console.log(\"ID matched\");\r\n\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n            OneQuestionIndex=_questionIndex;\r\n            var _questionAsked=OneQuestions[_questionIndex-1];\r\n            _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_questionAsked);\r\n        }\r\n    },\r\n\r\n    OneQuestionScreen_Space_OneQuestion(_isTurnOver=false)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _roomData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        \r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n        _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n        _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData,_roomData,_isTurnOver)\r\n    \r\n    },\r\n\r\n    OneQuestionDecision_PayAmount_OneQuestion()\r\n    {\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n        if(_myData.Cash>=5000)\r\n        {\r\n            for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n                if(_myData.PlayerUID==this.PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    this.PlayerGameInfo[index].Cash-=5000;\r\n                    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);                \r\n                    break;\r\n                }\r\n            }\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\",1200);\r\n            _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n            this.RaiseEventDecision_OneQuestion(true,false,-1,_myData.PlayerUID);\r\n        }\r\n        else\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n        }\r\n    },\r\n\r\n    OneQuestionDecision_AnswerQuestion_OneQuestion()\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\",1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false,true,OneQuestionIndex,_myData.PlayerUID);\r\n    },\r\n\r\n    RaiseEventDecision_OneQuestion(_hasDonePayment,_hasAnsweredQuestion,_questionIndex,_UserID)\r\n    {\r\n        var _data={PaymentDone:_hasDonePayment,QuestionAnswered:_hasAnsweredQuestion,QuestionIndex:_questionIndex,ID:_UserID};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8,_data);\r\n    },\r\n\r\n    ReceiveEventDecision_OneQuestion(_data)\r\n    {\r\n        var _gameplayUIManager=GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        if(this.PlayerGameInfo[this.TurnNumber].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        {\r\n            var _hasDonePayment=_data.PaymentDone;\r\n            var _hasAnsweredQuestion=_data.QuestionAnswered;\r\n            var _questionIndex=_data.QuestionIndex;\r\n            var _uID=_data.ID;\r\n            \r\n            if(_hasDonePayment)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n                this.PlayerGameInfo[this.TurnNumber].Cash+=5000;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has refused to answer the question instead payed the cash amount, $5000 added to your cash amount\",2100);\r\n                _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                this.completeCardTurn();\r\n\r\n            }else if(_hasAnsweredQuestion)\r\n            {\r\n                var _selectedPlayerIndex=0;\r\n                var _actorsData=GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n                for (let index = 0; index < _actorsData.length; index++) {\r\n                    if(_uID==_actorsData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                    {\r\n                        _selectedPlayerIndex=index;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                if(_questionIndex==1)//have you skipped loan previous payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have skipped loan payement in previous payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have skipped loan payement in previous payday\",2100);\r\n                    }\r\n                }else if(_questionIndex==2)//Have you taken any loan?\r\n                {\r\n                    var _loanTaken=false;\r\n                    for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n                        if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken)\r\n                        {\r\n                            _loanTaken=true;\r\n                            break;\r\n                        } \r\n                    }\r\n\r\n                    if(_loanTaken)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have taken some loan\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have taken any loan\",2100);\r\n                    }\r\n                }else if(_questionIndex==3)//Are you bankrupted? if more than once, tell me the amount?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered to have been bankrupted\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered not to have been bankrupted\",2100);\r\n                    }\r\n                }else if(_questionIndex==4)//Is your turn going to be skipped next time?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will be skipped.\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next turn will not be skipped.\",2100);\r\n                    }\r\n                }\r\n                else if(_questionIndex==5)//Is it going to be double pay day your next payday?\r\n                {\r\n                    if(_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay)\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will be double payday\",2100);\r\n                    }else\r\n                    {\r\n                        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast\r\n                        (\"Player has answered, next payday will not be double payday\",2100);\r\n                    }\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n                    this.completeCardTurn();\r\n                }, 2150);\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    //#endregion\r\n    //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports  = GameManager;\r\n//#endregion"]}