{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["_isTest","_diceinput1","_diceinput2","PreviousDiceRoll1","PreviousDiceRoll2","halfBusinessAmount","halfBusinessAmountID","halfBusinessAmountIndex","PreviousDiceRoll3","PreviousDiceRoll4","PreviousDiceRoll5","userGameOver","BotGameOver","TotalCounterReached","PassedPayDayCounter","DoublePayDayCounter","NoCardFunctionality","PlayerLeft","ForceChangeTimeOut","GameCompleted","CorrectAnswer","VocabularyQuestions","EstablishmentQuestions","VocabularyQuestionsCounter","EstablishmentQuestionsCounter","BigBusinessArray","LossesArray","MarketingArray","WildCardArray","BigBusinessArrayCounter","LossesArrayCounter","MarketingArrayCounter","WildCardArrayCounter","EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","PartnerName","LocationsName","LoanTaken","LoanAmount","ReceiveDoublePayDay","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","NextTurnHalfPayDay","NextTurnHalfPayDayCounter","HasMarketingCompany","BankruptedNextTurn","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","ReceiveDoublePayDayAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","BankruptAmount","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","TotalHBCash","TotalBMCash","TotalGoldCash","TotalLoanBalance","TotalStocksCash","GameOver","IsActive","CanGiveProfitOnPayDay","UserIDForProfitPayDay","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_nextTurnhalfPay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","Backspaces","isGameOver","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","BotGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","SelectedMode","statics","Instance","SetPlayerLeft","_state","ResetAllVariables","InputTestDice1","_val","InputTestDice2","onLoad","ResetPayDay","TurnNumber","TurnCompleted","CheckReferences","Get_MultiplayerController","GetSelectedMode","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","console","log","require","Camera","getComponent","isCameraZooming","CheckSpectate","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","GetMyIndex","myIndex","_actor","PhotonActor","customProperties","PlayerSessionData","_allActors","index","SyncDataToPlayerGameInfo","AssignPlayerGameUI","EnablePlayerNodes","CloseInitialScreen_SpectateMode","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","_lastIndex","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","RemoveFromCheckArray","_uid","_ind","splice","CheckTurnComplete","j","ReceiveEventTurnComplete","push","ArrayLength","IDFound","ResetSomeValues","ChangeTurnForcefully","UpdateVisualData","RefreshDataAutomatically","TurnHandler","_turn","_isMaster","CheckCurrentActiveMasterClient","_playerMatched","ToggleTurnProgress","ResetTurnVariable","StartNewGame_BankRupted","ToggleDecision_TurnDecision","RollDice","DiceRollScreen","PlayerInfo","myRoomActorsArray","ShowToast","ToggleSkipNextTurn","UpdateUIData","MainSessionData","MyData","_counter","StartTurn","ReceiveBankruptData","_isBankrupted","bankrupted","turn","_playerData","PlayerDataMain","StartTurnAfterBankrupt","_randomIndex","getRandom","SetName","SetAvatar","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","children","Sprite","spriteFrame","AvatarSprites","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","error","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","Dice1","Dice2","_newRoll","RollOneDice","RollTwoDices","PopulateDecksArray","_isBigBusiness","_isLosses","_isMarketing","_isWildCard","sort","Math","random","_tempData","BigArray","LossArray","MarketArray","WildArrya","GetBigBusinessIndex","GetLossesIndex","GetMarketingIndex","GetWildCardIndex","UpdateCounters","SelectRelatedCard","callUponCard","_spaceID","StartDiceRoll","SendingData","isBot","completeCardTurn","AllPlayersGameCompleted","CallGameComplete","_isBot","_forceGameOver","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","_gold","_stocks","_diceRandom","OnceOrShare","GoldCash","StockCash","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","RaiseEventToSyncGameCompleteData","SyncGameOver","_UID","infoText","statusText","DisconnectData","ShowResultScreen","_currentCash","Get_ServerBackend","StudentData","gameCash","_total","toString","_won","gamesWon","UpdateUserData","SyncGameCompleteData","Bot","ZoomCameraOutOnly","max","SelectedInd","SessionData","_value","trace","playercompleted","ZoomCameraOut","TweenPlayer","min","floor","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ProcessPayDay_TurnDecision","ToPos","speed","_newpos","TogglePayDay","_st1","_St2","IncreaseDoublePayDay","ExpandBusiness_TurnDecision","amount","_locationName","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","SetCardFunctionality","SetGivenCash","SetStartAnyBusinessWithoutCash","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","_forSelectedBusiness","_SelectedBusinessIndex","HBAmount","_title","AssignData_PayDay","ToggleSkipPayDay_Whole","Bankrupt_TurnDecision","SendProfit_Partner_TurnDecision","_amount","_uID","ID","ReceiveProfit_Partner_TurnDecision","_iD","_myIndex","ToggleDoublePayNextTurn","ToggleHalfPayNextTurn","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","GetVocabularyQuestionsIndex","PopulateOneQuestionArray_Vocabulary","GetEstablishmentQuestionsIndex","PopulateOneQuestionArray_Establishment","VocArray","EstArray","QuestionPopUp_OtherUser_OneQuestion","_questionRef","Get_QuestionsData","_userID","UserID","_questionIndex","Question","UserIndex","_isVoc","IsVoc","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_Qdata","CorrectOption","_message","Option1","Option2","Option3","Option4","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_myData","_roomData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_SelectOption_OneQuestion","event","_selection","currentTarget","split","RaiseEventDecision_OneQuestion","SelectPlayerProfit_Space_CardFunctionality","ToggleScreen_SelectPlayerForProfit","ResetSpaceScreen_SelectPlayerForProfit","SetUpSpaceScreen_SelectPlayerForProfit","SelectPlayerTakeOver_Space_CardFunctionality","ToggleScreen_SelectPlayerTakeOver","ResetSpaceScreen_SelectPlayerTakeOver","SetUpSpaceScreen_SelectPlayerTakeOver","SelectPlayerBuyHalfBusiness_Space_CardFunctionality","SelectPlayerDamagingInformation_Space_CardFunctionality","ToggleScreen_SelectPlayerDamaging","ResetSpaceScreen_SelectPlayerDamaging","SetUpSpaceScreen_SelectPlayerDamaging","ReceiveEvent_SelectPlayerForProfit_Space_CardFunctionality","_ownID","_playerName","UserName","_playerID","OwnPlayerID","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","DeductCash_CardFunctionality","AddCash_CardFunctionality","_ID","_msg","msg","mode","UpdateCash_TurnDecision","ReceiveEventDecision_OneQuestion","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","ReceiveGoBackSpacesData_spaceFunctionality","_spaces","backspaces","Counter","TweenPlayer_GoBackSpaces","GoBackSpaces_spaceFunctionality","ReceiveEvent_TakeOverBusiness_CardFunctionality","_id","Player","_business","Business","_businessIndex","BusinessIndex","_myActor","_locations","TakeOverBusiness_CardFunctionality","_buyHalfBusiness","_diceRoll","_multiplierBusiness","_player","_sendingData","ExitScreenAlongTurnOver__BusinessGenric","_tempSum","ReceiveEvent_BuyHalfBusiness_CardFunctionality","_cashAmount","_senderID","MyID","_senderName","MyName","PayAmount_BuyHalfBusiness_CardFunctionality","ToggleScreen_BuyHalfBusiness","ToggleScreen_InsufficientBalance","BuyHalfBusiness_CardFunctionality","_text","SetTitleText_BuyHalfBusiness","ReceiveEvent_SelectPlayerDamagingDecision_Space_CardFunctionality","PlayerIndex","MyUserID","SetSenderID_DamageDecision","ToggleMainScreen_DamageDecision","ToggleDiceResultScreen_DamageDecision","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var _isTest = false;\r\nvar _diceinput1 = \"\";\r\nvar _diceinput2 = \"\";\r\nvar PreviousDiceRoll1 = -1;\r\nvar PreviousDiceRoll2 = -1;\r\nvar halfBusinessAmount = 0;\r\nvar halfBusinessAmountID = \"\";\r\nvar halfBusinessAmountIndex = 0;\r\nvar PreviousDiceRoll3 = -1;\r\nvar PreviousDiceRoll4 = -1;\r\n\r\nvar PreviousDiceRoll5 = -1;\r\n\r\nvar userGameOver = false;\r\nvar BotGameOver = false;\r\nvar TotalCounterReached = false;\r\nvar PassedPayDayCounter = 0;\r\nvar DoublePayDayCounter = 0;\r\nvar NoCardFunctionality = false;\r\nvar PlayerLeft = false;\r\nvar ForceChangeTimeOut = null;\r\nvar GameCompleted = false;\r\nvar CorrectAnswer = 0;\r\n\r\nvar VocabularyQuestions = [];\r\nvar EstablishmentQuestions = [];\r\nvar VocabularyQuestionsCounter = 0;\r\nvar EstablishmentQuestionsCounter = 0;\r\n\r\nvar BigBusinessArray = [];\r\nvar LossesArray = [];\r\nvar MarketingArray = [];\r\nvar WildCardArray = [];\r\nvar BigBusinessArrayCounter = 0;\r\nvar LossesArrayCounter = 0;\r\nvar MarketingArrayCounter = 0;\r\nvar WildCardArrayCounter = 0;\r\n\r\n//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n  None: 0,\r\n  HomeBased: 1, //a business that you operate out of your home\r\n  brickAndmortar: 2, //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n  name: \"BusinessInfo\",\r\n  properties: {\r\n    Name: \"BusinessData\",\r\n    BusinessType: {\r\n      displayName: \"Mode\",\r\n      type: EnumBusinessType,\r\n      default: EnumBusinessType.None,\r\n      serializable: true,\r\n      tooltip: \"Business catogory for players\",\r\n    },\r\n    BusinessTypeDescription: {\r\n      displayName: \"Type\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"Type (by name) of business player is opening\",\r\n    },\r\n    BusinessName: {\r\n      displayName: \"Name\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"Name of the business player is opening\",\r\n    },\r\n    Amount: {\r\n      displayName: \"Amount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"balance of business\",\r\n    },\r\n    IsPartnership: {\r\n      displayName: \"IsPartnership\",\r\n      default: false,\r\n      typw: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has done partnership with someone with current business\",\r\n    },\r\n    PartnerID: {\r\n      displayName: \"PartnerID\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"ID of the partner with whom player has formed partnership\",\r\n    },\r\n    PartnerName: {\r\n      displayName: \"PartnerName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the partner with whom player has formed partnership\",\r\n    },\r\n    LocationsName: {\r\n      displayName: \"LocationsName\",\r\n      type: [cc.Text],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"if player owns brick and mortar he/she can expand to new location\",\r\n    },\r\n    LoanTaken: {\r\n      displayName: \"LoanTaken\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    ReceiveDoublePayDay: {\r\n      displayName: \"ReceiveDoublePayDay\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n  name: \"CardDataFunctionality\",\r\n  properties: {\r\n    NextTurnDoublePay: {\r\n      displayName: \"NextTurnDoublePay\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if its going to be double pay day on next payday for current player\",\r\n    },\r\n    SkipNextTurn: {\r\n      displayName: \"SkipNextTurn\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if turn is going to skipped on next turn for current player\",\r\n    },\r\n    SkipNextPayday: {\r\n      displayName: \"SkipNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday is going to skipped on next payday for current player\",\r\n    },\r\n    SkipHMNextPayday: {\r\n      displayName: \"SkipHMNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday for home based buisiness is going to skipped on next payday for current player\",\r\n    },\r\n    SkipBMNextPayday: {\r\n      displayName: \"SkipBMNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\",\r\n    },\r\n    NextTurnHalfPayDay: {\r\n      displayName: \"NextTurnHalfPayDay\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    NextTurnHalfPayDayCounter: {\r\n      displayName: \"NextTurnHalfPayDayCounter\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    HasMarketingCompany: {\r\n      displayName: \"HasMarketingCompany\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    BankruptedNextTurn: {\r\n      displayName: \"BankruptedNextTurn\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n  name: \"StockInfo\",\r\n  properties: {\r\n    Name: \"StockData\",\r\n    BusinessName: {\r\n      displayName: \"BusinessName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the business in which stocks will be held\",\r\n    },\r\n    ShareAmount: {\r\n      displayName: \"ShareAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"Share amount of the stock\",\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n  name: \"PlayerData\",\r\n  properties: {\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the player\",\r\n    },\r\n    PlayerUID: {\r\n      displayName: \"PlayerUID\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"ID of the player\",\r\n    },\r\n    AvatarID: {\r\n      displayName: \"AvatarID\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"id reference for player avatar selection\",\r\n    },\r\n    IsBot: {\r\n      displayName: \"IsBot\",\r\n      default: false,\r\n      typw: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if current player is bot\",\r\n    },\r\n    NoOfBusiness: {\r\n      displayName: \"Business\",\r\n      type: [BusinessInfo],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Number of business a player can own\",\r\n    },\r\n    CardFunctionality: {\r\n      displayName: \"CardFunctionality\",\r\n      type: CardDataFunctionality,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"card functionality stored by player\",\r\n    },\r\n    HomeBasedAmount: {\r\n      displayName: \"HomeBasedAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of home based business a player owns\",\r\n    },\r\n    BrickAndMortarAmount: {\r\n      displayName: \"BrickAndMortarAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of brick and mortar business a player owns\",\r\n    },\r\n    ReceiveDoublePayDayAmount: {\r\n      displayName: \"ReceiveDoublePayDayAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalLocationsAmount: {\r\n      displayName: \"TotalLocationsAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of locations of all brick and mortar businessess\",\r\n    },\r\n    NoOfStocks: {\r\n      displayName: \"Stocks\",\r\n      type: [StockInfo],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Number of stock a player owns\",\r\n    },\r\n    Cash: {\r\n      displayName: \"PlayerCash\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"Amount of cash player owns\",\r\n    },\r\n    GoldCount: {\r\n      displayName: \"GoldCount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"count of gold a player owns\",\r\n    },\r\n    StockCount: {\r\n      displayName: \"StockCount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"count of stocks a player owns\",\r\n    },\r\n    LoanTaken: {\r\n      displayName: \"LoanTaken\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has taken loan from bank or not\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"Amount of loan taken from the bank\",\r\n    },\r\n    MarketingAmount: {\r\n      displayName: \"MarketingAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"marketing amount a player owns\",\r\n    },\r\n    LawyerStatus: {\r\n      displayName: \"LawyerStatus\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has hired a lawyer or not\",\r\n    },\r\n    IsBankrupt: {\r\n      displayName: \"IsBankrupt\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has been Bankrupted or not\",\r\n    },\r\n    BankruptAmount: {\r\n      displayName: \"BankruptAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"keep track how much time player has been bankrupted\",\r\n    },\r\n    SkippedLoanPayment: {\r\n      displayName: \"SkippedLoanPayment\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has skipped loan payment\",\r\n    },\r\n    PlayerRollCounter: {\r\n      displayName: \"PlayerRollCounter\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"integer to store roll countor for player\",\r\n    },\r\n    InitialCounterAssigned: {\r\n      displayName: \"InitialCounterAssigned\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n    isGameFinished: {\r\n      displayName: \"isGameFinished\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    TotalScore: {\r\n      displayName: \"TotalScore\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalHBCash: {\r\n      displayName: \"TotalHBCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalBMCash: {\r\n      displayName: \"TotalBMCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalGoldCash: {\r\n      displayName: \"TotalGoldCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalLoanBalance: {\r\n      displayName: \"TotalLoanBalance\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalStocksCash: {\r\n      displayName: \"TotalStocksCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    GameOver: {\r\n      displayName: \"GameOver\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    IsActive: {\r\n      displayName: \"IsActive\",\r\n      type: cc.Boolean,\r\n      default: true,\r\n      serializable: true,\r\n    },\r\n    CanGiveProfitOnPayDay: {\r\n      displayName: \"CanGiveProfitOnPayDay\",\r\n      type: cc.Boolean,\r\n      default: true,\r\n      serializable: true,\r\n    },\r\n\r\n    UserIDForProfitPayDay: {\r\n      displayName: \"UserIDForProfitPayDay\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter = 0;\r\nvar DiceTemp = 0;\r\nvar DiceRoll = 0;\r\nvar IsTweening = false;\r\nvar GamePlayReferenceManager = null;\r\nvar TurnCheckArray = [];\r\nvar BusinessLocationNodes = [];\r\n\r\nvar PassedPayDay = false;\r\nvar DoublePayDay = false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay = false;\r\nvar _nextTurnhalfPay = false;\r\nvar _skipNextTurn = false;\r\nvar _skipNextPayday = false; //skip whole pay day\r\nvar _skipHMNextPayday = false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday = false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived = false;\r\nvar TurnInProgress = false;\r\n\r\nvar Backspaces = 3;\r\nvar isGameOver = false;\r\n\r\nvar CardDisplaySetTimout = null;\r\n\r\nvar GameManager = cc.Class({\r\n  name: \"GameManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    PlayerGameInfo: {\r\n      default: [],\r\n      type: [PlayerData],\r\n      serializable: true,\r\n      tooltip: \"all player's data\",\r\n    },\r\n    BotGameInfo: {\r\n      default: [],\r\n      type: [PlayerData],\r\n      serializable: true,\r\n      tooltip: \"all bot's data\",\r\n    },\r\n    PlayerNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for player\",\r\n    },\r\n    CameraNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for camera\",\r\n    },\r\n    AllPlayerUI: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of ui of all players\",\r\n    },\r\n    AllPlayerNodes: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of node of all players inside gameplay\",\r\n    },\r\n    StartLocationNodes: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of attay of locations\",\r\n    },\r\n    SelectedMode: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"integer reference for game mode 1 means bot and 2 means real players\",\r\n    },\r\n  },\r\n\r\n  statics: {\r\n    PlayerData: PlayerData,\r\n    BusinessInfo: BusinessInfo,\r\n    CardDataFunctionality: CardDataFunctionality,\r\n    EnumBusinessType: EnumBusinessType,\r\n    Instance: null,\r\n  },\r\n\r\n  SetPlayerLeft(_state) {\r\n    PlayerLeft = _state;\r\n  },\r\n\r\n  ResetAllVariables() {\r\n    VocabularyQuestions = [];\r\n    EstablishmentQuestions = [];\r\n    VocabularyQuestionsCounter = 0;\r\n    EstablishmentQuestionsCounter = 0;\r\n\r\n    BigBusinessArray = [];\r\n    LossesArray = [];\r\n    MarketingArray = [];\r\n    WildCardArray = [];\r\n    BigBusinessArrayCounter = 0;\r\n    LossesArrayCounter = 0;\r\n    MarketingArrayCounter = 0;\r\n    WildCardArrayCounter = 0;\r\n\r\n    _diceinput1 = \"\";\r\n    _diceinput2 = \"\";\r\n    PreviousDiceRoll1 = -1;\r\n    PreviousDiceRoll2 = -1;\r\n    PlayerLeft = false;\r\n    halfBusinessAmount = 0;\r\n    halfBusinessAmountID = \"\";\r\n    halfBusinessAmountIndex = 0;\r\n    PreviousDiceRoll3 = -1;\r\n    PreviousDiceRoll4 = -1;\r\n    _nextTurnhalfPay = false;\r\n    PreviousDiceRoll5 = -1;\r\n    GameCompleted = false;\r\n    userGameOver = false;\r\n    BotGameOver = false;\r\n    CorrectAnswer = 0;\r\n    RollCounter = 0;\r\n    DiceTemp = 0;\r\n    DiceRoll = 0;\r\n    IsTweening = false;\r\n    GamePlayReferenceManager = null;\r\n    TurnCheckArray = [];\r\n    BusinessLocationNodes = [];\r\n    ForceChangeTimeOut = null;\r\n    PassedPayDay = false;\r\n    DoublePayDay = false;\r\n    PassedPayDayCounter = 0;\r\n    DoublePayDayCounter = 0;\r\n\r\n    //cards functionality\r\n    _nextTurnDoublePay = false;\r\n    _skipNextTurn = false;\r\n    _skipNextPayday = false; //skip whole pay day\r\n    _skipHMNextPayday = false; //skip pay day for home based businessess only\r\n    _skipBMNextPayday = false; //skip pay day for brick & mortar businessess only\r\n    CardEventReceived = false;\r\n    TurnInProgress = false;\r\n\r\n    Backspaces = 3;\r\n    isGameOver = false;\r\n\r\n    CardDisplaySetTimout = null;\r\n    TotalCounterReached = false;\r\n    NoCardFunctionality = false;\r\n  },\r\n\r\n  InputTestDice1(_val) {\r\n    if (_isTest) {\r\n      _diceinput1 = _val;\r\n    }\r\n  },\r\n\r\n  InputTestDice2(_val) {\r\n    if (_isTest) {\r\n      _diceinput2 = _val;\r\n    }\r\n  },\r\n\r\n  //#region All Functions of GameManager\r\n\r\n  /**\r\n    @summary called when instance of class is created\r\n   **/\r\n  onLoad() {\r\n    this.ResetAllVariables();\r\n    this.ResetPayDay();\r\n    GameManager.Instance = this;\r\n    this.TurnNumber = 0;\r\n    this.TurnCompleted = false;\r\n    TurnCheckArray = [];\r\n    this.CheckReferences();\r\n    this.SelectedMode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    this.Init_GameManager();\r\n\r\n    this.RandomCardIndex = 0;\r\n    this.CardCounter = 0;\r\n    this.CardDisplayed = false;\r\n    CardEventReceived = false;\r\n  },\r\n\r\n  ResetPayDay() {\r\n    console.log(\"reseting payday\");\r\n    _skipNextPayday = false;\r\n    _skipHMNextPayday = false;\r\n    _skipBMNextPayday = false;\r\n    PassedPayDay = false;\r\n    DoublePayDay = false;\r\n    PassedPayDayCounter = 0;\r\n    DoublePayDayCounter = 0;\r\n    _nextTurnDoublePay = false;\r\n    _nextTurnhalfPay = false;\r\n  },\r\n\r\n  /**\r\n    @summary called to assign reference of required classes\r\n   **/\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  /**\r\n    @summary initial gamemanager essetials\r\n   **/\r\n  Init_GameManager() {\r\n    this.Camera = this.CameraNode.getComponent(cc.Camera);\r\n    this.isCameraZooming = false;\r\n    this.PlayerGameInfo = [];\r\n    RollCounter = 0;\r\n    DiceTemp = 0;\r\n    DiceRoll = 0;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //game is being played by real players\r\n      //if joined player is spectate\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == true) {\r\n        //console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n\r\n        //if inital setup has been done and game is under way\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\") == true) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n          var AllData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n          this.PlayerGameInfo = AllData;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = this.PlayerGameInfo.length;\r\n          this.SyncAllData_SpectateManager();\r\n          this.TurnNumber = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n          this.UpdateGameUI(true, this.TurnNumber);\r\n          //console.log(this.PlayerGameInfo);\r\n          //this.SyncDataToPlayerGameInfo(0);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = 8;\r\n          //this.EnablePlayerNodes();\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n        }\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode);\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //game is being played by bot along with one player\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode);\r\n    }\r\n  },\r\n\r\n  //#region public functions to get data (accessible from other classes)\r\n  GetTurnNumber() {\r\n    return this.TurnNumber;\r\n  },\r\n\r\n  /**\r\n    @summary get my index in array of PlayerGameInfo \r\n   **/\r\n  GetMyIndex() {\r\n    var myIndex = 0;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _allActors = this.PlayerGameInfo;\r\n\r\n    for (let index = 0; index < _allActors.length; index++) {\r\n      if (_actor.PlayerUID == _allActors[index].PlayerUID) {\r\n        myIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return myIndex;\r\n  },\r\n  //#endregion\r\n\r\n  //#region SpectateMode Code\r\n\r\n  SyncAllData_SpectateManager() {\r\n    var AllData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n    this.PlayerGameInfo = AllData;\r\n    this.SyncDataToPlayerGameInfo(0);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = this.PlayerGameInfo.length;\r\n    this.AssignPlayerGameUI();\r\n    this.EnablePlayerNodes();\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n    console.log(\"syncing all data for spectate\");\r\n    for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n      if (this.PlayerGameInfo[index].PlayerRollCounter > 0 && this.PlayerGameInfo[index].InitialCounterAssigned == true && !this.PlayerGameInfo[index].isGameFinished) {\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n        this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n        console.log(\"setting pos1\");\r\n      } else {\r\n        console.log(\"player counter: \" + this.PlayerGameInfo[index].PlayerRollCounter);\r\n        console.log(\"Initial Counter Assigned: \" + this.PlayerGameInfo[index].InitialCounterAssigned);\r\n        console.log(\"game finished : \" + this.PlayerGameInfo[index].isGameFinished);\r\n      }\r\n\r\n      if (this.PlayerGameInfo[index].isGameFinished) {\r\n        var _lastIndex = GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length - 1;\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.y);\r\n        this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n        console.log(\"setting pos2\");\r\n      }\r\n    }\r\n\r\n    //console.log(\"synced playernodes\");\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerNodes[index].active = true;\r\n    }\r\n  },\r\n\r\n  CheckTurnOnSpectateLeave_SpectateManager() {\r\n    var TotalConnectedPlayers = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n    if (TurnCheckArray.length == TotalConnectedPlayers) {\r\n      TurnCheckArray = [];\r\n      this.TurnCompleted = true;\r\n      console.log(\"reseting for spectate\");\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n        this.ChangeTurn();\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(\"Change Turn is called by: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region functions related to Turn Mechanism and card mechanism\r\n\r\n  /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n   **/\r\n  RaiseEventForCard(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5, _data);\r\n  },\r\n\r\n  ClearDisplayTimeout() {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers() {\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      console.log(\"card event received: \" + CardEventReceived);\r\n      if (CardEventReceived == true) {\r\n        clearTimeout(CardDisplaySetTimout);\r\n        //console.error(this.CardCounter);\r\n        CardEventReceived = false;\r\n        if (!this.CardDisplayed) {\r\n          this.CardDisplayed = true;\r\n          GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(false, this.RandomCardIndex);\r\n        }\r\n      } else {\r\n        CardDisplaySetTimout = setTimeout(() => {\r\n          //check after every 0.5 seconds\r\n          this.DisplayCardOnOthers();\r\n        }, 1000);\r\n      }\r\n    }\r\n  },\r\n\r\n  ResetCardDisplay() {\r\n    this.CardDisplayed = false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data) {\r\n    this.CheckReferences();\r\n    console.log(\"Card Data Received:\");\r\n    console.log(_data);\r\n\r\n    var RandomCard = _data.randomCard;\r\n    var counter = _data.counter;\r\n\r\n    this.RandomCardIndex = RandomCard;\r\n    this.CardCounter = counter;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(true, RandomCard);\r\n      else CardEventReceived = true;\r\n    } else if (this.SelectedMode == 1) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].IsBot == false) GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(true, RandomCard);\r\n      else GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(false, RandomCard, true);\r\n    }\r\n\r\n    // console.error(CardEventReceived);\r\n  },\r\n\r\n  /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n   **/\r\n  RaiseEventTurnComplete() {\r\n    if (this.SelectedMode == 2) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4, GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      console.log(\"raised for turn complete\");\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4, this.PlayerGameInfo[this.TurnNumber].PlayerUID);\r\n    }\r\n  },\r\n\r\n  SyncAllData() {\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", this.PlayerGameInfo, true);\r\n    }\r\n  },\r\n\r\n  RemoveFromCheckArray(_uid) {\r\n    if (this.SelectedMode == 2) {\r\n      var _ind = -1;\r\n\r\n      for (let index = 0; index < TurnCheckArray.length; index++) {\r\n        if (TurnCheckArray[index] == _uid) _ind = index;\r\n      }\r\n\r\n      if (_ind != -1) {\r\n        console.log(\"removing from turn check array\");\r\n        TurnCheckArray.splice(_ind, 1);\r\n      }\r\n    }\r\n  },\r\n\r\n  CheckTurnComplete() {\r\n    var TotalConnectedPlayers = 0;\r\n\r\n    for (let j = 0; j < this.PlayerGameInfo.length; j++) {\r\n      if (this.PlayerGameInfo[j].IsActive) TotalConnectedPlayers++;\r\n    }\r\n\r\n    console.log(\"Turn Check: \" + TurnCheckArray.length);\r\n    console.log(\"Total Connected Players: \" + TotalConnectedPlayers);\r\n    console.log(TurnCheckArray);\r\n\r\n    if (TurnCheckArray.length >= TotalConnectedPlayers) {\r\n      TurnCheckArray = [];\r\n      this.TurnCompleted = true;\r\n\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        //this.SyncAllData();\r\n        this.ChangeTurn();\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(\"Change Turn is called by: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n   **/\r\n  ReceiveEventTurnComplete(_uid) {\r\n    if (this.SelectedMode == 2) {\r\n      //real players\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        if (TurnCheckArray.length == 0) TurnCheckArray.push(_uid);\r\n\r\n        var ArrayLength = TurnCheckArray.length;\r\n        var IDFound = false;\r\n        for (let index = 0; index < ArrayLength; index++) {\r\n          if (TurnCheckArray[index] == _uid) IDFound = true;\r\n        }\r\n\r\n        if (!IDFound) {\r\n          TurnCheckArray.push(_uid);\r\n        }\r\n\r\n        this.CheckTurnComplete();\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      this.TurnCompleted = true;\r\n      this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n      this.ChangeTurn();\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called when dice animation is played on all players\r\n   **/\r\n  ChangeTurn() {\r\n    if (this.SelectedMode == 2) {\r\n      this.SyncAllData();\r\n    }\r\n\r\n    if (this.TurnNumber < this.PlayerGameInfo.length - 1) this.TurnNumber = this.TurnNumber + 1;\r\n    else this.TurnNumber = 0;\r\n\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2, this.TurnNumber);\r\n  },\r\n\r\n  ResetSomeValues() {\r\n    //TurnCheckArray = [];\r\n    //this.TurnCompleted = true;\r\n  },\r\n\r\n  ChangeTurnForcefully() {\r\n    if (IsTweening) {\r\n      clearTimeout(ForceChangeTimeOut);\r\n      ForceChangeTimeOut = setTimeout(() => {\r\n        this.ChangeTurnForcefully();\r\n      }, 1000);\r\n    } else {\r\n      clearTimeout(ForceChangeTimeOut);\r\n      this.ChangeTurn();\r\n    }\r\n  },\r\n\r\n  UpdateVisualData() {\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n   **/\r\n  TurnHandler(_turn) {\r\n    if (this.SelectedMode == 2) {\r\n      var _isMaster = GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckCurrentActiveMasterClient();\r\n      if (!this.PlayerGameInfo[_turn].IsActive) {\r\n        if (_isMaster) {\r\n          this.ChangeTurn();\r\n          return;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    //this.ClearDisplayTimeout();\r\n    this.UpdateVisualData();\r\n    console.log(\"Turn: \" + _turn);\r\n    var _playerMatched = false;\r\n    _skipNextTurn = false;\r\n    if (IsTweening) {\r\n      //check if animation of turn being played on other players\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n        IsTweening = false;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        if (!isGameOver) {\r\n          this.TurnHandler(_turn);\r\n        }\r\n      }, 800);\r\n    } else {\r\n      this.TurnNumber = _turn;\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n            this.ToggleTurnProgress(true);\r\n            if (!_skipNextTurn) {\r\n              if (this.PlayerGameInfo[this.TurnNumber].CardFunctionality.BankruptedNextTurn) {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                this.PlayerGameInfo[this.TurnNumber].CardFunctionality.BankruptedNextTurn = false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewGame_BankRupted(\"You were bankrupted and will start from begin.\");\r\n                return;\r\n              } else {\r\n                setTimeout(() => {\r\n                  GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                  GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                  IsTweening = false;\r\n                }, 1000);\r\n              }\r\n              console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n          }\r\n        } else {\r\n          this.ToggleTurnProgress(false);\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        // console.log(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n        // console.log(this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn);\r\n        // console.log(userGameOver);\r\n        if (this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!userGameOver) {\r\n            this.ToggleTurnProgress(true);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                IsTweening = false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n              }, 1000);\r\n              console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n          }\r\n        } //turn decisions for bot\r\n        else {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!BotGameOver) {\r\n            this.ToggleTurnProgress(false);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                IsTweening = false;\r\n                this.RollDice();\r\n              }, 1000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n      for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      }\r\n\r\n      if (this.SelectedMode == 2) {\r\n        //for real players\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n        console.log(\"Turn Of: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        console.log(this.AllPlayerUI[this.TurnNumber].getComponent(\"PlayerProfileManager\").PlayerInfo);\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray());\r\n        this.SyncDataToPlayerGameInfo(0);\r\n\r\n        //force sync spectator after completion of each turn\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n      }\r\n\r\n      //skip this turn as skip turn has been called before\r\n      if (_playerMatched && _skipNextTurn) {\r\n        IsTweening = false;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\", 1200);\r\n        this.ToggleSkipNextTurn(false);\r\n        this.ChangeTurn();\r\n        this.ToggleTurnProgress(false);\r\n        return;\r\n      }\r\n\r\n      if (_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n        setTimeout(() => {\r\n          IsTweening = false;\r\n          this.ChangeTurn();\r\n          this.ToggleTurnProgress(false);\r\n          return;\r\n        }, 500);\r\n      }\r\n    }\r\n\r\n    this.UpdateUIData();\r\n  },\r\n\r\n  SyncDataToPlayerGameInfo(_ind) {\r\n    var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n    var MyData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _counter = _ind;\r\n    // console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n    //  console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n\r\n    for (let index = 0; index < MainSessionData.length; index++) {\r\n      if (this.PlayerGameInfo[_counter].IsActive == false) {\r\n        if (_counter < this.PlayerGameInfo.length - 1) {\r\n          _counter++;\r\n          this.SyncDataToPlayerGameInfo(_counter);\r\n        } else {\r\n          console.log(\"synced Data:\");\r\n          console.log(this.PlayerGameInfo);\r\n        }\r\n      } else {\r\n        if (this.PlayerGameInfo[_counter].PlayerUID == MainSessionData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n          this.PlayerGameInfo[_counter] = MainSessionData[index].customProperties.PlayerSessionData;\r\n\r\n          if (_counter < this.PlayerGameInfo.length - 1) {\r\n            _counter++;\r\n            //console.log(\"adding counter: \"+_counter);\r\n            this.SyncDataToPlayerGameInfo(_counter);\r\n          } else {\r\n            console.log(\"synced Data:\");\r\n            console.log(this.PlayerGameInfo);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  StartTurn() {\r\n    console.log(this.PlayerGameInfo);\r\n    this.AssignPlayerGameUI();\r\n    this.EnablePlayerNodes();\r\n    this.TurnNumber = 0; //reseting the turn number on start of the game\r\n\r\n    //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2, this.TurnNumber);\r\n  },\r\n\r\n  ReceiveBankruptData(_data) {\r\n    //other player has been bankrupted\r\n    var _isBankrupted = _data.Data.bankrupted;\r\n    var _turn = _data.Data.turn;\r\n    var _playerData = _data.Data.PlayerDataMain;\r\n\r\n    console.log(_data);\r\n    // console.log(_isBankrupted);\r\n    // console.log(_turn);\r\n    // console.log(_playerData);\r\n\r\n    this.PlayerGameInfo[_turn] = _playerData;\r\n\r\n    this.AssignPlayerGameUI(true);\r\n    this.EnablePlayerNodes(true);\r\n\r\n    this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n      this.SyncDataToPlayerGameInfo(0);\r\n\r\n      //force sync spectator after completion of each turn\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n    }\r\n  },\r\n\r\n  StartTurnAfterBankrupt() {\r\n    this.AssignPlayerGameUI(true);\r\n    this.EnablePlayerNodes(true);\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n    }, 1000);\r\n\r\n    this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n      this.SyncDataToPlayerGameInfo(0);\r\n\r\n      //force sync spectator after completion of each turn\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Function for gameplay\r\n  /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  AssignPlayerGameUI(_isBankrupted = false) {\r\n    if (this.SelectedMode == 1) {\r\n      //for bot\r\n      if (!_isBankrupted) {\r\n        var _randomIndex = this.getRandom(0, this.BotGameInfo.length);\r\n        this.PlayerGameInfo.push(this.BotGameInfo[_randomIndex]);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = 2;\r\n      }\r\n    }\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerUI[index].active = true;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").PlayerInfo = this.PlayerGameInfo[index];\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").SetName(this.PlayerGameInfo[index].PlayerName);\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").SetAvatar(this.PlayerGameInfo[index].AvatarID);\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n  },\r\n\r\n  UpdateGameUI(_toggleHighlight, _index) {\r\n    if (_toggleHighlight) {\r\n      this.AllPlayerUI[_index].getComponent(\"PlayerProfileManager\").PlayerInfo = this.PlayerGameInfo[_index];\r\n\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n        if (_index == index) {\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleBGHighlighter(true);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleTextighlighter(true);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        } else {\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleBGHighlighter(false);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleTextighlighter(false);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  EnablePlayerNodes(_isBankrupted = false) {\r\n    if (!_isBankrupted) {\r\n      for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n        if (this.PlayerGameInfo[index].HomeBasedAmount == 1 && !this.PlayerGameInfo[index].InitialCounterAssigned) this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x, this.StartLocationNodes[0].position.y);\r\n        else if (this.PlayerGameInfo[index].BrickAndMortarAmount == 1 && !this.PlayerGameInfo[index].InitialCounterAssigned) this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x, this.StartLocationNodes[1].position.y);\r\n      }\r\n    } else {\r\n      if (this.PlayerGameInfo[this.TurnNumber].HomeBasedAmount == 1) this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[0].position.x, this.StartLocationNodes[0].position.y);\r\n      else if (this.PlayerGameInfo[this.TurnNumber].BrickAndMortarAmount == 1) this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[1].position.x, this.StartLocationNodes[1].position.y);\r\n    }\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerNodes[index].active = true;\r\n    }\r\n\r\n    for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n      this.AllPlayerNodes[index].children[0].getComponent(cc.Sprite).spriteFrame = GamePlayReferenceManager.Instance.Get_GameplayUIManager().AvatarSprites[this.PlayerGameInfo[index].AvatarID];\r\n    }\r\n  },\r\n\r\n  SetFollowCameraProperties() {\r\n    let targetPos = this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0, 120));\r\n    this.CameraNode.position = this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n\r\n    let ratio = targetPos.y / cc.winSize.height;\r\n    this.Camera.zoomRatio = 2;\r\n  },\r\n\r\n  lateUpdate() {\r\n    if (this.isCameraZooming) this.SetFollowCameraProperties();\r\n  },\r\n\r\n  syncDiceRoll(_roll) {\r\n    var _dice1 = _roll.dice1;\r\n    var _dice2 = _roll.dice2;\r\n    var _result = _dice1 + _dice2;\r\n\r\n    IsTweening = true;\r\n    this.CardDisplayed = false;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID == this.PlayerGameInfo[this.TurnNumber].PlayerUID) {\r\n          console.log(\"player matched:\" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n          this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter == 0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType == 2) {\r\n        RollCounter = 0;\r\n        this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned = true;\r\n        console.error(RollCounter);\r\n      } else {\r\n        this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned = true;\r\n        RollCounter = 14;\r\n        console.error(RollCounter);\r\n      }\r\n    } else {\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter == 13) this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter + 22;\r\n      else this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter + 1;\r\n\r\n      RollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n      console.error(RollCounter - 1);\r\n    }\r\n\r\n    DiceRoll = _result;\r\n    DiceTemp = 0;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      if (this.TurnNumber == index) {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = true;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1, _dice2);\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      } else {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      }\r\n    }\r\n\r\n    this.UpdateUIData();\r\n    // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n    // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n    // this.TweenCamera(_pos,true,0.4);\r\n  },\r\n\r\n  UpdateUIData() {\r\n    if (this.SelectedMode == 2) {\r\n      this.SyncDataToPlayerGameInfo(0);\r\n    }\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n  },\r\n  DiceFuntionality() {\r\n    let targetPos = this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0, 120));\r\n    var _pos = this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n    this.TweenCamera(_pos, true, 0.4);\r\n  },\r\n\r\n  TempCheckSpace(_rolling) {\r\n    var tempcounter = 0;\r\n    var tempcounter2 = 0;\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID == this.PlayerGameInfo[this.TurnNumber].PlayerUID) {\r\n        //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        tempcounter2 = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n      }\r\n    }\r\n\r\n    if (tempcounter2 - 1 < 0) {\r\n      console.error(\"starting from oblivion\");\r\n      tempcounter = tempcounter2 + _rolling - 1;\r\n      var dicetobe = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n      console.error(\"to be: \" + dicetobe);\r\n    } else {\r\n      tempcounter = tempcounter2 + _rolling;\r\n      var dicetobe = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n      console.error(\"to be: \" + dicetobe);\r\n    }\r\n  },\r\n\r\n  RollDice: function () {\r\n    if (!isGameOver) {\r\n      var Dice1;\r\n      var Dice2;\r\n      if (_isTest && this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n        Dice1 = parseInt(_diceinput1);\r\n        Dice2 = parseInt(_diceinput2);\r\n      } else if (this.PlayerGameInfo[this.TurnNumber].IsBot == true && _isTest) {\r\n        Dice1 = 1;\r\n        Dice2 = 1;\r\n      } else {\r\n        Dice1 = this.getRandom(1, 7);\r\n        Dice2 = this.getRandom(1, 7);\r\n\r\n        if (PreviousDiceRoll1 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n        if (PreviousDiceRoll2 == Dice2) Dice2 = this.getRandom(1, 7);\r\n\r\n        PreviousDiceRoll1 = Dice1;\r\n        PreviousDiceRoll2 = Dice2;\r\n      }\r\n\r\n      // var Dice1=20;\r\n      // var Dice2=1;\r\n\r\n      DiceRoll = Dice1 + Dice2;\r\n      var _newRoll = { dice1: Dice1, dice2: Dice2 };\r\n      //DiceRoll=23;\r\n      //this.TempCheckSpace(DiceRoll);\r\n      console.log(\"dice number: \" + DiceRoll + \", Dice1:\" + Dice1 + \", Dice2:\" + Dice2);\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3, _newRoll);\r\n    }\r\n  },\r\n\r\n  RollOneDice() {\r\n    var Dice1 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll5 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n    PreviousDiceRoll5 = Dice1;\r\n\r\n    return Dice1;\r\n  },\r\n\r\n  RollTwoDices() {\r\n    var Dice1 = this.getRandom(1, 7);\r\n    var Dice2 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll3 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll4 == Dice2) Dice2 = this.getRandom(1, 7);\r\n\r\n    PreviousDiceRoll3 = Dice1;\r\n    PreviousDiceRoll4 = Dice2;\r\n\r\n    return Dice1 + Dice2;\r\n  },\r\n\r\n  PopulateDecksArray(_isBigBusiness = false, _isLosses = false, _isMarketing = false, _isWildCard = false, _data = null) {\r\n    // BigBusinessArray = [];\r\n    // LossesArray = [];\r\n    // MarketingArray = [];\r\n    // WildCardArray = [];\r\n    // BigBusinessArrayCounter = 0;\r\n    // LossesArrayCounter = 0;\r\n    // MarketingArrayCounter = 0;\r\n    // WildCardArrayCounter = 0;\r\n\r\n    if (_isBigBusiness) {\r\n      if (_data == null) {\r\n        BigBusinessArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\n        BigBusinessArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(BigBusinessArray);\r\n        BigBusinessArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: BigBusinessArray, LossArray: null, MarketArray: null, WildArrya: null };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    } else if (_isLosses) {\r\n      if (_data == null) {\r\n        LossesArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\n        LossesArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(LossesArray);\r\n        LossesArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: null, LossArray: LossesArray, MarketArray: null, WildArrya: null };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    } else if (_isMarketing) {\r\n      if (_data == null) {\r\n        MarketingArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13];\r\n\r\n        MarketingArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(MarketingArray);\r\n        MarketingArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: null, LossArray: null, MarketArray: MarketingArray, WildArrya: null };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    } else if (_isWildCard) {\r\n      if (_data == null) {\r\n        WildCardArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\n        WildCardArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(WildCardArray);\r\n        WildCardArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: null, LossArray: null, MarketArray: null, WildArrya: WildCardArray };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    }\r\n\r\n    if (_data != null) {\r\n      if (_data.BigArray != null) {\r\n        BigBusinessArray = _data.BigArray;\r\n        console.log(BigBusinessArray);\r\n        BigBusinessArrayCounter = 0;\r\n      }\r\n\r\n      if (_data.LossArray != null) {\r\n        LossesArray = _data.LossArray;\r\n        console.log(LossesArray);\r\n        LossesArrayCounter = 0;\r\n      }\r\n\r\n      if (_data.MarketArray != null) {\r\n        MarketingArray = _data.MarketArray;\r\n        console.log(MarketingArray);\r\n        MarketingArrayCounter = 0;\r\n      }\r\n\r\n      if (_data.WildArrya != null) {\r\n        WildCardArray = _data.WildArrya;\r\n        console.log(WildCardArray);\r\n        WildCardArrayCounter = 0;\r\n      }\r\n    }\r\n  },\r\n\r\n  GetBigBusinessIndex(_index) {\r\n    var _val = -1;\r\n    if (BigBusinessArray.length > 0) {\r\n      if (BigBusinessArrayCounter < BigBusinessArray.length) {\r\n        _val = BigBusinessArray[BigBusinessArrayCounter];\r\n        BigBusinessArrayCounter++;\r\n        var _tempData = { BigArray: true, LossArray: false, MarketArray: false, WildArrya: false };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(true, false, false, false, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(true, false, false, false, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetLossesIndex(_index) {\r\n    var _val = -1;\r\n    if (LossesArray.length > 0) {\r\n      if (LossesArrayCounter < LossesArray.length) {\r\n        _val = LossesArray[LossesArrayCounter];\r\n        LossesArrayCounter++;\r\n        var _tempData = { BigArray: false, LossArray: true, MarketArray: false, WildArrya: false };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(false, true, false, false, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(false, true, false, false, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetMarketingIndex(_index) {\r\n    var _val = -1;\r\n    if (MarketingArray.length > 0) {\r\n      if (MarketingArrayCounter < MarketingArray.length) {\r\n        _val = MarketingArray[MarketingArrayCounter];\r\n        MarketingArrayCounter++;\r\n        var _tempData = { BigArray: false, LossArray: false, MarketArray: true, WildArrya: false };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(false, false, true, false, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(false, false, true, false, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetWildCardIndex(_index) {\r\n    var _val = -1;\r\n    if (WildCardArray.length > 0) {\r\n      if (WildCardArrayCounter < WildCardArray.length) {\r\n        _val = WildCardArray[WildCardArrayCounter];\r\n        WildCardArrayCounter++;\r\n        var _tempData = { BigArray: false, LossArray: false, MarketArray: false, WildArrya: true };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(false, false, false, true, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(false, false, false, true, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  UpdateCounters(_data = null) {\r\n    if (_data.BigArray) {\r\n      BigBusinessArrayCounter++;\r\n    }\r\n    if (_data.LossArray) {\r\n      LossesArrayCounter++;\r\n    }\r\n    if (_data.MarketArray) {\r\n      MarketingArrayCounter++;\r\n    }\r\n    if (_data.WildArrya) {\r\n      WildCardArrayCounter++;\r\n    }\r\n  },\r\n\r\n  SelectRelatedCard(_isBigBusiness = false, _isLosses = false, _isMarketing = false, _isWildCard = false) {\r\n    if (_isBigBusiness) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetBigBusinessIndex();\r\n          if (index == -1) {\r\n            index = this.GetBigBusinessIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetBigBusinessIndex();\r\n        if (index == -1) {\r\n          index = this.GetBigBusinessIndex();\r\n        }\r\n        return index;\r\n      }\r\n    } else if (_isLosses) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetLossesIndex();\r\n          if (index == -1) {\r\n            index = this.GetLossesIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetLossesIndex();\r\n        if (index == -1) {\r\n          index = this.GetLossesIndex();\r\n        }\r\n        return index;\r\n      }\r\n    } else if (_isMarketing) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetMarketingIndex();\r\n          if (index == -1) {\r\n            index = this.GetMarketingIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetMarketingIndex();\r\n        if (index == -1) {\r\n          index = this.GetMarketingIndex();\r\n        }\r\n        return index;\r\n      }\r\n    } else if (_isWildCard) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetWildCardIndex();\r\n          if (index == -1) {\r\n            index = this.GetWildCardIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetWildCardIndex();\r\n        if (index == -1) {\r\n          index = this.GetWildCardIndex();\r\n        }\r\n        return index;\r\n      }\r\n    }\r\n  },\r\n\r\n  callUponCard() {\r\n    if (!isGameOver) {\r\n      if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n        var _spaceID = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        if (_spaceID != 6 && _spaceID != 7) {\r\n          //6 means payday and 7 means double payday, 9 means sell space\r\n          var RandomCard = this.getRandom(0, 15);\r\n\r\n          if (_spaceID == 2) {\r\n            //landed on big business cards\r\n            RandomCard = this.SelectRelatedCard(true, false, false, false);\r\n            //RandomCard = 14;\r\n          } else if (_spaceID == 5) {\r\n            //landed on some losses cards\r\n            RandomCard = this.SelectRelatedCard(false, true, false, false);\r\n            //RandomCard = 14;\r\n          } else if (_spaceID == 3) {\r\n            //landed on some marketing cards\r\n            RandomCard = this.SelectRelatedCard(false, false, true, false);\r\n            //RandomCard = 11;\r\n            //RandomCard = 10;\r\n          } else if (_spaceID == 1) {\r\n            //landed on some wild cards\r\n            RandomCard = this.SelectRelatedCard(false, false, false, true);\r\n            //RandomCard = 11;\r\n          }\r\n\r\n          IsTweening = false;\r\n          console.error(_spaceID);\r\n\r\n          if (this.SelectedMode == 2) {\r\n            //for real player\r\n            if (_spaceID == 12) {\r\n              // if player landed on finish space\r\n              RollCounter = RollCounter + 5;\r\n              this.StartDiceRoll();\r\n            } else {\r\n              if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                var SendingData = { randomCard: RandomCard, counter: RollCounter };\r\n                this.RaiseEventForCard(SendingData);\r\n              } else {\r\n                this.DisplayCardOnOthers();\r\n              }\r\n            }\r\n          } else if (this.SelectedMode == 1) {\r\n            //for bot\r\n            if (_spaceID == 12) {\r\n              // if player landed on finish space\r\n              RollCounter = RollCounter + 5;\r\n              this.StartDiceRoll();\r\n            } else {\r\n              var SendingData = { randomCard: RandomCard, counter: RollCounter };\r\n              this.RaiseEventForCard(SendingData);\r\n            }\r\n          }\r\n        } else {\r\n          IsTweening = false;\r\n          console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n          this.RaiseEventTurnComplete();\r\n        }\r\n      } else {\r\n        if (this.SelectedMode == 1) {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].isBot && BotGameOver) this.completeCardTurn();\r\n\r\n            if (!this.PlayerGameInfo[this.TurnNumber].isBot && userGameOver) this.completeCardTurn();\r\n          }\r\n        } else if (this.SelectedMode == 2) {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n              this.completeCardTurn();\r\n              console.error(\"complete turn is called\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (this.SelectedMode == 1) {\r\n        this.AllPlayersGameCompleted(true);\r\n      } else if (this.SelectedMode == 2) {\r\n        this.AllPlayersGameCompleted(false);\r\n      }\r\n    }\r\n  },\r\n\r\n  completeCardTurn() {\r\n    IsTweening = false;\r\n    console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n    this.RaiseEventTurnComplete();\r\n  },\r\n\r\n  CallGameComplete(_isBot = false, _forceGameOver = false) {\r\n    if (_isBot == false) {\r\n      // if (_forceGameOver) {\r\n      //     this.TurnNumber = this.GetMyIndex();\r\n      // }\r\n\r\n      var _playerIndex = this.GetMyIndex();\r\n\r\n      if (!this.PlayerGameInfo[_playerIndex].IsActive) {\r\n        this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n        this.PlayerGameInfo[_playerIndex].TotalScore = 0;\r\n        console.error(\"player is not active returning\");\r\n      } else {\r\n        if (this.PlayerGameInfo[_playerIndex].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          console.error(\"calculating....\");\r\n          console.log(\"agme is not finished\");\r\n          this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n\r\n          var _cash = this.PlayerGameInfo[_playerIndex].Cash;\r\n          var HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n          var BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n          var BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n          var loanAmount = 0;\r\n          for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n            if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n              loanAmount += GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n            }\r\n          }\r\n\r\n          var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n          var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n          var _diceRandom = this.RollTwoDices();\r\n          var OnceOrShare = _diceRandom * 1000;\r\n\r\n          var GoldCash = OnceOrShare * _gold;\r\n          var StockCash = OnceOrShare * _stocks;\r\n\r\n          var BMCash = (BMAmount + BMLocations) * 150000;\r\n\r\n          var HMCash = 0;\r\n          if (HMAmount == 1) HMCash = 60000;\r\n          else if (HMAmount == 2) HMCash = 25000 + 60000;\r\n          else if (HMAmount == 3) HMCash = 25000 + 25000 + 60000;\r\n\r\n          var TotalAssets = _cash + BMCash + HMCash + GoldCash + StockCash - loanAmount;\r\n\r\n          this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n          this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"Data pushed\");\r\n        }\r\n        //console.log(this.PlayerGameInfo[this.TurnNumber])\r\n      }\r\n    } else {\r\n      for (let _playerIndex = 0; _playerIndex < this.PlayerGameInfo.length; _playerIndex++) {\r\n        this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n\r\n        var _cash = this.PlayerGameInfo[_playerIndex].Cash;\r\n        var HMAmount = this.PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n        var BMAmount = this.PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        var BMLocations = this.PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n        var loanAmount = 0;\r\n        for (let index = 0; index < this.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n          if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            loanAmount += GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n          }\r\n        }\r\n\r\n        var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n        var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n        var _diceRandom = this.RollTwoDices();\r\n        var OnceOrShare = _diceRandom * 1000;\r\n\r\n        var GoldCash = OnceOrShare * _gold;\r\n        var StockCash = OnceOrShare * _stocks;\r\n\r\n        var BMCash = (BMAmount + BMLocations) * 150000;\r\n\r\n        var HMCash = 0;\r\n        if (HMAmount == 1) HMCash = 60000;\r\n        else if (HMAmount == 2) HMCash = 25000 + 60000;\r\n        else if (HMAmount == 3) HMCash = 25000 + 25000 + 60000;\r\n\r\n        var TotalAssets = _cash + BMCash + HMCash + GoldCash + StockCash - loanAmount;\r\n\r\n        this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n        this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventForGameComplete(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6, _data);\r\n  },\r\n\r\n  RaiseEventToSyncGameCompleteData(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(16, _data);\r\n  },\r\n\r\n  SyncGameOver(_UID) {\r\n    var infoText = \"\";\r\n    var statusText = \"\";\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      if (!GameCompleted) {\r\n        GameCompleted = true;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectData();\r\n        isGameOver = true;\r\n        var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var MyData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        console.log(_UID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver = true;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n          var _index = -1;\r\n          for (let index = 0; index < MainSessionData.length; index++) {\r\n            if (MainSessionData[index].customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n              _index = index;\r\n              break;\r\n            }\r\n          }\r\n\r\n          statusText = \"Game won by \" + MainSessionData[_index].customProperties.PlayerSessionData.PlayerName;\r\n          infoText =\r\n            \"Current Cash : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.Cash +\r\n            \"\\n\" +\r\n            \"Home Based Businesses Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalHBCash +\r\n            \"\\n\" +\r\n            \"Brick And Mortar Businesses Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalBMCash +\r\n            \"\\n\" +\r\n            \"Gold Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalGoldCash +\r\n            \"\\n\" +\r\n            \"Stocks Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalStocksCash +\r\n            \"\\n\" +\r\n            \"Loan Balance : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalLoanBalance +\r\n            \"\\n\" +\r\n            \"Total Cash Earned : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalScore +\r\n            \"\\n\";\r\n\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n        } else {\r\n          if (MyData.customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n            //you won\r\n            statusText = \"Congrats! you have won the game.\";\r\n            infoText =\r\n              \"Current Cash : $\" +\r\n              MyData.customProperties.PlayerSessionData.Cash +\r\n              \"\\n\" +\r\n              \"Home Based Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalHBCash +\r\n              \"\\n\" +\r\n              \"Brick And Mortar Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalBMCash +\r\n              \"\\n\" +\r\n              \"Gold Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalGoldCash +\r\n              \"\\n\" +\r\n              \"Stocks Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalStocksCash +\r\n              \"\\n\" +\r\n              \"Loan Balance : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalLoanBalance +\r\n              \"\\n\" +\r\n              \"Total Cash Earned : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalScore +\r\n              \"\\n\";\r\n\r\n            var _currentCash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n            var _total = _currentCash + parseInt(MyData.customProperties.PlayerSessionData.TotalScore);\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _total.toString();\r\n\r\n            var _won = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon);\r\n            _won = _won + 1;\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon = _won.toString();\r\n\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(-1, _won, -1);\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n          } else {\r\n            //you lose\r\n            statusText = \"Unfortunately! you have lost the game.\";\r\n            infoText =\r\n              \"Current Cash : $\" +\r\n              MyData.customProperties.PlayerSessionData.Cash +\r\n              \"\\n\" +\r\n              \"Home Based Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalHBCash +\r\n              \"\\n\" +\r\n              \"Brick And Mortar Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalBMCash +\r\n              \"\\n\" +\r\n              \"Gold Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalGoldCash +\r\n              \"\\n\" +\r\n              \"Stocks Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalStocksCash +\r\n              \"\\n\" +\r\n              \"Loan Balance : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalLoanBalance +\r\n              \"\\n\" +\r\n              \"Total Cash Earned : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalScore +\r\n              \"\\n\";\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n          }\r\n        }\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //with bot\r\n      isGameOver = true;\r\n      var MainSessionData = this.PlayerGameInfo;\r\n      var MyData = this.PlayerGameInfo[0];\r\n      console.log(_UID);\r\n      console.log(MyData.PlayerUID);\r\n      this.PlayerGameInfo[0].GameOver = true;\r\n\r\n      if (MyData.PlayerUID == _UID) {\r\n        //you won\r\n        statusText = \"Congrats! you have won the game.\";\r\n        infoText =\r\n          \"Current Cash : $\" +\r\n          MyData.Cash +\r\n          \"\\n\" +\r\n          \"Home Based Businesses Value : $\" +\r\n          MyData.TotalHBCash +\r\n          \"\\n\" +\r\n          \"Brick And Mortar Businesses Value : $\" +\r\n          MyData.TotalBMCash +\r\n          \"\\n\" +\r\n          \"Gold Value : $\" +\r\n          MyData.TotalGoldCash +\r\n          \"\\n\" +\r\n          \"Stocks Value : $\" +\r\n          MyData.TotalStocksCash +\r\n          \"\\n\" +\r\n          \"Loan Balance : $\" +\r\n          MyData.TotalLoanBalance +\r\n          \"\\n\" +\r\n          \"Total Cash Earned : $\" +\r\n          MyData.TotalScore +\r\n          \"\\n\" +\r\n          \"Other Player Earned Cash : $\" +\r\n          this.PlayerGameInfo[1].TotalScore +\r\n          \"\\n\";\r\n\r\n        var _currentCash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n        var _total = _currentCash + parseInt(MyData.TotalScore);\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _total.toString();\r\n\r\n        var _won = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon);\r\n        _won = _won + 1;\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon = _won.toString();\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(-1, _won, -1);\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n      } else {\r\n        //you lose\r\n\r\n        statusText = \"Unfortunately! you have lost the game.\";\r\n        infoText =\r\n          \"Current Cash : $\" +\r\n          MyData.Cash +\r\n          \"\\n\" +\r\n          \"Home Based Businesses Value : $\" +\r\n          MyData.TotalHBCash +\r\n          \"\\n\" +\r\n          \"Brick And Mortar Businesses Value : $\" +\r\n          MyData.TotalBMCash +\r\n          \"\\n\" +\r\n          \"Gold Value : $\" +\r\n          MyData.TotalGoldCash +\r\n          \"\\n\" +\r\n          \"Stocks Value : $\" +\r\n          MyData.TotalStocksCash +\r\n          \"\\n\" +\r\n          \"Loan Balance : $\" +\r\n          MyData.TotalLoanBalance +\r\n          \"\\n\" +\r\n          \"Total Cash Earned : $\" +\r\n          MyData.TotalScore +\r\n          \"\\n\" +\r\n          \"Other Player Earned Cash : $\" +\r\n          this.PlayerGameInfo[1].TotalScore +\r\n          \"\\n\";\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n      }\r\n    }\r\n  },\r\n\r\n  SyncGameCompleteData(_data) {\r\n    var _isBot = _data.Bot;\r\n    if (_isBot) {\r\n      this.CallGameComplete(true, false);\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 1500, false);\r\n      setTimeout(() => {\r\n        this.ZoomCameraOutOnly();\r\n\r\n        var max = -1;\r\n        var SelectedInd = 0;\r\n        var SessionData = this.PlayerGameInfo;\r\n\r\n        for (let index = 0; index < SessionData.length; index++) {\r\n          var _value = SessionData[index].TotalScore;\r\n\r\n          if (_value > max) {\r\n            SelectedInd = index;\r\n            max = _value;\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < SessionData.length; index++) {\r\n          if (SessionData[index].IsActive) {\r\n            var _value = SessionData[index].TotalScore;\r\n            console.log(_value);\r\n          }\r\n        }\r\n\r\n        console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n        this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n      }, 1500);\r\n    } else {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        this.CallGameComplete(false, false);\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 1500, false);\r\n        setTimeout(() => {\r\n          console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray());\r\n          this.ZoomCameraOutOnly();\r\n\r\n          this.SyncDataToPlayerGameInfo(0);\r\n\r\n          var max = -1;\r\n          var SelectedInd = 0;\r\n          var SessionData = this.PlayerGameInfo;\r\n          console.log(SessionData);\r\n\r\n          for (let index = 0; index < SessionData.length; index++) {\r\n            if (SessionData[index].IsActive) {\r\n              var _value = SessionData[index].TotalScore;\r\n\r\n              if (_value > max) {\r\n                SelectedInd = index;\r\n                max = _value;\r\n              }\r\n            }\r\n          }\r\n\r\n          for (let index = 0; index < SessionData.length; index++) {\r\n            if (SessionData[index].IsActive) {\r\n              var _value = SessionData[index].TotalScore;\r\n              console.log(_value);\r\n            }\r\n          }\r\n\r\n          console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n          this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n        }, 1500);\r\n      }\r\n    }\r\n  },\r\n\r\n  AllPlayersGameCompleted(_isBot = false) {\r\n    var _data = { Bot: _isBot };\r\n    this.RaiseEventToSyncGameCompleteData(_data);\r\n  },\r\n\r\n  GameOver(_forceGameOver = false) {\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      if (_forceGameOver) {\r\n        this.ZoomCameraOutOnly();\r\n      }\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        this.SyncDataToPlayerGameInfo(0);\r\n\r\n        var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var playercompleted = 0;\r\n\r\n        this.PlayerGameInfo[this.TurnNumber].isGameFinished = true;\r\n\r\n        // for (let index = 0; index < MainSessionData.length; index++) {\r\n        //   if (MainSessionData[index].customProperties.PlayerSessionData.isGameFinished) playercompleted++;\r\n        // }\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n          if (this.PlayerGameInfo[index].IsActive == false || this.PlayerGameInfo[index].isGameFinished) playercompleted++;\r\n        }\r\n\r\n        console.log(\"player completed: \" + playercompleted);\r\n        console.log(\"player gameinfo length: \" + this.PlayerGameInfo.length);\r\n        if (playercompleted >= this.PlayerGameInfo.length || _forceGameOver) {\r\n          //game completed on all system\r\n          isGameOver = true;\r\n          if (_forceGameOver) {\r\n            setTimeout(() => {\r\n              this.AllPlayersGameCompleted(false);\r\n            }, 1000);\r\n          } else if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n            if (!PassedPayDay && !DoublePayDay) {\r\n              this.AllPlayersGameCompleted(false);\r\n            } else {\r\n              IsTweening = false;\r\n              this.completeCardTurn();\r\n            }\r\n          }\r\n        } else {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n              if (!PassedPayDay && !DoublePayDay) {\r\n                IsTweening = false;\r\n                this.completeCardTurn();\r\n              }\r\n            } else {\r\n              IsTweening = false;\r\n              this.completeCardTurn();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      if (this.PlayerGameInfo[this.TurnNumber].IsBot) BotGameOver = true;\r\n      else userGameOver = true;\r\n\r\n      console.log(\"usergameover: \" + userGameOver);\r\n      console.log(\"botgameover: \" + BotGameOver);\r\n      // this.CallGameComplete(true);\r\n      var playercompleted = 0;\r\n      this.PlayerGameInfo[this.TurnNumber].isGameFinished = true;\r\n\r\n      var MainSessionData = this.PlayerGameInfo;\r\n      for (let index = 0; index < MainSessionData.length; index++) {\r\n        if (MainSessionData[index].isGameFinished) playercompleted++;\r\n      }\r\n\r\n      if (playercompleted == this.PlayerGameInfo.length) {\r\n        //gamecompleted on all systems\r\n        BotGameOver = true;\r\n        userGameOver = true;\r\n        isGameOver = true;\r\n\r\n        if (!PassedPayDay && !DoublePayDay) {\r\n          this.AllPlayersGameCompleted(true);\r\n        }\r\n      } else {\r\n        if (!isGameOver) {\r\n          if (!PassedPayDay && !DoublePayDay) {\r\n            IsTweening = false;\r\n            this.completeCardTurn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  StartDiceRoll: function () {\r\n    if (RollCounter >= GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n      console.log(\"Gameover\");\r\n      this.ZoomCameraOut();\r\n\r\n      setTimeout(() => {\r\n        this.GameOver(false);\r\n      }, 1500);\r\n    } else {\r\n      if (!isGameOver) {\r\n        DiceTemp = DiceTemp + 1;\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n        this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n      }\r\n    }\r\n  },\r\n\r\n  getRandom: function (min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min; // min included and max excluded\r\n  },\r\n\r\n  TweenCamera: function (_pos, isZoom, time) {\r\n    cc.tween(this.CameraNode)\r\n      .to(time, { position: cc.v2(_pos.x, _pos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        if (isZoom) this.ZoomCameraIn();\r\n        else this.ZoomCameraOut();\r\n      })\r\n      .start();\r\n  },\r\n\r\n  ZoomCameraIn() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio < 2) {\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio + 0.03;\r\n        this.ZoomCameraIn();\r\n      } else {\r\n        this.Camera.zoomRatio = 2;\r\n        this.isCameraZooming = true;\r\n        this.StartDiceRoll();\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  CheckPayDayConditions(_isBot = false) {\r\n    if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n      if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6) {\r\n        PassedPayDay = true;\r\n        PassedPayDayCounter = PassedPayDayCounter + 1;\r\n      }\r\n\r\n      if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7) {\r\n        DoublePayDay = true;\r\n        DoublePayDayCounter++;\r\n        PassedPayDayCounter++;\r\n      }\r\n    }\r\n\r\n    _nextTurnDoublePay = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n    _nextTurnhalfPay = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnHalfPayDay;\r\n\r\n    if (PassedPayDay && !DoublePayDay && !_nextTurnDoublePay) {\r\n      //this.ToggleDoublePayNextTurn(false);\r\n      //this.TogglePayDay(false,false);\r\n      this.ProcessPayDay_TurnDecision(false, _isBot);\r\n    } else if (DoublePayDay || (PassedPayDay && _nextTurnDoublePay)) {\r\n      //this.ToggleDoublePayNextTurn(false);\r\n      //this.TogglePayDay(false,false);\r\n      this.ProcessPayDay_TurnDecision(true, _isBot);\r\n    } else {\r\n      this.callUponCard();\r\n    }\r\n  },\r\n\r\n  ZoomCameraOutOnly() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio >= 1) {\r\n        this.isCameraZooming = false;\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio - 0.03;\r\n        this.ZoomCameraOutOnly();\r\n      } else {\r\n        this.CameraNode.position = cc.Vec2(0, 0);\r\n        this.Camera.zoomRatio = 1;\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  ZoomCameraOut() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio >= 1) {\r\n        this.isCameraZooming = false;\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio - 0.03;\r\n        this.ZoomCameraOut();\r\n      } else {\r\n        this.CameraNode.position = cc.Vec2(0, 0);\r\n        this.Camera.zoomRatio = 1;\r\n        // IsTweening = false;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n\r\n        if (this.SelectedMode == 1) {\r\n          if (this.PlayerGameInfo[this.TurnNumber].IsBot && !BotGameOver) {\r\n            this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n          } else {\r\n            if (!this.PlayerGameInfo[this.TurnNumber].IsBot && !userGameOver) {\r\n              this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.SelectedMode == 2) {\r\n          //real player\r\n          if (PlayerLeft) {\r\n            // IsTweening = false;\r\n            PlayerLeft = false;\r\n          }\r\n\r\n          if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) this.CheckPayDayConditions();\r\n          else this.callUponCard();\r\n        }\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  TweenPlayer: function (Node, ToPos) {\r\n    var speed = 0.4;\r\n    //if (_isTest) speed = 0.04;\r\n\r\n    cc.tween(Node) //0.4\r\n      .to(speed, { position: cc.v2(ToPos.x, ToPos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        if (DiceTemp < DiceRoll) {\r\n          // console.log(DiceTemp + \" \" + RollCounter);\r\n\r\n          if (this.SelectedMode == 1) {\r\n            //for bot\r\n            if (this.PlayerGameInfo[this.TurnNumber].IsBot) {\r\n              if (!BotGameOver) {\r\n                if (\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6 ||\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7\r\n                ) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n              } else {\r\n                console.log(\"bot game is over\");\r\n              }\r\n            } else {\r\n              if (!userGameOver) {\r\n                if (\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6 ||\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7\r\n                ) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n\r\n                /// console.error(PassedPayDayCounter);\r\n              } else {\r\n                console.log(\"user game is over skipping\");\r\n              }\r\n            }\r\n\r\n            // console.log(PassedPayDay);\r\n          }\r\n\r\n          if (this.SelectedMode == 2) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n              if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n\r\n                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7) {\r\n                  DoublePayDay = true;\r\n                  DoublePayDayCounter++;\r\n                  PassedPayDayCounter++;\r\n                }\r\n              } else {\r\n                console.log(\"Game finished for: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n            if (RollCounter == 13) RollCounter = RollCounter + 22;\r\n            else RollCounter = RollCounter + 1;\r\n          } else {\r\n            RollCounter = RollCounter + 1;\r\n            DiceTemp = DiceRoll;\r\n          }\r\n\r\n          //DiceTemp=DiceTemp+1;\r\n          //  console.log(DiceTemp + \" \" + RollCounter);\r\n\r\n          this.StartDiceRoll();\r\n          //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n        } else {\r\n          var _newpos = cc.Vec2(0, 0);\r\n          this.TweenCamera(_newpos, false, 0.6); //zoomout\r\n        }\r\n      })\r\n      .start();\r\n  },\r\n\r\n  //rules implmentation during turn (turn decisions)\r\n\r\n  TogglePayDay(_st1, _St2) {\r\n    PassedPayDay = _st1;\r\n    DoublePayDay = _St2;\r\n\r\n    if (!_st1) {\r\n      PassedPayDayCounter = 0;\r\n    }\r\n\r\n    if (!_St2) {\r\n      DoublePayDayCounter = 0;\r\n    }\r\n  },\r\n\r\n  IncreaseDoublePayDay() {\r\n    DoublePayDayCounter++;\r\n  },\r\n\r\n  ExpandBusiness_TurnDecision(amount, _index, _locationName, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.length < 3) {\r\n      if (!_isCardFunctionality) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].Cash >= amount) {\r\n          this.PlayerGameInfo[this.TurnNumber].Cash = this.PlayerGameInfo[this.TurnNumber].Cash - amount;\r\n          this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n          this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n          }, 1200);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount);\r\n        }\r\n      } else {\r\n        if (_GivenCash >= amount) {\r\n          _GivenCash = _GivenCash - amount;\r\n          this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n          this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n          }, 1200);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount + \", Cash Given $\" + _GivenCash);\r\n        }\r\n      }\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You cannot own more than three brick and mortar business locations\");\r\n    }\r\n  },\r\n\r\n  GenerateExpandBusiness_Prefabs_TurnDecision(_isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    BusinessLocationNodes = [];\r\n\r\n    console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n    for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n      if (parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType) == 2) {\r\n        //this means there is brick and mortar in list\r\n        var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n        node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n        node.getComponent(\"ExpandBusinessHandler\").SetBusinessIndex(i);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetCardFunctionality(_isCardFunctionality);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetGivenCash(_GivenCash);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetStartAnyBusinessWithoutCash(_StartAnyBusinessWithoutCash);\r\n        node.getComponent(\"ExpandBusinessHandler\").ResetEditBox();\r\n        BusinessLocationNodes.push(node);\r\n      }\r\n    }\r\n    console.log(BusinessLocationNodes);\r\n    return BusinessLocationNodes.length;\r\n  },\r\n\r\n  DestroyGeneratedNodes() {\r\n    for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n      BusinessLocationNodes[index].destroy();\r\n    }\r\n\r\n    BusinessLocationNodes = [];\r\n  },\r\n\r\n  UpdateStocks_TurnDecision(_name, _ShareAmount, _isAdding) {\r\n    if (_isAdding) {\r\n      var _stock = new StockInfo();\r\n      _stock.BusinessName = _name;\r\n      _stock.ShareAmount = _ShareAmount;\r\n\r\n      this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n    }\r\n  },\r\n\r\n  ProcessPayDay_TurnDecision(_isDoublePayDay = false, _isBot = false, _forSelectedBusiness = false, _SelectedBusinessIndex = 0, HBAmount = 0, BMAmount = 0, BMLocations = 0) {\r\n    if (_forSelectedBusiness) {\r\n      var _title = \"PayDay\";\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, false, false, false, _isBot, _forSelectedBusiness, _SelectedBusinessIndex, HBAmount, BMAmount, BMLocations, 1, 0, _nextTurnhalfPay);\r\n    } else {\r\n      if (DoublePayDay && PassedPayDay && _nextTurnDoublePay) {\r\n        DoublePayDayCounter = 2;\r\n      }\r\n\r\n      _skipNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n      _skipHMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n      _skipBMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n      if (_skipNextPayday) {\r\n        //if previously skip payday was stored by any card\r\n        this.ToggleSkipPayDay_Whole(false);\r\n\r\n        if (!_isBot) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\", 1600);\r\n          setTimeout(() => {\r\n            this.callUponCard();\r\n          }, 1650);\r\n        } else {\r\n          console.log(\"Skipping PayDay.\");\r\n          setTimeout(() => {\r\n            this.callUponCard();\r\n          }, 800);\r\n        }\r\n      } else {\r\n        var _title = \"\";\r\n\r\n        if (_isDoublePayDay) _title = \"DoublePayDay\";\r\n        else _title = \"PayDay\";\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, _isDoublePayDay, _skipHMNextPayday, _skipBMNextPayday, _isBot, false, 0, 0, 0, 0, PassedPayDayCounter, DoublePayDayCounter, _nextTurnhalfPay);\r\n      }\r\n    }\r\n  },\r\n\r\n  Bankrupt_TurnDecision() {\r\n    this.PlayerGameInfo[this.TurnNumber].IsBankrupt = true;\r\n    this.PlayerGameInfo[this.TurnNumber].BankruptAmount += 1;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode, this.PlayerGameInfo[this.TurnNumber].IsBankrupt, this.PlayerGameInfo[this.TurnNumber].BankruptAmount);\r\n  },\r\n\r\n  SendProfit_Partner_TurnDecision(_amount, _uID) {\r\n    var _data = { Data: { Cash: _amount, ID: _uID } };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(13, _data);\r\n  },\r\n\r\n  ReceiveProfit_Partner_TurnDecision(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _amount = _data.Data.Cash;\r\n      var _iD = _data.Data.ID;\r\n\r\n      var _myIndex = this.GetMyIndex();\r\n\r\n      if (this.PlayerGameInfo[_myIndex].PlayerUID == _iD) {\r\n        if (this.PlayerGameInfo[_myIndex].isGameFinished == true) {\r\n          this.PlayerGameInfo[_myIndex].TotalScore += _amount;\r\n        }\r\n\r\n        this.PlayerGameInfo[_myIndex].Cash += _amount;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have received profit of $\" + _amount + \" from other player.\", 2800);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Cards Rules\r\n  ToggleDoublePayNextTurn(_state) {\r\n    _nextTurnDoublePay = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay = _nextTurnDoublePay;\r\n  },\r\n\r\n  ToggleHalfPayNextTurn(_state) {\r\n    _nextTurnhalfPay = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnHalfPayDay = _nextTurnhalfPay;\r\n  },\r\n\r\n  ToggleSkipNextTurn(_state) {\r\n    _skipNextTurn = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn = _skipNextTurn;\r\n  },\r\n\r\n  ToggleSkipPayDay_Whole(_state) {\r\n    _skipNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday = _skipNextPayday;\r\n  },\r\n\r\n  ToggleSkipPayDay_HomeBased(_state) {\r\n    _skipHMNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday = _skipHMNextPayday;\r\n  },\r\n\r\n  ToggleSkipPayDay_BrickAndMortar(_state) {\r\n    _skipBMNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday = _skipBMNextPayday;\r\n  },\r\n\r\n  ToggleTurnProgress(_state) {\r\n    TurnInProgress = _state;\r\n  },\r\n\r\n  ReturnTurnProgress() {\r\n    return TurnInProgress;\r\n  },\r\n\r\n  LoseAllMarketingMoney() {\r\n    var _loseAmount = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _loseAmount = this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n      this.PlayerGameInfo[this.TurnNumber].MarketingAmount = 0;\r\n    } else {\r\n      _loseAmount = 0;\r\n    }\r\n\r\n    return _loseAmount;\r\n  },\r\n\r\n  MultiplyMarketingMoney(_multiplier) {\r\n    var _amountIncreased = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _amountIncreased = this.PlayerGameInfo[this.TurnNumber].MarketingAmount *= _multiplier;\r\n    } else {\r\n      _amountIncreased = 0;\r\n    }\r\n\r\n    return _amountIncreased;\r\n  },\r\n\r\n  GetMarketingMoney(_profit) {\r\n    var _amount = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _profit = _profit / 100;\r\n      _amount = this.PlayerGameInfo[this.TurnNumber].MarketingAmount *= _profit;\r\n      this.PlayerGameInfo[this.TurnNumber].MarketingAmount = 0;\r\n      this.PlayerGameInfo[this.TurnNumber].Cash += _amount;\r\n    } else {\r\n      _amount = 0;\r\n    }\r\n\r\n    return _amount;\r\n  },\r\n\r\n  GetVocabularyQuestionsIndex() {\r\n    var _val = -1;\r\n    if (VocabularyQuestions.length > 0) {\r\n      if (VocabularyQuestionsCounter < VocabularyQuestions.length) {\r\n        _val = VocabularyQuestions[VocabularyQuestionsCounter];\r\n        VocabularyQuestionsCounter++;\r\n      } else {\r\n        this.PopulateOneQuestionArray_Vocabulary();\r\n      }\r\n    } else {\r\n      this.PopulateOneQuestionArray_Vocabulary();\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetEstablishmentQuestionsIndex() {\r\n    var _val = -1;\r\n    if (EstablishmentQuestions.length > 0) {\r\n      if (EstablishmentQuestionsCounter < EstablishmentQuestions.length) {\r\n        _val = EstablishmentQuestions[EstablishmentQuestionsCounter];\r\n        EstablishmentQuestionsCounter++;\r\n      } else {\r\n        this.PopulateOneQuestionArray_Establishment();\r\n      }\r\n    } else {\r\n      this.PopulateOneQuestionArray_Establishment();\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  PopulateOneQuestionArray_Vocabulary(_data = null) {\r\n    if (_data == null) {\r\n      VocabularyQuestions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\n      VocabularyQuestions.sort(() => 0.5 - Math.random());\r\n\r\n      console.log(VocabularyQuestions);\r\n      VocabularyQuestionsCounter = 0;\r\n\r\n      var _tempData = { VocArray: VocabularyQuestions, EstArray: null };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(18, _tempData);\r\n    } else {\r\n      if (_data.VocArray != null) {\r\n        VocabularyQuestions = _data.VocArray;\r\n        console.log(VocabularyQuestions);\r\n        VocabularyQuestionsCounter = 0;\r\n      }\r\n    }\r\n  },\r\n\r\n  PopulateOneQuestionArray_Establishment(_data = null) {\r\n    if (_data == null) {\r\n      EstablishmentQuestions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\n      EstablishmentQuestions.sort(() => 0.5 - Math.random());\r\n\r\n      console.log(EstablishmentQuestions);\r\n      EstablishmentQuestionsCounter = 0;\r\n\r\n      var _tempData = { VocArray: null, EstArray: EstablishmentQuestions };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(18, _tempData);\r\n    } else {\r\n      if (_data.EstArray != null) {\r\n        EstablishmentQuestions = _data.EstArray;\r\n        console.log(EstablishmentQuestions);\r\n        EstablishmentQuestionsCounter = 0;\r\n      }\r\n    }\r\n  },\r\n\r\n  QuestionPopUp_OtherUser_OneQuestion(_data) {\r\n    var _questionRef = GamePlayReferenceManager.Instance.Get_QuestionsData();\r\n    var _userID = _data.UserID;\r\n    var _questionIndex = _data.Question;\r\n    var _playerIndex = _data.UserIndex;\r\n    var _isVoc = _data.IsVoc;\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n    if (_isVoc) {\r\n      VocabularyQuestionsCounter++;\r\n    } else {\r\n      EstablishmentQuestionsCounter++;\r\n    }\r\n\r\n    if (_userID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID) {\r\n      console.log(\"ID matched\");\r\n\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n      var _Qdata;\r\n      if (_isVoc) {\r\n        console.log(\"voc\");\r\n        _Qdata = _questionRef.VocabularyQuestions[_questionIndex];\r\n      } else {\r\n        console.log(\"est\");\r\n        _Qdata = _questionRef.EstablishmentQuestions[_questionIndex];\r\n      }\r\n\r\n      CorrectAnswer = _Qdata.CorrectOption;\r\n      var _message = \"Choose the correct answer.\" + \"\\n\" + \"*wrong answer will cost you a fine of $5000.\" + \"\\n\" + \"\\n\" + _Qdata.Question + \"\\n\" + \"A. \" + _Qdata.Option1 + \"\\n\" + \"B. \" + _Qdata.Option2 + \"\\n\" + \"C. \" + _Qdata.Option3 + \"\\n\" + \"D. \" + _Qdata.Option4;\r\n\r\n      // var _questionAsked = OneQuestions[_questionIndex - 1];\r\n      _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_message);\r\n    }\r\n  },\r\n\r\n  OneQuestionScreen_Space_OneQuestion(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n    _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n    _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData, _roomData, _isTurnOver, this.SelectedMode);\r\n  },\r\n\r\n  OneQuestionDecision_SelectOption_OneQuestion(event = null) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _selection = parseInt(event.currentTarget.name.split(\"_\")[1]);\r\n\r\n    console.log(\"option selected: \" + _selection);\r\n    console.log(\"CorrectAnswer: \" + CorrectAnswer);\r\n    if (_selection == CorrectAnswer) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your answer was correct!.\", 1200);\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n      this.RaiseEventDecision_OneQuestion(false, true, -1, _myData.PlayerUID);\r\n    } else {\r\n      if (_myData.Cash >= 5000) {\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n          if (_myData.PlayerUID == this.PlayerGameInfo[index].PlayerUID) {\r\n            this.PlayerGameInfo[index].Cash -= 5000;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have answered wrong, fine amount was payed to the player.\", 1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(true, false, -1, _myData.PlayerUID);\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash, Skipping question\");\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false, false, 0, _myData.PlayerUID);\r\n        //GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_InsufficientBalance(true);\r\n      }\r\n    }\r\n  },\r\n\r\n  // OneQuestionDecision_PayAmount_OneQuestion() {\r\n  //   var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n  //   var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n  //   if (_myData.Cash >= 5000) {\r\n  //     for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n  //       if (_myData.PlayerUID == this.PlayerGameInfo[index].PlayerUID) {\r\n  //         this.PlayerGameInfo[index].Cash -= 5000;\r\n  //         GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n  //         break;\r\n  //       }\r\n  //     }\r\n\r\n  //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\", 1200);\r\n  //     _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n  //     this.RaiseEventDecision_OneQuestion(true, false, -1, _myData.PlayerUID);\r\n  //   } else {\r\n  //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n  //   }\r\n  // },\r\n\r\n  // OneQuestionDecision_AnswerQuestion_OneQuestion() {\r\n  //   var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n  //   var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n  //   GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\", 1200);\r\n  //   _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n  //   this.RaiseEventDecision_OneQuestion(false, true, OneQuestionIndex, _myData.PlayerUID);\r\n  // },\r\n\r\n  SelectPlayerProfit_Space_CardFunctionality(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n    _gameplayUIManager.ToggleScreen_SelectPlayerForProfit(true);\r\n    _gameplayUIManager.ResetSpaceScreen_SelectPlayerForProfit();\r\n    _gameplayUIManager.SetUpSpaceScreen_SelectPlayerForProfit(_myData, _roomData, _isTurnOver, this.SelectedMode);\r\n  },\r\n\r\n  SelectPlayerTakeOver_Space_CardFunctionality(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n    _gameplayUIManager.ToggleScreen_SelectPlayerTakeOver(true);\r\n    _gameplayUIManager.ResetSpaceScreen_SelectPlayerTakeOver();\r\n    _gameplayUIManager.SetUpSpaceScreen_SelectPlayerTakeOver(_myData, _roomData, _isTurnOver, this.SelectedMode);\r\n  },\r\n\r\n  SelectPlayerBuyHalfBusiness_Space_CardFunctionality(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n\r\n    _gameplayUIManager.ToggleScreen_SelectPlayerTakeOver(true);\r\n    _gameplayUIManager.ResetSpaceScreen_SelectPlayerTakeOver();\r\n    _gameplayUIManager.SetUpSpaceScreen_SelectPlayerTakeOver(_myData, _roomData, _isTurnOver, this.SelectedMode, true);\r\n  },\r\n\r\n  SelectPlayerDamagingInformation_Space_CardFunctionality(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n    _gameplayUIManager.ToggleScreen_SelectPlayerDamaging(true);\r\n    _gameplayUIManager.ResetSpaceScreen_SelectPlayerDamaging();\r\n    _gameplayUIManager.SetUpSpaceScreen_SelectPlayerDamaging(_myData, _roomData, _isTurnOver, this.SelectedMode);\r\n  },\r\n\r\n  ReceiveEvent_SelectPlayerForProfit_Space_CardFunctionality(_data) {\r\n    var _ownID = _data.UserID.toString();\r\n    var _playerIndex = parseInt(_data.UserIndex);\r\n    var _playerName = _data.UserName;\r\n    var _playerID = _data.OwnPlayerID.toString();\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    if (_ownID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      console.log(\"received event: \" + _playerName);\r\n\r\n      for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n        if (this.PlayerGameInfo[index].PlayerUID == _ownID) {\r\n          this.PlayerGameInfo[index].CanGiveProfitOnPayDay = true;\r\n          this.PlayerGameInfo[index].UserIDForProfitPayDay = _playerID;\r\n\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", this.PlayerGameInfo, true);\r\n          _gameplayUIManager.ShowToast(\"Player \" + _playerName + \" will receive all your next pay day profits\", 3200);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventDecision_OneQuestion(_hasDonePayment, _hasAnsweredQuestion, _questionIndex, _UserID) {\r\n    var _data = { PaymentDone: _hasDonePayment, QuestionAnswered: _hasAnsweredQuestion, QuestionIndex: _questionIndex, ID: _UserID };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8, _data);\r\n  },\r\n\r\n  DeductCash_CardFunctionality(_amount) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _myIndex = this.GetMyIndex();\r\n\r\n      if (this.PlayerGameInfo[_myIndex].Cash >= _amount) {\r\n        this.PlayerGameInfo[_myIndex].Cash -= _amount;\r\n      } else if (this.PlayerGameInfo[_myIndex].Cash < _amount) {\r\n        this.PlayerGameInfo[_myIndex].Cash = 0;\r\n      }\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n    }\r\n  },\r\n\r\n  AddCash_CardFunctionality(_data) {\r\n    var _amount = _data.amount;\r\n    var _ID = _data.ID;\r\n    var _msg = _data.msg;\r\n\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    if (mode == 2) {\r\n      var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n        var _myIndex = this.GetMyIndex();\r\n        if (_actor.PlayerUID == _ID) {\r\n          this.PlayerGameInfo[_myIndex].Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(_msg);\r\n        }\r\n      }\r\n    } else if (mode == 1) {\r\n      for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n        if (this.PlayerGameInfo[index].PlayerUID == _ID && index != this.TurnNumber) {\r\n          this.PlayerGameInfo[index].Cash += _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(_msg);\r\n        }\r\n      }\r\n    }\r\n    this.UpdateUIData();\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().UpdateCash_TurnDecision();\r\n  },\r\n\r\n  ReceiveEventDecision_OneQuestion(_data) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      var _hasDonePayment = _data.PaymentDone;\r\n      var _hasAnsweredQuestion = _data.QuestionAnswered;\r\n      var _questionIndex = _data.QuestionIndex;\r\n      var _uID = _data.ID;\r\n\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n      if (_questionIndex == 0) {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player does not have enough cash, so questions were skipped.\", 2100);\r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n        this.completeCardTurn();\r\n      } else {\r\n        if (_hasDonePayment) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n          this.PlayerGameInfo[this.TurnNumber].Cash += 5000;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player has given wrong answer, cash $5000 has been added.\", 2100);\r\n          _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n          this.completeCardTurn();\r\n        } else if (_hasAnsweredQuestion) {\r\n          var _selectedPlayerIndex = 0;\r\n          var _actorsData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n          for (let index = 0; index < _actorsData.length; index++) {\r\n            if (_uID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n              _selectedPlayerIndex = index;\r\n              break;\r\n            }\r\n          }\r\n\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player has given correct answer, no cash was received.\", 2100);\r\n\r\n          // if (_questionIndex == 1) {\r\n          //   //have you skipped loan previous payday?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have skipped loan payement in previous payday\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have skipped loan payement in previous payday\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 2) {\r\n          //   //Have you taken any loan?\r\n          //   var _loanTaken = false;\r\n          //   for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n          //     if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken) {\r\n          //       _loanTaken = true;\r\n          //       break;\r\n          //     }\r\n          //   }\r\n\r\n          //   if (_loanTaken) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have taken some loan\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have taken any loan\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 3) {\r\n          //   //Are you bankrupted? if more than once, tell me the amount?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have been bankrupted \" + _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.BankruptAmount + \" time/es.\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have been bankrupted\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 4) {\r\n          //   //Is your turn going to be skipped next time?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next turn will be skipped.\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next turn will not be skipped.\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 5) {\r\n          //   //Is it going to be double pay day your next payday?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next payday will be double payday\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next payday will not be double payday\", 2100);\r\n          //   }\r\n          // }\r\n\r\n          setTimeout(() => {\r\n            _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n            this.completeCardTurn();\r\n          }, 200);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceiveGoBackSpacesData_spaceFunctionality(_data) {\r\n    if (IsTweening == true) {\r\n      setTimeout(() => {\r\n        this.ReceiveGoBackSpacesData_spaceFunctionality(_data);\r\n      }, 800);\r\n    } else {\r\n      var _spaces = _data.Data.backspaces;\r\n      var _counter = _data.Data.Counter;\r\n\r\n      var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_counter + Backspaces].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n      this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos, 0.1);\r\n\r\n      RollCounter = _counter;\r\n      var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n      this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n    }\r\n  },\r\n\r\n  TweenPlayer_GoBackSpaces: function (Node, ToPos, speed = 0.6) {\r\n    cc.tween(Node)\r\n      .to(speed, { position: cc.v2(ToPos.x, ToPos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {})\r\n      .start();\r\n  },\r\n\r\n  GoBackSpaces_spaceFunctionality() {\r\n    RollCounter -= Backspaces;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      var _data = { Data: { backspaces: Backspaces, Counter: RollCounter } };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(10, _data);\r\n    }\r\n\r\n    var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n    this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n    this.completeCardTurn();\r\n  },\r\n\r\n  ReceiveEvent_TakeOverBusiness_CardFunctionality(_data) {\r\n    if (this.SelectedMode == 2) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        var _id = _data.ID;\r\n        var _playerData = _data.Player;\r\n        var _business = _data.Business;\r\n        var _businessIndex = _data.BusinessIndex;\r\n        var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n\r\n        var _myIndex = -1;\r\n        console.log(_myActor.PlayerUID);\r\n        console.log(_id);\r\n\r\n        if (_myActor.PlayerUID.toString() == _id.toString()) {\r\n          for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n            if (this.PlayerGameInfo[index].PlayerUID == _id) {\r\n              if (this.PlayerGameInfo[index].NoOfBusiness[_businessIndex].BusinessType == 1) {\r\n                //home based\r\n                this.PlayerGameInfo[index].HomeBasedAmount--;\r\n              } else if (this.PlayerGameInfo[index].NoOfBusiness[_businessIndex].BusinessType == 2) {\r\n                //brick and mortar\r\n                var _locations = this.PlayerGameInfo[index].NoOfBusiness[_businessIndex].LocationsName.length;\r\n                this.PlayerGameInfo[index].BrickAndMortarAmount--;\r\n                this.PlayerGameInfo[index].TotalLocationsAmount -= _locations;\r\n              }\r\n\r\n              this.PlayerGameInfo[index].NoOfBusiness.splice(_businessIndex, 1);\r\n              _myIndex = index;\r\n              break;\r\n            }\r\n          }\r\n\r\n          console.log(this.PlayerGameInfo[_myIndex]);\r\n          if (_myIndex != -1) {\r\n            if (this.PlayerGameInfo[_myIndex].NoOfBusiness.length > 0) {\r\n              //check if player has lost all businesses or not\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your business \" + _business.BusinessName + \" was forcefully took over, you have lost that business\");\r\n            } else {\r\n              GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your business \" + _business.BusinessName + \" was forcefully took over, you have lost that business, you have been bankrupted, you will start again in next turn.\");\r\n              this.PlayerGameInfo[_myIndex].CardFunctionality.BankruptedNextTurn = true;\r\n            }\r\n\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  TakeOverBusiness_CardFunctionality(_data, _index, _playerIndex = 0, _buyHalfBusiness = false) {\r\n    var _business = _data.NoOfBusiness[_index];\r\n    console.log(_business);\r\n\r\n    var _diceRoll = this.RollTwoDices();\r\n    var _multiplierBusiness = 10000;\r\n    var _result = _diceRoll * _multiplierBusiness;\r\n    var _player = null;\r\n\r\n    //send rpc to other player as well\r\n    _player = this.PlayerGameInfo[_playerIndex];\r\n\r\n    var _sendingData = { ID: _player.PlayerUID, Player: _player, Business: _business, BusinessIndex: _index };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(23, _sendingData);\r\n\r\n    if (!_business.LoanTaken) {\r\n      this.PlayerGameInfo[this.TurnNumber].Cash += _result;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n        \"\\n\" + \"Dice Result : \" + _diceRoll + \"\\n\" + \"\\n\" + \"Amount : \" + _diceRoll + \" * \" + _multiplierBusiness + \" = $\" + _result + \"\\n\" + \"\\n\" + \"Cash amount of $\" + _result + \" added after deducting supposed loan, total cash becomes $\" + this.PlayerGameInfo[this.TurnNumber].Cash\r\n      );\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreenAlongTurnOver__BusinessGenric();\r\n    } else {\r\n      var _tempSum = this.PlayerGameInfo[this.TurnNumber].Cash + _result;\r\n      if (_tempSum >= _business.LoanAmount) {\r\n        _tempSum -= _business.LoanAmount;\r\n        this.PlayerGameInfo[this.TurnNumber].Cash = _tempSum;\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\r\n          \"\\n\" +\r\n            \"Dice Result : \" +\r\n            _diceRoll +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"Loan Amount : $\" +\r\n            _business.LoanAmount +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"Amount : \" +\r\n            _diceRoll +\r\n            \" * \" +\r\n            _multiplierBusiness +\r\n            \" = $\" +\r\n            _result +\r\n            \"\\n\" +\r\n            \"\\n\" +\r\n            \"After deducting supposed loan, total cash becomes $\" +\r\n            this.PlayerGameInfo[this.TurnNumber].Cash\r\n        );\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreenAlongTurnOver__BusinessGenric();\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to pay off loan, turn will be skipped now\");\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreenAlongTurnOver__BusinessGenric();\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceiveEvent_BuyHalfBusiness_CardFunctionality(_data) {\r\n    if (this.SelectedMode == 2) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        var _id = _data.ID;\r\n        var _cashAmount = _data.Amount;\r\n        var _businessIndex = _data.BusinessIndex;\r\n        var _senderID = _data.MyID;\r\n        var _senderName = _data.MyName;\r\n        var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var _myIndex = this.GetMyIndex();\r\n        if (_myActor.PlayerUID == _id.toString()) {\r\n          this.PlayerGameInfo[_myIndex].Cash += parseInt(_cashAmount);\r\n          this.PlayerGameInfo[_myIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          this.PlayerGameInfo[_myIndex].NoOfBusiness[_businessIndex].PartnerID = _senderID;\r\n          this.PlayerGameInfo[_myIndex].NoOfBusiness[_businessIndex].PartnerName = _senderName;\r\n\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(_senderName + \" has send you cash amount $\" + _cashAmount + \" and has become 50% owner of your business \" + this.PlayerGameInfo[_myIndex].NoOfBusiness[_businessIndex].BusinessName);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  PayAmount_BuyHalfBusiness_CardFunctionality() {\r\n    if (this.PlayerGameInfo[this.TurnNumber].Cash >= halfBusinessAmount) {\r\n      this.PlayerGameInfo[this.TurnNumber].Cash -= halfBusinessAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully bought half ownership of the business, remaining cash $\" + this.PlayerGameInfo[this.TurnNumber].Cash);\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ExitScreenAlongTurnOver__BusinessGenric();\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_BuyHalfBusiness(false);\r\n      var _sendingData = { ID: halfBusinessAmountID, Amount: halfBusinessAmount, BusinessIndex: halfBusinessAmountIndex, MyID: this.PlayerGameInfo[this.TurnNumber].PlayerUID, MyName: this.PlayerGameInfo[this.TurnNumber].PlayerName };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(26, _sendingData);\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_InsufficientBalance(true);\r\n      //GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n    }\r\n  },\r\n  BuyHalfBusiness_CardFunctionality(_data, _index, _playerIndex = 0) {\r\n    //var _business = _data.NoOfBusiness[_index];\r\n    //console.log(_business);\r\n\r\n    var _diceRoll = this.RollTwoDices();\r\n    var _multiplierBusiness = 3000;\r\n    var _result = _diceRoll * _multiplierBusiness;\r\n\r\n    halfBusinessAmount = _result;\r\n    halfBusinessAmountID = this.PlayerGameInfo[_playerIndex].PlayerUID;\r\n    halfBusinessAmountIndex = _index;\r\n\r\n    var _player = null;\r\n    var _text = \"\\n\" + \"Dice Result : \" + _diceRoll + \"\\n\" + \"\\n\" + \"Payable Amount : \" + _diceRoll + \" * \" + _multiplierBusiness + \" = $\" + _result;\r\n\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_BuyHalfBusiness(true);\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().SetTitleText_BuyHalfBusiness(_text);\r\n  },\r\n  ReceiveEvent_SelectPlayerDamagingDecision_Space_CardFunctionality(_data) {\r\n    if (this.SelectedMode == 2) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        var _player = _data.Player;\r\n        var _playerIndex = parseInt(_data.PlayerIndex);\r\n        var _senderID = _data.MyUserID;\r\n\r\n        var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n        if (_player.PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          console.log(\"received event: \" + _player.PlayerName);\r\n\r\n          _gameplayUIManager.SetSenderID_DamageDecision(_senderID);\r\n          _gameplayUIManager.ToggleMainScreen_DamageDecision(true);\r\n          _gameplayUIManager.ToggleDiceResultScreen_DamageDecision(false);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n  //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports = GameManager;\r\n//#endregion\r\n"]}