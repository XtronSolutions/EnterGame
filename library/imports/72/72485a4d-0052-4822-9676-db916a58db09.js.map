{"version":3,"sources":["assets\\Script\\GameManager.js"],"names":["_isTest","_diceinput1","_diceinput2","PreviousDiceRoll1","PreviousDiceRoll2","PreviousDiceRoll3","PreviousDiceRoll4","PreviousDiceRoll5","userGameOver","BotGameOver","TotalCounterReached","PassedPayDayCounter","DoublePayDayCounter","NoCardFunctionality","PlayerLeft","ForceChangeTimeOut","GameCompleted","CorrectAnswer","VocabularyQuestions","EstablishmentQuestions","VocabularyQuestionsCounter","EstablishmentQuestionsCounter","BigBusinessArray","LossesArray","MarketingArray","WildCardArray","BigBusinessArrayCounter","LossesArrayCounter","MarketingArrayCounter","WildCardArrayCounter","EnumBusinessType","cc","Enum","None","HomeBased","brickAndmortar","BusinessInfo","Class","name","properties","Name","BusinessType","displayName","type","serializable","tooltip","BusinessTypeDescription","Text","BusinessName","Amount","Integer","IsPartnership","typw","Boolean","PartnerID","PartnerName","LocationsName","LoanTaken","LoanAmount","ReceiveDoublePayDay","ctor","CardDataFunctionality","NextTurnDoublePay","SkipNextTurn","SkipNextPayday","SkipHMNextPayday","SkipBMNextPayday","NextTurnHalfPayDay","NextTurnHalfPayDayCounter","StockInfo","ShareAmount","PlayerData","PlayerName","PlayerUID","AvatarID","IsBot","NoOfBusiness","CardFunctionality","HomeBasedAmount","BrickAndMortarAmount","ReceiveDoublePayDayAmount","TotalLocationsAmount","NoOfStocks","Cash","GoldCount","StockCount","MarketingAmount","LawyerStatus","IsBankrupt","BankruptAmount","SkippedLoanPayment","PlayerRollCounter","InitialCounterAssigned","isGameFinished","TotalScore","TotalHBCash","TotalBMCash","TotalGoldCash","TotalLoanBalance","TotalStocksCash","GameOver","IsActive","CanGiveProfitOnPayDay","UserIDForProfitPayDay","RollCounter","DiceTemp","DiceRoll","IsTweening","GamePlayReferenceManager","TurnCheckArray","BusinessLocationNodes","PassedPayDay","DoublePayDay","_nextTurnDoublePay","_nextTurnhalfPay","_skipNextTurn","_skipNextPayday","_skipHMNextPayday","_skipBMNextPayday","CardEventReceived","TurnInProgress","Backspaces","isGameOver","CardDisplaySetTimout","GameManager","Component","PlayerGameInfo","BotGameInfo","PlayerNode","Node","CameraNode","AllPlayerUI","AllPlayerNodes","StartLocationNodes","SelectedMode","statics","Instance","SetPlayerLeft","_state","ResetAllVariables","InputTestDice1","_val","InputTestDice2","onLoad","TurnNumber","TurnCompleted","CheckReferences","Get_MultiplayerController","GetSelectedMode","Init_GameManager","RandomCardIndex","CardCounter","CardDisplayed","require","Camera","getComponent","isCameraZooming","CheckSpectate","getPhotonRef","myRoom","getCustomProperty","Get_GameplayUIManager","ToggleLeaveRoomButton_SpectateModeUI","AllData","MaxPlayers","length","SyncAllData_SpectateManager","UpdateGameUI","InitialScreen_SpectateMode","StartNewBusiness_BusinessSetup","GetTurnNumber","GetMyIndex","myIndex","_actor","PhotonActor","customProperties","PlayerSessionData","_allActors","index","SyncDataToPlayerGameInfo","AssignPlayerGameUI","EnablePlayerNodes","CloseInitialScreen_SpectateMode","console","log","_toPos","Vec2","Get_SpaceManager","Data","ReferenceLocation","position","x","y","setPosition","_lastIndex","active","CheckTurnOnSpectateLeave_SpectateManager","TotalConnectedPlayers","myRoomActorCount","userID","setCustomProperty","ChangeTurn","RaiseEventForCard","_data","Get_MultiplayerSyncManager","RaiseEvent","ClearDisplayTimeout","clearTimeout","DisplayCardOnOthers","OnLandedOnSpace","setTimeout","ResetCardDisplay","ReceiveEventForCard","RandomCard","randomCard","counter","RaiseEventTurnComplete","RoomEssentials","IsSpectate","SyncAllData","RemoveFromCheckArray","_uid","_ind","splice","CheckTurnComplete","j","ReceiveEventTurnComplete","push","ArrayLength","IDFound","ResetSomeValues","ChangeTurnForcefully","UpdateVisualData","RefreshDataAutomatically","TurnHandler","_turn","_isMaster","CheckCurrentActiveMasterClient","_playerMatched","ToggleTurnProgress","ToggleDecision_TurnDecision","ResetTurnVariable","RollDice","DiceRollScreen","PlayerInfo","myRoomActorsArray","ShowToast","ToggleSkipNextTurn","MainSessionData","MyData","_counter","StartTurn","ReceiveBankruptData","_isBankrupted","bankrupted","turn","_playerData","PlayerDataMain","StartTurnAfterBankrupt","_randomIndex","getRandom","SetName","SetAvatar","_toggleHighlight","_index","ToggleBGHighlighter","ToggleTextighlighter","children","Sprite","spriteFrame","AvatarSprites","SetFollowCameraProperties","targetPos","convertToWorldSpaceAR","parent","convertToNodeSpaceAR","ratio","winSize","height","zoomRatio","lateUpdate","syncDiceRoll","_roll","_dice1","dice1","_dice2","dice2","_result","error","PrintDiceValue_TurnDecision","AnimateDice","DiceFuntionality","_pos","TweenCamera","TempCheckSpace","_rolling","tempcounter","tempcounter2","dicetobe","parseInt","SpaceData","SpacesType","Dice1","Dice2","_newRoll","RollOneDice","RollTwoDices","PopulateDecksArray","_isBigBusiness","_isLosses","_isMarketing","_isWildCard","sort","Math","random","_tempData","BigArray","LossArray","MarketArray","WildArrya","GetBigBusinessIndex","GetLossesIndex","GetMarketingIndex","GetWildCardIndex","UpdateCounters","MarketingArrayCounterv","SelectRelatedCard","callUponCard","_spaceID","StartDiceRoll","SendingData","isBot","completeCardTurn","AllPlayersGameCompleted","CallGameComplete","_isBot","_forceGameOver","_playerIndex","_cash","HMAmount","Get_GameManager","BMAmount","BMLocations","loanAmount","_gold","_stocks","_diceRandom","OnceOrShare","GoldCash","StockCash","BMCash","HMCash","TotalAssets","RaiseEventForGameComplete","RaiseEventToSyncGameCompleteData","SyncGameOver","_UID","infoText","statusText","DisconnectData","ShowResultScreen","_currentCash","Get_ServerBackend","StudentData","gameCash","_total","toString","_won","gamesWon","UpdateUserData","SyncGameCompleteData","Bot","ZoomCameraOutOnly","max","SelectedInd","SessionData","_value","trace","playercompleted","ZoomCameraOut","TweenPlayer","min","floor","isZoom","time","tween","to","v2","easing","call","ZoomCameraIn","start","CheckPayDayConditions","ProcessPayDay_TurnDecision","ToPos","speed","_newpos","TogglePayDay","_st1","_St2","IncreaseDoublePayDay","ExpandBusiness_TurnDecision","amount","_locationName","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","OnExpandButtonExitClicked_TurnDecision","GenerateExpandBusiness_Prefabs_TurnDecision","i","node","instantiate","TurnDecisionSetupUI","ExpandBusinessPrefab","ExpandBusinessScrollContent","SetBusinessIndex","SetCardFunctionality","SetGivenCash","SetStartAnyBusinessWithoutCash","ResetEditBox","DestroyGeneratedNodes","destroy","UpdateStocks_TurnDecision","_name","_ShareAmount","_isAdding","_stock","_isDoublePayDay","_forSelectedBusiness","_SelectedBusinessIndex","HBAmount","_title","AssignData_PayDay","ToggleSkipPayDay_Whole","Bankrupt_TurnDecision","SendProfit_Partner_TurnDecision","_amount","_uID","ID","ReceiveProfit_Partner_TurnDecision","_iD","_myIndex","ToggleDoublePayNextTurn","ToggleHalfPayNextTurn","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","ReturnTurnProgress","LoseAllMarketingMoney","_loseAmount","MultiplyMarketingMoney","_multiplier","_amountIncreased","GetMarketingMoney","_profit","GetVocabularyQuestionsIndex","PopulateOneQuestionArray_Vocabulary","GetEstablishmentQuestionsIndex","PopulateOneQuestionArray_Establishment","VocArray","EstArray","QuestionPopUp_OtherUser_OneQuestion","_questionRef","Get_QuestionsData","_userID","UserID","_questionIndex","Question","UserIndex","_isVoc","IsVoc","_gameplayUIManager","ToggleDecisionScreen_OneQuestionSetupUI","_Qdata","CorrectOption","_message","Option1","Option2","Option3","Option4","SetUpDecisionScreen_OneQuestionSetupUI","OneQuestionScreen_Space_OneQuestion","_isTurnOver","_myData","_roomData","ToggleSpaceScreen_OneQuestionSetupUI","ResetSpaceScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","OneQuestionDecision_SelectOption_OneQuestion","event","_selection","currentTarget","split","RaiseEventDecision_OneQuestion","SelectPlayerProfit_Space_CardFunctionality","ToggleScreen_SelectPlayerForProfit","ResetSpaceScreen_SelectPlayerForProfit","SetUpSpaceScreen_SelectPlayerForProfit","ReceiveEvent_SelectPlayerForProfit_Space_CardFunctionality","_ownID","_playerName","UserName","_playerID","OwnPlayerID","_hasDonePayment","_hasAnsweredQuestion","_UserID","PaymentDone","QuestionAnswered","QuestionIndex","ReceiveEventDecision_OneQuestion","ToggleWaitingScreen_OneQuestionSetupUI","_selectedPlayerIndex","_actorsData","ReceiveGoBackSpacesData_spaceFunctionality","_spaces","backspaces","Counter","TweenPlayer_GoBackSpaces","GoBackSpaces_spaceFunctionality","module","exports"],"mappings":"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","sourceRoot":"/","sourcesContent":["var _isTest = true;\r\nvar _diceinput1 = \"\";\r\nvar _diceinput2 = \"\";\r\nvar PreviousDiceRoll1 = -1;\r\nvar PreviousDiceRoll2 = -1;\r\n\r\nvar PreviousDiceRoll3 = -1;\r\nvar PreviousDiceRoll4 = -1;\r\n\r\nvar PreviousDiceRoll5 = -1;\r\n\r\nvar userGameOver = false;\r\nvar BotGameOver = false;\r\nvar TotalCounterReached = false;\r\nvar PassedPayDayCounter = 0;\r\nvar DoublePayDayCounter = 0;\r\nvar NoCardFunctionality = false;\r\nvar PlayerLeft = false;\r\nvar ForceChangeTimeOut = null;\r\nvar GameCompleted = false;\r\nvar CorrectAnswer = 0;\r\n\r\nvar VocabularyQuestions = [];\r\nvar EstablishmentQuestions = [];\r\nvar VocabularyQuestionsCounter = 0;\r\nvar EstablishmentQuestionsCounter = 0;\r\n\r\nvar BigBusinessArray = [];\r\nvar LossesArray = [];\r\nvar MarketingArray = [];\r\nvar WildCardArray = [];\r\nvar BigBusinessArrayCounter = 0;\r\nvar LossesArrayCounter = 0;\r\nvar MarketingArrayCounter = 0;\r\nvar WildCardArrayCounter = 0;\r\n\r\n//#region superclasses and enumerations\r\n//-------------------------------------------enumeration for type of business-------------------------//\r\nvar EnumBusinessType = cc.Enum({\r\n  None: 0,\r\n  HomeBased: 1, //a business that you operate out of your home\r\n  brickAndmortar: 2, //a store front business\r\n});\r\n\r\n//-------------------------------------------class for BusinessInfo-------------------------//\r\nvar BusinessInfo = cc.Class({\r\n  name: \"BusinessInfo\",\r\n  properties: {\r\n    Name: \"BusinessData\",\r\n    BusinessType: {\r\n      displayName: \"Mode\",\r\n      type: EnumBusinessType,\r\n      default: EnumBusinessType.None,\r\n      serializable: true,\r\n      tooltip: \"Business catogory for players\",\r\n    },\r\n    BusinessTypeDescription: {\r\n      displayName: \"Type\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"Type (by name) of business player is opening\",\r\n    },\r\n    BusinessName: {\r\n      displayName: \"Name\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"Name of the business player is opening\",\r\n    },\r\n    Amount: {\r\n      displayName: \"Amount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"balance of business\",\r\n    },\r\n    IsPartnership: {\r\n      displayName: \"IsPartnership\",\r\n      default: false,\r\n      typw: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has done partnership with someone with current business\",\r\n    },\r\n    PartnerID: {\r\n      displayName: \"PartnerID\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"ID of the partner with whom player has formed partnership\",\r\n    },\r\n    PartnerName: {\r\n      displayName: \"PartnerName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the partner with whom player has formed partnership\",\r\n    },\r\n    LocationsName: {\r\n      displayName: \"LocationsName\",\r\n      type: [cc.Text],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"if player owns brick and mortar he/she can expand to new location\",\r\n    },\r\n    LoanTaken: {\r\n      displayName: \"LoanTaken\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    ReceiveDoublePayDay: {\r\n      displayName: \"ReceiveDoublePayDay\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for CardData-------------------------//\r\nvar CardDataFunctionality = cc.Class({\r\n  name: \"CardDataFunctionality\",\r\n  properties: {\r\n    NextTurnDoublePay: {\r\n      displayName: \"NextTurnDoublePay\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if its going to be double pay day on next payday for current player\",\r\n    },\r\n    SkipNextTurn: {\r\n      displayName: \"SkipNextTurn\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if turn is going to skipped on next turn for current player\",\r\n    },\r\n    SkipNextPayday: {\r\n      displayName: \"SkipNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday is going to skipped on next payday for current player\",\r\n    },\r\n    SkipHMNextPayday: {\r\n      displayName: \"SkipHMNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday for home based buisiness is going to skipped on next payday for current player\",\r\n    },\r\n    SkipBMNextPayday: {\r\n      displayName: \"SkipBMNextPayday\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n      tooltip: \"keep track if payday for bricka and mmortar buisiness is going to skipped on next payday for current player\",\r\n    },\r\n    NextTurnHalfPayDay: {\r\n      displayName: \"NextTurnHalfPayDay\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    NextTurnHalfPayDayCounter: {\r\n      displayName: \"NextTurnHalfPayDayCounter\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for StockInfo-------------------------//\r\nvar StockInfo = cc.Class({\r\n  name: \"StockInfo\",\r\n  properties: {\r\n    Name: \"StockData\",\r\n    BusinessName: {\r\n      displayName: \"BusinessName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the business in which stocks will be held\",\r\n    },\r\n    ShareAmount: {\r\n      displayName: \"ShareAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"Share amount of the stock\",\r\n    },\r\n  },\r\n\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for  Player Data-------------------------//\r\nvar PlayerData = cc.Class({\r\n  name: \"PlayerData\",\r\n  properties: {\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"name of the player\",\r\n    },\r\n    PlayerUID: {\r\n      displayName: \"PlayerUID\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n      tooltip: \"ID of the player\",\r\n    },\r\n    AvatarID: {\r\n      displayName: \"AvatarID\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"id reference for player avatar selection\",\r\n    },\r\n    IsBot: {\r\n      displayName: \"IsBot\",\r\n      default: false,\r\n      typw: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if current player is bot\",\r\n    },\r\n    NoOfBusiness: {\r\n      displayName: \"Business\",\r\n      type: [BusinessInfo],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Number of business a player can own\",\r\n    },\r\n    CardFunctionality: {\r\n      displayName: \"CardFunctionality\",\r\n      type: CardDataFunctionality,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"card functionality stored by player\",\r\n    },\r\n    HomeBasedAmount: {\r\n      displayName: \"HomeBasedAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of home based business a player owns\",\r\n    },\r\n    BrickAndMortarAmount: {\r\n      displayName: \"BrickAndMortarAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of brick and mortar business a player owns\",\r\n    },\r\n    ReceiveDoublePayDayAmount: {\r\n      displayName: \"ReceiveDoublePayDayAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalLocationsAmount: {\r\n      displayName: \"TotalLocationsAmount\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n      tooltip: \"number of locations of all brick and mortar businessess\",\r\n    },\r\n    NoOfStocks: {\r\n      displayName: \"Stocks\",\r\n      type: [StockInfo],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Number of stock a player owns\",\r\n    },\r\n    Cash: {\r\n      displayName: \"PlayerCash\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"Amount of cash player owns\",\r\n    },\r\n    GoldCount: {\r\n      displayName: \"GoldCount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"count of gold a player owns\",\r\n    },\r\n    StockCount: {\r\n      displayName: \"StockCount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"count of stocks a player owns\",\r\n    },\r\n    LoanTaken: {\r\n      displayName: \"LoanTaken\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has taken loan from bank or not\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"Amount of loan taken from the bank\",\r\n    },\r\n    MarketingAmount: {\r\n      displayName: \"MarketingAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"marketing amount a player owns\",\r\n    },\r\n    LawyerStatus: {\r\n      displayName: \"LawyerStatus\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has hired a lawyer or not\",\r\n    },\r\n    IsBankrupt: {\r\n      displayName: \"IsBankrupt\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has been Bankrupted or not\",\r\n    },\r\n    BankruptAmount: {\r\n      displayName: \"BankruptAmount\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"keep track how much time player has been bankrupted\",\r\n    },\r\n    SkippedLoanPayment: {\r\n      displayName: \"SkippedLoanPayment\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n      tooltip: \"Check if player has skipped loan payment\",\r\n    },\r\n    PlayerRollCounter: {\r\n      displayName: \"PlayerRollCounter\",\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"integer to store roll countor for player\",\r\n    },\r\n    InitialCounterAssigned: {\r\n      displayName: \"InitialCounterAssigned\",\r\n      default: false,\r\n      type: cc.Boolean,\r\n      serializable: true,\r\n    },\r\n    isGameFinished: {\r\n      displayName: \"isGameFinished\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    TotalScore: {\r\n      displayName: \"TotalScore\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalHBCash: {\r\n      displayName: \"TotalHBCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalBMCash: {\r\n      displayName: \"TotalBMCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalGoldCash: {\r\n      displayName: \"TotalGoldCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalLoanBalance: {\r\n      displayName: \"TotalLoanBalance\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    TotalStocksCash: {\r\n      displayName: \"TotalStocksCash\",\r\n      type: cc.Integer,\r\n      default: 0,\r\n      serializable: true,\r\n    },\r\n    GameOver: {\r\n      displayName: \"GameOver\",\r\n      type: cc.Boolean,\r\n      default: false,\r\n      serializable: true,\r\n    },\r\n    IsActive: {\r\n      displayName: \"IsActive\",\r\n      type: cc.Boolean,\r\n      default: true,\r\n      serializable: true,\r\n    },\r\n    CanGiveProfitOnPayDay: {\r\n      displayName: \"CanGiveProfitOnPayDay\",\r\n      type: cc.Boolean,\r\n      default: true,\r\n      serializable: true,\r\n    },\r\n\r\n    UserIDForProfitPayDay: {\r\n      displayName: \"UserIDForProfitPayDay\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//#endregion\r\n\r\n//#region Game Manager Class\r\n//-------------------------------------------(main class) class for Game Manager-------------------------//\r\nvar RollCounter = 0;\r\nvar DiceTemp = 0;\r\nvar DiceRoll = 0;\r\nvar IsTweening = false;\r\nvar GamePlayReferenceManager = null;\r\nvar TurnCheckArray = [];\r\nvar BusinessLocationNodes = [];\r\n\r\nvar PassedPayDay = false;\r\nvar DoublePayDay = false;\r\n\r\n//cards functionality\r\nvar _nextTurnDoublePay = false;\r\nvar _nextTurnhalfPay = false;\r\nvar _skipNextTurn = false;\r\nvar _skipNextPayday = false; //skip whole pay day\r\nvar _skipHMNextPayday = false; //skip pay day for home based businessess only\r\nvar _skipBMNextPayday = false; //skip pay day for brick & mortar businessess only\r\nvar CardEventReceived = false;\r\nvar TurnInProgress = false;\r\n\r\nvar Backspaces = 3;\r\nvar isGameOver = false;\r\n\r\nvar CardDisplaySetTimout = null;\r\n\r\nvar GameManager = cc.Class({\r\n  name: \"GameManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    PlayerGameInfo: {\r\n      default: [],\r\n      type: [PlayerData],\r\n      serializable: true,\r\n      tooltip: \"all player's data\",\r\n    },\r\n    BotGameInfo: {\r\n      default: [],\r\n      type: [PlayerData],\r\n      serializable: true,\r\n      tooltip: \"all bot's data\",\r\n    },\r\n    PlayerNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for player\",\r\n    },\r\n    CameraNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for camera\",\r\n    },\r\n    AllPlayerUI: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of ui of all players\",\r\n    },\r\n    AllPlayerNodes: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of node of all players inside gameplay\",\r\n    },\r\n    StartLocationNodes: {\r\n      default: [],\r\n      type: [cc.Node],\r\n      serializable: true,\r\n      tooltip: \"Node reference of attay of locations\",\r\n    },\r\n    SelectedMode: {\r\n      default: 0,\r\n      type: cc.Integer,\r\n      serializable: true,\r\n      tooltip: \"integer reference for game mode 1 means bot and 2 means real players\",\r\n    },\r\n  },\r\n\r\n  statics: {\r\n    PlayerData: PlayerData,\r\n    BusinessInfo: BusinessInfo,\r\n    CardDataFunctionality: CardDataFunctionality,\r\n    EnumBusinessType: EnumBusinessType,\r\n    Instance: null,\r\n  },\r\n\r\n  SetPlayerLeft(_state) {\r\n    PlayerLeft = _state;\r\n  },\r\n\r\n  ResetAllVariables() {\r\n    VocabularyQuestions = [];\r\n    EstablishmentQuestions = [];\r\n    VocabularyQuestionsCounter = 0;\r\n    EstablishmentQuestionsCounter = 0;\r\n\r\n    BigBusinessArray = [];\r\n    LossesArray = [];\r\n    MarketingArray = [];\r\n    WildCardArray = [];\r\n    BigBusinessArrayCounter = 0;\r\n    LossesArrayCounter = 0;\r\n    MarketingArrayCounter = 0;\r\n    WildCardArrayCounter = 0;\r\n\r\n    _diceinput1 = \"\";\r\n    _diceinput2 = \"\";\r\n    PreviousDiceRoll1 = -1;\r\n    PreviousDiceRoll2 = -1;\r\n    PlayerLeft = false;\r\n    PreviousDiceRoll3 = -1;\r\n    PreviousDiceRoll4 = -1;\r\n    _nextTurnhalfPay = false;\r\n    PreviousDiceRoll5 = -1;\r\n    GameCompleted = false;\r\n    userGameOver = false;\r\n    BotGameOver = false;\r\n    CorrectAnswer = 0;\r\n    RollCounter = 0;\r\n    DiceTemp = 0;\r\n    DiceRoll = 0;\r\n    IsTweening = false;\r\n    GamePlayReferenceManager = null;\r\n    TurnCheckArray = [];\r\n    BusinessLocationNodes = [];\r\n    ForceChangeTimeOut = null;\r\n    PassedPayDay = false;\r\n    DoublePayDay = false;\r\n    PassedPayDayCounter = 0;\r\n    DoublePayDayCounter = 0;\r\n\r\n    //cards functionality\r\n    _nextTurnDoublePay = false;\r\n    _skipNextTurn = false;\r\n    _skipNextPayday = false; //skip whole pay day\r\n    _skipHMNextPayday = false; //skip pay day for home based businessess only\r\n    _skipBMNextPayday = false; //skip pay day for brick & mortar businessess only\r\n    CardEventReceived = false;\r\n    TurnInProgress = false;\r\n\r\n    Backspaces = 3;\r\n    isGameOver = false;\r\n\r\n    CardDisplaySetTimout = null;\r\n    TotalCounterReached = false;\r\n    NoCardFunctionality = false;\r\n  },\r\n\r\n  InputTestDice1(_val) {\r\n    if (_isTest) {\r\n      _diceinput1 = _val;\r\n    }\r\n  },\r\n\r\n  InputTestDice2(_val) {\r\n    if (_isTest) {\r\n      _diceinput2 = _val;\r\n    }\r\n  },\r\n\r\n  //#region All Functions of GameManager\r\n\r\n  /**\r\n    @summary called when instance of class is created\r\n   **/\r\n  onLoad() {\r\n    this.ResetAllVariables();\r\n    GameManager.Instance = this;\r\n    this.TurnNumber = 0;\r\n    this.TurnCompleted = false;\r\n    TurnCheckArray = [];\r\n    this.CheckReferences();\r\n    this.SelectedMode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    this.Init_GameManager();\r\n\r\n    this.RandomCardIndex = 0;\r\n    this.CardCounter = 0;\r\n    this.CardDisplayed = false;\r\n    CardEventReceived = false;\r\n  },\r\n\r\n  /**\r\n    @summary called to assign reference of required classes\r\n   **/\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  /**\r\n    @summary initial gamemanager essetials\r\n   **/\r\n  Init_GameManager() {\r\n    this.Camera = this.CameraNode.getComponent(cc.Camera);\r\n    this.isCameraZooming = false;\r\n    this.PlayerGameInfo = [];\r\n    RollCounter = 0;\r\n    DiceTemp = 0;\r\n    DiceRoll = 0;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //game is being played by real players\r\n      //if joined player is spectate\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == true) {\r\n        //console.log(\"status of initial business setp: \"+GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\"));\r\n\r\n        //if inital setup has been done and game is under way\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"InitialSetup\") == true) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n          var AllData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n          this.PlayerGameInfo = AllData;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = this.PlayerGameInfo.length;\r\n          this.SyncAllData_SpectateManager();\r\n          this.TurnNumber = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"TurnNumber\");\r\n          this.UpdateGameUI(true, this.TurnNumber);\r\n          //console.log(this.PlayerGameInfo);\r\n          //this.SyncDataToPlayerGameInfo(0);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = 8;\r\n          //this.EnablePlayerNodes();\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleLeaveRoomButton_SpectateModeUI(true);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().InitialScreen_SpectateMode();\r\n        }\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode);\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //game is being played by bot along with one player\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode);\r\n    }\r\n  },\r\n\r\n  //#region public functions to get data (accessible from other classes)\r\n  GetTurnNumber() {\r\n    return this.TurnNumber;\r\n  },\r\n\r\n  /**\r\n    @summary get my index in array of PlayerGameInfo \r\n   **/\r\n  GetMyIndex() {\r\n    var myIndex = 0;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _allActors = this.PlayerGameInfo;\r\n\r\n    for (let index = 0; index < _allActors.length; index++) {\r\n      if (_actor.PlayerUID == _allActors[index].PlayerUID) {\r\n        myIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return myIndex;\r\n  },\r\n  //#endregion\r\n\r\n  //#region SpectateMode Code\r\n\r\n  SyncAllData_SpectateManager() {\r\n    var AllData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().getCustomProperty(\"PlayerGameInfo\");\r\n    this.PlayerGameInfo = AllData;\r\n    this.SyncDataToPlayerGameInfo(0);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = this.PlayerGameInfo.length;\r\n    this.AssignPlayerGameUI();\r\n    this.EnablePlayerNodes();\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().CloseInitialScreen_SpectateMode();\r\n\r\n    console.log(\"syncing all data for spectate\");\r\n    for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n      if (this.PlayerGameInfo[index].PlayerRollCounter > 0 && this.PlayerGameInfo[index].InitialCounterAssigned == true && !this.PlayerGameInfo[index].isGameFinished) {\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.PlayerGameInfo[index].PlayerRollCounter].ReferenceLocation.position.y);\r\n        this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n        console.log(\"setting pos1\");\r\n      } else {\r\n        console.log(\"player counter: \" + this.PlayerGameInfo[index].PlayerRollCounter);\r\n        console.log(\"Initial Counter Assigned: \" + this.PlayerGameInfo[index].InitialCounterAssigned);\r\n        console.log(\"game finished : \" + this.PlayerGameInfo[index].isGameFinished);\r\n      }\r\n\r\n      if (this.PlayerGameInfo[index].isGameFinished) {\r\n        var _lastIndex = GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length - 1;\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_lastIndex].ReferenceLocation.position.y);\r\n        this.AllPlayerNodes[index].setPosition(_toPos.x, _toPos.y);\r\n        console.log(\"setting pos2\");\r\n      }\r\n    }\r\n\r\n    //console.log(\"synced playernodes\");\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerNodes[index].active = true;\r\n    }\r\n  },\r\n\r\n  CheckTurnOnSpectateLeave_SpectateManager() {\r\n    var TotalConnectedPlayers = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorCount();\r\n    if (TurnCheckArray.length == TotalConnectedPlayers) {\r\n      TurnCheckArray = [];\r\n      this.TurnCompleted = true;\r\n      console.log(\"reseting for spectate\");\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n        this.ChangeTurn();\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(\"Change Turn is called by: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region functions related to Turn Mechanism and card mechanism\r\n\r\n  /**\r\n    @summary raised event on all connected clients to let others know a what card has been selected by player\r\n   **/\r\n  RaiseEventForCard(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(5, _data);\r\n  },\r\n\r\n  ClearDisplayTimeout() {\r\n    clearTimeout(CardDisplaySetTimout);\r\n  },\r\n\r\n  DisplayCardOnOthers() {\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      console.log(\"card event received: \" + CardEventReceived);\r\n      if (CardEventReceived == true) {\r\n        clearTimeout(CardDisplaySetTimout);\r\n        //console.error(this.CardCounter);\r\n        CardEventReceived = false;\r\n        if (!this.CardDisplayed) {\r\n          this.CardDisplayed = true;\r\n          GamePlayReferenceManager.Instance.Get_SpaceManager().Data[this.CardCounter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(false, this.RandomCardIndex);\r\n        }\r\n      } else {\r\n        CardDisplaySetTimout = setTimeout(() => {\r\n          //check after every 0.5 seconds\r\n          this.DisplayCardOnOthers();\r\n        }, 1000);\r\n      }\r\n    }\r\n  },\r\n\r\n  ResetCardDisplay() {\r\n    this.CardDisplayed = false;\r\n  },\r\n\r\n  ReceiveEventForCard(_data) {\r\n    this.CheckReferences();\r\n    console.log(\"Card Data Received:\");\r\n    console.log(_data);\r\n\r\n    var RandomCard = _data.randomCard;\r\n    var counter = _data.counter;\r\n\r\n    this.RandomCardIndex = RandomCard;\r\n    this.CardCounter = counter;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n        GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(true, RandomCard);\r\n      else CardEventReceived = true;\r\n    } else if (this.SelectedMode == 1) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].IsBot == false) GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(true, RandomCard);\r\n      else GamePlayReferenceManager.Instance.Get_SpaceManager().Data[counter].ReferenceLocation.getComponent(\"SpaceHandler\").OnLandedOnSpace(false, RandomCard, true);\r\n    }\r\n\r\n    // console.error(CardEventReceived);\r\n  },\r\n\r\n  /**\r\n    @summary raised event on all connected clients to let others know a particular player has complete their move\r\n   **/\r\n  RaiseEventTurnComplete() {\r\n    if (this.SelectedMode == 2) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4, GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID);\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      console.log(\"raised for turn complete\");\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(4, this.PlayerGameInfo[this.TurnNumber].PlayerUID);\r\n    }\r\n  },\r\n\r\n  SyncAllData() {\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[this.TurnNumber]);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", this.PlayerGameInfo, true);\r\n    }\r\n  },\r\n\r\n  RemoveFromCheckArray(_uid) {\r\n    if (this.SelectedMode == 2) {\r\n      var _ind = -1;\r\n\r\n      for (let index = 0; index < TurnCheckArray.length; index++) {\r\n        if (TurnCheckArray[index] == _uid) _ind = index;\r\n      }\r\n\r\n      if (_ind != -1) {\r\n        console.log(\"removing from turn check array\");\r\n        TurnCheckArray.splice(_ind, 1);\r\n      }\r\n    }\r\n  },\r\n\r\n  CheckTurnComplete() {\r\n    var TotalConnectedPlayers = 0;\r\n\r\n    for (let j = 0; j < this.PlayerGameInfo.length; j++) {\r\n      if (this.PlayerGameInfo[j].IsActive) TotalConnectedPlayers++;\r\n    }\r\n\r\n    console.log(\"Turn Check: \" + TurnCheckArray.length);\r\n    console.log(\"Total Connected Players: \" + TotalConnectedPlayers);\r\n    console.log(TurnCheckArray);\r\n\r\n    if (TurnCheckArray.length >= TotalConnectedPlayers) {\r\n      TurnCheckArray = [];\r\n      this.TurnCompleted = true;\r\n\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        //this.SyncAllData();\r\n        this.ChangeTurn();\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(\"Change Turn is called by: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called on all players to validate if move is completed on all connected clients\r\n   **/\r\n  ReceiveEventTurnComplete(_uid) {\r\n    if (this.SelectedMode == 2) {\r\n      //real players\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        if (TurnCheckArray.length == 0) TurnCheckArray.push(_uid);\r\n\r\n        var ArrayLength = TurnCheckArray.length;\r\n        var IDFound = false;\r\n        for (let index = 0; index < ArrayLength; index++) {\r\n          if (TurnCheckArray[index] == _uid) IDFound = true;\r\n        }\r\n\r\n        if (!IDFound) {\r\n          TurnCheckArray.push(_uid);\r\n        }\r\n\r\n        this.CheckTurnComplete();\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      this.TurnCompleted = true;\r\n      this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n      this.ChangeTurn();\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called when dice animation is played on all players\r\n   **/\r\n  ChangeTurn() {\r\n    if (this.SelectedMode == 2) {\r\n      this.SyncAllData();\r\n    }\r\n\r\n    if (this.TurnNumber < this.PlayerGameInfo.length - 1) this.TurnNumber = this.TurnNumber + 1;\r\n    else this.TurnNumber = 0;\r\n\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2, this.TurnNumber);\r\n  },\r\n\r\n  ResetSomeValues() {\r\n    //TurnCheckArray = [];\r\n    //this.TurnCompleted = true;\r\n  },\r\n\r\n  ChangeTurnForcefully() {\r\n    if (IsTweening) {\r\n      clearTimeout(ForceChangeTimeOut);\r\n      ForceChangeTimeOut = setTimeout(() => {\r\n        this.ChangeTurnForcefully();\r\n      }, 1000);\r\n    } else {\r\n      clearTimeout(ForceChangeTimeOut);\r\n      this.ChangeTurn();\r\n    }\r\n  },\r\n\r\n  UpdateVisualData() {\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called from raise on event (from function \"StartTurn\" and \"ChangeTurn\" of this same class) to handle turn\r\n   **/\r\n  TurnHandler(_turn) {\r\n    if (this.SelectedMode == 2) {\r\n      var _isMaster = GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckCurrentActiveMasterClient();\r\n      if (!this.PlayerGameInfo[_turn].IsActive) {\r\n        if (_isMaster) {\r\n          this.ChangeTurn();\r\n          return;\r\n        } else {\r\n          return;\r\n        }\r\n      }\r\n    }\r\n\r\n    //this.ClearDisplayTimeout();\r\n    this.UpdateVisualData();\r\n    console.log(\"Turn: \" + _turn);\r\n    var _playerMatched = false;\r\n    _skipNextTurn = false;\r\n    if (IsTweening) {\r\n      //check if animation of turn being played on other players\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n        IsTweening = false;\r\n      }\r\n\r\n      setTimeout(() => {\r\n        if (!isGameOver) {\r\n          this.TurnHandler(_turn);\r\n        }\r\n      }, 800);\r\n    } else {\r\n      this.TurnNumber = _turn;\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n            this.ToggleTurnProgress(true);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n                IsTweening = false;\r\n              }, 1000);\r\n              console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n          }\r\n        } else {\r\n          this.ToggleTurnProgress(false);\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        // console.log(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n        // console.log(this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn);\r\n        // console.log(userGameOver);\r\n        if (this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!userGameOver) {\r\n            this.ToggleTurnProgress(true);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                IsTweening = false;\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n                GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n              }, 1000);\r\n              console.log(\"its your turn \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n            }\r\n          }\r\n        } //turn decisions for bot\r\n        else {\r\n          _playerMatched = true;\r\n          _skipNextTurn = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn;\r\n          if (!BotGameOver) {\r\n            this.ToggleTurnProgress(false);\r\n            if (!_skipNextTurn) {\r\n              setTimeout(() => {\r\n                IsTweening = false;\r\n                this.RollDice();\r\n              }, 1000);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n      for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      }\r\n\r\n      if (this.SelectedMode == 2) {\r\n        //for real players\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n        console.log(\"Turn Of: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        console.log(this.AllPlayerUI[this.TurnNumber].getComponent(\"PlayerProfileManager\").PlayerInfo);\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor());\r\n        console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray());\r\n        this.SyncDataToPlayerGameInfo(0);\r\n\r\n        //force sync spectator after completion of each turn\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n      }\r\n\r\n      //skip this turn as skip turn has been called before\r\n      if (_playerMatched && _skipNextTurn) {\r\n        IsTweening = false;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping current turn\", 1200);\r\n        this.ToggleSkipNextTurn(false);\r\n        this.ChangeTurn();\r\n        this.ToggleTurnProgress(false);\r\n        return;\r\n      }\r\n\r\n      if (_playerMatched && this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n        setTimeout(() => {\r\n          IsTweening = false;\r\n          this.ChangeTurn();\r\n          this.ToggleTurnProgress(false);\r\n          return;\r\n        }, 500);\r\n      }\r\n    }\r\n  },\r\n\r\n  SyncDataToPlayerGameInfo(_ind) {\r\n    var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n    var MyData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _counter = _ind;\r\n    // console.log(this.PlayerGameInfo[_counter].PlayerUID);\r\n    //  console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n\r\n    for (let index = 0; index < MainSessionData.length; index++) {\r\n      if (this.PlayerGameInfo[_counter].IsActive == false) {\r\n        if (_counter < this.PlayerGameInfo.length - 1) {\r\n          _counter++;\r\n          this.SyncDataToPlayerGameInfo(_counter);\r\n        } else {\r\n          console.log(\"synced Data:\");\r\n          console.log(this.PlayerGameInfo);\r\n        }\r\n      } else {\r\n        if (this.PlayerGameInfo[_counter].PlayerUID == MainSessionData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n          this.PlayerGameInfo[_counter] = MainSessionData[index].customProperties.PlayerSessionData;\r\n\r\n          if (_counter < this.PlayerGameInfo.length - 1) {\r\n            _counter++;\r\n            //console.log(\"adding counter: \"+_counter);\r\n            this.SyncDataToPlayerGameInfo(_counter);\r\n          } else {\r\n            console.log(\"synced Data:\");\r\n            console.log(this.PlayerGameInfo);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called when all players have done their initial setup and first turn starts\r\n    @method StartTurn\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  StartTurn() {\r\n    console.log(this.PlayerGameInfo);\r\n    this.AssignPlayerGameUI();\r\n    this.EnablePlayerNodes();\r\n    this.TurnNumber = 0; //reseting the turn number on start of the game\r\n\r\n    //sending initial turn number over the network to start turn simultanously on all connected player's devices\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(2, this.TurnNumber);\r\n  },\r\n\r\n  ReceiveBankruptData(_data) {\r\n    //other player has been bankrupted\r\n    var _isBankrupted = _data.Data.bankrupted;\r\n    var _turn = _data.Data.turn;\r\n    var _playerData = _data.Data.PlayerDataMain;\r\n\r\n    console.log(_data);\r\n    // console.log(_isBankrupted);\r\n    // console.log(_turn);\r\n    // console.log(_playerData);\r\n\r\n    this.PlayerGameInfo[_turn] = _playerData;\r\n\r\n    this.AssignPlayerGameUI(true);\r\n    this.EnablePlayerNodes(true);\r\n\r\n    this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n      this.SyncDataToPlayerGameInfo(0);\r\n\r\n      //force sync spectator after completion of each turn\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n    }\r\n  },\r\n\r\n  StartTurnAfterBankrupt() {\r\n    this.AssignPlayerGameUI(true);\r\n    this.EnablePlayerNodes(true);\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleDecision_TurnDecision(true);\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ResetTurnVariable();\r\n    }, 1000);\r\n\r\n    this.UpdateGameUI(true, this.TurnNumber);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"TurnNumber\", this.TurnNumber, true);\r\n      this.SyncDataToPlayerGameInfo(0);\r\n\r\n      //force sync spectator after completion of each turn\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) this.SyncAllData_SpectateManager();\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Function for gameplay\r\n  /**\r\n    @summary called to assign player UI (name/icons/number of players that to be active etc)\r\n    @method AssignPlayerGameUI\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  AssignPlayerGameUI(_isBankrupted = false) {\r\n    if (this.SelectedMode == 1) {\r\n      //for bot\r\n      if (!_isBankrupted) {\r\n        var _randomIndex = this.getRandom(0, this.BotGameInfo.length);\r\n        this.PlayerGameInfo.push(this.BotGameInfo[_randomIndex]);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = 2;\r\n      }\r\n    }\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerUI[index].active = true;\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").PlayerInfo = this.PlayerGameInfo[index];\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").SetName(this.PlayerGameInfo[index].PlayerName);\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").SetAvatar(this.PlayerGameInfo[index].AvatarID);\r\n      this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n    }\r\n  },\r\n\r\n  UpdateGameUI(_toggleHighlight, _index) {\r\n    if (_toggleHighlight) {\r\n      this.AllPlayerUI[_index].getComponent(\"PlayerProfileManager\").PlayerInfo = this.PlayerGameInfo[_index];\r\n\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n        if (_index == index) {\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleBGHighlighter(true);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleTextighlighter(true);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n        } else {\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleBGHighlighter(false);\r\n          this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").ToggleTextighlighter(false);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n    @summary called to enbale respective players nodes inside gamaplay\r\n    @method EnablePlayerNodes\r\n    @param {string} none\r\n    @returns {boolean} no return\r\n   **/\r\n  EnablePlayerNodes(_isBankrupted = false) {\r\n    if (!_isBankrupted) {\r\n      for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n        if (this.PlayerGameInfo[index].HomeBasedAmount == 1 && !this.PlayerGameInfo[index].InitialCounterAssigned) this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[0].position.x, this.StartLocationNodes[0].position.y);\r\n        else if (this.PlayerGameInfo[index].BrickAndMortarAmount == 1 && !this.PlayerGameInfo[index].InitialCounterAssigned) this.AllPlayerNodes[index].setPosition(this.StartLocationNodes[1].position.x, this.StartLocationNodes[1].position.y);\r\n      }\r\n    } else {\r\n      if (this.PlayerGameInfo[this.TurnNumber].HomeBasedAmount == 1) this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[0].position.x, this.StartLocationNodes[0].position.y);\r\n      else if (this.PlayerGameInfo[this.TurnNumber].BrickAndMortarAmount == 1) this.AllPlayerNodes[this.TurnNumber].setPosition(this.StartLocationNodes[1].position.x, this.StartLocationNodes[1].position.y);\r\n    }\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers; index++) {\r\n      this.AllPlayerNodes[index].active = true;\r\n    }\r\n\r\n    for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n      this.AllPlayerNodes[index].children[0].getComponent(cc.Sprite).spriteFrame = GamePlayReferenceManager.Instance.Get_GameplayUIManager().AvatarSprites[this.PlayerGameInfo[index].AvatarID];\r\n    }\r\n  },\r\n\r\n  SetFollowCameraProperties() {\r\n    let targetPos = this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0, 120));\r\n    this.CameraNode.position = this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n\r\n    let ratio = targetPos.y / cc.winSize.height;\r\n    this.Camera.zoomRatio = 2;\r\n  },\r\n\r\n  lateUpdate() {\r\n    if (this.isCameraZooming) this.SetFollowCameraProperties();\r\n  },\r\n\r\n  syncDiceRoll(_roll) {\r\n    var _dice1 = _roll.dice1;\r\n    var _dice2 = _roll.dice2;\r\n    var _result = _dice1 + _dice2;\r\n\r\n    IsTweening = true;\r\n    this.CardDisplayed = false;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID == this.PlayerGameInfo[this.TurnNumber].PlayerUID) {\r\n          console.log(\"player matched:\" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n          this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter == 0 && !this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned) {\r\n      if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[0].BusinessType == 2) {\r\n        RollCounter = 0;\r\n        this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned = true;\r\n        console.error(RollCounter);\r\n      } else {\r\n        this.PlayerGameInfo[this.TurnNumber].InitialCounterAssigned = true;\r\n        RollCounter = 14;\r\n        console.error(RollCounter);\r\n      }\r\n    } else {\r\n      if (this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter == 13) this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter + 22;\r\n      else this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter + 1;\r\n\r\n      RollCounter = this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter;\r\n      console.error(RollCounter - 1);\r\n    }\r\n\r\n    DiceRoll = _result;\r\n    DiceTemp = 0;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(DiceRoll);\r\n\r\n    for (let index = 0; index < this.AllPlayerUI.length; index++) {\r\n      if (this.TurnNumber == index) {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = true;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.getComponent(\"DiceController\").AnimateDice(_dice1, _dice2);\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      } else {\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").DiceRollScreen.active = false;\r\n        this.AllPlayerUI[index].getComponent(\"PlayerProfileManager\").RefreshDataAutomatically();\r\n      }\r\n    }\r\n\r\n    // let targetPos=this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0,120));\r\n    // var _pos=this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n    // this.TweenCamera(_pos,true,0.4);\r\n  },\r\n\r\n  DiceFuntionality() {\r\n    let targetPos = this.AllPlayerNodes[this.TurnNumber].convertToWorldSpaceAR(cc.Vec2(0, 120));\r\n    var _pos = this.CameraNode.parent.convertToNodeSpaceAR(targetPos);\r\n    this.TweenCamera(_pos, true, 0.4);\r\n  },\r\n\r\n  TempCheckSpace(_rolling) {\r\n    var tempcounter = 0;\r\n    var tempcounter2 = 0;\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray().length; index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.Data.userID == this.PlayerGameInfo[this.TurnNumber].PlayerUID) {\r\n        //console.log(\"player matched:\"+this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n        tempcounter2 = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray()[index].customProperties.PlayerSessionData.PlayerRollCounter;\r\n      }\r\n    }\r\n\r\n    if (tempcounter2 - 1 < 0) {\r\n      console.error(\"starting from oblivion\");\r\n      tempcounter = tempcounter2 + _rolling - 1;\r\n      var dicetobe = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n      console.error(\"to be: \" + dicetobe);\r\n    } else {\r\n      tempcounter = tempcounter2 + _rolling;\r\n      var dicetobe = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[tempcounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n      console.error(\"to be: \" + dicetobe);\r\n    }\r\n  },\r\n\r\n  RollDice: function () {\r\n    if (!isGameOver) {\r\n      var Dice1;\r\n      var Dice2;\r\n      if (_isTest && this.PlayerGameInfo[this.TurnNumber].IsBot == false) {\r\n        Dice1 = parseInt(_diceinput1);\r\n        Dice2 = parseInt(_diceinput2);\r\n      } else if (this.PlayerGameInfo[this.TurnNumber].IsBot == true && _isTest) {\r\n        Dice1 = 1;\r\n        Dice2 = 1;\r\n      } else {\r\n        Dice1 = this.getRandom(1, 7);\r\n        Dice2 = this.getRandom(1, 7);\r\n\r\n        if (PreviousDiceRoll1 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n        if (PreviousDiceRoll2 == Dice2) Dice2 = this.getRandom(1, 7);\r\n\r\n        PreviousDiceRoll1 = Dice1;\r\n        PreviousDiceRoll2 = Dice2;\r\n      }\r\n\r\n      // var Dice1=20;\r\n      // var Dice2=1;\r\n\r\n      DiceRoll = Dice1 + Dice2;\r\n      var _newRoll = { dice1: Dice1, dice2: Dice2 };\r\n      //DiceRoll=23;\r\n      //this.TempCheckSpace(DiceRoll);\r\n      console.log(\"dice number: \" + DiceRoll + \", Dice1:\" + Dice1 + \", Dice2:\" + Dice2);\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(3, _newRoll);\r\n    }\r\n  },\r\n\r\n  RollOneDice() {\r\n    var Dice1 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll5 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n    PreviousDiceRoll5 = Dice1;\r\n\r\n    return Dice1;\r\n  },\r\n\r\n  RollTwoDices() {\r\n    var Dice1 = this.getRandom(1, 7);\r\n    var Dice2 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll3 == Dice1) Dice1 = this.getRandom(1, 7);\r\n\r\n    if (PreviousDiceRoll4 == Dice2) Dice2 = this.getRandom(1, 7);\r\n\r\n    PreviousDiceRoll3 = Dice1;\r\n    PreviousDiceRoll4 = Dice2;\r\n\r\n    return Dice1 + Dice2;\r\n  },\r\n\r\n  PopulateDecksArray(_isBigBusiness = false, _isLosses = false, _isMarketing = false, _isWildCard = false, _data = null) {\r\n    // BigBusinessArray = [];\r\n    // LossesArray = [];\r\n    // MarketingArray = [];\r\n    // WildCardArray = [];\r\n    // BigBusinessArrayCounter = 0;\r\n    // LossesArrayCounter = 0;\r\n    // MarketingArrayCounter = 0;\r\n    // WildCardArrayCounter = 0;\r\n\r\n    if (_isBigBusiness) {\r\n      if (_data == null) {\r\n        BigBusinessArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 10];\r\n\r\n        BigBusinessArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(BigBusinessArray);\r\n        BigBusinessArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: BigBusinessArray, LossArray: null, MarketArray: null, WildArrya: null };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    } else if (_isLosses) {\r\n      if (_data == null) {\r\n        LossesArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\r\n\r\n        LossesArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(LossesArray);\r\n        LossesArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: null, LossArray: LossesArray, MarketArray: null, WildArrya: null };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    } else if (_isMarketing) {\r\n      if (_data == null) {\r\n        MarketingArray = [0, 1, 2, 3, 4, 5, 7, 8, 9, 13];\r\n\r\n        MarketingArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(MarketingArray);\r\n        MarketingArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: null, LossArray: null, MarketArray: MarketingArray, WildArrya: null };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    } else if (_isWildCard) {\r\n      if (_data == null) {\r\n        WildCardArray = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n        WildCardArray.sort(() => 0.5 - Math.random());\r\n\r\n        console.log(WildCardArray);\r\n        WildCardArrayCounter = 0;\r\n\r\n        var _tempData = { BigArray: null, LossArray: null, MarketArray: null, WildArrya: WildCardArray };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(19, _tempData);\r\n      }\r\n    }\r\n\r\n    if (_data != null) {\r\n      if (_data.BigArray != null) {\r\n        BigBusinessArray = _data.BigArray;\r\n        console.log(BigBusinessArray);\r\n        BigBusinessArrayCounter = 0;\r\n      }\r\n\r\n      if (_data.LossArray != null) {\r\n        LossesArray = _data.LossArray;\r\n        console.log(LossesArray);\r\n        LossesArrayCounter = 0;\r\n      }\r\n\r\n      if (_data.MarketArray != null) {\r\n        MarketingArray = _data.MarketArray;\r\n        console.log(MarketingArray);\r\n        MarketingArrayCounter = 0;\r\n      }\r\n\r\n      if (_data.WildArrya != null) {\r\n        WildCardArray = _data.WildArrya;\r\n        console.log(WildCardArray);\r\n        WildCardArrayCounter = 0;\r\n      }\r\n    }\r\n  },\r\n\r\n  GetBigBusinessIndex(_index) {\r\n    var _val = -1;\r\n    if (BigBusinessArray.length > 0) {\r\n      if (BigBusinessArrayCounter < BigBusinessArray.length) {\r\n        _val = BigBusinessArray[BigBusinessArrayCounter];\r\n        BigBusinessArrayCounter++;\r\n        var _tempData = { BigArray: true, LossArray: false, MarketArray: false, WildArrya: false };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(true, false, false, false, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(true, false, false, false, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetLossesIndex(_index) {\r\n    var _val = -1;\r\n    if (LossesArray.length > 0) {\r\n      if (LossesArrayCounter < LossesArray.length) {\r\n        _val = LossesArray[LossesArrayCounter];\r\n        LossesArrayCounter++;\r\n        var _tempData = { BigArray: false, LossArray: true, MarketArray: false, WildArrya: false };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(false, true, false, false, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(false, true, false, false, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetMarketingIndex(_index) {\r\n    var _val = -1;\r\n    if (MarketingArray.length > 0) {\r\n      if (MarketingArrayCounter < MarketingArray.length) {\r\n        _val = MarketingArray[MarketingArrayCounter];\r\n        MarketingArrayCounter++;\r\n        var _tempData = { BigArray: false, LossArray: false, MarketArray: true, WildArrya: false };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(false, false, true, false, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(false, false, true, false, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetWildCardIndex(_index) {\r\n    var _val = -1;\r\n    if (WildCardArray.length > 0) {\r\n      if (WildCardArrayCounter < WildCardArray.length) {\r\n        _val = WildCardArray[WildCardArrayCounter];\r\n        WildCardArrayCounter++;\r\n        var _tempData = { BigArray: false, LossArray: false, MarketArray: false, WildArrya: true };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(20, _tempData);\r\n      } else {\r\n        this.PopulateDecksArray(false, false, false, true, null);\r\n      }\r\n    } else {\r\n      this.PopulateDecksArray(false, false, false, true, null);\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  UpdateCounters(_data = null) {\r\n    if (_data.BigArray) {\r\n      BigBusinessArrayCounter++;\r\n    }\r\n    if (_data.LossArray) {\r\n      LossesArrayCounter++;\r\n    }\r\n    if (_data.MarketArray) {\r\n      MarketingArrayCounterv++;\r\n    }\r\n    if (_data.WildArrya) {\r\n      WildCardArrayCounter++;\r\n    }\r\n  },\r\n\r\n  SelectRelatedCard(_isBigBusiness = false, _isLosses = false, _isMarketing = false, _isWildCard = false) {\r\n    if (_isBigBusiness) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetBigBusinessIndex();\r\n          if (index == -1) {\r\n            index = this.GetBigBusinessIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetBigBusinessIndex();\r\n        if (index == -1) {\r\n          index = this.GetBigBusinessIndex();\r\n        }\r\n        return index;\r\n      }\r\n    } else if (_isLosses) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetLossesIndex();\r\n          if (index == -1) {\r\n            index = this.GetLossesIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetLossesIndex();\r\n        if (index == -1) {\r\n          index = this.GetLossesIndex();\r\n        }\r\n        return index;\r\n      }\r\n    } else if (_isMarketing) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetMarketingIndex();\r\n          if (index == -1) {\r\n            index = this.GetMarketingIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetMarketingIndex();\r\n        if (index == -1) {\r\n          index = this.GetMarketingIndex();\r\n        }\r\n        return index;\r\n      }\r\n    } else if (_isWildCard) {\r\n      if (this.SelectedMode == 2) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          var index = this.GetWildCardIndex();\r\n          if (index == -1) {\r\n            index = this.GetWildCardIndex();\r\n          }\r\n          return index;\r\n        }\r\n      } else if (this.SelectedMode == 1) {\r\n        var index = this.GetWildCardIndex();\r\n        if (index == -1) {\r\n          index = this.GetWildCardIndex();\r\n        }\r\n        return index;\r\n      }\r\n    }\r\n  },\r\n\r\n  callUponCard() {\r\n    if (!isGameOver) {\r\n      if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n        var _spaceID = parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType);\r\n        this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter = RollCounter;\r\n        if (_spaceID != 6 && _spaceID != 7) {\r\n          //6 means payday and 7 means double payday, 9 means sell space\r\n          var RandomCard = this.getRandom(0, 15);\r\n\r\n          if (_spaceID == 2) {\r\n            //landed on big business cards\r\n            RandomCard = this.SelectRelatedCard(true, false, false, false);\r\n          } else if (_spaceID == 5) {\r\n            //landed on some losses cards\r\n            RandomCard = this.SelectRelatedCard(false, true, false, false);\r\n            //RandomCard = 14;\r\n          } else if (_spaceID == 3) {\r\n            //landed on some marketing cards\r\n            RandomCard = this.SelectRelatedCard(false, false, true, false);\r\n            //RandomCard = 5;\r\n          } else if (_spaceID == 1) {\r\n            //landed on some wild cards\r\n            RandomCard = this.SelectRelatedCard(false, false, false, true);\r\n            // RandomCard = 9;\r\n          }\r\n\r\n          IsTweening = false;\r\n          console.error(_spaceID);\r\n\r\n          if (this.SelectedMode == 2) {\r\n            //for real player\r\n            if (_spaceID == 12) {\r\n              // if player landed on finish space\r\n              RollCounter = RollCounter + 5;\r\n              this.StartDiceRoll();\r\n            } else {\r\n              if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n                var SendingData = { randomCard: RandomCard, counter: RollCounter };\r\n                this.RaiseEventForCard(SendingData);\r\n              } else {\r\n                this.DisplayCardOnOthers();\r\n              }\r\n            }\r\n          } else if (this.SelectedMode == 1) {\r\n            //for bot\r\n            if (_spaceID == 12) {\r\n              // if player landed on finish space\r\n              RollCounter = RollCounter + 5;\r\n              this.StartDiceRoll();\r\n            } else {\r\n              var SendingData = { randomCard: RandomCard, counter: RollCounter };\r\n              this.RaiseEventForCard(SendingData);\r\n            }\r\n          }\r\n        } else {\r\n          IsTweening = false;\r\n          console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n          this.RaiseEventTurnComplete();\r\n        }\r\n      } else {\r\n        if (this.SelectedMode == 1) {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].isBot && BotGameOver) this.completeCardTurn();\r\n\r\n            if (!this.PlayerGameInfo[this.TurnNumber].isBot && userGameOver) this.completeCardTurn();\r\n          }\r\n        } else if (this.SelectedMode == 2) {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n              this.completeCardTurn();\r\n              console.error(\"complete turn is called\");\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (this.SelectedMode == 1) {\r\n        this.AllPlayersGameCompleted(true);\r\n      } else if (this.SelectedMode == 2) {\r\n        this.AllPlayersGameCompleted(false);\r\n      }\r\n    }\r\n  },\r\n\r\n  completeCardTurn() {\r\n    IsTweening = false;\r\n    console.log(\"landed on pay day or double pay day and work is done so changing turn\");\r\n    this.RaiseEventTurnComplete();\r\n  },\r\n\r\n  CallGameComplete(_isBot = false, _forceGameOver = false) {\r\n    if (_isBot == false) {\r\n      // if (_forceGameOver) {\r\n      //     this.TurnNumber = this.GetMyIndex();\r\n      // }\r\n\r\n      var _playerIndex = this.GetMyIndex();\r\n\r\n      if (!this.PlayerGameInfo[_playerIndex].IsActive) {\r\n        this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n        this.PlayerGameInfo[_playerIndex].TotalScore = 0;\r\n        console.error(\"player is not active returning\");\r\n      } else {\r\n        if (this.PlayerGameInfo[_playerIndex].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n          console.error(\"calculating....\");\r\n          console.log(\"agme is not finished\");\r\n          this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n\r\n          var _cash = this.PlayerGameInfo[_playerIndex].Cash;\r\n          var HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n          var BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n          var BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n          var loanAmount = 0;\r\n          for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n            if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n              loanAmount += GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n            }\r\n          }\r\n\r\n          var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n          var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n          var _diceRandom = this.RollTwoDices();\r\n          var OnceOrShare = _diceRandom * 1000;\r\n\r\n          var GoldCash = OnceOrShare * _gold;\r\n          var StockCash = OnceOrShare * _stocks;\r\n\r\n          var BMCash = (BMAmount + BMLocations) * 150000;\r\n\r\n          var HMCash = 0;\r\n          if (HMAmount == 1) HMCash = 60000;\r\n          else if (HMAmount == 2) HMCash = 25000 + 60000;\r\n          else if (HMAmount == 3) HMCash = 25000 + 25000 + 60000;\r\n\r\n          var TotalAssets = _cash + BMCash + HMCash + GoldCash + StockCash - loanAmount;\r\n\r\n          this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n          this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n          this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"Data pushed\");\r\n        }\r\n        //console.log(this.PlayerGameInfo[this.TurnNumber])\r\n      }\r\n    } else {\r\n      for (let _playerIndex = 0; _playerIndex < this.PlayerGameInfo.length; _playerIndex++) {\r\n        this.PlayerGameInfo[_playerIndex].isGameFinished = true;\r\n\r\n        var _cash = this.PlayerGameInfo[_playerIndex].Cash;\r\n        var HMAmount = this.PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n        var BMAmount = this.PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        var BMLocations = this.PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n        var loanAmount = 0;\r\n        for (let index = 0; index < this.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n          if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            loanAmount += GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n          }\r\n        }\r\n\r\n        var _gold = this.PlayerGameInfo[_playerIndex].GoldCount;\r\n        var _stocks = this.PlayerGameInfo[_playerIndex].StockCount;\r\n\r\n        var _diceRandom = this.RollTwoDices();\r\n        var OnceOrShare = _diceRandom * 1000;\r\n\r\n        var GoldCash = OnceOrShare * _gold;\r\n        var StockCash = OnceOrShare * _stocks;\r\n\r\n        var BMCash = (BMAmount + BMLocations) * 150000;\r\n\r\n        var HMCash = 0;\r\n        if (HMAmount == 1) HMCash = 60000;\r\n        else if (HMAmount == 2) HMCash = 25000 + 60000;\r\n        else if (HMAmount == 3) HMCash = 25000 + 25000 + 60000;\r\n\r\n        var TotalAssets = _cash + BMCash + HMCash + GoldCash + StockCash - loanAmount;\r\n\r\n        this.PlayerGameInfo[_playerIndex].TotalScore = TotalAssets;\r\n        this.PlayerGameInfo[_playerIndex].TotalHBCash = HMCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalBMCash = BMCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalGoldCash = GoldCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalStocksCash = StockCash;\r\n        this.PlayerGameInfo[_playerIndex].TotalLoanBalance = loanAmount;\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventForGameComplete(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(6, _data);\r\n  },\r\n\r\n  RaiseEventToSyncGameCompleteData(_data) {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(16, _data);\r\n  },\r\n\r\n  SyncGameOver(_UID) {\r\n    var infoText = \"\";\r\n    var statusText = \"\";\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      if (!GameCompleted) {\r\n        GameCompleted = true;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectData();\r\n        isGameOver = true;\r\n        var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var MyData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n        console.log(_UID);\r\n        console.log(MyData.customProperties.PlayerSessionData.PlayerUID);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.GameOver = true;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == true) {\r\n          var _index = -1;\r\n          for (let index = 0; index < MainSessionData.length; index++) {\r\n            if (MainSessionData[index].customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n              _index = index;\r\n              break;\r\n            }\r\n          }\r\n\r\n          statusText = \"Game won by \" + MainSessionData[_index].customProperties.PlayerSessionData.PlayerName;\r\n          infoText =\r\n            \"Current Cash : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.Cash +\r\n            \"\\n\" +\r\n            \"Home Based Businesses Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalHBCash +\r\n            \"\\n\" +\r\n            \"Brick And Mortar Businesses Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalBMCash +\r\n            \"\\n\" +\r\n            \"Gold Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalGoldCash +\r\n            \"\\n\" +\r\n            \"Stocks Value : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalStocksCash +\r\n            \"\\n\" +\r\n            \"Loan Balance : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalLoanBalance +\r\n            \"\\n\" +\r\n            \"Total Cash Earned : $\" +\r\n            MainSessionData[_index].customProperties.PlayerSessionData.TotalScore +\r\n            \"\\n\";\r\n\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n        } else {\r\n          if (MyData.customProperties.PlayerSessionData.PlayerUID == _UID) {\r\n            //you won\r\n            statusText = \"Congrats! you have won the game.\";\r\n            infoText =\r\n              \"Current Cash : $\" +\r\n              MyData.customProperties.PlayerSessionData.Cash +\r\n              \"\\n\" +\r\n              \"Home Based Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalHBCash +\r\n              \"\\n\" +\r\n              \"Brick And Mortar Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalBMCash +\r\n              \"\\n\" +\r\n              \"Gold Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalGoldCash +\r\n              \"\\n\" +\r\n              \"Stocks Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalStocksCash +\r\n              \"\\n\" +\r\n              \"Loan Balance : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalLoanBalance +\r\n              \"\\n\" +\r\n              \"Total Cash Earned : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalScore +\r\n              \"\\n\";\r\n\r\n            var _currentCash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n            var _total = _currentCash + parseInt(MyData.customProperties.PlayerSessionData.TotalScore);\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _total.toString();\r\n\r\n            var _won = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon);\r\n            _won = _won + 1;\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon = _won.toString();\r\n\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(-1, _won, -1);\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n          } else {\r\n            //you lose\r\n            statusText = \"Unfortunately! you have lost the game.\";\r\n            infoText =\r\n              \"Current Cash : $\" +\r\n              MyData.customProperties.PlayerSessionData.Cash +\r\n              \"\\n\" +\r\n              \"Home Based Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalHBCash +\r\n              \"\\n\" +\r\n              \"Brick And Mortar Businesses Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalBMCash +\r\n              \"\\n\" +\r\n              \"Gold Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalGoldCash +\r\n              \"\\n\" +\r\n              \"Stocks Value : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalStocksCash +\r\n              \"\\n\" +\r\n              \"Loan Balance : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalLoanBalance +\r\n              \"\\n\" +\r\n              \"Total Cash Earned : $\" +\r\n              MyData.customProperties.PlayerSessionData.TotalScore +\r\n              \"\\n\";\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n          }\r\n        }\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //with bot\r\n      isGameOver = true;\r\n      var MainSessionData = this.PlayerGameInfo;\r\n      var MyData = this.PlayerGameInfo[0];\r\n      console.log(_UID);\r\n      console.log(MyData.PlayerUID);\r\n      this.PlayerGameInfo[0].GameOver = true;\r\n\r\n      if (MyData.PlayerUID == _UID) {\r\n        //you won\r\n        statusText = \"Congrats! you have won the game.\";\r\n        infoText =\r\n          \"Current Cash : $\" +\r\n          MyData.Cash +\r\n          \"\\n\" +\r\n          \"Home Based Businesses Value : $\" +\r\n          MyData.TotalHBCash +\r\n          \"\\n\" +\r\n          \"Brick And Mortar Businesses Value : $\" +\r\n          MyData.TotalBMCash +\r\n          \"\\n\" +\r\n          \"Gold Value : $\" +\r\n          MyData.TotalGoldCash +\r\n          \"\\n\" +\r\n          \"Stocks Value : $\" +\r\n          MyData.TotalStocksCash +\r\n          \"\\n\" +\r\n          \"Loan Balance : $\" +\r\n          MyData.TotalLoanBalance +\r\n          \"\\n\" +\r\n          \"Total Cash Earned : $\" +\r\n          MyData.TotalScore +\r\n          \"\\n\" +\r\n          \"Other Player Earned Cash : $\" +\r\n          this.PlayerGameInfo[1].TotalScore +\r\n          \"\\n\";\r\n\r\n        var _currentCash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n        var _total = _currentCash + parseInt(MyData.TotalScore);\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _total.toString();\r\n\r\n        var _won = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon);\r\n        _won = _won + 1;\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gamesWon = _won.toString();\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(-1, _won, -1);\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n      } else {\r\n        //you lose\r\n\r\n        statusText = \"Unfortunately! you have lost the game.\";\r\n        infoText =\r\n          \"Current Cash : $\" +\r\n          MyData.Cash +\r\n          \"\\n\" +\r\n          \"Home Based Businesses Value : $\" +\r\n          MyData.TotalHBCash +\r\n          \"\\n\" +\r\n          \"Brick And Mortar Businesses Value : $\" +\r\n          MyData.TotalBMCash +\r\n          \"\\n\" +\r\n          \"Gold Value : $\" +\r\n          MyData.TotalGoldCash +\r\n          \"\\n\" +\r\n          \"Stocks Value : $\" +\r\n          MyData.TotalStocksCash +\r\n          \"\\n\" +\r\n          \"Loan Balance : $\" +\r\n          MyData.TotalLoanBalance +\r\n          \"\\n\" +\r\n          \"Total Cash Earned : $\" +\r\n          MyData.TotalScore +\r\n          \"\\n\" +\r\n          \"Other Player Earned Cash : $\" +\r\n          this.PlayerGameInfo[1].TotalScore +\r\n          \"\\n\";\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowResultScreen(statusText, infoText);\r\n      }\r\n    }\r\n  },\r\n\r\n  SyncGameCompleteData(_data) {\r\n    var _isBot = _data.Bot;\r\n    if (_isBot) {\r\n      this.CallGameComplete(true, false);\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 1500, false);\r\n      setTimeout(() => {\r\n        this.ZoomCameraOutOnly();\r\n\r\n        var max = -1;\r\n        var SelectedInd = 0;\r\n        var SessionData = this.PlayerGameInfo;\r\n\r\n        for (let index = 0; index < SessionData.length; index++) {\r\n          var _value = SessionData[index].TotalScore;\r\n\r\n          if (_value > max) {\r\n            SelectedInd = index;\r\n            max = _value;\r\n          }\r\n        }\r\n\r\n        for (let index = 0; index < SessionData.length; index++) {\r\n          if (SessionData[index].IsActive) {\r\n            var _value = SessionData[index].TotalScore;\r\n            console.log(_value);\r\n          }\r\n        }\r\n\r\n        console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n        this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n      }, 1500);\r\n    } else {\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        this.CallGameComplete(false, false);\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Game over, calculating total cash...\", 1500, false);\r\n        setTimeout(() => {\r\n          console.log(GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray());\r\n          this.ZoomCameraOutOnly();\r\n\r\n          this.SyncDataToPlayerGameInfo(0);\r\n\r\n          var max = -1;\r\n          var SelectedInd = 0;\r\n          var SessionData = this.PlayerGameInfo;\r\n          console.log(SessionData);\r\n\r\n          for (let index = 0; index < SessionData.length; index++) {\r\n            if (SessionData[index].IsActive) {\r\n              var _value = SessionData[index].TotalScore;\r\n\r\n              if (_value > max) {\r\n                SelectedInd = index;\r\n                max = _value;\r\n              }\r\n            }\r\n          }\r\n\r\n          for (let index = 0; index < SessionData.length; index++) {\r\n            if (SessionData[index].IsActive) {\r\n              var _value = SessionData[index].TotalScore;\r\n              console.log(_value);\r\n            }\r\n          }\r\n\r\n          console.trace(\"game won by player id: \" + SessionData[SelectedInd].PlayerUID);\r\n          this.RaiseEventForGameComplete(SessionData[SelectedInd].PlayerUID);\r\n        }, 1500);\r\n      }\r\n    }\r\n  },\r\n\r\n  AllPlayersGameCompleted(_isBot = false) {\r\n    var _data = { Bot: _isBot };\r\n    this.RaiseEventToSyncGameCompleteData(_data);\r\n  },\r\n\r\n  GameOver(_forceGameOver = false) {\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      if (_forceGameOver) {\r\n        this.ZoomCameraOutOnly();\r\n      }\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n        this.SyncDataToPlayerGameInfo(0);\r\n\r\n        var MainSessionData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n        var playercompleted = 0;\r\n\r\n        this.PlayerGameInfo[this.TurnNumber].isGameFinished = true;\r\n\r\n        // for (let index = 0; index < MainSessionData.length; index++) {\r\n        //   if (MainSessionData[index].customProperties.PlayerSessionData.isGameFinished) playercompleted++;\r\n        // }\r\n\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n          if (this.PlayerGameInfo[index].IsActive == false || this.PlayerGameInfo[index].isGameFinished) playercompleted++;\r\n        }\r\n\r\n        console.log(\"player completed: \" + playercompleted);\r\n        console.log(\"player gameinfo length: \" + this.PlayerGameInfo.length);\r\n        if (playercompleted >= this.PlayerGameInfo.length || _forceGameOver) {\r\n          //game completed on all system\r\n          isGameOver = true;\r\n          if (_forceGameOver) {\r\n            setTimeout(() => {\r\n              this.AllPlayersGameCompleted(false);\r\n            }, 1000);\r\n          } else if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n            if (!PassedPayDay && !DoublePayDay) {\r\n              this.AllPlayersGameCompleted(false);\r\n            } else {\r\n              IsTweening = false;\r\n              this.completeCardTurn();\r\n            }\r\n          }\r\n        } else {\r\n          if (!isGameOver) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n              if (!PassedPayDay && !DoublePayDay) {\r\n                IsTweening = false;\r\n                this.completeCardTurn();\r\n              }\r\n            } else {\r\n              IsTweening = false;\r\n              this.completeCardTurn();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      if (this.PlayerGameInfo[this.TurnNumber].IsBot) BotGameOver = true;\r\n      else userGameOver = true;\r\n\r\n      console.log(\"usergameover: \" + userGameOver);\r\n      console.log(\"botgameover: \" + BotGameOver);\r\n      // this.CallGameComplete(true);\r\n      var playercompleted = 0;\r\n      this.PlayerGameInfo[this.TurnNumber].isGameFinished = true;\r\n\r\n      var MainSessionData = this.PlayerGameInfo;\r\n      for (let index = 0; index < MainSessionData.length; index++) {\r\n        if (MainSessionData[index].isGameFinished) playercompleted++;\r\n      }\r\n\r\n      if (playercompleted == this.PlayerGameInfo.length) {\r\n        //gamecompleted on all systems\r\n        BotGameOver = true;\r\n        userGameOver = true;\r\n        isGameOver = true;\r\n\r\n        if (!PassedPayDay && !DoublePayDay) {\r\n          this.AllPlayersGameCompleted(true);\r\n        }\r\n      } else {\r\n        if (!isGameOver) {\r\n          if (!PassedPayDay && !DoublePayDay) {\r\n            IsTweening = false;\r\n            this.completeCardTurn();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  StartDiceRoll: function () {\r\n    if (RollCounter >= GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n      console.log(\"Gameover\");\r\n      this.ZoomCameraOut();\r\n\r\n      setTimeout(() => {\r\n        this.GameOver(false);\r\n      }, 1500);\r\n    } else {\r\n      if (!isGameOver) {\r\n        DiceTemp = DiceTemp + 1;\r\n        var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n        this.TweenPlayer(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n      }\r\n    }\r\n  },\r\n\r\n  getRandom: function (min, max) {\r\n    return Math.floor(Math.random() * (max - min)) + min; // min included and max excluded\r\n  },\r\n\r\n  TweenCamera: function (_pos, isZoom, time) {\r\n    cc.tween(this.CameraNode)\r\n      .to(time, { position: cc.v2(_pos.x, _pos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        if (isZoom) this.ZoomCameraIn();\r\n        else this.ZoomCameraOut();\r\n      })\r\n      .start();\r\n  },\r\n\r\n  ZoomCameraIn() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio < 2) {\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio + 0.03;\r\n        this.ZoomCameraIn();\r\n      } else {\r\n        this.Camera.zoomRatio = 2;\r\n        this.isCameraZooming = true;\r\n        this.StartDiceRoll();\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  CheckPayDayConditions(_isBot = false) {\r\n    if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n      if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6) {\r\n        PassedPayDay = true;\r\n        PassedPayDayCounter = PassedPayDayCounter + 1;\r\n      }\r\n\r\n      if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7) {\r\n        DoublePayDay = true;\r\n        DoublePayDayCounter++;\r\n        PassedPayDayCounter++;\r\n      }\r\n    }\r\n\r\n    _nextTurnDoublePay = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay;\r\n    _nextTurnhalfPay = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnHalfPayDay;\r\n\r\n    if (PassedPayDay && !DoublePayDay && !_nextTurnDoublePay) {\r\n      //this.ToggleDoublePayNextTurn(false);\r\n      //this.TogglePayDay(false,false);\r\n      this.ProcessPayDay_TurnDecision(false, _isBot);\r\n    } else if (DoublePayDay || (PassedPayDay && _nextTurnDoublePay)) {\r\n      //this.ToggleDoublePayNextTurn(false);\r\n      //this.TogglePayDay(false,false);\r\n      this.ProcessPayDay_TurnDecision(true, _isBot);\r\n    } else {\r\n      this.callUponCard();\r\n    }\r\n  },\r\n\r\n  ZoomCameraOutOnly() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio >= 1) {\r\n        this.isCameraZooming = false;\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio - 0.03;\r\n        this.ZoomCameraOutOnly();\r\n      } else {\r\n        this.CameraNode.position = cc.Vec2(0, 0);\r\n        this.Camera.zoomRatio = 1;\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  ZoomCameraOut() {\r\n    setTimeout(() => {\r\n      if (this.Camera.zoomRatio >= 1) {\r\n        this.isCameraZooming = false;\r\n        this.Camera.zoomRatio = this.Camera.zoomRatio - 0.03;\r\n        this.ZoomCameraOut();\r\n      } else {\r\n        this.CameraNode.position = cc.Vec2(0, 0);\r\n        this.Camera.zoomRatio = 1;\r\n        // IsTweening = false;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().PrintDiceValue_TurnDecision(0);\r\n\r\n        if (this.SelectedMode == 1) {\r\n          if (this.PlayerGameInfo[this.TurnNumber].IsBot && !BotGameOver) {\r\n            this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n          } else {\r\n            if (!this.PlayerGameInfo[this.TurnNumber].IsBot && !userGameOver) {\r\n              this.CheckPayDayConditions(this.PlayerGameInfo[this.TurnNumber].IsBot);\r\n            }\r\n          }\r\n        }\r\n\r\n        if (this.SelectedMode == 2) {\r\n          //real player\r\n          if (PlayerLeft) {\r\n            // IsTweening = false;\r\n            PlayerLeft = false;\r\n          }\r\n\r\n          if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) this.CheckPayDayConditions();\r\n          else this.callUponCard();\r\n        }\r\n      }\r\n    }, 10);\r\n  },\r\n\r\n  TweenPlayer: function (Node, ToPos) {\r\n    var speed = 0.4;\r\n    //if (_isTest) speed = 0.04;\r\n\r\n    cc.tween(Node) //0.4\r\n      .to(speed, { position: cc.v2(ToPos.x, ToPos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        if (DiceTemp < DiceRoll) {\r\n          // console.log(DiceTemp + \" \" + RollCounter);\r\n\r\n          if (this.SelectedMode == 1) {\r\n            //for bot\r\n            if (this.PlayerGameInfo[this.TurnNumber].IsBot) {\r\n              if (!BotGameOver) {\r\n                if (\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6 ||\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7\r\n                ) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n              } else {\r\n                console.log(\"bot game is over\");\r\n              }\r\n            } else {\r\n              if (!userGameOver) {\r\n                if (\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6 ||\r\n                  parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7\r\n                ) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n\r\n                /// console.error(PassedPayDayCounter);\r\n              } else {\r\n                console.log(\"user game is over skipping\");\r\n              }\r\n            }\r\n\r\n            // console.log(PassedPayDay);\r\n          }\r\n\r\n          if (this.SelectedMode == 2) {\r\n            if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n              if (!this.PlayerGameInfo[this.TurnNumber].isGameFinished) {\r\n                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 6) {\r\n                  PassedPayDay = true;\r\n                  PassedPayDayCounter++;\r\n                }\r\n\r\n                if (parseInt(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.getComponent(\"SpaceHandler\").SpaceData.SpacesType) == 7) {\r\n                  DoublePayDay = true;\r\n                  DoublePayDayCounter++;\r\n                  PassedPayDayCounter++;\r\n                }\r\n              } else {\r\n                console.log(\"Game finished for: \" + this.PlayerGameInfo[this.TurnNumber].PlayerName);\r\n              }\r\n            }\r\n          }\r\n\r\n          if (RollCounter < GamePlayReferenceManager.Instance.Get_SpaceManager().Data.length) {\r\n            if (RollCounter == 13) RollCounter = RollCounter + 22;\r\n            else RollCounter = RollCounter + 1;\r\n          } else {\r\n            RollCounter = RollCounter + 1;\r\n            DiceTemp = DiceRoll;\r\n          }\r\n\r\n          //DiceTemp=DiceTemp+1;\r\n          //  console.log(DiceTemp + \" \" + RollCounter);\r\n\r\n          this.StartDiceRoll();\r\n          //this.PlayerGameInfo[this.TurnNumber].PlayerRollCounter=RollCounter;\r\n        } else {\r\n          var _newpos = cc.Vec2(0, 0);\r\n          this.TweenCamera(_newpos, false, 0.6); //zoomout\r\n        }\r\n      })\r\n      .start();\r\n  },\r\n\r\n  //rules implmentation during turn (turn decisions)\r\n\r\n  TogglePayDay(_st1, _St2) {\r\n    PassedPayDay = _st1;\r\n    DoublePayDay = _St2;\r\n\r\n    if (!_st1) {\r\n      PassedPayDayCounter = 0;\r\n    }\r\n\r\n    if (!_St2) {\r\n      DoublePayDayCounter = 0;\r\n    }\r\n  },\r\n\r\n  IncreaseDoublePayDay() {\r\n    DoublePayDayCounter++;\r\n  },\r\n\r\n  ExpandBusiness_TurnDecision(amount, _index, _locationName, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    if (this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.length < 3) {\r\n      if (!_isCardFunctionality) {\r\n        if (this.PlayerGameInfo[this.TurnNumber].Cash >= amount) {\r\n          this.PlayerGameInfo[this.TurnNumber].Cash = this.PlayerGameInfo[this.TurnNumber].Cash - amount;\r\n          this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n          this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n          }, 1200);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount);\r\n        }\r\n      } else {\r\n        if (_GivenCash >= amount) {\r\n          _GivenCash = _GivenCash - amount;\r\n          this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount = this.PlayerGameInfo[this.TurnNumber].TotalLocationsAmount + 1;\r\n          this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[_index].LocationsName.push(_locationName);\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully expanded your business.\", 1000);\r\n          setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameplayUIManager().OnExpandButtonExitClicked_TurnDecision();\r\n          }, 1200);\r\n        } else {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash to expand this business, cash needed $ \" + amount + \", Cash Given $\" + _GivenCash);\r\n        }\r\n      }\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You cannot own more than three brick and mortar business locations\");\r\n    }\r\n  },\r\n\r\n  GenerateExpandBusiness_Prefabs_TurnDecision(_isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    BusinessLocationNodes = [];\r\n\r\n    console.log(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness);\r\n    for (let i = 0; i < this.PlayerGameInfo[this.TurnNumber].NoOfBusiness.length; i++) {\r\n      if (parseInt(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessType) == 2) {\r\n        //this means there is brick and mortar in list\r\n        var node = cc.instantiate(GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessPrefab);\r\n        node.parent = GamePlayReferenceManager.Instance.Get_GameplayUIManager().TurnDecisionSetupUI.ExpandBusinessScrollContent;\r\n        node.getComponent(\"ExpandBusinessHandler\").SetBusinessIndex(i);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetName(this.PlayerGameInfo[this.TurnNumber].NoOfBusiness[i].BusinessName);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetCardFunctionality(_isCardFunctionality);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetGivenCash(_GivenCash);\r\n        node.getComponent(\"ExpandBusinessHandler\").SetStartAnyBusinessWithoutCash(_StartAnyBusinessWithoutCash);\r\n        node.getComponent(\"ExpandBusinessHandler\").ResetEditBox();\r\n        BusinessLocationNodes.push(node);\r\n      }\r\n    }\r\n    console.log(BusinessLocationNodes);\r\n    return BusinessLocationNodes.length;\r\n  },\r\n\r\n  DestroyGeneratedNodes() {\r\n    for (let index = 0; index < BusinessLocationNodes.length; index++) {\r\n      BusinessLocationNodes[index].destroy();\r\n    }\r\n\r\n    BusinessLocationNodes = [];\r\n  },\r\n\r\n  UpdateStocks_TurnDecision(_name, _ShareAmount, _isAdding) {\r\n    if (_isAdding) {\r\n      var _stock = new StockInfo();\r\n      _stock.BusinessName = _name;\r\n      _stock.ShareAmount = _ShareAmount;\r\n\r\n      this.PlayerGameInfo[this.TurnNumber].NoOfStocks.push(_stock);\r\n    }\r\n  },\r\n\r\n  ProcessPayDay_TurnDecision(_isDoublePayDay = false, _isBot = false, _forSelectedBusiness = false, _SelectedBusinessIndex = 0, HBAmount = 0, BMAmount = 0, BMLocations = 0) {\r\n    if (_forSelectedBusiness) {\r\n      var _title = \"PayDay\";\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, false, false, false, _isBot, _forSelectedBusiness, _SelectedBusinessIndex, HBAmount, BMAmount, BMLocations, 1, 0, _nextTurnhalfPay);\r\n    } else {\r\n      if (DoublePayDay && PassedPayDay && _nextTurnDoublePay) {\r\n        DoublePayDayCounter = 2;\r\n      }\r\n\r\n      _skipNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday;\r\n      _skipHMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday;\r\n      _skipBMNextPayday = this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday;\r\n\r\n      if (_skipNextPayday) {\r\n        //if previously skip payday was stored by any card\r\n        this.ToggleSkipPayDay_Whole(false);\r\n\r\n        if (!_isBot) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Skipping PayDay.\", 1600);\r\n          setTimeout(() => {\r\n            this.callUponCard();\r\n          }, 1650);\r\n        } else {\r\n          console.log(\"Skipping PayDay.\");\r\n          setTimeout(() => {\r\n            this.callUponCard();\r\n          }, 800);\r\n        }\r\n      } else {\r\n        var _title = \"\";\r\n\r\n        if (_isDoublePayDay) _title = \"DoublePayDay\";\r\n        else _title = \"PayDay\";\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().AssignData_PayDay(_title, _isDoublePayDay, _skipHMNextPayday, _skipBMNextPayday, _isBot, false, 0, 0, 0, 0, PassedPayDayCounter, DoublePayDayCounter, _nextTurnhalfPay);\r\n      }\r\n    }\r\n  },\r\n\r\n  Bankrupt_TurnDecision() {\r\n    this.PlayerGameInfo[this.TurnNumber].IsBankrupt = true;\r\n    this.PlayerGameInfo[this.TurnNumber].BankruptAmount += 1;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().StartNewBusiness_BusinessSetup(true, false, this.SelectedMode, this.PlayerGameInfo[this.TurnNumber].IsBankrupt, this.PlayerGameInfo[this.TurnNumber].BankruptAmount);\r\n  },\r\n\r\n  SendProfit_Partner_TurnDecision(_amount, _uID) {\r\n    var _data = { Data: { Cash: _amount, ID: _uID } };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(13, _data);\r\n  },\r\n\r\n  ReceiveProfit_Partner_TurnDecision(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _amount = _data.Data.Cash;\r\n      var _iD = _data.Data.ID;\r\n\r\n      var _myIndex = this.GetMyIndex();\r\n\r\n      if (this.PlayerGameInfo[_myIndex].PlayerUID == _iD) {\r\n        if (this.PlayerGameInfo[_myIndex].isGameFinished == true) {\r\n          this.PlayerGameInfo[_myIndex].TotalScore += _amount;\r\n        }\r\n\r\n        this.PlayerGameInfo[_myIndex].Cash += _amount;\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have received profit of $\" + _amount + \" from other player.\", 2800);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[_myIndex]);\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Cards Rules\r\n  ToggleDoublePayNextTurn(_state) {\r\n    _nextTurnDoublePay = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnDoublePay = _nextTurnDoublePay;\r\n  },\r\n\r\n  ToggleHalfPayNextTurn(_state) {\r\n    _nextTurnhalfPay = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.NextTurnHalfPayDay = _nextTurnhalfPay;\r\n  },\r\n\r\n  ToggleSkipNextTurn(_state) {\r\n    _skipNextTurn = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextTurn = _skipNextTurn;\r\n  },\r\n\r\n  ToggleSkipPayDay_Whole(_state) {\r\n    _skipNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipNextPayday = _skipNextPayday;\r\n  },\r\n\r\n  ToggleSkipPayDay_HomeBased(_state) {\r\n    _skipHMNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipHMNextPayday = _skipHMNextPayday;\r\n  },\r\n\r\n  ToggleSkipPayDay_BrickAndMortar(_state) {\r\n    _skipBMNextPayday = _state;\r\n    this.PlayerGameInfo[this.TurnNumber].CardFunctionality.SkipBMNextPayday = _skipBMNextPayday;\r\n  },\r\n\r\n  ToggleTurnProgress(_state) {\r\n    TurnInProgress = _state;\r\n  },\r\n\r\n  ReturnTurnProgress() {\r\n    return TurnInProgress;\r\n  },\r\n\r\n  LoseAllMarketingMoney() {\r\n    var _loseAmount = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _loseAmount = this.PlayerGameInfo[this.TurnNumber].MarketingAmount;\r\n      this.PlayerGameInfo[this.TurnNumber].MarketingAmount = 0;\r\n    } else {\r\n      _loseAmount = 0;\r\n    }\r\n\r\n    return _loseAmount;\r\n  },\r\n\r\n  MultiplyMarketingMoney(_multiplier) {\r\n    var _amountIncreased = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _amountIncreased = this.PlayerGameInfo[this.TurnNumber].MarketingAmount *= _multiplier;\r\n    } else {\r\n      _amountIncreased = 0;\r\n    }\r\n\r\n    return _amountIncreased;\r\n  },\r\n\r\n  GetMarketingMoney(_profit) {\r\n    var _amount = -1;\r\n    if (this.PlayerGameInfo[this.TurnNumber].MarketingAmount > 0) {\r\n      _profit = _profit / 100;\r\n      _amount = this.PlayerGameInfo[this.TurnNumber].MarketingAmount *= _profit;\r\n      this.PlayerGameInfo[this.TurnNumber].MarketingAmount = 0;\r\n      this.PlayerGameInfo[this.TurnNumber].Cash += _amount;\r\n    } else {\r\n      _amount = 0;\r\n    }\r\n\r\n    return _amount;\r\n  },\r\n\r\n  GetVocabularyQuestionsIndex() {\r\n    var _val = -1;\r\n    if (VocabularyQuestions.length > 0) {\r\n      if (VocabularyQuestionsCounter < VocabularyQuestions.length) {\r\n        _val = VocabularyQuestions[VocabularyQuestionsCounter];\r\n        VocabularyQuestionsCounter++;\r\n      } else {\r\n        this.PopulateOneQuestionArray_Vocabulary();\r\n      }\r\n    } else {\r\n      this.PopulateOneQuestionArray_Vocabulary();\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  GetEstablishmentQuestionsIndex() {\r\n    var _val = -1;\r\n    if (EstablishmentQuestions.length > 0) {\r\n      if (EstablishmentQuestionsCounter < EstablishmentQuestions.length) {\r\n        _val = EstablishmentQuestions[EstablishmentQuestionsCounter];\r\n        EstablishmentQuestionsCounter++;\r\n      } else {\r\n        this.PopulateOneQuestionArray_Establishment();\r\n      }\r\n    } else {\r\n      this.PopulateOneQuestionArray_Establishment();\r\n    }\r\n    return _val;\r\n  },\r\n\r\n  PopulateOneQuestionArray_Vocabulary(_data = null) {\r\n    if (_data == null) {\r\n      VocabularyQuestions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\n      VocabularyQuestions.sort(() => 0.5 - Math.random());\r\n\r\n      console.log(VocabularyQuestions);\r\n      VocabularyQuestionsCounter = 0;\r\n\r\n      var _tempData = { VocArray: VocabularyQuestions, EstArray: null };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(18, _tempData);\r\n    } else {\r\n      if (_data.VocArray != null) {\r\n        VocabularyQuestions = _data.VocArray;\r\n        console.log(VocabularyQuestions);\r\n        VocabularyQuestionsCounter = 0;\r\n      }\r\n    }\r\n  },\r\n\r\n  PopulateOneQuestionArray_Establishment(_data = null) {\r\n    if (_data == null) {\r\n      EstablishmentQuestions = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n\r\n      EstablishmentQuestions.sort(() => 0.5 - Math.random());\r\n\r\n      console.log(EstablishmentQuestions);\r\n      EstablishmentQuestionsCounter = 0;\r\n\r\n      var _tempData = { VocArray: null, EstArray: EstablishmentQuestions };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(18, _tempData);\r\n    } else {\r\n      if (_data.EstArray != null) {\r\n        EstablishmentQuestions = _data.EstArray;\r\n        console.log(EstablishmentQuestions);\r\n        EstablishmentQuestionsCounter = 0;\r\n      }\r\n    }\r\n  },\r\n\r\n  QuestionPopUp_OtherUser_OneQuestion(_data) {\r\n    var _questionRef = GamePlayReferenceManager.Instance.Get_QuestionsData();\r\n    var _userID = _data.UserID;\r\n    var _questionIndex = _data.Question;\r\n    var _playerIndex = _data.UserIndex;\r\n    var _isVoc = _data.IsVoc;\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n    if (_isVoc) {\r\n      VocabularyQuestionsCounter++;\r\n    } else {\r\n      EstablishmentQuestionsCounter++;\r\n    }\r\n\r\n    if (_userID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData.PlayerUID) {\r\n      console.log(\"ID matched\");\r\n\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(true);\r\n\r\n      var _Qdata;\r\n      if (_isVoc) {\r\n        console.log(\"voc\");\r\n        _Qdata = _questionRef.VocabularyQuestions[_questionIndex];\r\n      } else {\r\n        console.log(\"est\");\r\n        _Qdata = _questionRef.EstablishmentQuestions[_questionIndex];\r\n      }\r\n\r\n      CorrectAnswer = _Qdata.CorrectOption;\r\n      var _message = \"Choose the correct answer.\" + \"\\n\" + \"*wrong answer will cost you a fine of $5000.\" + \"\\n\" + \"\\n\" + _Qdata.Question + \"\\n\" + \"A. \" + _Qdata.Option1 + \"\\n\" + \"B. \" + _Qdata.Option2 + \"\\n\" + \"C. \" + _Qdata.Option3 + \"\\n\" + \"D. \" + _Qdata.Option4;\r\n\r\n      // var _questionAsked = OneQuestions[_questionIndex - 1];\r\n      _gameplayUIManager.SetUpDecisionScreen_OneQuestionSetupUI(_message);\r\n    }\r\n  },\r\n\r\n  OneQuestionScreen_Space_OneQuestion(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n    _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(true);\r\n    _gameplayUIManager.ResetSpaceScreen_OneQuestionSetupUI();\r\n    _gameplayUIManager.SetUpSpaceScreen_OneQuestionSetupUI(_myData, _roomData, _isTurnOver, this.SelectedMode);\r\n  },\r\n\r\n  OneQuestionDecision_SelectOption_OneQuestion(event = null) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _selection = parseInt(event.currentTarget.name.split(\"_\")[1]);\r\n\r\n    console.log(\"option selected: \" + _selection);\r\n    console.log(\"CorrectAnswer: \" + CorrectAnswer);\r\n    if (_selection == CorrectAnswer) {\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Your answer was correct!.\", 1200);\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n      this.RaiseEventDecision_OneQuestion(false, true, -1, _myData.PlayerUID);\r\n    } else {\r\n      if (_myData.Cash >= 5000) {\r\n        for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n          if (_myData.PlayerUID == this.PlayerGameInfo[index].PlayerUID) {\r\n            this.PlayerGameInfo[index].Cash -= 5000;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have answered wrong, fine amount was payed to the player.\", 1200);\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(true, false, -1, _myData.PlayerUID);\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash, Skipping question\");\r\n        _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n        this.RaiseEventDecision_OneQuestion(false, false, 0, _myData.PlayerUID);\r\n        //GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_InsufficientBalance(true);\r\n      }\r\n    }\r\n  },\r\n\r\n  // OneQuestionDecision_PayAmount_OneQuestion() {\r\n  //   var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n  //   var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n\r\n  //   if (_myData.Cash >= 5000) {\r\n  //     for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n  //       if (_myData.PlayerUID == this.PlayerGameInfo[index].PlayerUID) {\r\n  //         this.PlayerGameInfo[index].Cash -= 5000;\r\n  //         GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n  //         break;\r\n  //       }\r\n  //     }\r\n\r\n  //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully paid cash amount to player.\", 1200);\r\n  //     _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n  //     this.RaiseEventDecision_OneQuestion(true, false, -1, _myData.PlayerUID);\r\n  //   } else {\r\n  //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You don't have enough cash.\");\r\n  //   }\r\n  // },\r\n\r\n  // OneQuestionDecision_AnswerQuestion_OneQuestion() {\r\n  //   var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n  //   var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n  //   GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have successfully answered the question.\", 1200);\r\n  //   _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n  //   this.RaiseEventDecision_OneQuestion(false, true, OneQuestionIndex, _myData.PlayerUID);\r\n  // },\r\n\r\n  SelectPlayerProfit_Space_CardFunctionality(_isTurnOver = false) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    var _myData;\r\n    var _roomData;\r\n    if (this.SelectedMode == 2) {\r\n      //for real players\r\n      _roomData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n      _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    } else if (this.SelectedMode == 1) {\r\n      //for bot\r\n      _myData = this.PlayerGameInfo[0];\r\n      _roomData = this.PlayerGameInfo;\r\n    }\r\n    _gameplayUIManager.ToggleScreen_SelectPlayerForProfit(true);\r\n    _gameplayUIManager.ResetSpaceScreen_SelectPlayerForProfit();\r\n    _gameplayUIManager.SetUpSpaceScreen_SelectPlayerForProfit(_myData, _roomData, _isTurnOver, this.SelectedMode);\r\n  },\r\n\r\n  ReceiveEvent_SelectPlayerForProfit_Space_CardFunctionality(_data) {\r\n    var _ownID = _data.UserID.toString();\r\n    var _playerIndex = parseInt(_data.UserIndex);\r\n    var _playerName = _data.UserName;\r\n    var _playerID = _data.OwnPlayerID.toString();\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    if (_ownID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      console.log(\"received event: \" + _playerName);\r\n\r\n      for (let index = 0; index < this.PlayerGameInfo.length; index++) {\r\n        if (this.PlayerGameInfo[index].PlayerUID == _ownID) {\r\n          this.PlayerGameInfo[index].CanGiveProfitOnPayDay = true;\r\n          this.PlayerGameInfo[index].UserIDForProfitPayDay = _playerID;\r\n\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", this.PlayerGameInfo[index]);\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", this.PlayerGameInfo, true);\r\n          _gameplayUIManager.ShowToast(\"Player \" + _playerName + \" will receive all your next pay day profits\", 3200);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventDecision_OneQuestion(_hasDonePayment, _hasAnsweredQuestion, _questionIndex, _UserID) {\r\n    var _data = { PaymentDone: _hasDonePayment, QuestionAnswered: _hasAnsweredQuestion, QuestionIndex: _questionIndex, ID: _UserID };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(8, _data);\r\n  },\r\n\r\n  ReceiveEventDecision_OneQuestion(_data) {\r\n    var _gameplayUIManager = GamePlayReferenceManager.Instance.Get_GameplayUIManager();\r\n    if (this.PlayerGameInfo[this.TurnNumber].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n      var _hasDonePayment = _data.PaymentDone;\r\n      var _hasAnsweredQuestion = _data.QuestionAnswered;\r\n      var _questionIndex = _data.QuestionIndex;\r\n      var _uID = _data.ID;\r\n\r\n      _gameplayUIManager.ToggleDecisionScreen_OneQuestionSetupUI(false);\r\n      if (_questionIndex == 0) {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player does not have enough cash, so questions were skipped.\", 2100);\r\n        _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n        this.completeCardTurn();\r\n      } else {\r\n        if (_hasDonePayment) {\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n          this.PlayerGameInfo[this.TurnNumber].Cash += 5000;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player has given wrong answer, cash $5000 has been added.\", 2100);\r\n          _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n          this.completeCardTurn();\r\n        } else if (_hasAnsweredQuestion) {\r\n          var _selectedPlayerIndex = 0;\r\n          var _actorsData = GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoomActorsArray();\r\n\r\n          for (let index = 0; index < _actorsData.length; index++) {\r\n            if (_uID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n              _selectedPlayerIndex = index;\r\n              break;\r\n            }\r\n          }\r\n\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"player has given correct answer, no cash was received.\", 2100);\r\n\r\n          // if (_questionIndex == 1) {\r\n          //   //have you skipped loan previous payday?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.SkippedLoanPayment) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have skipped loan payement in previous payday\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have skipped loan payement in previous payday\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 2) {\r\n          //   //Have you taken any loan?\r\n          //   var _loanTaken = false;\r\n          //   for (let index = 0; index < _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness.length; index++) {\r\n          //     if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.NoOfBusiness[index].LoanTaken) {\r\n          //       _loanTaken = true;\r\n          //       break;\r\n          //     }\r\n          //   }\r\n\r\n          //   if (_loanTaken) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have taken some loan\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have taken any loan\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 3) {\r\n          //   //Are you bankrupted? if more than once, tell me the amount?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.IsBankrupt) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered to have been bankrupted \" + _actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.BankruptAmount + \" time/es.\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered not to have been bankrupted\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 4) {\r\n          //   //Is your turn going to be skipped next time?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.SkipNextTurn) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next turn will be skipped.\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next turn will not be skipped.\", 2100);\r\n          //   }\r\n          // } else if (_questionIndex == 5) {\r\n          //   //Is it going to be double pay day your next payday?\r\n          //   if (_actorsData[_selectedPlayerIndex].customProperties.PlayerSessionData.CardFunctionality.NextTurnDoublePay) {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next payday will be double payday\", 2100);\r\n          //   } else {\r\n          //     GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"Player has answered, next payday will not be double payday\", 2100);\r\n          //   }\r\n          // }\r\n\r\n          setTimeout(() => {\r\n            _gameplayUIManager.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n            this.completeCardTurn();\r\n          }, 200);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceiveGoBackSpacesData_spaceFunctionality(_data) {\r\n    if (IsTweening == true) {\r\n      setTimeout(() => {\r\n        this.ReceiveGoBackSpacesData_spaceFunctionality(_data);\r\n      }, 800);\r\n    } else {\r\n      var _spaces = _data.Data.backspaces;\r\n      var _counter = _data.Data.Counter;\r\n\r\n      var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[_counter + Backspaces].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n      this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos, 0.1);\r\n\r\n      RollCounter = _counter;\r\n      var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n      this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n    }\r\n  },\r\n\r\n  TweenPlayer_GoBackSpaces: function (Node, ToPos, speed = 0.6) {\r\n    cc.tween(Node)\r\n      .to(speed, { position: cc.v2(ToPos.x, ToPos.y) }, { easing: \"quadInOut\" })\r\n      .call(() => {})\r\n      .start();\r\n  },\r\n\r\n  GoBackSpaces_spaceFunctionality() {\r\n    RollCounter -= Backspaces;\r\n\r\n    if (this.SelectedMode == 2) {\r\n      var _data = { Data: { backspaces: Backspaces, Counter: RollCounter } };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(10, _data);\r\n    }\r\n\r\n    var _toPos = cc.Vec2(GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.x, GamePlayReferenceManager.Instance.Get_SpaceManager().Data[RollCounter].ReferenceLocation.position.y);\r\n    this.TweenPlayer_GoBackSpaces(this.AllPlayerNodes[this.TurnNumber], _toPos);\r\n    this.completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n  //#endregion\r\n});\r\n//module.exports  = PlayerData; //when imports in another script only reference of playerdata class would be able to accessed from Gamemanager import\r\nmodule.exports = GameManager;\r\n//#endregion\r\n"]}