{"version":3,"sources":["assets\\Script\\StorageManager.js"],"names":["GamePlayReferenceManager","StorageManager","cc","Class","name","Component","properties","Loader","type","Node","serializable","onLoad","console","log","active","anim","children","getComponent","Animation","play","CheckReferences","ReadData","onEnable","systemEvent","on","WriteData","RefreshData","ClearData","onDisable","off","require","userData","JSON","parse","sys","localStorage","getItem","server","Instance","Get_ServerBackend","_data","window","getUserData","error","GetUserData","data","SK","roleType","userToken","setItem","stringify","_response","setTimeout","ReloginFromStorage","UIManag","Get_UIManager","ShowToast","removeItem"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GamePlayReferenceManager = null;\r\n\r\nvar StorageManager = cc.Class({\r\n  name: \"StorageManager\",\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    Loader: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    console.log(\"V6\");\r\n    GamePlayReferenceManager = null;\r\n    this.Loader.active = true;\r\n    var anim = this.Loader.children[0].children[1].getComponent(cc.Animation);\r\n    anim.play(\"loading\");\r\n\r\n    this.CheckReferences();\r\n    this.ReadData();\r\n  },\r\n\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"WriteData\", this.WriteData, this);\r\n    cc.systemEvent.on(\"RefreshData\", this.RefreshData, this);\r\n    cc.systemEvent.on(\"ClearData\", this.ClearData, this);\r\n  },\r\n\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"WriteData\", this.WriteData, this);\r\n    cc.systemEvent.off(\"RefreshData\", this.RefreshData, this);\r\n    cc.systemEvent.off(\"ClearData\", this.ClearData, this);\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n  },\r\n\r\n  ReadData() {\r\n    //var userData = null;\r\n    var userData = JSON.parse(cc.sys.localStorage.getItem(\"userData\"));\r\n    var server = GamePlayReferenceManager.Instance.Get_ServerBackend();\r\n    if (userData === null) {\r\n      console.log(\"no session data found\");\r\n      this.Loader.active = false;\r\n\r\n      var _data;\r\n      if (typeof window.getUserData === \"function\") {\r\n        _data = window.getUserData();\r\n        console.error(_data);\r\n        // safe to use the function\r\n      } else {\r\n        console.error(\"not a function\");\r\n      }\r\n\r\n      // console.log(window.getUserData());\r\n      //  console.log(cc.sys.localStorage.getItem(\"userData\"));\r\n      // console.log(localStorage.getItem(\"userData\"));\r\n      //console.log(window.localStorage.getItem(\"userData\"));\r\n      // console.log(_data);\r\n      // try {\r\n      //   var _data = window.getUserData();\r\n      //   //   console.log(getUserData());\r\n      // } catch (error) {\r\n      //   console.log(error);\r\n      // }\r\n    } else {\r\n      //console.error(userData);\r\n      //check if token is expired or not\r\n      server.GetUserData(userData.data.SK, userData.data.roleType, userData.data.userToken, 0);\r\n    }\r\n  },\r\n\r\n  WriteData(_data) {\r\n    cc.sys.localStorage.setItem(\"userData\", JSON.stringify(_data));\r\n  },\r\n\r\n  RefreshData(_response) {\r\n    if (_response == 0) {\r\n      //means successful\r\n      var userData = JSON.parse(cc.sys.localStorage.getItem(\"userData\"));\r\n      setTimeout(() => {\r\n        var server = GamePlayReferenceManager.Instance.Get_ServerBackend();\r\n        server.ReloginFromStorage(userData);\r\n      }, 500);\r\n\r\n      setTimeout(() => {\r\n        this.Loader.active = false;\r\n      }, 1200);\r\n    } else {\r\n      //not successful\r\n      this.Loader.active = false;\r\n      var UIManag = GamePlayReferenceManager.Instance.Get_UIManager();\r\n      UIManag.ShowToast(\"session expires, please login again.\", 2400);\r\n    }\r\n  },\r\n\r\n  ClearData() {\r\n    cc.sys.localStorage.removeItem(\"userData\");\r\n  },\r\n});\r\n"]}