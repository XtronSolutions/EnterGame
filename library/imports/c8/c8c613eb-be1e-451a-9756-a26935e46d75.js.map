{"version":3,"sources":["assets\\Script\\TweenManager.js"],"names":["TweenClass","cc","Class","name","Component","properties","isSplashTween","displayName","type","serializable","tooltip","isGamplayTween","isLoginTween","start","onLoad","SceneLoaded","director","preloadScene","log","TweenSplash","node","FadeNodeInOut","Node","opacity","tween","to","easing","call","LoadScene","TweenSplashFadeOut","loadScene","setTimeout","LoginScreenTween","FromPos","setPosition","position","v2","RepeatTweenScale","FromScale","ToScale","time","repeatForever","scale","InitialOp","FinalOp","EaseType","module","exports"],"mappings":";;;;;;AAAA;AACA,IAAIA,UAAU,GAAGC,EAAE,CAACC,KAAH,CAAS;AACxBC,EAAAA,IAAI,EAAE,cADkB;AAExB,aAASF,EAAE,CAACG,SAFY;AAIxBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE,aADA;AAEb,iBAAS,KAFI;AAGbC,MAAAA,IAAI,EAAEP,EAAE,WAHK;AAIbQ,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KADL;AAQVC,IAAAA,cAAc,EAAE;AACdJ,MAAAA,WAAW,EAAE,cADC;AAEd,iBAAS,KAFK;AAGdC,MAAAA,IAAI,EAAEP,EAAE,WAHM;AAIdQ,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK,KARN;AAeVE,IAAAA,YAAY,EAAE;AACZL,MAAAA,WAAW,EAAE,YADD;AAEZ,iBAAS,KAFG;AAGZC,MAAAA,IAAI,EAAEP,EAAE,WAHI;AAIZQ,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG;AAfJ,GAJY;AA4BxBG,EAAAA,KA5BwB,mBA4BhB,CAAE,CA5Bc;AA8BxBC,EAAAA,MA9BwB,oBA8Bf;AACP,QAAI,KAAKR,aAAL,IAAsB,IAA1B,EAAgC;AAC9B,WAAKS,WAAL,GAAmB,KAAnB;AACAd,MAAAA,EAAE,CAACe,QAAH,CAAYC,YAAZ,CAAyB,UAAzB,EAAqC,YAAY;AAC/ChB,QAAAA,EAAE,CAACiB,GAAH,CAAO,+BAAP;AACD,OAFD,EAF8B,CAK9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,QAAI,KAAKZ,aAAL,IAAsB,IAA1B,EAAgC,KAAKa,WAAL,CAAiB,KAAKC,IAAtB,EAAhC,KACK,IAAI,KAAKT,cAAL,IAAuB,IAAvB,IAA+B,KAAKC,YAAL,IAAqB,IAAxD,EAA8D,KAAKS,aAAL,CAAmB,KAAKD,IAAxB,EAA8B,GAA9B,EAAmC,CAAnC,EAAsC,GAAtC,EAA2C,WAA3C;AACpE,GApDuB;AAsDxBD,EAAAA,WAAW,EAAE,qBAAUG,IAAV,EAAgB;AAAA;;AAC3BA,IAAAA,IAAI,CAACC,OAAL,GAAe,CAAf;AACAtB,IAAAA,EAAE,CAACuB,KAAH,CAASF,IAAT,EACGG,EADH,CACM,GADN,EACW;AAAEF,MAAAA,OAAO,EAAE;AAAX,KADX,EAC6B;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAD7B,EAEGC,IAFH,CAEQ,YAAM;AACV,MAAA,KAAI,CAACC,SAAL;AACD,KAJH,EAKGf,KALH;AAMD,GA9DuB;AAgExBgB,EAAAA,kBAAkB,EAAE,4BAAUP,IAAV,EAAgB;AAClCA,IAAAA,IAAI,CAACC,OAAL,GAAe,GAAf;AACAtB,IAAAA,EAAE,CAACuB,KAAH,CAASF,IAAT,EACGG,EADH,CACM,GADN,EACW;AAAEF,MAAAA,OAAO,EAAE;AAAX,KADX,EAC2B;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAD3B,EAEGC,IAFH,CAEQ,YAAM;AACV1B,MAAAA,EAAE,CAACe,QAAH,CAAYc,SAAZ,CAAsB,UAAtB;AACD,KAJH,EAKGjB,KALH;AAMD,GAxEuB;AAyExBe,EAAAA,SAzEwB,uBAyEZ;AAAA;;AACV,QAAI,KAAKb,WAAT,EAAsB;AACpB,WAAKc,kBAAL,CAAwB,KAAKT,IAA7B;AACD,KAFD,MAEO;AACLW,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAAChB,WAAL,GAAmB,IAAnB;;AACA,QAAA,MAAI,CAACa,SAAL;AACD,OAHS,EAGP,IAHO,CAAV;AAID;AACF,GAlFuB;AAoFxBI,EAAAA,gBAAgB,EAAE,0BAAUV,IAAV,EAAgBW,OAAhB,EAAyB;AACzCX,IAAAA,IAAI,CAACY,WAAL,CAAiB,CAAjB,EAAoBD,OAApB;AACAhC,IAAAA,EAAE,CAACuB,KAAH,CAASF,IAAT,EACGG,EADH,CACM,CADN,EACS;AAAEU,MAAAA,QAAQ,EAAElC,EAAE,CAACmC,EAAH,CAAM,CAAN,EAAS,CAAT;AAAZ,KADT,EACoC;AAAEV,MAAAA,MAAM,EAAE;AAAV,KADpC,EAEGC,IAFH,CAEQ,YAAM,CAAE,CAFhB,EAGGd,KAHH;AAID,GA1FuB;AA4FxBwB,EAAAA,gBAAgB,EAAE,0BAAUf,IAAV,EAAgBgB,SAAhB,EAA2BC,OAA3B,EAAoCC,IAApC,EAA0C;AAC1DvC,IAAAA,EAAE,CAACuB,KAAH,CAASF,IAAT,EACGmB,aADH,CAEIxC,EAAE,CACCuB,KADH,GAEGC,EAFH,CAEMe,IAFN,EAEY;AAAEE,MAAAA,KAAK,EAAEJ;AAAT,KAFZ,EAEkC;AAAEZ,MAAAA,MAAM,EAAE;AAAV,KAFlC,EAGGD,EAHH,CAGMe,IAHN,EAGY;AAAEE,MAAAA,KAAK,EAAEH;AAAT,KAHZ,EAGgC;AAAEb,MAAAA,MAAM,EAAE;AAAV,KAHhC,EAIGC,IAJH,CAIQ,YAAM,CAAE,CAJhB,CAFJ,EAQGd,KARH;AASD,GAtGuB;AAwGxBQ,EAAAA,aAAa,EAAE,uBAAUC,IAAV,EAAgBkB,IAAhB,EAAsBG,SAAtB,EAAiCC,OAAjC,EAA0CC,QAA1C,EAAoD;AACjEvB,IAAAA,IAAI,CAACC,OAAL,GAAeoB,SAAf;AACA1C,IAAAA,EAAE,CAACuB,KAAH,CAASF,IAAT,EACGG,EADH,CACMe,IADN,EACY;AAAEjB,MAAAA,OAAO,EAAEqB;AAAX,KADZ,EACkC;AAAElB,MAAAA,MAAM,EAAEmB;AAAV,KADlC,EAEGlB,IAFH,CAEQ,YAAM,CAAE,CAFhB,EAGGd,KAHH;AAID;AA9GuB,CAAT,CAAjB;AAgHAiC,MAAM,CAACC,OAAP,GAAiB/C,UAAjB","sourceRoot":"/","sourcesContent":["//-------------------------------------------class for Tween Manager-------------------------//\r\nvar TweenClass = cc.Class({\r\n  name: \"TweenManager\",\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    isSplashTween: {\r\n      displayName: \"SplashTween\",\r\n      default: false,\r\n      type: cc.boolean,\r\n      serializable: true,\r\n      tooltip: \"Boolean to identify if this tween is related to splash screen\",\r\n    },\r\n    isGamplayTween: {\r\n      displayName: \"GamplayTween\",\r\n      default: false,\r\n      type: cc.boolean,\r\n      serializable: true,\r\n      tooltip: \"Boolean to identify if this tween is related to Gamplay screen\",\r\n    },\r\n    isLoginTween: {\r\n      displayName: \"LoginTween\",\r\n      default: false,\r\n      type: cc.boolean,\r\n      serializable: true,\r\n      tooltip: \"Boolean to identify if this tween is related to Login screen\",\r\n    },\r\n  },\r\n\r\n  start() {},\r\n\r\n  onLoad() {\r\n    if (this.isSplashTween == true) {\r\n      this.SceneLoaded = false;\r\n      cc.director.preloadScene(\"MainMenu\", function () {\r\n        cc.log(\"Next scene MainMenu preloaded\");\r\n      });\r\n      // var progress = 0;\r\n      //   cc.director.preloadScene(\r\n      //     \"MainMenu\",\r\n      //     (completedCount, totalCount, item) => {\r\n      //       progress = completedCount / totalCount;\r\n      //     },\r\n      //     (error, asset) => {\r\n      //       this.SceneLoaded = true;\r\n      //       console.log(\"scene loaded\");\r\n      //       //do something after preloaded scene\r\n      //     }\r\n      //   );\r\n    }\r\n\r\n    if (this.isSplashTween == true) this.TweenSplash(this.node);\r\n    else if (this.isGamplayTween == true || this.isLoginTween == true) this.FadeNodeInOut(this.node, 1.5, 0, 255, \"quadInOut\");\r\n  },\r\n\r\n  TweenSplash: function (Node) {\r\n    Node.opacity = 0;\r\n    cc.tween(Node)\r\n      .to(1.5, { opacity: 255 }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        this.LoadScene();\r\n      })\r\n      .start();\r\n  },\r\n\r\n  TweenSplashFadeOut: function (Node) {\r\n    Node.opacity = 255;\r\n    cc.tween(Node)\r\n      .to(0.9, { opacity: 0 }, { easing: \"quadInOut\" })\r\n      .call(() => {\r\n        cc.director.loadScene(\"MainMenu\");\r\n      })\r\n      .start();\r\n  },\r\n  LoadScene() {\r\n    if (this.SceneLoaded) {\r\n      this.TweenSplashFadeOut(this.node);\r\n    } else {\r\n      setTimeout(() => {\r\n        this.SceneLoaded = true;\r\n        this.LoadScene();\r\n      }, 1500);\r\n    }\r\n  },\r\n\r\n  LoginScreenTween: function (Node, FromPos) {\r\n    Node.setPosition(0, FromPos);\r\n    cc.tween(Node)\r\n      .to(1, { position: cc.v2(0, 0) }, { easing: \"quadInOut\" })\r\n      .call(() => {})\r\n      .start();\r\n  },\r\n\r\n  RepeatTweenScale: function (Node, FromScale, ToScale, time) {\r\n    cc.tween(Node)\r\n      .repeatForever(\r\n        cc\r\n          .tween()\r\n          .to(time, { scale: FromScale }, { easing: \"quadInOut\" })\r\n          .to(time, { scale: ToScale }, { easing: \"quadInOut\" })\r\n          .call(() => {})\r\n      )\r\n      .start();\r\n  },\r\n\r\n  FadeNodeInOut: function (Node, time, InitialOp, FinalOp, EaseType) {\r\n    Node.opacity = InitialOp;\r\n    cc.tween(Node)\r\n      .to(time, { opacity: FinalOp }, { easing: EaseType })\r\n      .call(() => {})\r\n      .start();\r\n  },\r\n});\r\nmodule.exports = TweenClass;\r\n"]}