{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","DamageDecisionResult","GamePlayReferenceManager","businessDetailNodes","SenderDamagingID","businessTakeOverNodes","businessDamagingNodes","oneQuestionNodes","selectPlayerProfitNodes","selectedPlayerTakeOver","selectedPlayerDamaging","LaonPartnershipArray","CompareDiceArray","TelevisionAdTimeout","SenderADPPlayer","VoteTimeout","VotesUpArray","VotesDownArray","SellAllBusinessArray","businessDetailPartnershipNodes","businessDetailPayDayNodes","PartnerShipData","PartnerShipOfferReceived","CancelledID","StartGameCash","SelectedBusinessPayDay","HMAmount","BMAmount","BMLocations","SelectedBusinessIndex","TurnOverForInvest","BusinessSetupCardFunctionality","GivenCashBusiness","LaonPartnership","StartAnyBusinessWithoutCash","PreviousCash","RemainingCash","LoanSelectedPlayerData","TimeoutRef","CompletionWindowTime","LongMessageTime","ShortMessageTime","globalTurnTimer","PayDayInfo","InvestSellInfo","TimerTimeout","DoubleDayBusinessHB","DoubleDayBusinessBM","GiveProfitUserID","TotalPayDay","BankRuptedCard","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","AddButtonNode","AddCashScreen","AddCashLabel","AddCashEditBox","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","TimerText","BlockerNode","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","BusinessManipulationPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","PassedPayDayCountLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","WaitingScreenLabel","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PartnershipUI","WaitingStatusScreen","MainScreen","TitleName","PlayerName","PlayerCash","PartnerShipPrefab","DecisionScreen","DecisionPlayerName","DecisionPlayerCash","DecisionDescription","ResultUI","ResultScreen","StatusLabel","BodyLabel","BusinessPayDaySetupUI","TitleContentLabel","BusinessPrefab","SelectPlayerForProfitSetupUI","SelectPlayerGeneric","SelectBusinessGeneric","DamagingInformationDecisionSetup","DiceResultScreen","BusinessSelectScreen","DamageBusinessSelect","BuyHalfBusinessSetupUI","CompitatorUISetup","CompEditBox1","CompEditBox2","CompEditBox3","TelevisionADUISetup","MainEditBox","DecisionScreenText","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HBDiceCounter","BMDiceCounter","NextHalfPayDay","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PartnershipSetupUI","ResultSetupUI","BusinessPayDayUISetup","SelectPlayerForProfitUI","SelectPlayerTakeOverSetup","SelectPlayerDamagingSetup","DecisionDamagingSetup","SelectBusinessTakeOver","BuyHalfBusinessUISetup","LoanPartnershipSetup","CompareDiceSetup","SellAllBusinessSetup","CompitatorSetupUI","TelevisionADSetupUI","PopUpUI","PopUpUILabel","PopUpUIButton","GameplayUIScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","BusinessDoublePayScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","SelectPlayerForProfitScreen","SelectPlayerTakeOverScreen","SelectPlayerDamagingScreen","LoanPartnershipScreen","CompareDiceScreen","CompareDiceDecision1Screen","CompareDiceDecision2Screen","CompareDiceDecision2Text","CompareDiceDecision2Button","SellAllBusinessScreen","SelectBusinessTakeOverScreen","InsufficientBalanceScreen","TempDiceText","LeaveRoomButton","AvatarSprites","SpriteFrame","ResetAllData","ResetTurnVariable","GoldInvested","GoldSold","StockInvested","StockSold","CheckReferences","require","onEnable","systemEvent","on","SyncData","onDisable","off","onLoad","IsBotTurn","PayDayCount","DoublePayDayCount","IsBankrupted","BankruptedAmount","AddCashAmount","Timer","TimerStarted","ToggleScreen_InsufficientBalance","_state","active","Exit___InsufficientBalance","InitialScreen_SpectateMode","CloseInitialScreen_SpectateMode","ToggleLeaveRoomButton_SpectateModeUI","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","ToggleCashAddScreen_BusinessSetup","EnableCashAdd_BusinessSetup","StudentData","gameCash","OnCashAdd_BusinessSetup","_val","OnClickDoneCashAdd_BusinessSetup","_gamecash","parseInt","_amount","undefined","Cash","console","log","toString","UpdateUserData","ShowToast","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","_loanPartnership","_OtherplayerData","Init_BusinessSetup","PlayerData","CardFunctionality","CardDataFunctionality","BusinessInfo","BusinessType","EnumBusinessType","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","userID","PlayerUID","OnChangeName_BusinessSetup","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","OnChangAvatarID_BusinessSetup","AvatarID","avatarId","GetObj_BusinessSetup","UID","isNaN","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","Math","abs","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","PushDataForPlayerLeft","_data","_mode","GetSelectedMode","_playerDataIntance","PlayerID","HomeBasedAmount","IsActive","_playerBusinessDataIntance","push","RaiseEvent","_ID","_playerLeft","_isSpectate","PhotonActor","getCustomProperty","MaxPlayers","GetRealActors","actorNr","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_businessName","_isHomeBased","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","completeCardTurn","InitialSetup_BusinessSetup","IsBankrupt","BankruptAmount","GetTurnNumber","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","IsPartnership","PartnerID","PartnerName","info","RaiseEventToSyncInfo","IsBot","isactive","_active","clearTimeout","UpdateTimer","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","CheckMarketingAmountShare_CardFunctionality","_manager","_playerIndex","HasMarketingCompany","RaiseEventForMarketingShare","_amnt","_id","_msg","ID","msg","OnMarketingAmountSelected_TurnDecision","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","DestroyGeneratedNodes","OnExpandButtonExitClicked_TurnDecision","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","_isTurnOver","ResetStockBusinessNameInput","RollOneDice","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","EnablePartnership_PartnerShipSetup","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ToggleScreen_PartnerShipSetup","ToggleWaitingScreen_PartnerShipSetup","ToggleDecisionScreen_PartnerShipSetup","Reset_PartnerShipSetup","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","_totalLocations","LocationsName","SetBusinessMode","SetMode","SetBusinessValue","SetFinalBusinessValue","_allLocationsAmount","_finalAmount","SetBalance","SetLocations","TogglePartnerShipButton","SetPartnerName","EnablePartnershipDecision_PartnerShipSetup","customProperties","PlayerSessionData","Exit_PartnerShipSetup","destroy","ReceiveEvent_PartnershipSetup","_actor","_turn","Turn","_playerData","_SelectedBusinessIndex","SelectedBusinsessIndex","_businessValue","BusValue","_payAmount","_businessMode","CheckSpectate","AcceptOffer_PartnershipSetup","_allActors","RoomActors","myIndex","GetMyIndex","RaiseEventDecisionAnswer_PartnershipSetup","CancelOffer_PartnershipSetup","_isAccepted","_payment","_isCancelled","_uID","_mainData","Accepted","CashPayment","Cancelled","BusinessIndex","ReceiveEventDecisionAnswer_PartnershipSetup","_accepted","_cash","_cancelled","_uid","includes","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","loanTaken","Button","interactable","GetLoanAmount_PayDay","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_forSelectedBusiness","_hMAmount","_bmAmount","_bmLocation","PaydayCounter","DoublePayCounter","_halfPayday","CanGiveProfitOnPayDay","UserIDForProfitPayDay","ReceiveDoublePayDay","_res","_time","UpdateCash_PayDay","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_doublePayDay","_dice","_amountToBeSend","_amountToBeAdjusted","_multiplier","_paydaymultiplier","doublePayDayAdded","SendProfit_Partner_TurnDecision","ReceivePayment_PayDay","_locations","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","ProcessBankrupt","_showText","_txt","Exit_SelectPlayerGeneric","ExitScreen__BusinessGenric","ToggleDecsion02Screen_CompareDice","ToggleDecsion01Screen_CompareDice","ToggleDiceResultScreen_DamageDecision","ToggleMainScreen_DamageDecision","ToggleScreen_BuyHalfBusiness","emit","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","StartNewGame_PayDay","mode","_sendingData","IsDiceRolled","IsBankRupted","_myActor","playerData","BankruptedNextTurn","StartNewGame_BankRupted","ShowInfo","_myUID","GetMyPlayerUID","RaiseEventForCompletion","ToggleDoublePayNextTurn","NextTurnHalfPayDayCounter","ToggleHalfPayNextTurn","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","_sellAmount","Reset_SellBusinessUISetup","SetSellingAmount","ToggleSellLocationButton","SetBusinessUI_BusinessManipulationUISetup","Amount","SelectBusinessforPayDay","_isTurnover","EnableManipilationScreen__BusinessManipulationUISetup","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","ShowQuestionToast","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_modeIndex","RoomEssentials","IsSpectate","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","ToggleScreen_BusinessPayDayUISetup","EditTitle_BusinessPayDayUISetup","_mainTitle","_tileContent","ExitScreen_BusinessPayDayUISetup","ClearBusiness_BusinessPayDayUISetup","ExitScreen_AlongTurnOver_BusinessPayDayUISetup","ProcessBusiness_BusinessPayDayUISetup","_businessType","EnableSeletiveDoublePayDay_BusinessPayDayUISetup","_isBrickAndMortar","ToggleScreen_SelectPlayerForProfit","SetUpSpaceScreen_SelectPlayerForProfit","ResetSpaceScreen_SelectPlayerForProfit","Exit_SelectPlayerForProfit","ExitAlongTurnOver_SelectPlayerForProfit","ToggleScreen_SelectPlayerTakeOver","SetUpSpaceScreen_SelectPlayerTakeOver","_buyHalfBusiness","setBuyHalf","k","setPlayerIndex","ResetSpaceScreen_SelectPlayerTakeOver","ResetSpaceScreen_SelectPlayerDamaging","ResetSpaceScreen_LoanPartnership","ResetSpaceScreen_CompareDice","ToggleScreen_SelectPlayerDamaging","ToggleScreen_LoanPartnership","ToggleScreen_CompareDice","ExitAlongTurnOver_SelectPlayerGeneric","ToggleScreen_BusinessTakeOver","SetBusinessUI_BusinessTakeOver","_OtherPlayerIndex","Reset_BusinessTakeOver","SetPlayerObject","SetPlayerIndex","setHalfBusiness","EnableScreen__BusinessTakeOver","Reset__DamageDecision","ToggleBusinessScreen_DamageDecision","ToggleScreen_SellAllBusiness","ResetSpaceScreen_SellAllBusiness","ExitScreenAlongTurnOver__BusinessGenric","SetUpSpaceScreen_SelectPlayerDamaging","SetBusinessUI_DamageDecision","EnableBusinessScreen_DamageDecision","_noButton","SetMesageText_DamageDecision","EnableDiceResult_DamageDecision","_fineMultiplier","_text","SetSenderID_DamageDecision","ReceiveEvent_DamageDecision","_reciverID","_cashReceived","_isDiceRolled","Get_GameplayUIManager","PayAmount_DamageDecision","SetBankruptedVar","SelectBusinessForHalfOwnership_DamagingDecision","_selectedPlayerIndex","_playersData","_myDataIndex","GivePartnerShip_DamageDecision","_businessLength","_businessCounter","SetTitleText_BuyHalfBusiness","SetUpSpaceScreen_LoanPartnership","EnableScreen__SellAllBusiness","SetBusinessUI_SellAllBusiness","SetUpSpaceScreen_CompareDice","ChangeTitle_Decsion02Screen_CompareDice","ToggleDecsion02ScreenButton_CompareDice","ToggleScreen_CompitatorUI","ChangeTitle_CompitatorUI","OnDoneClicked_CompitatorUI","text1","text2","text3","_marketingAmount","TextArray","_checkCounter","_tempCounter","j","toLowerCase","profit","ExitAlongTurnOver_CompitatorUI","ToggleScreen_TelevisionADSetup","ToggleDecisionScreen_TelevisionADSetup","ChangeDecisionScreenText_TelevisionADSetup","OnDoneClicked_TelevisionADSetup","_sentdata","Player","Description","FailedScreen_TelevisionADSetup","ExitAlongTurnOver_TelevisionADSetup","SuccessScreen_TelevisionADSetup","ReceiveEvent_TelevisionADSetup","_senderPlayerData","_des","VoteUpDecision_TelevisionADSetup","SenderID","ReciverID","VoteUp","VoteDownDecision_TelevisionADSetup","ReceiveEvent_VoteTelevisionADSetup","_myID","_otherID","_voteUp","_totalPlayer","_RecievedVotes","message","time","_hasbutton","SelfToast","CompleteToast","ShowResultScreen","_status","RestartTheGame","RestartGame","_dataInfo","_toPlayerUID"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar DamageDecisionResult = 0;\r\nvar GamePlayReferenceManager = null;\r\nvar businessDetailNodes = [];\r\nvar SenderDamagingID = \"\";\r\nvar businessTakeOverNodes = [];\r\nvar businessDamagingNodes = [];\r\nvar oneQuestionNodes = [];\r\nvar selectPlayerProfitNodes = [];\r\nvar selectedPlayerTakeOver = [];\r\nvar selectedPlayerDamaging = [];\r\nvar LaonPartnershipArray=[];\r\nvar CompareDiceArray=[];\r\nvar TelevisionAdTimeout=null;\r\nvar SenderADPPlayer=null;\r\nvar VoteTimeout=null;\r\nvar VotesUpArray=[];\r\nvar VotesDownArray=[];\r\nvar SellAllBusinessArray=[];\r\nvar businessDetailPartnershipNodes = [];\r\nvar businessDetailPayDayNodes = [];\r\nvar PartnerShipData = null;\r\nvar PartnerShipOfferReceived = false;\r\nvar CancelledID = [];\r\nvar StartGameCash = 20000;\r\nvar SelectedBusinessPayDay = false;\r\nvar HMAmount = 0;\r\nvar BMAmount = 0;\r\nvar BMLocations = 0;\r\nvar SelectedBusinessIndex = 0;\r\nvar TurnOverForInvest = false;\r\nvar BusinessSetupCardFunctionality = false;\r\nvar GivenCashBusiness = 0;\r\nvar LaonPartnership = false;\r\nvar StartAnyBusinessWithoutCash = false;\r\nvar PreviousCash = 0;\r\nvar RemainingCash=0;\r\nvar LoanSelectedPlayerData=null;\r\nvar TimeoutRef;\r\nvar CompletionWindowTime = 8000;\r\nvar LongMessageTime = 5000;\r\nvar ShortMessageTime = 2500;\r\nvar globalTurnTimer = 30;\r\nvar PayDayInfo = \"\";\r\nvar InvestSellInfo = \"\";\r\nvar TimerTimeout;\r\nvar DoubleDayBusinessHB = 0;\r\nvar DoubleDayBusinessBM = 0;\r\nvar GiveProfitUserID = \"\";\r\nvar TotalPayDay = 0;\r\nvar BankRuptedCard = false;\r\n// var CompletionWindowTime = 500;//8000\r\n// var LongMessageTime = 250;//5000\r\n// var ShortMessageTime = 50;//2500\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n  None: 0,\r\n  TenThousand: 10000,\r\n  TentyThousand: 20000,\r\n  ThirtyThousand: 30000,\r\n  FortyThousand: 40000,\r\n  FiftyThousand: 50000,\r\n  Other: 6,\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI = cc.Class({\r\n  name: \"BusinessSetupUI\",\r\n\r\n  properties: {\r\n    PlayerNameUI: {\r\n      displayName: \"PlayerNameUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player name\",\r\n    },\r\n    PlayerCashUI: {\r\n      displayName: \"PlayerCashUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player cash\",\r\n    },\r\n    BusinessTypeTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business type\",\r\n    },\r\n    BusinessNameTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business name\",\r\n    },\r\n    BusinessTypeLabel: {\r\n      displayName: \"BusinessTypeLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"reference for business type editbox\",\r\n    },\r\n    BusinessNameLabel: {\r\n      displayName: \"BusinessNameLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"referece for business name editbox\",\r\n    },\r\n    HomeBasedNodeUI: {\r\n      displayName: \"HomeBasedNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for home based business\",\r\n    },\r\n    BrickAndMortarNodeUI: {\r\n      displayName: \"BrickAndMortarNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for brick and mortar business\",\r\n    },\r\n    TimerUI: {\r\n      displayName: \"TimerUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the label for timer\",\r\n    },\r\n    TimerNode: {\r\n      displayName: \"TimerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for timer node in business setup\",\r\n    },\r\n    BusinessSetupNode: {\r\n      displayName: \"BusinessSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for business setup\",\r\n    },\r\n    LoanSetupNode: {\r\n      displayName: \"LoanSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for loan setup\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: LoanAmountEnum,\r\n      default: LoanAmountEnum.None,\r\n      serializable: true,\r\n      tooltip: \"loan amount taken by player (state machine)\",\r\n    },\r\n    LoanAmountLabel: {\r\n      displayName: \"LoanAmountLabel\",\r\n      type: [cc.Node],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Reference for all labels of amounts in loan UI\",\r\n    },\r\n    WaitingStatusNode: {\r\n      displayName: \"WaitingStatusNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for waiting status screen on initial business setup\",\r\n    },\r\n    ExitButtonNode: {\r\n      displayName: \"ExitButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for exit button node in business setup\",\r\n    },\r\n    AddButtonNode: {\r\n      displayName: \"AddButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for Add Cash button node in business setup\",\r\n    },\r\n    AddCashScreen: {\r\n      displayName: \"AddCashScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCashScreen node in business setup\",\r\n    },\r\n    AddCashLabel: {\r\n      displayName: \"AddCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCash label in business setup\",\r\n    },\r\n    AddCashEditBox: {\r\n      displayName: \"AddCashEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCash editBox in business setup\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor//\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI = cc.Class({\r\n  name: \"TurnDecisionSetupUI\",\r\n\r\n  properties: {\r\n    MarketingEditBox: {\r\n      displayName: \"MarketingEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of marketing node\",\r\n    },\r\n    GoldEditBox: {\r\n      displayName: \"GoldEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest gold node\",\r\n    },\r\n    StockEditBox: {\r\n      displayName: \"StockEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest stock node\",\r\n    },\r\n    CashAmountLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to cash node\",\r\n    },\r\n    ExpandBusinessNode: {\r\n      displayName: \"ExpandBusinessNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for expnad business node\",\r\n    },\r\n    ExpandBusinessScrollContent: {\r\n      displayName: \"ExpandBusinessScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for content node of scroll view of expand business node\",\r\n    },\r\n    ExpandBusinessPrefab: {\r\n      displayName: \"ExpandBusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for prefab of expand business node\",\r\n    },\r\n    TimerText: {\r\n      displayName: \"TimerText\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for label of timer text for turn decision\",\r\n    },\r\n    BlockerNode: {\r\n      displayName: \"BlockerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for node of blocker for turn decision\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n  None: 0,\r\n  StockInvest: 1,\r\n  GoldInvest: 2,\r\n  StockSell: 3,\r\n  GoldSell: 4,\r\n  Other: 5,\r\n});\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI = cc.Class({\r\n  name: \"InvestSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of invest&sell node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Dice Result of invest&sell node\",\r\n    },\r\n    PriceTitleLabel: {\r\n      displayName: \"PriceTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price Title of invest&sell node\",\r\n    },\r\n    PriceValueLabel: {\r\n      displayName: \"PriceValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price value of invest&sell node\",\r\n    },\r\n    BuyOrSellTitleLabel: {\r\n      displayName: \"BuyOrSellTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BuyOrSell Title of invest&sell node\",\r\n    },\r\n    TotalAmountTitleLabel: {\r\n      displayName: \"TotalAmountTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount Title of invest&sell node\",\r\n    },\r\n    TotalAmountValueLabel: {\r\n      displayName: \"TotalAmountValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount Value of invest&sell node\",\r\n    },\r\n    ButtonNameLabel: {\r\n      displayName: \"ButtonName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of button name of invest&sell node\",\r\n    },\r\n    InvestState: {\r\n      displayName: \"InvestState\",\r\n      type: InvestEnum,\r\n      default: InvestEnum.None,\r\n      serializable: true,\r\n    },\r\n    AmountEditBox: {\r\n      displayName: \"AmountEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI = cc.Class({\r\n  name: \"SellBusinessUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessSellPrefab: {\r\n      displayName: \"BusinessSellPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessSellPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI = cc.Class({\r\n  name: \"PayDayUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of PayDay node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of PayDay node\",\r\n    },\r\n    HomeBasedNumberLabel: {\r\n      displayName: \"HomeBasedNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedNumber node\",\r\n    },\r\n    BMNumberLabel: {\r\n      displayName: \"BrickMortarNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarNumber node\",\r\n    },\r\n    BMNumberLocationLabel: {\r\n      displayName: \"BrickMortarLocations\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarLocations node\",\r\n    },\r\n    PassedPayDayCountLabel: {\r\n      displayName: \"PassedPayDayCountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of PassedPayDayCountLabel node\",\r\n    },\r\n    HomeBasedBtn: {\r\n      displayName: \"HomeBasedBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedBtn node\",\r\n    },\r\n    BMBtn: {\r\n      displayName: \"BrickMortarBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarBtn node\",\r\n    },\r\n    LoanBtn: {\r\n      displayName: \"LoanBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanBtn node\",\r\n    },\r\n    MainPanelNode: {\r\n      displayName: \"MainPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of MainPanel node\",\r\n    },\r\n    ResultPanelNode: {\r\n      displayName: \"ResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultPanel node\",\r\n    },\r\n    LoanResultPanelNode: {\r\n      displayName: \"LoanResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanResultPanelNode node\",\r\n    },\r\n    ResultScreenTitleLabel: {\r\n      displayName: \"ResultScreenTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultScreenTitle node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of DiceResult node\",\r\n    },\r\n    TotalBusinessLabel: {\r\n      displayName: \"TotalBusinessLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalBusiness node\",\r\n    },\r\n    TotalAmountLabel: {\r\n      displayName: \"TotalAmountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount node\",\r\n    },\r\n    SkipLoanButton: {\r\n      displayName: \"SkipLoanButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of SkipLoanButton node\",\r\n    },\r\n    LoanFotterLabel: {\r\n      displayName: \"LoanFotterLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanFotterLabel node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI = cc.Class({\r\n  name: \"InvestUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Invest node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Invest node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Invest node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Invest node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Invest node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI = cc.Class({\r\n  name: \"BuyOrSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of BuyOrSell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of BuyOrSell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of BuyOrSell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of BuyOrSell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI = cc.Class({\r\n  name: \"OneQuestionUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n    WaitingScreen: {\r\n      displayName: \"WaitingScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreen of OneQuestion node\",\r\n    },\r\n    WaitingScreenLabel: {\r\n      displayName: \"WaitingScreenLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreenLabel of OneQuestion node\",\r\n    },\r\n    DecisionTitleLabel: {\r\n      displayName: \"DecisionTitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    DecisionCashLabel: {\r\n      displayName: \"DecisionCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    DecisionPlayerNameLabel: {\r\n      displayName: \"DecisionPlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DecisionQuestionLabel: {\r\n      displayName: \"DecisionQuestionLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player question of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for PartnershipUI-------------------------//\r\nvar PartnershipUI = cc.Class({\r\n  name: \"PartnershipUI\",\r\n  properties: {\r\n    WaitingStatusScreen: {\r\n      displayName: \"WaitingStatusScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the waiting screen node of partnership ui\",\r\n    },\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PartnerShipPrefab: {\r\n      displayName: \"PartnerShipPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerName: {\r\n      displayName: \"DecisionPlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerCash: {\r\n      displayName: \"DecisionPlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionDescription: {\r\n      displayName: \"DecisionDescription\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for ResultUI-------------------------//\r\nvar ResultUI = cc.Class({\r\n  name: \"ResultUI\",\r\n  properties: {\r\n    ResultScreen: {\r\n      displayName: \"ResultScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    StatusLabel: {\r\n      displayName: \"StatusLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    BodyLabel: {\r\n      displayName: \"BodyLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for BusinessPayDaySetupUI-------------------------//\r\nvar BusinessPayDaySetupUI = cc.Class({\r\n  name: \"BusinessPayDaySetupUI\",\r\n  properties: {\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleContentLabel: {\r\n      displayName: \"TitleContentLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    BusinessPrefab: {\r\n      displayName: \"BusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SelectPlayerForProfitSetupUI-------------------------//\r\nvar SelectPlayerForProfitSetupUI = cc.Class({\r\n  name: \"SelectPlayerForProfitSetupUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SelectPlayerGeneric-------------------------//\r\nvar SelectPlayerGeneric = cc.Class({\r\n  name: \"SelectPlayerGeneric\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for SelectBusinessGeneric-------------------------//\r\nvar SelectBusinessGeneric = cc.Class({\r\n  name: \"SelectBusinessGeneric\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessPrefab: {\r\n      displayName: \"BusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for DamagingInformationDecisionSetup-------------------------//\r\nvar DamagingInformationDecisionSetup = cc.Class({\r\n  name: \"DamagingInformationDecisionSetup\",\r\n  properties: {\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    DiceResultScreen: {\r\n      displayName: \"DiceResultScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    BusinessSelectScreen: {\r\n      displayName: \"BusinessSelectScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DamageBusinessSelect: {\r\n      default: {},\r\n      type: SelectBusinessGeneric,\r\n      serializable: true,\r\n    },\r\n\r\n    DiceResultLabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for BuyHalfBusinessSetupUI-------------------------//\r\nvar BuyHalfBusinessSetupUI = cc.Class({\r\n  name: \"BuyHalfBusinessSetupUI\",\r\n  properties: {\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleLabel: {\r\n      displayName: \"TitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for CompitatorUISetup-------------------------//\r\nvar CompitatorUISetup = cc.Class({\r\n  name: \"CompitatorUISetup\",\r\n  properties: {\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleLabel: {\r\n      displayName: \"TitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    CompEditBox1: {\r\n      displayName: \"CompEditBox1\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    CompEditBox2: {\r\n      displayName: \"CompEditBox2\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    CompEditBox3: {\r\n      displayName: \"CompEditBox3\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for TelevisionADUISetup-------------------------//\r\nvar TelevisionADUISetup = cc.Class({\r\n  name: \"TelevisionADUISetup\",\r\n  properties: {\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleLabel: {\r\n      displayName: \"TitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    MainEditBox: {\r\n      displayName: \"MainEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreenText: {\r\n      displayName: \"DecisionScreenText\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount = \"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount = \"\";\r\nvar EnterBuySellAmount = \"\";\r\nvar StockBusinessName = \"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName = \"\";\r\n\r\nvar HBDiceCounter = 0;\r\nvar BMDiceCounter = 0;\r\nvar NextHalfPayDay = false;\r\n\r\nvar HomeBasedPaymentCompleted = false;\r\nvar BrickMortarPaymentCompleted = false;\r\nvar LoanPayed = false;\r\nvar TotalPayDayAmount = 0;\r\nvar DoublePayDay = false;\r\n\r\nvar GameplayUIManager = cc.Class({\r\n  name: \"GameplayUIManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    BusinessSetupData: {\r\n      default: null,\r\n      type: BusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessSetupUI class\",\r\n    },\r\n    TurnDecisionSetupUI: {\r\n      default: null,\r\n      type: TurnDecisionSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of TurnDecisionSetupUI class\",\r\n    },\r\n    InvestSellSetupUI: {\r\n      default: null,\r\n      type: InvestSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    PayDaySetupUI: {\r\n      default: null,\r\n      type: PayDayUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    SellBusinessSetupUI: {\r\n      default: {},\r\n      type: SellBusinessUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SellBusinessUI class\",\r\n    },\r\n    InvestSetupUI: {\r\n      default: {},\r\n      type: InvestUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestUI class\",\r\n    },\r\n    BuyOrSellSetupUI: {\r\n      default: {},\r\n      type: BuyOrSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyOrSellUI class\",\r\n    },\r\n    OneQuestionSetupUI: {\r\n      default: {},\r\n      type: OneQuestionUI,\r\n      serializable: true,\r\n      tooltip: \"reference of OneQuestionUI class\",\r\n    },\r\n    PartnershipSetupUI: {\r\n      default: {},\r\n      type: PartnershipUI,\r\n      serializable: true,\r\n      tooltip: \"reference of PartnershipUI class\",\r\n    },\r\n    ResultSetupUI: {\r\n      default: {},\r\n      type: ResultUI,\r\n      serializable: true,\r\n      tooltip: \"reference of ResultUI class\",\r\n    },\r\n    BusinessPayDayUISetup: {\r\n      default: {},\r\n      type: BusinessPayDaySetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessPayDaySetupUI class\",\r\n    },\r\n    SelectPlayerForProfitUI: {\r\n      default: {},\r\n      type: SelectPlayerForProfitSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerForProfitSetupUI class\",\r\n    },\r\n\r\n    SelectPlayerTakeOverSetup: {\r\n      default: {},\r\n      type: SelectPlayerGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerGeneric class\",\r\n    },\r\n\r\n    SelectPlayerDamagingSetup: {\r\n      default: {},\r\n      type: SelectPlayerGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerGeneric class\",\r\n    },\r\n\r\n    DecisionDamagingSetup: {\r\n      default: {},\r\n      type: DamagingInformationDecisionSetup,\r\n      serializable: true,\r\n      tooltip: \"reference of DamagingInformationDecisionSetup class\",\r\n    },\r\n\r\n    SelectBusinessTakeOver: {\r\n      default: {},\r\n      type: SelectBusinessGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectBusinessGeneric class\",\r\n    },\r\n    BuyHalfBusinessUISetup: {\r\n      default: {},\r\n      type: BuyHalfBusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyHalfBusinessSetupUI class\",\r\n    },\r\n    LoanPartnershipSetup: {\r\n      default: {},\r\n      type: SelectPlayerGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerGeneric class\",\r\n    },\r\n\r\n    CompareDiceSetup: {\r\n      default: {},\r\n      type: SelectPlayerGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerGeneric class\",\r\n    },\r\n\r\n    SellAllBusinessSetup: {\r\n      default: {},\r\n      type: SelectBusinessGeneric,\r\n      serializable: true,\r\n      tooltip: \"reference of SelectPlayerGeneric class\",\r\n    },\r\n\r\n    CompitatorSetupUI: {\r\n      default: {},\r\n      type: CompitatorUISetup,\r\n      serializable: true,\r\n      tooltip: \"reference of CompitatorUISetup class\",\r\n    },\r\n\r\n    TelevisionADSetupUI: {\r\n      default: {},\r\n      type: TelevisionADUISetup,\r\n      serializable: true,\r\n      tooltip: \"reference of TelevisionADUISetup class\",\r\n    },\r\n    \r\n    PopUpUI: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    PopUpUILabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for pop up screen\",\r\n    },\r\n    PopUpUIButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    BusinessSetupNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for business setup screen\",\r\n    },\r\n    GameplayUIScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for gameplay ui screen\",\r\n    },\r\n    DecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Decision screen\",\r\n    },\r\n    InvestSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest & sell screen\",\r\n    },\r\n    PayDayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for PayDay screen\",\r\n    },\r\n    SellBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellBusiness screen\",\r\n    },\r\n    InvestScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest screen\",\r\n    },\r\n    BuyOrSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BuyOrSell screen\",\r\n    },\r\n    BusinessDoublePayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BusinessDoublePay screen\",\r\n    },\r\n    OneQuestionSpaceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionSpace screen\",\r\n    },\r\n    OneQuestionDecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionDecision screen\",\r\n    },\r\n    SelectPlayerForProfitScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectPlayerForProfit screen\",\r\n    },\r\n    SelectPlayerTakeOverScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectPlayerTakeOver screen\",\r\n    },\r\n    SelectPlayerDamagingScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectPlayerDamaging screen\",\r\n    },\r\n\r\n    LoanPartnershipScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for LoanPartnership screen\",\r\n    },\r\n\r\n    CompareDiceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for CompareDice screen\",\r\n    },\r\n\r\n    CompareDiceDecision1Screen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for CompareDice screen\",\r\n    },\r\n\r\n    CompareDiceDecision2Screen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for CompareDice screen\",\r\n    },\r\n\r\n    CompareDiceDecision2Text: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"Node reference for CompareDice label\",\r\n    },\r\n\r\n    CompareDiceDecision2Button: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for CompareDice button\",\r\n    },\r\n\r\n    SellAllBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellAllBusiness screen\",\r\n    },\r\n    SelectBusinessTakeOverScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SelectBusinessTakeOver screen\",\r\n    },\r\n    InsufficientBalanceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for InsufficientBalanceScreen screen\",\r\n    },\r\n    TempDiceText: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for dice\",\r\n    },\r\n    LeaveRoomButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n    AvatarSprites: {\r\n      default: [],\r\n      type: cc.SpriteFrame,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  /**\r\n    @summary Resets this class global variables and other necessary data onLoad\r\n   **/\r\n  ResetAllData() {\r\n    DoubleDayBusinessHB = 0;\r\n    DoubleDayBusinessBM = 0;\r\n    TelevisionAdTimeout=null;\r\n    SenderADPPlayer=null;\r\n    VoteTimeout=null;\r\n    VotesUpArray=[];\r\n    VotesDownArray=[];\r\n    NextHalfPayDay = false;\r\n    LaonPartnership=false;\r\n    GameManager = null;\r\n    GamePlayReferenceManager = null;\r\n    businessDetailNodes = [];\r\n    businessTakeOverNodes = [];\r\n    businessDamagingNodes = [];\r\n    DamageDecisionResult = 0;\r\n    oneQuestionNodes = [];\r\n    SenderDamagingID = \"\";\r\n    selectPlayerProfitNodes = [];\r\n    selectedPlayerTakeOver = [];\r\n    selectedPlayerDamaging = [];\r\n    LaonPartnershipArray=[];\r\n    CompareDiceArray=[];\r\n    SellAllBusinessArray=[];\r\n    businessDetailPartnershipNodes = [];\r\n    businessDetailPayDayNodes = [];\r\n    PartnerShipData = null;\r\n    PartnerShipOfferReceived = false;\r\n    CancelledID = [];\r\n    SelectedBusinessPayDay = false;\r\n    HMAmount = 0;\r\n    BMAmount = 0;\r\n    BMLocations = 0;\r\n    SelectedBusinessIndex = 0;\r\n    TurnOverForInvest = false;\r\n    BusinessSetupCardFunctionality = false;\r\n    GivenCashBusiness = 0;\r\n    StartAnyBusinessWithoutCash = false;\r\n    PreviousCash = 0;\r\n    RemainingCash=0;\r\n    LoanSelectedPlayerData=null;\r\n    TimeoutRef = null;\r\n    GiveProfitUserID = \"\";\r\n    BankRuptedCard = false;\r\n    InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n    //turn decisions\r\n    TempMarketingAmount = \"\";\r\n    TempHiringLawyer;\r\n\r\n    //buyorsell\r\n    GoldCashAmount = \"\";\r\n    EnterBuySellAmount = \"\";\r\n    StockBusinessName = \"\";\r\n    DiceResult = 0;\r\n    OnceOrShare;\r\n    LocationName = \"\";\r\n\r\n    HomeBasedPaymentCompleted = false;\r\n    BrickMortarPaymentCompleted = false;\r\n    LoanPayed = false;\r\n    TotalPayDayAmount = 0;\r\n    DoublePayDay = false;\r\n    TotalPayDay = 0;\r\n    HBDiceCounter = 0;\r\n    BMDiceCounter = 0;\r\n    PayDayInfo = \"\";\r\n    InvestSellInfo = \"\";\r\n  },\r\n\r\n  /**\r\n    @summary Resets turn variables for goldinvest/goldsold/stokcinvest/stocksold\r\n   **/\r\n  ResetTurnVariable() {\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n  },\r\n\r\n  /**\r\n    @summary check references of class/es needed.\r\n   **/\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n\r\n    if (!GameManager || GameManager == null) GameManager = require(\"GameManager\");\r\n  },\r\n\r\n  /**\r\n    @summary called when this node gets active\r\n   **/\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  /**\r\n    @summary called when this node gets deactive\r\n   **/\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  /**\r\n    @summary called when instance of the class is loaded\r\n   **/\r\n  onLoad() {\r\n    this.ResetAllData();\r\n    this.CheckReferences();\r\n\r\n    //declaring local variables\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n    this.IsBotTurn = false;\r\n    this.PayDayCount = 0;\r\n    this.DoublePayDayCount = 0;\r\n    this.IsBankrupted = false;\r\n    this.BankruptedAmount = 0;\r\n    this.AddCashAmount = \"\";\r\n    this.Timer = 0;\r\n    this.TimerStarted = false;\r\n    TimerTimeout = null;\r\n  },\r\n\r\n  ToggleScreen_InsufficientBalance(_state) {\r\n    this.InsufficientBalanceScreen.active = _state;\r\n  },\r\n\r\n  Exit___InsufficientBalance() {\r\n    this.ToggleScreen_InsufficientBalance(false);\r\n  },\r\n\r\n  //#region Spectate UI Setup\r\n  InitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = true;\r\n  },\r\n\r\n  CloseInitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = false;\r\n    // console.trace(\"closedddddddddddddddddddddddddddddddddddd\");\r\n  },\r\n\r\n  ToggleLeaveRoomButton_SpectateModeUI(_state) {\r\n    this.LeaveRoomButton.active = _state;\r\n  },\r\n\r\n  OnLeaveButtonClicked_SpectateModeUI() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(true);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"MainMenu\");\r\n    }, 500);\r\n  },\r\n  //#endregion\r\n\r\n  //#region BusinessSetup with loan\r\n  //Business setup ui//------------------------\r\n  ToggleCashAddScreen_BusinessSetup: function (_state) {\r\n    this.BusinessSetupData.AddCashScreen.active = _state;\r\n  },\r\n\r\n  EnableCashAdd_BusinessSetup: function () {\r\n    this.BusinessSetupData.AddCashEditBox.string = \"\";\r\n    this.AddCashAmount = \"\";\r\n    this.ToggleCashAddScreen_BusinessSetup(true);\r\n    this.BusinessSetupData.AddCashLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash;\r\n  },\r\n\r\n  OnCashAdd_BusinessSetup: function (_val) {\r\n    this.AddCashAmount = _val;\r\n  },\r\n\r\n  OnClickDoneCashAdd_BusinessSetup: function () {\r\n    this.ToggleCashAddScreen_BusinessSetup(false);\r\n    var _gamecash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n    var _amount = parseInt(this.AddCashAmount);\r\n    if (this.AddCashAmount != null && this.AddCashAmount != \"\" && this.AddCashAmount != undefined) {\r\n      if (_amount <= _gamecash) {\r\n        PlayerDataIntance.Cash += _amount;\r\n        console.log(PlayerDataIntance.Cash);\r\n        this.BusinessSetupData.PlayerCashUI.string = PlayerDataIntance.Cash.toString();\r\n        _gamecash -= _amount;\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _gamecash.toString();\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash, -1, -1);\r\n\r\n        this.ShowToast(\"Cash $\" + this.AddCashAmount + \" has been added.\");\r\n        this.BusinessSetupData.AddCashEditBox.string = \"\";\r\n        this.AddCashAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you do not have enough in game cash.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  StartNewBusiness_BusinessSetup: function (isFirstTime, insideGame = false, modeIndex = 0, _isBankrupted = false, _BankruptAmount = 0, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false,_loanPartnership=false,_OtherplayerData=null) {\r\n    //called first time form GameManager onload function\r\n    this.CheckReferences();\r\n    this.BusinessSetupNode.active = true;\r\n\r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n    LaonPartnership=_loanPartnership;\r\n    LoanSelectedPlayerData=_OtherplayerData;\r\n\r\n    this.IsBankrupted = _isBankrupted;\r\n    this.BankruptedAmount = _BankruptAmount;\r\n\r\n    if (_isBankrupted) this.ResetTurnVariable();\r\n\r\n    this.Init_BusinessSetup(isFirstTime, insideGame, modeIndex, _isBankrupted,_loanPartnership);\r\n  },\r\n  Init_BusinessSetup: function (isFirstTime, insideGame = false, modeIndex = 0, _isBankrupted = false,_loanPartnership=false) {\r\n    PlayerDataIntance = new GameManager.PlayerData();\r\n    PlayerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n    PlayerBusinessDataIntance = new GameManager.BusinessInfo();\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n    this.BusinessSetupData.AddButtonNode.active = false;\r\n\r\n    if (isFirstTime) {\r\n      this.BusinessSetupData.ExitButtonNode.active = false;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n      PlayerDataIntance.Cash = StartGameCash;\r\n      this.BusinessSetupData.AddButtonNode.active = true;\r\n    }\r\n\r\n    this.ResetButtonStates_BusinessSetup();\r\n\r\n    if (insideGame) {\r\n      this.BusinessSetupData.ExitButtonNode.active = true;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID == GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID) {\r\n          InsideGameBusinessSetup = index;\r\n          PlayerDataIntance = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n          if (BusinessSetupCardFunctionality) {\r\n            if (StartAnyBusinessWithoutCash) {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = 0;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n              this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n            } else {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = GivenCashBusiness;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n              this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n            }\r\n          } else {\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n            this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);\r\n            this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      InsideGameBusinessSetup = -1;\r\n      this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n      this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n      this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n      this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.avatarId));\r\n    }\r\n  },\r\n  GetObj_BusinessSetup: function () {\r\n    return this.BusinessSetupData;\r\n  },\r\n  OnChangeName_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n    PlayerDataIntance.PlayerName = name;\r\n  },\r\n  OnChangeUID_BusinessSetup: function (UID) {\r\n    PlayerDataIntance.PlayerUID = UID;\r\n  },\r\n  OnChangAvatarID_BusinessSetup: function (UID) {\r\n    if (isNaN(UID) || UID == undefined) UID = 0;\r\n\r\n    PlayerDataIntance.AvatarID = UID;\r\n  },\r\n  OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessTypeTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessTypeDescription = name;\r\n  },\r\n  OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessNameTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessName = name;\r\n  },\r\n  ResetButtonStates_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BusinessTypeLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameTextUI = \"\";\r\n    this.BusinessSetupData.BusinessTypeTextUI = \"\";\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n  },\r\n  OnHomeBasedSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = true;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.HomeBased;\r\n  },\r\n  OnBrickMortarSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = true;\r\n\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.brickAndmortar;\r\n  },\r\n  OnChangeCash_BusinessSetup: function (amount) {\r\n    this.BusinessSetupData.PlayerCashUI.string = amount;\r\n    PlayerDataIntance.Cash = amount;\r\n  },\r\n  CalculateLoan_BusinessSetup: function (amount) {\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    if (!BusinessSetupCardFunctionality) {\r\n      for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n        if (PlayerDataIntance.NoOfBusiness[index].LoanTaken) {\r\n          _loanTaken = true;\r\n          _businessIndex = index;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_loanTaken) {\r\n        this.ShowToast(\"You have already taken loan of $\" + PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount, LongMessageTime);\r\n      } else {\r\n        if (PlayerDataIntance.Cash >= amount) {\r\n          this.ShowToast(\"You do not need loan, you have enough cash to buy current selected business.\", LongMessageTime);\r\n        } else {\r\n          this.BusinessSetupData.LoanSetupNode.active = true;\r\n          RequiredCash = Math.abs(parseInt(PlayerDataIntance.Cash) - amount);\r\n          this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(cc.Label).string = \"$\" + RequiredCash;\r\n        }\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanButtonClicked_BusinessSetup: function (event) {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar) {\r\n        this.CalculateLoan_BusinessSetup(50000);\r\n      } else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased) {\r\n        this.CalculateLoan_BusinessSetup(10000);\r\n      } else {\r\n        this.ShowToast(\"please select business between Home Based and brick & mortar.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup or loan already taken.\");\r\n    }\r\n  },\r\n  OnLoanBackButtonClicked_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanSetupNode.active = false;\r\n  },\r\n  HighLightLoanSelection_BusinessSetup: function (index) {\r\n    for (var i = 0; i < this.BusinessSetupData.LoanAmountLabel.length; i++) {\r\n      if (index == i) this.BusinessSetupData.LoanAmountLabel[i].children[0].active = true;\r\n      else this.BusinessSetupData.LoanAmountLabel[i].children[0].active = false;\r\n    }\r\n  },\r\n  OnLoanAmountChoosed_01_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.Other;\r\n    this.HighLightLoanSelection_BusinessSetup(0);\r\n  },\r\n  OnLoanAmountChoosed_02_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TenThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(1);\r\n  },\r\n  OnLoanAmountChoosed_03_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TentyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(2);\r\n  },\r\n  OnLoanAmountChoosed_04_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.ThirtyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(3);\r\n  },\r\n  OnLoanAmountChoosed_05_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FortyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(4);\r\n  },\r\n  OnLoanAmountChoosed_06_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FiftyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(5);\r\n  },\r\n  OnTakenLoanClicked_BusinessSetup: function (event) {\r\n    if (this.BusinessSetupData.LoanAmount == LoanAmountEnum.Other) PlayerBusinessDataIntance.LoanAmount = RequiredCash;\r\n    else PlayerBusinessDataIntance.LoanAmount = parseInt(this.BusinessSetupData.LoanAmount);\r\n\r\n    PlayerBusinessDataIntance.LoanTaken = true;\r\n\r\n    PlayerDataIntance.LoanTaken=true;\r\n    PlayerDataIntance.LoanAmount=PlayerBusinessDataIntance.LoanAmount;\r\n\r\n    this.OnLoanBackButtonClicked_BusinessSetup();\r\n    PlayerDataIntance.Cash = PlayerDataIntance.Cash + PlayerBusinessDataIntance.LoanAmount;\r\n    this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n  },\r\n\r\n  PushDataForPlayerLeft(_data) {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    if (_mode == 2) {\r\n      _playerDataIntance = new GameManager.PlayerData();\r\n      _playerDataIntance.Cash = 20000;\r\n      _playerDataIntance.PlayerID = _data.userID;\r\n      _playerDataIntance.PlayerName = _data.name;\r\n      _playerDataIntance.AvatarID = 0;\r\n      _playerDataIntance.HomeBasedAmount = 1;\r\n      _playerDataIntance.IsActive = false;\r\n      _playerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n      _playerBusinessDataIntance = new GameManager.BusinessInfo();\r\n      _playerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.HomeBased;\r\n      _playerBusinessDataIntance.BusinessTypeDescription = \"Saloon\";\r\n      _playerBusinessDataIntance.BusinessName = \"Eva Beauty\";\r\n      _playerDataIntance.NoOfBusiness.push(_playerBusinessDataIntance);\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1, _playerDataIntance);\r\n    }\r\n  },\r\n  SyncData: function (_data, _ID, _playerLeft = false) {\r\n    var _isSpectate = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"];\r\n\r\n    if (_isSpectate) {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetRealActors();\r\n    }\r\n\r\n    if (!_playerLeft) {\r\n      if (_ID != GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr) GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n    }\r\n\r\n    // console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length >= GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers) {\r\n      //setting room property to declare initial setup has been\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"InitialSetup\", true, true);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo, true);\r\n      this.BusinessSetupData.WaitingStatusNode.active = false;\r\n      this.BusinessSetupNode.active = false;\r\n      this.GameplayUIScreen.active = true;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n      console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n    }\r\n  },\r\n\r\n  PurchaseBusiness: function (_amount, _businessName, _isHomeBased) {\r\n    if (PlayerDataIntance.Cash < _amount && !StartAnyBusinessWithoutCash) {\r\n      this.ShowToast(\"You have not enough cash to buy this \" + _businessName + \" business.\", LongMessageTime);\r\n    } else {\r\n      if (_isHomeBased) {\r\n        if (PlayerDataIntance.HomeBasedAmount < 3) {\r\n          if (!StartAnyBusinessWithoutCash) {\r\n            PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n            RemainingCash=PlayerDataIntance.Cash;\r\n            this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n          }\r\n\r\n          this.StartGame = true;\r\n          PlayerDataIntance.HomeBasedAmount++;\r\n        } else {\r\n          this.StartGame = false;\r\n          this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n        }\r\n      } else {\r\n        if (!StartAnyBusinessWithoutCash) {\r\n          PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n          RemainingCash=PlayerDataIntance.Cash;\r\n          this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n        }\r\n        this.StartGame = true;\r\n        PlayerDataIntance.BrickAndMortarAmount++;\r\n      }\r\n    }\r\n  },\r\n\r\n  Exit_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      this.BusinessSetupNode.active = false;\r\n\r\n      if (PlayerBusinessDataIntance.LoanTaken) {\r\n        PlayerBusinessDataIntance.LoanTaken = false;\r\n        PlayerDataIntance.Cash = PlayerDataIntance.Cash - PlayerBusinessDataIntance.LoanAmount;\r\n        PlayerBusinessDataIntance.LoanAmount = 0;\r\n        this.ShowToast(\"Reverting back loan amount.\");\r\n      }\r\n    } else {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      RemainingCash=0;\r\n      LoanSelectedPlayerData=null;\r\n      LaonPartnership=false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  InitialSetup_BusinessSetup: function () {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (this.IsBankrupted) {\r\n      PlayerDataIntance.IsBankrupt = true;\r\n      PlayerDataIntance.BankruptAmount = this.BankruptedAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()] = PlayerDataIntance;\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n    }\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      //setting player current data in custom properties when his/her turn overs\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n\r\n      if (!this.IsBankrupted) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1, PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n\r\n        var _data = { Data: { bankrupted: true, turn: GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(), PlayerDataMain: PlayerDataIntance } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(9, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else if (_mode == 1) {\r\n      //for AI\r\n      if (!this.IsBankrupted) {\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n        setTimeout(() => {\r\n          this.BusinessSetupData.WaitingStatusNode.active = false;\r\n          this.BusinessSetupNode.active = false;\r\n          this.GameplayUIScreen.active = true;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n        }, 1600);\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else {\r\n      console.error(\"no mode selected\");\r\n    }\r\n  },\r\n\r\n  StartNewSetup_DuringGame_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      this.ToggleDecision_TurnDecision(true);\r\n    } else {\r\n\r\n      if(LaonPartnership)\r\n      {\r\n        PlayerDataIntance.Cash=PreviousCash+RemainingCash;\r\n      }\r\n      else\r\n      {\r\n        PlayerDataIntance.Cash = PreviousCash;\r\n      }\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      LaonPartnership=false;\r\n      RemainingCash=0;\r\n      LoanSelectedPlayerData=null;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  PayAmountToPlayGame: function () {\r\n    this.StartGame = false;\r\n\r\n    if (PlayerBusinessDataIntance.BusinessTypeDescription == \"\") this.ShowToast(\"please write a business type.\");\r\n    else if (PlayerBusinessDataIntance.BusinessName == \"\") this.ShowToast(\"please write a business name.\");\r\n    else {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.None || PlayerBusinessDataIntance.BusinessType == undefined) {\r\n        this.ShowToast(\"please select a business\");\r\n        return;\r\n      }\r\n\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased)\r\n        //if selected business is homebassed\r\n        this.PurchaseBusiness(10000, \"home\", true);\r\n      else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar)\r\n        //if selected business is brick and mortar\r\n        this.PurchaseBusiness(50000, \"brick and mortar\", false);\r\n\r\n      if (this.StartGame == true || this.IsBankrupted == true) {\r\n\r\n        if(LaonPartnership)\r\n        {\r\n          PlayerBusinessDataIntance.LoanTaken=true;\r\n          PlayerBusinessDataIntance.LoanAmount=50000;\r\n\r\n          PlayerDataIntance.LoanAmount=50000;\r\n          PlayerDataIntance.LoanTaken=true;\r\n\r\n          PlayerBusinessDataIntance.IsPartnership = true;\r\n          PlayerBusinessDataIntance.PartnerID = LoanSelectedPlayerData.PlayerUID;\r\n          PlayerBusinessDataIntance.PartnerName = LoanSelectedPlayerData.PlayerName;\r\n\r\n          var info=\"You have been selected by player \"+PlayerDataIntance.PlayerName+\" to go into partnership in their business named \"+PlayerBusinessDataIntance.BusinessName;\r\n          this.RaiseEventToSyncInfo(info,LoanSelectedPlayerData.PlayerUID)\r\n        }\r\n\r\n        PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n        if (InsideGameBusinessSetup != -1) {\r\n          //if start new business has not been called from inside game\r\n          this.StartNewSetup_DuringGame_BusinessSetup();\r\n        }\r\n        //if start new business has been called at start of game as initial setup\r\n        else {\r\n          this.InitialSetup_BusinessSetup();\r\n        }\r\n\r\n        //prtinting all values to console\r\n        for (var i = 0; i < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; i++) {\r\n          console.log(\"player name: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n          console.log(\"player ID: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n          console.log(\"Is player bot: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n          console.log(\"no of business of player (see below): \");\r\n          console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n          console.log(\"player cash: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n          console.log(\"player taken loan: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n          console.log(\"taken loan amount: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region TurnDecisionSetupUI\r\n  //TurnDecisionSetupUI//------------------------\r\n  ToggleDecision_TurnDecision: function (isactive) {\r\n    this.DecisionScreen.active = isactive;\r\n\r\n    var _active = isactive;\r\n\r\n    if (_active) {\r\n      _active = false;\r\n      this.TurnDecisionSetupUI.BlockerNode.active = false;\r\n      this.Timer = globalTurnTimer;\r\n      this.TimerStarted = true;\r\n      this.TurnDecisionSetupUI.TimerText.string = this.Timer + \" seconds are left to choose above options except 'Roll The Dice'\";\r\n      clearTimeout(TimerTimeout);\r\n      this.UpdateTimer();\r\n    } else {\r\n      clearTimeout(TimerTimeout);\r\n      this.Timer = 0;\r\n      this.TimerStarted = false;\r\n      this.TurnDecisionSetupUI.TimerText.string = \"\";\r\n      this.TurnDecisionSetupUI.BlockerNode.active = false;\r\n    }\r\n\r\n    this.UpdateCash_TurnDecision();\r\n  },\r\n\r\n  UpdateTimer() {\r\n    if (this.Timer > 0) {\r\n      this.Timer = this.Timer - 1;\r\n      this.TurnDecisionSetupUI.TimerText.string = this.Timer + \" seconds are left to choose above options except 'Roll The Dice'\";\r\n      TimerTimeout = setTimeout(() => {\r\n        this.UpdateTimer();\r\n      }, 1000);\r\n    } else {\r\n      clearTimeout(TimerTimeout);\r\n      this.Timer = 0;\r\n      this.TimerStarted = false;\r\n      this.TurnDecisionSetupUI.TimerText.string = \"Timer is over, you can select only 'Roll The Dice' now.\";\r\n      this.TurnDecisionSetupUI.BlockerNode.active = true;\r\n    }\r\n  },\r\n\r\n  UpdateCash_TurnDecision: function () {\r\n    this.TurnDecisionSetupUI.CashAmountLabel.string = \"$ \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].Cash;\r\n  },\r\n\r\n  OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    TempMarketingAmount = amount;\r\n  },\r\n\r\n  CheckMarketingAmountShare_CardFunctionality(_amount = 0) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n      if (_manager.PlayerGameInfo[index].CardFunctionality.HasMarketingCompany) {\r\n        this.RaiseEventForMarketingShare(_amount, _manager.PlayerGameInfo[index].PlayerUID, \"You have received market share of $\" + _amount + \" from your marketing company\");\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventForMarketingShare(_amnt, _id, _msg) {\r\n    var _data = { amount: _amnt, ID: _id, msg: _msg };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(22, _data);\r\n  },\r\n\r\n  OnMarketingAmountSelected_TurnDecision: function () {\r\n    if (TempMarketingAmount == \"\" || TempMarketingAmount == null) {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      this.marketingAmount = parseInt(TempMarketingAmount);\r\n      console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n\r\n      //if player entered amount is greater than total cash he owns\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= this.marketingAmount) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - this.marketingAmount;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount + this.marketingAmount;\r\n        this.ShowToast(\r\n          \"you successfully marketed amount of $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount + \" , remaining cash is $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + \".\",\r\n          LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n        this.CheckMarketingAmountShare_CardFunctionality(this.marketingAmount);\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you don't have enough money.\");\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      }\r\n    }\r\n  },\r\n\r\n  OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n    // if player has more than 5000$\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus) {\r\n      this.ShowToast(\"you have already hired a lawyer.\");\r\n    } else {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= 5000) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus = true;\r\n        TempHiringLawyer = true;\r\n        console.log(TempHiringLawyer);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - 5000;\r\n        this.ShowToast(\"you have successfully hired a lawyer, remaining cash is $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + \".\", LongMessageTime);\r\n        this.UpdateCash_TurnDecision();\r\n      } else {\r\n        this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  onLocationNameChanged_ExpandBusiness_TurnDecision(_name) {\r\n    LocationName = _name;\r\n  },\r\n  OnExpandButtonClicked_TurnDecision: function (event = null, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    //if player has brick and mortar business he could expand it\r\n    console.log(\"expand business\");\r\n\r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = true;\r\n    var generatedLength = GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision(BusinessSetupCardFunctionality, GivenCashBusiness, StartAnyBusinessWithoutCash);\r\n\r\n    if (generatedLength == 0) {\r\n      this.ShowToast(\"You have no brick and mortar business to expand.\");\r\n      setTimeout(() => {\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n\r\n        if (BusinessSetupCardFunctionality) {\r\n          this.CheckReferences();\r\n          LocationName = \"\";\r\n          console.log(\"expand business exit called\");\r\n          GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n          this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n          BusinessSetupCardFunctionality = false;\r\n          GivenCashBusiness = 0;\r\n          StartAnyBusinessWithoutCash = false;\r\n          RemainingCash=0;\r\n          LoanSelectedPlayerData=null;\r\n          LaonPartnership=false;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n        }\r\n      }, 1600);\r\n    }\r\n  },\r\n\r\n  OnExpandButtonExitClicked_TurnDecision: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      this.UpdateCash_TurnDecision();\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n    } else {\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      RemainingCash=0;\r\n      LoanSelectedPlayerData=null;\r\n      LaonPartnership=false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  OnNewBusinessButtonClicked_TurnDecision: function () {\r\n    console.log(\"starting new business\");\r\n    this.StartNewBusiness_BusinessSetup(false, true);\r\n  },\r\n\r\n  OnGoldAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    GoldCashAmount = amount;\r\n  },\r\n\r\n  OnGoldDiceClicked_TurnDecision: function () {\r\n    if (!this.GoldInvested) {\r\n      this.GoldInvested = true;\r\n      EnterBuySellAmount = \"\";\r\n      this.ToggleInvestSellScreen_InvestSell(true);\r\n      this.InvestSellSetupUI.InvestState = InvestEnum.GoldInvest;\r\n      DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n      OnceOrShare = DiceResult * 1000;\r\n\r\n      this.AssignData_InvestSell(\"Invest In GOLD\", DiceResult, \"Each Ounce of GOLD price is:\", OnceOrShare + \"/ounce\", \"Enter the number of ounce of GOLD you want to BUY\", \"Total Buying Amount:\", OnceOrShare + \"*0=0\", \"BUY\", this.InvestSellSetupUI.InvestState);\r\n    } else {\r\n      this.ShowToast(\"You can invest in gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n    StockBusinessName = name;\r\n  },\r\n\r\n  OnStockDiceClicked_TurnDecision: function (event = null, _isTurnOver = false) {\r\n    TurnOverForInvest = _isTurnOver;\r\n\r\n    console.error(_isTurnOver);\r\n\r\n    if (TurnOverForInvest) StockBusinessName = \"Friend's Business\";\r\n\r\n    if (!this.StockInvested || TurnOverForInvest) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (StockBusinessName == \"\") {\r\n        this.ResetStockBusinessNameInput();\r\n        this.ShowToast(\"Please enter a business name to invest.\");\r\n      } else {\r\n        this.StockInvested = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockInvest;\r\n\r\n        if (!TurnOverForInvest) DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        else DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Invest in Stock\", DiceResult, \"Each Share of stock price is:\", OnceOrShare + \"/share\", \"Enter the number of shares of stock you want to BUY\", \"Total Buying Amount:\", OnceOrShare + \"*0=0\", \"BUY\", this.InvestSellSetupUI.InvestState);\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can invest in stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellGoldClicked_TurnDecision: function () {\r\n    if (!this.GoldSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount > 0) {\r\n        this.GoldSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.GoldSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Sell GOLD\", DiceResult, \"Each Ounce of GOLD price is:\", OnceOrShare + \"/ounce\", \"Enter the number of ounce of GOLD you want to SELL\", \"Total Selling Amount:\", OnceOrShare + \"*0=0\", \"SELL\", this.InvestSellSetupUI.InvestState);\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any GOLD ounces, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellStockClicked_TurnDecision: function () {\r\n    if (!this.StockSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount > 0) {\r\n        this.StockSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Sell STOCK\", DiceResult, \"Each share of stock price is:\", OnceOrShare + \"/share\", \"Enter the number of shares of stock you want to SELL\", \"Total Selling Amount:\", OnceOrShare + \"*0=0\", \"SELL\", this.InvestSellSetupUI.InvestState);\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnPartnershipClicked_TurnDecision: function () {\r\n    console.log(\"go into partner ship\");\r\n    // this.ShowToast(\"work in progress, coming soon...\");\r\n    // var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    this.EnablePartnership_PartnerShipSetup();\r\n  },\r\n\r\n  OnRollDiceClicked_TurnDecision: function () {\r\n    console.log(\"roll the dice\");\r\n    this.ToggleDecision_TurnDecision(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n  },\r\n\r\n  PrintDiceValue_TurnDecision: function (value) {\r\n    //this.TempDiceText.string=value;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Partnership setup\r\n  ToggleScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.WaitingStatusScreen.active = _state;\r\n  },\r\n\r\n  ToggleDecisionScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.DecisionScreen.active = _state;\r\n  },\r\n\r\n  EnablePartnership_PartnerShipSetup() {\r\n    CancelledID = [];\r\n    this.Reset_PartnerShipSetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.ToggleScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.PlayerName.string = _tempData.PlayerName;\r\n    this.PartnershipSetupUI.PlayerCash.string = \"$\" + _tempData.Cash;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.PartnershipSetupUI.PartnerShipPrefab);\r\n      node.parent = this.PartnershipSetupUI.ScrollContent;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n        var _allLocationsAmount = _totalLocations * 25000;\r\n        var _finalAmount = 50000 + _allLocationsAmount;\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n      } else {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n      }\r\n\r\n      businessDetailPartnershipNodes.push(node);\r\n    }\r\n  },\r\n\r\n  EnablePartnershipDecision_PartnerShipSetup(_msg) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.ToggleDecisionScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.DecisionPlayerName.string = _tempData.PlayerName;\r\n    this.PartnershipSetupUI.DecisionPlayerCash.string = \"$\" + _tempData.Cash;\r\n    this.PartnershipSetupUI.DecisionDescription.string = _msg;\r\n  },\r\n\r\n  Exit_PartnerShipSetup() {\r\n    this.Reset_PartnerShipSetup();\r\n    this.ToggleScreen_PartnerShipSetup(false);\r\n  },\r\n\r\n  Reset_PartnerShipSetup() {\r\n    for (let index = 0; index < businessDetailPartnershipNodes.length; index++) {\r\n      businessDetailPartnershipNodes[index].destroy();\r\n    }\r\n    businessDetailPartnershipNodes = [];\r\n  },\r\n\r\n  ReceiveEvent_PartnershipSetup(_data) {\r\n    PartnerShipOfferReceived = true;\r\n    PartnerShipData = _data;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 1) _businessMode = \"Home Based\";\r\n    else if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 2) _businessMode = \"Brick & Mortar\";\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _msg =\r\n        \"you have received partnership offer by \" +\r\n        _playerData.PlayerName +\r\n        \" , following are the details of business: \" +\r\n        \"\\n\" +\r\n        \"\\n\" +\r\n        \"Business Name: \" +\r\n        _playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessName +\r\n        \"\\n\" +\r\n        \"Business Mode: \" +\r\n        _businessMode +\r\n        \"\\n\" +\r\n        \"Business Value: $\" +\r\n        _businessValue +\r\n        \"\\n\" +\r\n        \"Cash Payment: $\" +\r\n        _payAmount +\r\n        \"\\n\" +\r\n        \"\\n\" +\r\n        \"if offer is accepted you will receive 50% share of that particular business and will receive profit/lose on that particular business.\";\r\n\r\n      this.EnablePartnershipDecision_PartnerShipSetup(_msg);\r\n    }\r\n  },\r\n\r\n  AcceptOffer_PartnershipSetup() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _allActors = GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _data = PartnerShipData;\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    var myIndex = _manager.GetMyIndex();\r\n\r\n    if (PartnerShipOfferReceived == true) {\r\n      if (_manager.PlayerGameInfo[myIndex].Cash >= _payAmount) {\r\n        _manager.PlayerGameInfo[myIndex].Cash -= _payAmount;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[myIndex]);\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(true, _payAmount, false, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"congratulations! you have started business partnership\");\r\n      } else {\r\n        this.ShowToast(\"Not enough cash.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"Offer has been accepted by other player.\");\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n    }\r\n  },\r\n\r\n  CancelOffer_PartnershipSetup() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _data = PartnerShipData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var myIndex = _manager.GetMyIndex();\r\n    console.log(_manager.PlayerGameInfo[myIndex].PlayerUID);\r\n    if (PartnerShipOfferReceived == true) {\r\n      this.RaiseEventDecisionAnswer_PartnershipSetup(false, 0, true, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    } else {\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    }\r\n  },\r\n\r\n  RaiseEventDecisionAnswer_PartnershipSetup(_isAccepted = false, _payment = 0, _isCancelled = false, _uID = \"\", _data = null, _businessIndex = 0) {\r\n    var _mainData = { Data: { Accepted: _isAccepted, CashPayment: _payment, Cancelled: _isCancelled, PlayerID: _uID, PlayerData: _data, BusinessIndex: _businessIndex } };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(12, _mainData);\r\n  },\r\n\r\n  ReceiveEventDecisionAnswer_PartnershipSetup(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = _manager.GetTurnNumber();\r\n\r\n      console.log(_data);\r\n      var _accepted = _data.Data.Accepted;\r\n      var _cash = _data.Data.CashPayment;\r\n      var _cancelled = _data.Data.Cancelled;\r\n      var _uid = _data.Data.PlayerID;\r\n      var _playerData = _data.Data.PlayerData;\r\n      var _businessIndex = _data.Data.BusinessIndex;\r\n\r\n      console.log(\"answer received\");\r\n      if (_manager.PlayerGameInfo[_playerIndex].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        if (_accepted) {\r\n          this.ToggleScreen_PartnerShipSetup(false);\r\n          this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n          _manager.PlayerGameInfo[_playerIndex].Cash += _cash;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerID = _uid;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerName = _playerData.PlayerName;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"offer accepted\");\r\n          this.ShowToast(\"your partnership offer has been accepted by \" + _playerData.PlayerName + \", cash $\" + _cash + \" has been added to your account.\", LongMessageTime);\r\n          this.UpdateCash_TurnDecision();\r\n        } else if (_cancelled) {\r\n          if (CancelledID.includes(_uid) == false) CancelledID.push(_uid);\r\n\r\n          console.log(CancelledID);\r\n          if (CancelledID.length == _manager.PlayerGameInfo.length - 1) {\r\n            this.ToggleScreen_PartnerShipSetup(false);\r\n            this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n            this.ShowToast(\"your partnership offer has been cancelled by all other users.\");\r\n          }\r\n\r\n          console.log(\"offer rejected\");\r\n        }\r\n      } else {\r\n        if (_accepted) {\r\n          PartnerShipOfferReceived = false;\r\n          this.ShowToast(\"Offer has been accepted by other player.\");\r\n          this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        } else if (_cancelled) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Invest and sell moddule\r\n\r\n  ResetGoldInput() {\r\n    this.TurnDecisionSetupUI.GoldEditBox.string = \"\";\r\n    GoldCashAmount = \"\";\r\n  },\r\n\r\n  ResetStockBusinessNameInput() {\r\n    this.TurnDecisionSetupUI.StockEditBox.string = \"\";\r\n    StockBusinessName = \"\";\r\n  },\r\n\r\n  onAmountChanged_InvestSell(_amount) {\r\n    EnterBuySellAmount = _amount;\r\n\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n    } else {\r\n      var _amount = parseInt(EnterBuySellAmount);\r\n      var _amount = OnceOrShare * _amount;\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*\" + EnterBuySellAmount + \"=\" + _amount);\r\n    }\r\n  },\r\n\r\n  ToggleInvestSellScreen_InvestSell(_state) {\r\n    this.InvestSellScreen.active = _state;\r\n    this.UpdateCash_TurnDecision();\r\n    this.ResetGoldInput();\r\n    this.ResetStockBusinessNameInput();\r\n  },\r\n\r\n  AssignData_InvestSell(_title, _diceResult, _priceTitle, _priceValue, _buyOrSellTitle, _totalAmountTitle, _totalAmountValue, _buttonName, _state) {\r\n    this.CheckReferences();\r\n    this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n    this.InvestSellSetupUI.TitleLabel.string = _title;\r\n    this.InvestSellSetupUI.DiceResultLabel.string = _diceResult;\r\n    this.InvestSellSetupUI.PriceTitleLabel.string = _priceTitle;\r\n    this.InvestSellSetupUI.PriceValueLabel.string = _priceValue;\r\n    this.InvestSellSetupUI.BuyOrSellTitleLabel.string = _buyOrSellTitle;\r\n    this.InvestSellSetupUI.TotalAmountTitleLabel.string = _totalAmountTitle;\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n    this.InvestSellSetupUI.ButtonNameLabel.string = _buttonName;\r\n  },\r\n\r\n  UpdateData_InvestSell(_totalAmountValue) {\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n  },\r\n\r\n  ApplyButton_InvestSell() {\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      InvestSellInfo = \"\";\r\n\r\n      if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount += _amount;\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" ounces of GOLD\", LongMessageTime);\r\n\r\n          InvestSellInfo = \"Buying GOLD:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per Ounce price: $\" + OnceOrShare + \"\\n\" + \"Purchased Ounces: \" + _amount + \"\\n\" + \"Total Payment for Ounces: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        if (_amount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount -= _amount;\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" ounces of GOLD for  $\" + _TotalAmount, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Selling GOLD:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per Ounce price: $\" + OnceOrShare + \"\\n\" + \"Sold Ounces: \" + _amount + \"\\n\" + \"Total Payment for Ounces: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"you don't have enough GOLD ounces, you own \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount + \" of GOLD ounces\", LongMessageTime);\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount += _amount;\r\n          //can add multiple stocks with business name in object if required\r\n\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" shares of business \" + StockBusinessName, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Buying STOCK:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per share price: $\" + OnceOrShare + \"\\n\" + \"Purchased shares: \" + _amount + \"\\n\" + \"Total Payment for shares: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n\r\n        if (_amount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount -= _amount;\r\n\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" shares of stock for  $\" + _TotalAmount, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Selling STOCK:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per share price: $\" + OnceOrShare + \"\\n\" + \"Sold shares: \" + _amount + \"\\n\" + \"Total Payment for shares: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"you don't have enough stocks shares, you own \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount + \" of stock shares\", LongMessageTime);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ExitButton_InvestSell() {\r\n    this.ToggleInvestSellScreen_InvestSell(false);\r\n\r\n    if (TurnOverForInvest) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      TurnOverForInvest = false;\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Payday or Double pay Day\r\n  TogglePayDayScreen_PayDay(_state) {\r\n    this.PayDayScreen.active = _state;\r\n  },\r\n\r\n  ToggleResultPanelScreen_PayDay(_state) {\r\n    this.PayDaySetupUI.ResultPanelNode.active = _state;\r\n  },\r\n\r\n  UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken) {\r\n    if (HMAmount == 0) {\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      HomeBasedPaymentCompleted = false;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (BMAmount == 0) {\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      BrickMortarPaymentCompleted = false;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (!loanTaken) {\r\n      LoanPayed = true;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      LoanPayed = false;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n  },\r\n\r\n  GetLoanAmount_PayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    var _loan = 0;\r\n    for (let index = 0; index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n      if (_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loan = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n        break;\r\n      }\r\n    }\r\n    return _loan;\r\n  },\r\n\r\n  AssignData_PayDay(_title, _isDoublePayDay = false, _skipHM = false, _skipBM = false, _isBot = false, _forSelectedBusiness = false, _SelectedBusinessIndex = 0, _hMAmount = 0, _bmAmount = 0, _bmLocation = 0, PaydayCounter = 1, DoublePayCounter = 0, _halfPayday = false) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex];\r\n    TotalPayDay = 0;\r\n\r\n    GiveProfitUserID = \"\";\r\n    if (_manager.PlayerGameInfo[_playerIndex].CanGiveProfitOnPayDay) {\r\n      GiveProfitUserID = _manager.PlayerGameInfo[_playerIndex].UserIDForProfitPayDay;\r\n      _manager.PlayerGameInfo[_playerIndex].CanGiveProfitOnPayDay = false;\r\n      _manager.PlayerGameInfo[_playerIndex].UserIDForProfitPayDay = \"\";\r\n    }\r\n\r\n    console.log(GiveProfitUserID);\r\n    console.log(_manager.PlayerGameInfo[_playerIndex].UserIDForProfitPayDay);\r\n\r\n    if (GiveProfitUserID != \"\") {\r\n      this.ShowToast(\"your whole profit will be transferred to other player this turn.\", 1200);\r\n    }\r\n\r\n    HBDiceCounter = 0;\r\n    BMDiceCounter = 0;\r\n    NextHalfPayDay = _halfPayday;\r\n    //   if (DoublePayCounter == 0) DoublePayCounter = 1;\r\n\r\n    //  if (DoublePayDay) DoublePayCounter = DoublePayCounter * 2;\r\n\r\n    DoubleDayBusinessHB = 0;\r\n    DoubleDayBusinessBM = 0;\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        if (_tempData.NoOfBusiness[index].ReceiveDoublePayDay) {\r\n          DoubleDayBusinessHB++;\r\n        }\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        if (_tempData.NoOfBusiness[index].ReceiveDoublePayDay) {\r\n          DoubleDayBusinessBM++;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (DoubleDayBusinessHB > 0 || DoubleDayBusinessBM > 0) {\r\n      this.ShowToast(\"your will receive double profits on \" + (DoubleDayBusinessHB + DoubleDayBusinessBM) + \" business/es.\", 1200);\r\n    }\r\n\r\n    var _res = PaydayCounter + DoublePayCounter;\r\n    PayDayInfo = \"PayDay Result with multiplier: \" + _res;\r\n    this.IsBotTurn = _isBot;\r\n    this.PayDayCount = PaydayCounter;\r\n    this.DoublePayDayCount = DoublePayCounter;\r\n    DoublePayDay = _isDoublePayDay;\r\n    this.TogglePayDayScreen_PayDay(true);\r\n    this.PayDaySetupUI.TitleLabel.string = _title;\r\n    var _time = 1800;\r\n    SelectedBusinessPayDay = _forSelectedBusiness;\r\n    SelectedBusinessIndex = _SelectedBusinessIndex;\r\n    HMAmount = _hMAmount;\r\n    BMAmount = _bmAmount;\r\n    BMLocations = _bmLocation;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      if (_isBot == false) {\r\n        if (NextHalfPayDay) {\r\n          this.ShowToast(\"your will receive half profits this payday.\", _time);\r\n        }\r\n\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM) this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\", _time);\r\n        else if (_skipHM) this.ShowToast(\"your payday on home based businessess will be skipped.\", _time);\r\n        else if (_skipBM) this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\", _time);\r\n      } else {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM) console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n        else if (_skipHM) console.log(\"your payday on home based businessess will be skipped.\");\r\n        else if (_skipBM) console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n      }\r\n    }\r\n\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n      BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n    }\r\n\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var loanTaken = false;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      loanTaken = _loanTaken;\r\n    }\r\n\r\n    this.PayDaySetupUI.HomeBasedNumberLabel.string = HMAmount;\r\n    this.PayDaySetupUI.BMNumberLabel.string = BMAmount;\r\n    this.PayDaySetupUI.BMNumberLocationLabel.string = BMLocations;\r\n    this.PayDaySetupUI.PassedPayDayCountLabel.string = this.PayDayCount;\r\n\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    //check if loan was skipped previously\r\n    if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) {\r\n      var _loan = this.GetLoanAmount_PayDay();\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $\" + _loan;\r\n    } else {\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $5000\";\r\n    }\r\n\r\n    //check skip payday variables\r\n    if (_skipHM && _skipBM) this.UpdateButtons_PayDay(0, 0, loanTaken);\r\n    else if (_skipHM) this.UpdateButtons_PayDay(0, BMAmount, loanTaken);\r\n    else if (_skipBM) this.UpdateButtons_PayDay(HMAmount, 0, loanTaken);\r\n    else this.UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken);\r\n\r\n    if (_skipBM || _skipHM) {\r\n      setTimeout(() => {\r\n        this.PayDayCompleted();\r\n      }, _time + 200);\r\n    }\r\n\r\n    if (_isBot) {\r\n      setTimeout(() => {\r\n        this.OnHomeBasedPaymentClicked_PayDay();\r\n        this.OnBMPaymentClicked_PayDay();\r\n        this.OnLoanPaymentClicked_PayDay();\r\n      }, 0);\r\n    }\r\n  },\r\n\r\n  OnHomeBasedPaymentClicked_PayDay() {\r\n    if (!HomeBasedPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n      var _halfPayday = NextHalfPayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay) this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      }\r\n\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n\r\n      if (_halfPayday) _multiplier = _multiplier / 2;\r\n\r\n      //partnership code\r\n      if (_doublePayDay) {\r\n        if (this.DoublePayDayCount != 0) {\r\n          _multiplier *= 2 * this.DoublePayDayCount;\r\n        } else {\r\n          _multiplier *= 2;\r\n        }\r\n      }\r\n\r\n      var doublePayDayAdded = _multiplier * _paydaymultiplier * DoubleDayBusinessHB * _dice * 1000;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 1) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _payment = _paydaymultiplier * _multiplier * _dice * 1000 + doublePayDayAdded;\r\n              _amountToBeSend = _payment / 2;\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 1) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _payment = _paydaymultiplier * _multiplier * _dice * 1000 + doublePayDayAdded;\r\n            _amountToBeSend = _payment / 2;\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted > 0) {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n      //partnership code\r\n\r\n      if (!_doublePayDay) TotalPayDayAmount = _multiplier * _paydaymultiplier * HMAmount * _dice * 1000 - _amountToBeAdjusted + doublePayDayAdded;\r\n      else TotalPayDayAmount = _paydaymultiplier * _multiplier * (HMAmount * _dice) * 1000 - _amountToBeAdjusted + doublePayDayAdded;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = HMAmount;\r\n\r\n      if (!_doublePayDay) this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + HMAmount + \"*\" + \"1000)-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n      else this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + HMAmount + \"*\" + \"1000*\" + _multiplier + \")-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo += \"\\n\" + \"\\n\" + \"Home Based Business: \" + HMAmount + \"\\n\" + \"Dice Rolled: \" + _dice + \"\\n\" + \"Amount Received: $\" + TotalPayDayAmount;\r\n      TotalPayDay += TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnBMPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!BrickMortarPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n      var _halfPayday = NextHalfPayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay) this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n      }\r\n\r\n      var _amount = BMAmount + BMLocations;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      if (_halfPayday) _multiplier = _multiplier / 2;\r\n\r\n      if (_doublePayDay) {\r\n        if (this.DoublePayDayCount != 0) {\r\n          _multiplier *= 2 * this.DoublePayDayCount;\r\n        } else {\r\n          _multiplier *= 2;\r\n        }\r\n      }\r\n\r\n      var doublePayDayAdded = _paydaymultiplier * _multiplier * DoubleDayBusinessBM * _dice * 2000;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 2) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _locations = _tempData[index].LocationsName.length + 1;\r\n              var _payment = _paydaymultiplier * _locations * _multiplier * _dice * 2000 + doublePayDayAdded;\r\n              _amountToBeSend = _payment / 2;\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 2) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _locations = _tempData[SelectedBusinessIndex].LocationsName.length + 1;\r\n            var _payment = _paydaymultiplier * _locations * _multiplier * _dice * 2000 + doublePayDayAdded;\r\n            _amountToBeSend = _payment / 2;\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted > 0) {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n\r\n      if (!_doublePayDay) TotalPayDayAmount = _multiplier * _paydaymultiplier * _amount * _dice * 2000 - _amountToBeAdjusted + doublePayDayAdded;\r\n      else TotalPayDayAmount = _paydaymultiplier * _multiplier * (_amount * _dice) * 2000 - _amountToBeAdjusted + doublePayDayAdded;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = _amount;\r\n\r\n      if (!_doublePayDay) this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + _amount + \"*\" + \"2000)-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n      else this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + _amount + \"*\" + \"2000*\" + _multiplier + \")-\" + _amountToBeAdjusted + \"+\" + doublePayDayAdded + \"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo += \"\\n\" + \"\\n\" + \"Brick & Mortar Business: \" + _amount + \"\\n\" + \"Dice Rolled: \" + _dice + \"\\n\" + \"Amount Received: $\" + TotalPayDayAmount;\r\n      TotalPayDay += TotalPayDayAmount;\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnLoanPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!LoanPayed) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _EstimateLoan = 0;\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n        //if player had skippped loan previously call all amount due\r\n        _EstimateLoan = this.GetLoanAmount_PayDay();\r\n      else _EstimateLoan = 5000;\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= _EstimateLoan) {\r\n        LoanPayed = true;\r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - _EstimateLoan;\r\n\r\n        var _loanTaken = false;\r\n        var _businessIndex = 0;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n          if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            _loanTaken = true;\r\n            _businessIndex = index;\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount - _EstimateLoan;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount <= 0) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = 0;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken = false;\r\n        }\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = false;\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        this.PayDayCompleted();\r\n      } else {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = false;\r\n        else this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = true;\r\n\r\n        this.PayDaySetupUI.LoanResultPanelNode.active = true;\r\n        console.error(\"out of money\");\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceivePayment_PayDay() {\r\n    //all\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + TotalPayDayAmount;\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    if (!this.IsBotTurn) {\r\n      this.ShowToast(\"Amount $\" + TotalPayDayAmount + \" has been added to your cash amount, Total Cash has become $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n      setTimeout(() => {\r\n        this.ToggleResultPanelScreen_PayDay(false);\r\n        this.PayDayCompleted();\r\n      }, 100);\r\n    } else {\r\n      console.log(\"Amount $\" + TotalPayDayAmount + \" has been added to your cash amount, Total Cash has become $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n      this.ToggleResultPanelScreen_PayDay(false);\r\n      this.PayDayCompleted();\r\n    }\r\n  },\r\n\r\n  SkipLoanOneTime_PayDay() {\r\n    this.ShowToast(\"You have skipped the loan payment, bank will call upon complete loan amount on next payday\");\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = true;\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    LoanPayed = true;\r\n    this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    this.PayDayCompleted();\r\n    LoanPayed = true;\r\n  },\r\n\r\n  SellBusiness_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    this.EnableSellScreen__SellBusinessUISetup(false);\r\n  },\r\n\r\n  UpdateCash_PayDay(_amount) {\r\n    this.PayDaySetupUI.CashLabel.string = \"$\" + _amount;\r\n  },\r\n\r\n  ExitLoanScreen_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n  },\r\n\r\n  ProcessBankrupt(_showText = true, _txt, _time) {\r\n    if (_showText) {\r\n      this.ShowToast(_txt, _time, false);\r\n    }\r\n    setTimeout(() => {\r\n      this.Exit_SelectPlayerGeneric();\r\n      this.ExitScreen__BusinessGenric();\r\n      this.ToggleDecsion02Screen_CompareDice(false);\r\n      this.ToggleDecsion01Screen_CompareDice(false);\r\n      this.ToggleDiceResultScreen_DamageDecision(false);\r\n      this.ToggleMainScreen_DamageDecision(false);\r\n      this.ExitLoanScreen_PayDay();\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      this.Exit___InsufficientBalance();\r\n      this.ToggleScreen_BuyHalfBusiness(false);\r\n      cc.systemEvent.emit(\"ShowCard\", \"\", false);\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false, false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n    }, _time + 10);\r\n  },\r\n  StartNewGame_PayDay() {\r\n    //if bankrupted you can start new game\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    if (mode == 2) {\r\n      if (BankRuptedCard) {\r\n        BankRuptedCard = false;\r\n        this.ToggleDiceResultScreen_DamageDecision(false);\r\n        this.ToggleMainScreen_DamageDecision(false);\r\n        this.Exit___InsufficientBalance();\r\n        this.Exit_SelectPlayerGeneric();\r\n        this.ToggleDecsion02Screen_CompareDice(false);\r\n        this.ToggleDecsion01Screen_CompareDice(false);\r\n        this.ExitScreen__BusinessGenric();\r\n        this.ExitLoanScreen_PayDay();\r\n        var _sendingData = { ID: SenderDamagingID, Cash: DamageDecisionResult, IsDiceRolled: true, IsBankRupted: true };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(25, _sendingData);\r\n\r\n        var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        var playerData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n        for (let index = 0; index < playerData.length; index++) {\r\n          if (playerData[index].PlayerUID == _myActor.PlayerUID) {\r\n            playerData[index].CardFunctionality.BankruptedNextTurn = true;\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", playerData[index]);\r\n            break;\r\n          }\r\n        }\r\n\r\n        this.ShowToast(\"You will lose all progress and start new game from the start next turn.\", 3000, false);\r\n      } else {\r\n        this.ProcessBankrupt(true, \"You will lose all progress and start new game from the start.\", 3000);\r\n      }\r\n    } else if (mode == 1) {\r\n      this.ProcessBankrupt(true, \"You will lose all progress and start new game from the start.\", 3000);\r\n    }\r\n  },\r\n\r\n  StartNewGame_BankRupted(_txt) {\r\n    //if bankrupted you can start new game\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    this.ProcessBankrupt(true, _txt, 3000);\r\n  },\r\n\r\n  ShowInfo(_data) {\r\n\r\n    console.error(\"reecieved id: \"+_data.PlayerUID);\r\n    if(_data.PlayerUID==\"\")\r\n    {\r\n      this.ShowToast(_data.info, 2000, true);\r\n    }\r\n    else\r\n    {\r\n      var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n      if(mode==2) //real players\r\n      {\r\n          var _myUID=GamePlayReferenceManager.Instance.Get_GameManager().GetMyPlayerUID();\r\n          if(_myUID==_data.PlayerUID)\r\n          {\r\n            this.ShowToast(_data.info, 3000, true);\r\n          }else\r\n          {\r\n            console.error(\"nothing\");\r\n          }\r\n      }\r\n    }\r\n  },\r\n\r\n  PayDayCompleted() {\r\n    if (HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      console.log(\"all payday done\");\r\n      this.TogglePayDayScreen_PayDay(false);\r\n\r\n      if (GiveProfitUserID != \"\") {\r\n        this.ShowToast(\"Your whole Payday amount $\" + TotalPayDay + \" will be transferred to other player now.\", 2200);\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= TotalPayDay;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().SendProfit_Partner_TurnDecision(TotalPayDay, GiveProfitUserID);\r\n\r\n        setTimeout(() => {\r\n          this.RaiseEventForCompletion();\r\n        }, 3200);\r\n      } else {\r\n        this.RaiseEventForCompletion();\r\n      }\r\n    }\r\n  },\r\n\r\n  RaiseEventForCompletion() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      _manager.ToggleSkipPayDay_Whole(false);\r\n      _manager.ToggleSkipPayDay_HomeBased(false);\r\n      _manager.ToggleSkipPayDay_BrickAndMortar(false);\r\n      _manager.TogglePayDay(false, false);\r\n      _manager.ToggleDoublePayNextTurn(false);\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].CardFunctionality.NextTurnHalfPayDayCounter > 0) {\r\n        _manager.PlayerGameInfo[_playerIndex].CardFunctionality.NextTurnHalfPayDayCounter--;\r\n      } else {\r\n        _manager.ToggleHalfPayNextTurn(false);\r\n      }\r\n      _manager.callUponCard();\r\n    } else {\r\n      _manager.completeCardTurn();\r\n    }\r\n\r\n    this.RaiseEventToSyncInfo(PayDayInfo);\r\n  },\r\n  //#endregion\r\n\r\n  //#region Sell & manipulate Business UI\r\n  ToggleSellBusinessScreen_SellBusinessUISetup(_state) {\r\n    this.SellBusinessScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_SellBusinessUISetup(_sellAmount = 0) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    this.SellBusinessSetupUI.TitleLabel.string = \"SELL\";\r\n    this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (_sellAmount != 0) {\r\n        node.getComponent(\"BusinessDetail\").SetSellingAmount(_sellAmount);\r\n      }\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].LocationsName.length == 0) node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      else node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n\r\n  SetBusinessUI_BusinessManipulationUISetup(_isBot = false) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (!_isBot) {\r\n      this.SellBusinessSetupUI.TitleLabel.string = \"BUSINESS\";\r\n      this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n      this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n      this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n    }\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessManipulationPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_isBot) {\r\n        node.getComponent(\"BusinessDetail\").SelectBusinessforPayDay();\r\n        break;\r\n      }\r\n      // if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      // else\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n  Reset_SellBusinessUISetup() {\r\n    for (let index = 0; index < businessDetailNodes.length; index++) {\r\n      businessDetailNodes[index].destroy();\r\n    }\r\n\r\n    businessDetailNodes = [];\r\n  },\r\n\r\n  EnableSellScreen__SellBusinessUISetup(_isTurnover = false, _sellAmount = 0) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    this.SetBusinessUI_SellBusinessUISetup(_sellAmount);\r\n  },\r\n\r\n  EnableManipilationScreen__BusinessManipulationUISetup(_isTurnover = false, _isBot = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n\r\n    if (!_isBot) this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n\r\n    this.SetBusinessUI_BusinessManipulationUISetup(_isBot);\r\n  },\r\n\r\n  ExitSellScreen__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n  },\r\n\r\n  ExitSellScreenAlongTurnOver__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Invest UI\r\n  ToggleInvestScreen_InvestSetupUI(_state) {\r\n    this.InvestScreen.active = _state;\r\n  },\r\n\r\n  EnableInvest_InvestSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleInvestScreen_InvestSetupUI(true);\r\n    this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n  },\r\n  SetInvestUI_InvestSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.InvestSetupUI.TitleLabel.string = \"INVEST\";\r\n    this.InvestSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.InvestSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.InvestSetupUI.ExitButton.active = false;\r\n      this.InvestSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.InvestSetupUI.ExitButton.active = true;\r\n      this.InvestSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitInvest_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n  },\r\n\r\n  ExitInvestAlongTurnOver_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region BuyORSell UI\r\n  ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state) {\r\n    this.BuyOrSellScreen.active = _state;\r\n  },\r\n\r\n  EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n    this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n  },\r\n  SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.BuyOrSellSetupUI.TitleLabel.string = \"BUY OR SELL\";\r\n    this.BuyOrSellSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.BuyOrSellSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.BuyOrSellSetupUI.ExitButton.active = false;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.BuyOrSellSetupUI.ExitButton.active = true;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitSellOrBuy_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n  },\r\n\r\n  ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region One Question setup Ui\r\n  ToggleDecisionScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionDecisionScreen.active = _state;\r\n  },\r\n\r\n  ToggleSpaceScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSpaceScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSetupUI.WaitingScreen.active = _state;\r\n  },\r\n\r\n  ShowQuestionToast(_msg) {\r\n    this.OneQuestionSetupUI.WaitingScreenLabel.string = _msg;\r\n  },\r\n\r\n  SetUpSpaceScreen_OneQuestionSetupUI(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    this.ToggleWaitingScreen_OneQuestionSetupUI(false);\r\n    this.OneQuestionSetupUI.TitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n            node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n            oneQuestionNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n          node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          oneQuestionNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.OneQuestionSetupUI.ExitButton.active = false;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.OneQuestionSetupUI.ExitButton.active = true;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_OneQuestionSetupUI() {\r\n    for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n      oneQuestionNodes[index].destroy();\r\n    }\r\n    oneQuestionNodes = [];\r\n  },\r\n\r\n  Exit_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  SetUpDecisionScreen_OneQuestionSetupUI(_msg) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.OneQuestionSetupUI.DecisionTitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.DecisionCashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.DecisionPlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.DecisionQuestionLabel.string = _msg;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Select Business for double payday setup\r\n  ToggleScreen_BusinessPayDayUISetup(_state) {\r\n    this.BusinessDoublePayScreen.active = _state;\r\n  },\r\n\r\n  EditTitle_BusinessPayDayUISetup(_mainTitle, _tileContent) {\r\n    this.BusinessPayDayUISetup.TitleName.string = _mainTitle;\r\n    this.BusinessPayDayUISetup.TitleContentLabel.string = _tileContent;\r\n  },\r\n\r\n  ExitScreen_BusinessPayDayUISetup() {\r\n    this.ClearBusiness_BusinessPayDayUISetup();\r\n    this.ToggleScreen_BusinessPayDayUISetup(false);\r\n  },\r\n\r\n  ExitScreen_AlongTurnOver_BusinessPayDayUISetup() {\r\n    this.ClearBusiness_BusinessPayDayUISetup();\r\n    this.ToggleScreen_BusinessPayDayUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  ClearBusiness_BusinessPayDayUISetup() {\r\n    for (let index = 0; index < businessDetailPayDayNodes.length; index++) {\r\n      businessDetailPayDayNodes[index].destroy();\r\n    }\r\n    businessDetailPayDayNodes = [];\r\n  },\r\n  ProcessBusiness_BusinessPayDayUISetup(_tempData, _businessType) {\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == _businessType) {\r\n        var node = cc.instantiate(this.BusinessPayDayUISetup.BusinessPrefab);\r\n        node.parent = this.BusinessPayDayUISetup.ScrollContent;\r\n        node.getComponent(\"BusinessDetail\").CheckReferences();\r\n        node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n        node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n        node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n        var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n        if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n          node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n          node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n          node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n          node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n        } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n          node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n          node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n          var _allLocationsAmount = _totalLocations * 25000;\r\n          var _finalAmount = 50000 + _allLocationsAmount;\r\n          node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n          node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n        }\r\n\r\n        node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n        node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n        if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n          node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n          node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n        } else {\r\n          node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n          node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n        }\r\n\r\n        businessDetailPayDayNodes.push(node);\r\n      }\r\n    }\r\n  },\r\n\r\n  EnableSeletiveDoublePayDay_BusinessPayDayUISetup(_isHomeBased = false, _isBrickAndMortar = false) {\r\n    this.ClearBusiness_BusinessPayDayUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.EditTitle_BusinessPayDayUISetup(\"BUSINESS\", \"*Select a business to receive double payday profits through out game on that business.\");\r\n    this.ToggleScreen_BusinessPayDayUISetup(true);\r\n    this.BusinessPayDayUISetup.PlayerName.string = _tempData.PlayerName;\r\n    this.BusinessPayDayUISetup.PlayerCash.string = \"$\" + _tempData.Cash;\r\n\r\n    if (_isBrickAndMortar) {\r\n      this.ProcessBusiness_BusinessPayDayUISetup(_tempData, 2);\r\n    }\r\n\r\n    if (_isHomeBased) {\r\n      this.ProcessBusiness_BusinessPayDayUISetup(_tempData, 1);\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Select Player for profit\r\n  ToggleScreen_SelectPlayerForProfit(_state) {\r\n    this.SelectPlayerForProfitScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_SelectPlayerForProfit(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    this.SelectPlayerForProfitUI.TitleLabel.string = \"SELECT PLAYER\";\r\n    this.SelectPlayerForProfitUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.SelectPlayerForProfitUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.SelectPlayerForProfitUI.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.SelectPlayerForProfitUI.DetailsPrefab);\r\n            node.parent = this.SelectPlayerForProfitUI.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n            selectPlayerProfitNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.SelectPlayerForProfitUI.DetailsPrefab);\r\n          node.parent = this.SelectPlayerForProfitUI.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          selectPlayerProfitNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.SelectPlayerForProfitUI.ExitButton.active = false;\r\n      this.SelectPlayerForProfitUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectPlayerForProfitUI.ExitButton.active = true;\r\n      this.SelectPlayerForProfitUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_SelectPlayerForProfit() {\r\n    for (let index = 0; index < selectPlayerProfitNodes.length; index++) {\r\n      selectPlayerProfitNodes[index].destroy();\r\n    }\r\n    selectPlayerProfitNodes = [];\r\n  },\r\n\r\n  Exit_SelectPlayerForProfit() {\r\n    this.ToggleScreen_SelectPlayerForProfit(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_SelectPlayerForProfit() {\r\n    this.ToggleScreen_SelectPlayerForProfit(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region (generic player) Select Player to Take over business\r\n  ToggleScreen_SelectPlayerTakeOver(_state) {\r\n    this.SelectPlayerTakeOverScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_SelectPlayerTakeOver(_myData, _actorsData, _isTurnOver, _modeIndex = 0, _buyHalfBusiness = false) {\r\n    this.SelectPlayerTakeOverSetup.TitleLabel.string = \"SELECT PLAYER\";\r\n    this.SelectPlayerTakeOverSetup.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.SelectPlayerTakeOverSetup.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.SelectPlayerTakeOverSetup.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    var _mainData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.SelectPlayerTakeOverSetup.DetailsPrefab);\r\n            node.parent = this.SelectPlayerTakeOverSetup.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n\r\n            if (_buyHalfBusiness) {\r\n              node.getComponent(\"PlayerDetails\").setBuyHalf(true);\r\n            }\r\n\r\n            for (let k = 0; k < _mainData.length; k++) {\r\n              if (_mainData[k].PlayerUID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n                node.getComponent(\"PlayerDetails\").setPlayerIndex(k);\r\n                break;\r\n              }\r\n            }\r\n\r\n            selectedPlayerTakeOver.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.SelectPlayerTakeOverSetup.DetailsPrefab);\r\n          node.parent = this.SelectPlayerTakeOverSetup.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          selectedPlayerTakeOver.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.SelectPlayerTakeOverSetup.ExitButton.active = false;\r\n      this.SelectPlayerTakeOverSetup.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectPlayerTakeOverSetup.ExitButton.active = true;\r\n      this.SelectPlayerTakeOverSetup.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_SelectPlayerTakeOver() {\r\n    for (let index = 0; index < selectedPlayerTakeOver.length; index++) {\r\n      selectedPlayerTakeOver[index].destroy();\r\n    }\r\n    selectedPlayerTakeOver = [];\r\n  },\r\n\r\n  Exit_SelectPlayerGeneric() {\r\n    this.ResetSpaceScreen_SelectPlayerDamaging();\r\n    this.ResetSpaceScreen_LoanPartnership();\r\n    this.ResetSpaceScreen_SelectPlayerTakeOver();\r\n    this.ResetSpaceScreen_CompareDice();\r\n    this.ToggleScreen_SelectPlayerTakeOver(false);\r\n    this.ToggleScreen_SelectPlayerDamaging(false);\r\n    this.ToggleScreen_LoanPartnership(false);\r\n    this.ToggleScreen_CompareDice(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_SelectPlayerGeneric() {\r\n    this.ResetSpaceScreen_SelectPlayerDamaging();\r\n    this.ResetSpaceScreen_LoanPartnership();\r\n    this.ResetSpaceScreen_SelectPlayerTakeOver();\r\n    this.ResetSpaceScreen_CompareDice();\r\n    this.ToggleScreen_SelectPlayerTakeOver(false);\r\n    this.ToggleScreen_SelectPlayerDamaging(false);\r\n    this.ToggleScreen_LoanPartnership(false);\r\n    this.ToggleScreen_CompareDice(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n \r\n  //#region (generic business) Select Business to take over\r\n  ToggleScreen_BusinessTakeOver(_state) {\r\n    this.SelectBusinessTakeOverScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_BusinessTakeOver(_playerData, _OtherPlayerIndex = 0, _buyHalfBusiness = false) {\r\n    this.Reset_BusinessTakeOver();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _playerData;\r\n    console.log(_tempData);\r\n\r\n    this.SelectBusinessTakeOver.TitleLabel.string = \"BUSINESS\";\r\n    this.SelectBusinessTakeOver.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SelectBusinessTakeOver.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SelectBusinessTakeOver.BusinessCountLabel.string = \"No of Businesses : \" + _playerData.NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SelectBusinessTakeOver.BusinessPrefab);\r\n      node.parent = this.SelectBusinessTakeOver.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerObject(_playerData);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerIndex(_OtherPlayerIndex);\r\n\r\n      if (_buyHalfBusiness) {\r\n        node.getComponent(\"BusinessDetail\").setHalfBusiness(true);\r\n      }\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      businessTakeOverNodes.push(node);\r\n    }\r\n  },\r\n\r\n  Reset_BusinessTakeOver() {\r\n    for (let index = 0; index < businessTakeOverNodes.length; index++) {\r\n      businessTakeOverNodes[index].destroy();\r\n    }\r\n\r\n    businessTakeOverNodes = [];\r\n  },\r\n\r\n  EnableScreen__BusinessTakeOver(_isTurnover = false, _playerData = null, _playerIndex = 0, _buyHalfBusiness = false) {\r\n    if (_isTurnover) {\r\n      this.SelectBusinessTakeOver.ExitButton.active = false;\r\n      this.SelectBusinessTakeOver.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectBusinessTakeOver.ExitButton.active = true;\r\n      this.SelectBusinessTakeOver.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleScreen_BusinessTakeOver(true);\r\n    this.SetBusinessUI_BusinessTakeOver(_playerData, _playerIndex, _buyHalfBusiness);\r\n  },\r\n\r\n  ExitScreen__BusinessGenric() {\r\n    this.Reset__DamageDecision();\r\n    this.Reset_BusinessTakeOver();\r\n    this.ToggleBusinessScreen_DamageDecision(false);\r\n    this.ToggleScreen_BusinessTakeOver(false);\r\n    this.ToggleScreen_SellAllBusiness(false);\r\n    this.ResetSpaceScreen_SellAllBusiness();\r\n  },\r\n\r\n  ExitScreenAlongTurnOver__BusinessGenric() {\r\n    this.Reset__DamageDecision();\r\n    this.Reset_BusinessTakeOver();\r\n    this.ToggleScreen_BusinessTakeOver(false);\r\n    this.ToggleScreen_SellAllBusiness(false);\r\n    this.ToggleBusinessScreen_DamageDecision(false);\r\n    this.ResetSpaceScreen_SellAllBusiness();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region Select Player whome you have received damaging information and want to give them choice\r\n  ToggleScreen_SelectPlayerDamaging(_state) {\r\n    this.SelectPlayerDamagingScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_SelectPlayerDamaging(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    this.SelectPlayerDamagingSetup.TitleLabel.string = \"SELECT PLAYER\";\r\n    this.SelectPlayerDamagingSetup.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.SelectPlayerDamagingSetup.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.SelectPlayerDamagingSetup.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    var _mainData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.SelectPlayerDamagingSetup.DetailsPrefab);\r\n            node.parent = this.SelectPlayerDamagingSetup.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n\r\n            for (let k = 0; k < _mainData.length; k++) {\r\n              if (_mainData[k].PlayerUID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n                node.getComponent(\"PlayerDetails\").setPlayerIndex(k);\r\n                break;\r\n              }\r\n            }\r\n            selectedPlayerDamaging.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.SelectPlayerDamagingSetup.DetailsPrefab);\r\n          node.parent = this.SelectPlayerDamagingSetup.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          selectedPlayerDamaging.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.SelectPlayerDamagingSetup.ExitButton.active = false;\r\n      this.SelectPlayerDamagingSetup.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SelectPlayerDamagingSetup.ExitButton.active = true;\r\n      this.SelectPlayerDamagingSetup.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_SelectPlayerDamaging() {\r\n    for (let index = 0; index < selectedPlayerDamaging.length; index++) {\r\n      selectedPlayerDamaging[index].destroy();\r\n    }\r\n    selectedPlayerDamaging = [];\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Damaging information card decison setup\r\n  ToggleMainScreen_DamageDecision(_state) {\r\n    this.DecisionDamagingSetup.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleDiceResultScreen_DamageDecision(_state) {\r\n    this.DecisionDamagingSetup.DiceResultScreen.active = _state;\r\n  },\r\n\r\n  ToggleBusinessScreen_DamageDecision(_state) {\r\n    this.DecisionDamagingSetup.BusinessSelectScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_DamageDecision(_playerData, _OtherPlayerIndex = 0) {\r\n    this.Reset__DamageDecision();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _playerData;\r\n    console.log(_tempData);\r\n\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.TitleLabel.string = \"BUSINESS\";\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.CashLabel.string = _playerData.Cash;\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.PlayerNameLabel.string = _playerData.PlayerName;\r\n    this.DecisionDamagingSetup.DamageBusinessSelect.BusinessCountLabel.string = \"No of Businesses : \" + _playerData.NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.DecisionDamagingSetup.DamageBusinessSelect.BusinessPrefab);\r\n      node.parent = this.DecisionDamagingSetup.DamageBusinessSelect.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerObject(_playerData);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerIndex(_OtherPlayerIndex);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      businessDamagingNodes.push(node);\r\n    }\r\n  },\r\n\r\n  Reset__DamageDecision() {\r\n    for (let index = 0; index < businessDamagingNodes.length; index++) {\r\n      businessDamagingNodes[index].destroy();\r\n    }\r\n\r\n    businessDamagingNodes = [];\r\n  },\r\n\r\n  EnableBusinessScreen_DamageDecision(_isTurnover = false, _playerData = null, _playerIndex = 0, _noButton = false) {\r\n    if (_noButton == false) {\r\n      if (_isTurnover) {\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.ExitButton.active = false;\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.TurnOverExitButton.active = true;\r\n      } else {\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.ExitButton.active = true;\r\n        this.DecisionDamagingSetup.DamageBusinessSelect.TurnOverExitButton.active = false;\r\n      }\r\n    }\r\n    this.ToggleBusinessScreen_DamageDecision(true);\r\n    this.SetBusinessUI_DamageDecision(_playerData, _playerIndex);\r\n  },\r\n\r\n  SetMesageText_DamageDecision(_txt) {\r\n    this.DecisionDamagingSetup.DiceResultLabel.string = _txt;\r\n  },\r\n\r\n  EnableDiceResult_DamageDecision() {\r\n    this.ToggleDiceResultScreen_DamageDecision(true);\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _diceResult = _manager.RollTwoDices();\r\n    var _fineMultiplier = 3000;\r\n    DamageDecisionResult = _diceResult * _fineMultiplier;\r\n\r\n    var _text = \"\\n\" + \"Dice Result : \" + _diceResult + \"\\n\" + \"\\n\" + \"Amount : \" + _diceResult + \" * \" + _fineMultiplier + \" = \" + DamageDecisionResult;\r\n    this.SetMesageText_DamageDecision(_text);\r\n  },\r\n\r\n  SetSenderID_DamageDecision(ID) {\r\n    SenderDamagingID = ID;\r\n  },\r\n\r\n  ReceiveEvent_DamageDecision(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.RoomEssentials.IsSpectate == false) {\r\n      var _reciverID = _data.ID;\r\n      var _cashReceived = _data.Cash;\r\n      var _isDiceRolled = _data.IsDiceRolled;\r\n      var _isBankrupted = _data.IsBankRupted;\r\n\r\n      var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n      if (_myActor.PlayerUID == _reciverID) {\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(false);\r\n        GamePlayReferenceManager.Instance.Get_GameplayUIManager().Exit_SelectPlayerGeneric();\r\n        if (_isDiceRolled) {\r\n          if (!_isBankrupted) {\r\n            _manager.PlayerGameInfo[_manager.GetTurnNumber()].Cash += _cashReceived;\r\n            this.ShowToast(\"You have received cash of $\" + _cashReceived + \", total cash becomes $\" + _manager.PlayerGameInfo[_manager.GetTurnNumber()].Cash);\r\n            _manager.completeCardTurn();\r\n          } else if (_isBankrupted) {\r\n            this.ShowToast(\"other player has been bankrupted, turn will change now.\");\r\n            _manager.completeCardTurn();\r\n          }\r\n        } else {\r\n          this.ShowToast(\"You have been given ownership to one of the business of other player.\");\r\n          _manager.completeCardTurn();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  PayAmount_DamageDecision() {\r\n    var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n\r\n    for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n      if (_manager.PlayerGameInfo[index].PlayerUID == _myActor.PlayerUID) {\r\n        if (_manager.PlayerGameInfo[index].Cash >= DamageDecisionResult) {\r\n          _manager.PlayerGameInfo[index].Cash -= DamageDecisionResult;\r\n          this.ToggleDiceResultScreen_DamageDecision(false);\r\n          this.ToggleMainScreen_DamageDecision(false);\r\n          BankRuptedCard = false;\r\n          this.ShowToast(\"You have successfully paid off amount $\" + DamageDecisionResult + \" , remaining cash $\" + _manager.PlayerGameInfo[index].Cash);\r\n\r\n          var _sendingData = { ID: SenderDamagingID, Cash: DamageDecisionResult, IsDiceRolled: true, IsBankRupted: false };\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(25, _sendingData);\r\n        } else {\r\n          BankRuptedCard = true;\r\n          GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleScreen_InsufficientBalance(true);\r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  },\r\n\r\n  SetBankruptedVar(_val)\r\n  {\r\n    BankRuptedCard=_val;\r\n  },\r\n\r\n  SelectBusinessForHalfOwnership_DamagingDecision(_playerData, _businessIndex, _selectedPlayerIndex = 0) {\r\n    this.ExitScreen__BusinessGenric();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playersData = _manager.PlayerGameInfo;\r\n    var _myDataIndex = _manager.GetMyIndex();\r\n    var _turn = _manager.GetTurnNumber();\r\n\r\n    _playersData[_myDataIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n    _playersData[_myDataIndex].NoOfBusiness[_businessIndex].PartnerID = SenderDamagingID;\r\n    _playersData[_myDataIndex].NoOfBusiness[_businessIndex].PartnerName = _playersData[_turn].PlayerName;\r\n\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _playersData[_myDataIndex]);\r\n\r\n    this.ToggleDiceResultScreen_DamageDecision(false);\r\n    this.ToggleMainScreen_DamageDecision(false);\r\n    this.ShowToast(\"You have successfully given ownership of one of your business to other player.\");\r\n    var _sendingData = { ID: SenderDamagingID, Cash: DamageDecisionResult, IsDiceRolled: false, IsBankRupted: false };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(25, _sendingData);\r\n  },\r\n\r\n  GivePartnerShip_DamageDecision() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playersData = _manager.PlayerGameInfo;\r\n    var _myDataIndex = _manager.GetMyIndex();\r\n    var _businessLength = _playersData[_myDataIndex].NoOfBusiness.length;\r\n    var _businessCounter = 0;\r\n\r\n    for (let index = 0; index < _playersData[_myDataIndex].NoOfBusiness.length; index++) {\r\n      if (_playersData[_myDataIndex].NoOfBusiness[index].IsPartnership) {\r\n        _businessCounter++;\r\n      }\r\n    }\r\n\r\n    if (_businessCounter >= _businessLength) {\r\n      this.ShowToast(\"All of your existing businesses are with partnership with someone, you cannot select this option.\");\r\n    } else {\r\n      this.EnableBusinessScreen_DamageDecision(false, _playersData[_myDataIndex], _myDataIndex, true);\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Buy Half business\r\n  ToggleScreen_BuyHalfBusiness(_state) {\r\n    this.BuyHalfBusinessUISetup.MainScreen.active = _state;\r\n  },\r\n\r\n  SetTitleText_BuyHalfBusiness(_txt) {\r\n    this.BuyHalfBusinessUISetup.TitleLabel.string = _txt;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Taking loan for partnership\r\n  ToggleScreen_LoanPartnership(_state) {\r\n    this.LoanPartnershipScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_LoanPartnership(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    console.error(_actorsData);\r\n    this.LoanPartnershipSetup.TitleLabel.string = \"SELECT PLAYER\";\r\n    this.LoanPartnershipSetup.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.LoanPartnershipSetup.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.LoanPartnershipSetup.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    var _mainData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.LoanPartnershipSetup.DetailsPrefab);\r\n            node.parent = this.LoanPartnershipSetup.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n\r\n            for (let k = 0; k < _mainData.length; k++) {\r\n              if (_mainData[k].PlayerUID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n                node.getComponent(\"PlayerDetails\").setPlayerIndex(k);\r\n                break;\r\n              }\r\n            }\r\n            LaonPartnershipArray.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n\r\n      console.error(_actorsData);\r\n      console.error(_myData);\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.LoanPartnershipSetup.DetailsPrefab);\r\n          node.parent = this.LoanPartnershipSetup.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          LaonPartnershipArray.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.LoanPartnershipSetup.ExitButton.active = false;\r\n      this.LoanPartnershipSetup.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.LoanPartnershipSetup.ExitButton.active = true;\r\n      this.LoanPartnershipSetup.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_LoanPartnership() {\r\n    for (let index = 0; index < LaonPartnershipArray.length; index++) {\r\n      LaonPartnershipArray[index].destroy();\r\n    }\r\n    LaonPartnershipArray = [];\r\n  },\r\n  //#endregion\r\n  \r\n  //#region Sell all business except one\r\n\r\n  ToggleScreen_SellAllBusiness(_state) {\r\n    this.SellAllBusinessScreen.active = _state;\r\n  },\r\n\r\n  EnableScreen__SellAllBusiness(_isTurnover = false, _playerData = null, _playerIndex = 0) {\r\n    if (_isTurnover) {\r\n      this.SellAllBusinessSetup.ExitButton.active = false;\r\n      this.SellAllBusinessSetup.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellAllBusinessSetup.ExitButton.active = true;\r\n      this.SellAllBusinessSetup.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleScreen_SellAllBusiness(true);\r\n    this.SetBusinessUI_SellAllBusiness(_playerData, _playerIndex);\r\n  },\r\n\r\n  SetBusinessUI_SellAllBusiness(_playerData, _OtherPlayerIndex = 0) {\r\n    this.ResetSpaceScreen_SellAllBusiness();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _playerData;\r\n    console.log(_tempData);\r\n\r\n    this.SellAllBusinessSetup.TitleLabel.string = \"BUSINESS\";\r\n    this.SellAllBusinessSetup.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellAllBusinessSetup.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellAllBusinessSetup.BusinessCountLabel.string = \"No of Businesses : \" + _playerData.NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellAllBusinessSetup.BusinessPrefab);\r\n      node.parent = this.SellAllBusinessSetup.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerObject(_playerData);\r\n      node.getComponent(\"BusinessDetail\").SetPlayerIndex(_OtherPlayerIndex);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      SellAllBusinessArray.push(node);\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_SellAllBusiness() {\r\n    for (let index = 0; index < SellAllBusinessArray.length; index++) {\r\n      SellAllBusinessArray[index].destroy();\r\n    }\r\n    SellAllBusinessArray = [];\r\n  },\r\n  //#endregion\r\n  \r\n  //#region Select Player to compare dice roll\r\n    ToggleScreen_CompareDice(_state) {\r\n      this.CompareDiceScreen.active = _state;\r\n    },\r\n  \r\n    SetUpSpaceScreen_CompareDice(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n      console.error(_actorsData);\r\n      this.CompareDiceSetup.TitleLabel.string = \"SELECT PLAYER\";\r\n      this.CompareDiceSetup.CashLabel.string = \"$\" + _myData.Cash;\r\n      this.CompareDiceSetup.PlayerNameLabel.string = _myData.PlayerName;\r\n      this.CompareDiceSetup.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n  \r\n      var _mainData = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo;\r\n  \r\n      if (_modeIndex == 2) {\r\n        for (let index = 0; index < _actorsData.length; index++) {\r\n          if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n            //check if player is spectate or not, dont add any spectates\r\n            if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n              var node = cc.instantiate(this.CompareDiceSetup.DetailsPrefab);\r\n              node.parent = this.CompareDiceSetup.ScrollContent;\r\n              node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n              node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n  \r\n              for (let k = 0; k < _mainData.length; k++) {\r\n                if (_mainData[k].PlayerUID == _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n                  node.getComponent(\"PlayerDetails\").setPlayerIndex(k);\r\n                  break;\r\n                }\r\n              }\r\n              CompareDiceArray.push(node);\r\n            }\r\n          }\r\n        }\r\n      } else if (_modeIndex == 1) {\r\n        //for bot\r\n  \r\n        console.error(_actorsData);\r\n        console.error(_myData);\r\n        for (let index = 0; index < _actorsData.length; index++) {\r\n          if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n            var node = cc.instantiate(this.CompareDiceSetup.DetailsPrefab);\r\n            node.parent = this.CompareDiceSetup.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n            CompareDiceArray.push(node);\r\n          }\r\n        }\r\n      }\r\n  \r\n      if (_isTurnOver) {\r\n        this.CompareDiceSetup.ExitButton.active = false;\r\n        this.CompareDiceSetup.TurnOverExitButton.active = true;\r\n      } else {\r\n        this.CompareDiceSetup.ExitButton.active = true;\r\n        this.CompareDiceSetup.TurnOverExitButton.active = false;\r\n      }\r\n    },\r\n  \r\n    ResetSpaceScreen_CompareDice() {\r\n      for (let index = 0; index < CompareDiceArray.length; index++) {\r\n        CompareDiceArray[index].destroy();\r\n      }\r\n      CompareDiceArray = [];\r\n    },\r\n\r\n    ToggleDecsion01Screen_CompareDice(_state)\r\n    {\r\n      this.CompareDiceDecision1Screen.active=_state;\r\n    },\r\n\r\n    ToggleDecsion02Screen_CompareDice(_state)\r\n    {\r\n      this.CompareDiceDecision2Screen.active=_state;\r\n    },\r\n\r\n    ChangeTitle_Decsion02Screen_CompareDice(_msg)\r\n    {\r\n      this.CompareDiceDecision2Text.string=_msg;\r\n    },\r\n\r\n    ToggleDecsion02ScreenButton_CompareDice(_state)\r\n    {\r\n      this.CompareDiceDecision2Button.active=_state;\r\n    },\r\n    //#endregion\r\n\r\n  //#region Naming game compitators\r\n\r\n  ToggleScreen_CompitatorUI(_state)\r\n  {\r\n    this.CompitatorSetupUI.MainScreen.active=_state;\r\n    this.CompitatorSetupUI.CompEditBox1.string=\"\";\r\n    this.CompitatorSetupUI.CompEditBox2.string=\"\";\r\n    this.CompitatorSetupUI.CompEditBox3.string=\"\";\r\n  },\r\n\r\n  ChangeTitle_CompitatorUI(_msg)\r\n  {\r\n    this.CompitatorSetupUI.TitleLabel.string=_msg;\r\n  },\r\n\r\n  OnDoneClicked_CompitatorUI()\r\n  {\r\n    var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var text1=this.CompitatorSetupUI.CompEditBox1.string;\r\n    var text2=this.CompitatorSetupUI.CompEditBox2.string;\r\n    var text3=this.CompitatorSetupUI.CompEditBox3.string;\r\n    var _playerIndex=_manager.GetTurnNumber();\r\n    var _marketingAmount=_manager.PlayerGameInfo[_playerIndex].MarketingAmount;\r\n\r\n    var TextArray=[text1,text2,text3];\r\n\r\n    var _checkCounter=0;\r\n    var _tempCounter=0;\r\n\r\n    for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n      if(_manager.PlayerGameInfo[index].IsActive && _playerIndex!=index)\r\n        _checkCounter++;\r\n    }\r\n\r\n    for (let index = 0; index < _manager.PlayerGameInfo.length; index++) {\r\n      for (let j = 0; j < TextArray.length; j++) {\r\n        if(TextArray[j].toLowerCase()==_manager.PlayerGameInfo[index].PlayerName.toLowerCase())\r\n        {\r\n          _tempCounter++;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if(_tempCounter>=_checkCounter && _tempCounter!=0 && _checkCounter!=0)\r\n    {\r\n      console.log(\"You freakin won\");\r\n      var profit=_marketingAmount+(_marketingAmount*5);\r\n      _manager.PlayerGameInfo[_playerIndex].MarketingAmount=0;\r\n      _manager.PlayerGameInfo[_playerIndex].Cash+=profit;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You were successful and received 500% profit on your marketing amount, your cash becomes $\"+_manager.PlayerGameInfo[_playerIndex].Cash);\r\n    }\r\n    else\r\n    {\r\n      _manager.PlayerGameInfo[_playerIndex].MarketingAmount=0;\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ShowToast(\"You have failed and have lost your marketing amount.\");\r\n    }\r\n\r\n    this.ExitAlongTurnOver_CompitatorUI();\r\n  },\r\n\r\n  ExitAlongTurnOver_CompitatorUI() {\r\n    this.ToggleScreen_CompitatorUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Creating Ad description for everyone to vote\r\n  ToggleScreen_TelevisionADSetup(_state)\r\n  {\r\n    this.TelevisionADSetupUI.MainScreen.active=_state;\r\n    this.TelevisionADSetupUI.MainEditBox.string=\"\";\r\n  },\r\n  \r\n  ToggleDecisionScreen_TelevisionADSetup(_state)\r\n  {\r\n    this.TelevisionADSetupUI.DecisionScreen.active=_state;\r\n  },\r\n\r\n  ChangeDecisionScreenText_TelevisionADSetup(_txt)\r\n  {\r\n    this.TelevisionADSetupUI.DecisionScreenText.string=_txt;\r\n  },\r\n\r\n  OnDoneClicked_TelevisionADSetup()\r\n  {\r\n    var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex=_manager.GetTurnNumber();\r\n    var text1=this.TelevisionADSetupUI.MainEditBox.string;\r\n    var _marketingAmount=_manager.PlayerGameInfo[_playerIndex].MarketingAmount;\r\n    clearTimeout(TelevisionAdTimeout);\r\n\r\n    if(text1==\"\")\r\n    {\r\n      this.ShowToast(\"Please enter description for your commercial.\");\r\n    }\r\n    else\r\n    {\r\n      var _sentdata = { Player: _manager.PlayerGameInfo[_playerIndex],Description:text1};\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(29, _sentdata); \r\n      VotesUpArray=[];\r\n      VotesDownArray=[];\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(true);\r\n\r\n      TelevisionAdTimeout=setTimeout(() => {\r\n        this.FailedScreen_TelevisionADSetup();\r\n      }, 25000);\r\n    }\r\n  },\r\n\r\n  FailedScreen_TelevisionADSetup()\r\n  {\r\n    clearTimeout(TelevisionAdTimeout);\r\n    var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex=_manager.GetTurnNumber();\r\n    this.ShowToast(\"Either time has been passed for voting or you have failed to leave positive impression on others, you have lost your marketing account.\");\r\n    _manager.PlayerGameInfo[_playerIndex].MarketingAmount=0;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(false);\r\n    this.ExitAlongTurnOver_TelevisionADSetup();\r\n\r\n  },\r\n\r\n  SuccessScreen_TelevisionADSetup()\r\n  {\r\n    clearTimeout(TelevisionAdTimeout);\r\n    var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex=_manager.GetTurnNumber();\r\n    var _marketingAmount=_manager.PlayerGameInfo[_playerIndex].MarketingAmount;\r\n\r\n    var profit=_marketingAmount+(_marketingAmount*6);\r\n    _manager.PlayerGameInfo[_playerIndex].MarketingAmount=0;\r\n    _manager.PlayerGameInfo[_playerIndex].Cash+=profit;\r\n\r\n    this.ShowToast(\"You have succeed putting positive impression, you have received 600% profit of your marketing amount, your cash becomes $\"+_manager.PlayerGameInfo[_playerIndex].Cash);\r\n    _manager.PlayerGameInfo[_playerIndex].MarketingAmount=0;\r\n    GamePlayReferenceManager.Instance.Get_GameplayUIManager().ToggleWaitingScreen_PartnerShipSetup(false);\r\n    this.ExitAlongTurnOver_TelevisionADSetup();\r\n\r\n  },\r\n\r\n  ExitAlongTurnOver_TelevisionADSetup() {\r\n    this.ToggleScreen_TelevisionADSetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  ReceiveEvent_TelevisionADSetup(_data)\r\n  {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n    \r\n      clearTimeout(VoteTimeout);  \r\n      var _senderPlayerData=_data.Player;\r\n      var _des=_data.Description;\r\n      SenderADPPlayer=_senderPlayerData;\r\n\r\n      this.ToggleDecisionScreen_TelevisionADSetup(true);\r\n      this.ChangeDecisionScreenText_TelevisionADSetup(_des);\r\n\r\n      VoteTimeout=setTimeout(() => {\r\n        this.ToggleDecisionScreen_TelevisionADSetup(false);\r\n      }, 24000);\r\n    }\r\n  },\r\n\r\n  VoteUpDecision_TelevisionADSetup()\r\n  {\r\n      clearTimeout(VoteTimeout);\r\n      var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n      this.ToggleDecisionScreen_TelevisionADSetup(false);\r\n      var _sentdata = { SenderID: _myActor.PlayerUID,ReciverID:SenderADPPlayer.PlayerUID,VoteUp:true};\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(30, _sentdata); \r\n  },\r\n\r\n  VoteDownDecision_TelevisionADSetup()\r\n  {\r\n      clearTimeout(VoteTimeout);  \r\n      var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n      this.ToggleDecisionScreen_TelevisionADSetup(false);\r\n      var _sentdata = { SenderID: _myActor.PlayerUID,ReciverID:SenderADPPlayer.PlayerUID,VoteUp:false};\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(30, _sentdata); \r\n  },\r\n\r\n  ReceiveEvent_VoteTelevisionADSetup(_data)\r\n  {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _myActor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n      var _myID=_data.ReciverID;\r\n      var _otherID=_data.SenderID;\r\n      var _voteUp=_data.VoteUp;\r\n      var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex=_manager.GetTurnNumber();\r\n      var _totalPlayer=0;\r\n      \r\n      if(_myActor.PlayerUID==_myID)\r\n      {\r\n        if(_voteUp)\r\n          VotesUpArray.push(_otherID);\r\n        else\r\n          VotesDownArray.push(_otherID);\r\n\r\n\r\n        for (let index = 0; index<_manager.PlayerGameInfo.length; index++) {\r\n          if(_manager.PlayerGameInfo[index].IsActive && index!=_playerIndex)\r\n            _totalPlayer++; \r\n        }\r\n\r\n        var _RecievedVotes=VotesUpArray.length+VotesDownArray.length;\r\n\r\n        console.log(_RecievedVotes);\r\n        console.log(VotesUpArray);\r\n        console.log(VotesDownArray);\r\n        console.log(_totalPlayer);\r\n\r\n        if(_RecievedVotes >=_totalPlayer)\r\n        {\r\n          if(VotesUpArray.length>VotesDownArray.length)\r\n            this.SuccessScreen_TelevisionADSetup();\r\n          else\r\n            this.FailedScreen_TelevisionADSetup();\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  //#endregion\r\n\r\n  ShowToast: function (message, time = ShortMessageTime, _hasbutton = true) {\r\n    this.PopUpUI.active = true;\r\n    this.PopUpUILabel.string = message;\r\n    var SelfToast = this;\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (mode == 1) {\r\n      //for bot mode only\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length > 0 && GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].IsBot) {\r\n        // if (_hasbutton) {\r\n        //   this.PopUpUIButton.active = true;\r\n        //   clearTimeout(TimeoutRef);\r\n        //   TimeoutRef = setTimeout(() => {\r\n        //     this.CompleteToast();\r\n        //   }, CompletionWindowTime);\r\n        // }\r\n        // else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n        // }\r\n      } else {\r\n        if (_hasbutton) {\r\n          this.PopUpUIButton.active = true;\r\n          clearTimeout(TimeoutRef);\r\n          TimeoutRef = setTimeout(() => {\r\n            this.CompleteToast();\r\n          }, CompletionWindowTime);\r\n        } else {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n        }\r\n      }\r\n    } //for real players\r\n    else {\r\n      if (_hasbutton) {\r\n        this.PopUpUIButton.active = true;\r\n        clearTimeout(TimeoutRef);\r\n        TimeoutRef = setTimeout(() => {\r\n          this.CompleteToast();\r\n        }, CompletionWindowTime);\r\n      } else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n      }\r\n    }\r\n  },\r\n\r\n  CompleteToast() {\r\n    console.error(\"complete toast called\");\r\n    this.PopUpUI.active = false;\r\n    clearTimeout(TimeoutRef);\r\n  },\r\n\r\n  ShowResultScreen: function (_status, _data) {\r\n    this.ResultSetupUI.ResultScreen.active = true;\r\n    this.ResultSetupUI.StatusLabel.string = _status;\r\n    this.ResultSetupUI.BodyLabel.string = _data;\r\n  },\r\n\r\n  RestartTheGame() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n  },\r\n\r\n  RaiseEventToSyncInfo(_dataInfo,_toPlayerUID=\"\") {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      var _data = { info: _dataInfo, PlayerUID:_toPlayerUID };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data);\r\n    } else if (_mode == 1) {\r\n      //for bot\r\n      if (this.IsBotTurn) {\r\n        var _data = { info: _dataInfo,PlayerUID: _toPlayerUID };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data);\r\n      }\r\n    }\r\n  },\r\n});\r\n"]}