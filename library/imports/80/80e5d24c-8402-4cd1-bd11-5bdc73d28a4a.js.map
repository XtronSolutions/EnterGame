{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","businessDetailNodes","oneQuestionNodes","businessDetailPartnershipNodes","PartnerShipData","PartnerShipOfferReceived","CancelledID","StartGameCash","SelectedBusinessPayDay","HMAmount","BMAmount","BMLocations","SelectedBusinessIndex","TurnOverForInvest","BusinessSetupCardFunctionality","GivenCashBusiness","StartAnyBusinessWithoutCash","PreviousCash","TimeoutRef","CompletionWindowTime","LongMessageTime","ShortMessageTime","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","BusinessManipulationPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","PassedPayDayCountLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PartnershipUI","WaitingStatusScreen","MainScreen","TitleName","PlayerName","PlayerCash","PartnerShipPrefab","DecisionScreen","DecisionPlayerName","DecisionPlayerCash","DecisionDescription","ResultUI","ResultScreen","StatusLabel","BodyLabel","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PartnershipSetupUI","ResultSetupUI","PopUpUI","PopUpUILabel","PopUpUIButton","GameplayUIScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","InsufficientBalanceScreen","TempDiceText","LeaveRoomButton","ResetAllData","onLoad","CheckReferences","GoldInvested","GoldSold","StockInvested","StockSold","IsBotTurn","PayDayCount","IsBankrupted","BankruptedAmount","ResetTurnVariable","require","onEnable","systemEvent","on","SyncData","onDisable","off","ToggleScreen_InsufficientBalance","_state","active","Exit___InsufficientBalance","InitialScreen_SpectateMode","CloseInitialScreen_SpectateMode","ToggleLeaveRoomButton_SpectateModeUI","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","Init_BusinessSetup","PlayerData","CardFunctionality","CardDataFunctionality","BusinessInfo","BusinessType","EnumBusinessType","Cash","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","StudentData","userID","PlayerUID","OnChangeName_BusinessSetup","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","GetObj_BusinessSetup","UID","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","ShowToast","Math","abs","parseInt","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","_data","_ID","PhotonActor","actorNr","push","console","log","MaxPlayers","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_amount","_businessName","_isHomeBased","HomeBasedAmount","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","completeCardTurn","InitialSetup_BusinessSetup","_mode","GetSelectedMode","IsBankrupt","BankruptAmount","GetTurnNumber","RaiseEvent","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","undefined","IsBot","isactive","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","_isTurnOver","ResetStockBusinessNameInput","RollOneDice","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","EnablePartnership_PartnerShipSetup","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ToggleScreen_PartnerShipSetup","ToggleWaitingScreen_PartnerShipSetup","ToggleDecisionScreen_PartnerShipSetup","Reset_PartnerShipSetup","_manager","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","_totalLocations","LocationsName","SetBusinessMode","SetMode","SetBusinessValue","SetFinalBusinessValue","_allLocationsAmount","_finalAmount","SetBalance","SetLocations","IsPartnership","TogglePartnerShipButton","SetPartnerName","PartnerName","EnablePartnershipDecision_PartnerShipSetup","_msg","customProperties","PlayerSessionData","Exit_PartnerShipSetup","destroy","ReceiveEvent_PartnershipSetup","_actor","_turn","Turn","_playerData","_SelectedBusinessIndex","SelectedBusinsessIndex","_businessValue","BusValue","_payAmount","_businessMode","CheckSpectate","AcceptOffer_PartnershipSetup","_allActors","RoomActors","myIndex","GetMyIndex","RaiseEventDecisionAnswer_PartnershipSetup","CancelOffer_PartnershipSetup","_isAccepted","_payment","_isCancelled","_uID","_mainData","Accepted","CashPayment","Cancelled","PlayerID","BusinessIndex","ReceiveEventDecisionAnswer_PartnershipSetup","_accepted","_cash","_cancelled","_uid","PartnerID","includes","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","loanTaken","Button","interactable","GetLoanAmount_PayDay","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_forSelectedBusiness","_hMAmount","_bmAmount","_bmLocation","PaydayCounter","_time","UpdateCash_PayDay","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_doublePayDay","_dice","_amountToBeSend","_amountToBeAdjusted","_multiplier","_paydaymultiplier","SendProfit_Partner_TurnDecision","ReceivePayment_PayDay","_locations","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","StartNewGame_PayDay","emit","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","ToggleDoublePayNextTurn","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","Reset_SellBusinessUISetup","Amount","ToggleSellLocationButton","SetBusinessUI_BusinessManipulationUISetup","SelectBusinessforPayDay","_isTurnover","EnableManipilationScreen__BusinessManipulationUISetup","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_modeIndex","RoomEssentials","IsSpectate","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","_question","message","time","_hasbutton","SelfToast","mode","clearTimeout","CompleteToast","ShowResultScreen","_status","RestartTheGame","RestartGame"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager = null;\r\nvar businessDetailNodes = [];\r\nvar oneQuestionNodes = [];\r\nvar businessDetailPartnershipNodes = [];\r\nvar PartnerShipData = null;\r\nvar PartnerShipOfferReceived = false;\r\nvar CancelledID = [];\r\nvar StartGameCash = 20000;\r\nvar SelectedBusinessPayDay = false;\r\nvar HMAmount = 0;\r\nvar BMAmount = 0;\r\nvar BMLocations = 0;\r\nvar SelectedBusinessIndex = 0;\r\nvar TurnOverForInvest = false;\r\nvar BusinessSetupCardFunctionality = false;\r\nvar GivenCashBusiness = 0;\r\nvar StartAnyBusinessWithoutCash = false;\r\nvar PreviousCash = 0;\r\nvar TimeoutRef;\r\nvar CompletionWindowTime = 8000;\r\nvar LongMessageTime = 5000;\r\nvar ShortMessageTime = 2500;\r\n\r\n// var CompletionWindowTime = 500;//8000\r\n// var LongMessageTime = 250;//5000\r\n// var ShortMessageTime = 50;//2500\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n  None: 0,\r\n  TenThousand: 10000,\r\n  TentyThousand: 20000,\r\n  ThirtyThousand: 30000,\r\n  FortyThousand: 40000,\r\n  FiftyThousand: 50000,\r\n  Other: 6,\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI = cc.Class({\r\n  name: \"BusinessSetupUI\",\r\n\r\n  properties: {\r\n    PlayerNameUI: {\r\n      displayName: \"PlayerNameUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player name\",\r\n    },\r\n    PlayerCashUI: {\r\n      displayName: \"PlayerCashUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player cash\",\r\n    },\r\n    BusinessTypeTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business type\",\r\n    },\r\n    BusinessNameTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business name\",\r\n    },\r\n    BusinessTypeLabel: {\r\n      displayName: \"BusinessTypeLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"reference for business type editbox\",\r\n    },\r\n    BusinessNameLabel: {\r\n      displayName: \"BusinessNameLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"referece for business name editbox\",\r\n    },\r\n    HomeBasedNodeUI: {\r\n      displayName: \"HomeBasedNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for home based business\",\r\n    },\r\n    BrickAndMortarNodeUI: {\r\n      displayName: \"BrickAndMortarNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for brick and mortar business\",\r\n    },\r\n    TimerUI: {\r\n      displayName: \"TimerUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the label for timer\",\r\n    },\r\n    TimerNode: {\r\n      displayName: \"TimerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for timer node in business setup\",\r\n    },\r\n    BusinessSetupNode: {\r\n      displayName: \"BusinessSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for business setup\",\r\n    },\r\n    LoanSetupNode: {\r\n      displayName: \"LoanSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for loan setup\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: LoanAmountEnum,\r\n      default: LoanAmountEnum.None,\r\n      serializable: true,\r\n      tooltip: \"loan amount taken by player (state machine)\",\r\n    },\r\n    LoanAmountLabel: {\r\n      displayName: \"LoanAmountLabel\",\r\n      type: [cc.Node],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Reference for all labels of amounts in loan UI\",\r\n    },\r\n    WaitingStatusNode: {\r\n      displayName: \"WaitingStatusNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for waiting status screen on initial business setup\",\r\n    },\r\n    ExitButtonNode: {\r\n      displayName: \"ExitButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for exit button node in business setup\",\r\n    },\r\n    \r\n  },\r\n  ctor: function () {\r\n    //constructor//\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI = cc.Class({\r\n  name: \"TurnDecisionSetupUI\",\r\n\r\n  properties: {\r\n    MarketingEditBox: {\r\n      displayName: \"MarketingEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of marketing node\",\r\n    },\r\n    GoldEditBox: {\r\n      displayName: \"GoldEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest gold node\",\r\n    },\r\n    StockEditBox: {\r\n      displayName: \"StockEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest stock node\",\r\n    },\r\n    CashAmountLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to cash node\",\r\n    },\r\n    ExpandBusinessNode: {\r\n      displayName: \"ExpandBusinessNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for expnad business node\",\r\n    },\r\n    ExpandBusinessScrollContent: {\r\n      displayName: \"ExpandBusinessScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"Reference for content node of scroll view of expand business node\",\r\n    },\r\n    ExpandBusinessPrefab: {\r\n      displayName: \"ExpandBusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for prefab of expand business node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n  None: 0,\r\n  StockInvest: 1,\r\n  GoldInvest: 2,\r\n  StockSell: 3,\r\n  GoldSell: 4,\r\n  Other: 5,\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI = cc.Class({\r\n  name: \"InvestSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of invest&sell node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Dice Result of invest&sell node\",\r\n    },\r\n    PriceTitleLabel: {\r\n      displayName: \"PriceTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price Title of invest&sell node\",\r\n    },\r\n    PriceValueLabel: {\r\n      displayName: \"PriceValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price value of invest&sell node\",\r\n    },\r\n    BuyOrSellTitleLabel: {\r\n      displayName: \"BuyOrSellTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of BuyOrSell Title of invest&sell node\",\r\n    },\r\n    TotalAmountTitleLabel: {\r\n      displayName: \"TotalAmountTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Title of invest&sell node\",\r\n    },\r\n    TotalAmountValueLabel: {\r\n      displayName: \"TotalAmountValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Value of invest&sell node\",\r\n    },\r\n    ButtonNameLabel: {\r\n      displayName: \"ButtonName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of button name of invest&sell node\",\r\n    },\r\n    InvestState: {\r\n      displayName: \"InvestState\",\r\n      type: InvestEnum,\r\n      default: InvestEnum.None,\r\n      serializable: true,\r\n    },\r\n    AmountEditBox: {\r\n      displayName: \"AmountEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI = cc.Class({\r\n  name: \"SellBusinessUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessSellPrefab: {\r\n      displayName: \"BusinessSellPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessSellPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI = cc.Class({\r\n  name: \"PayDayUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of PayDay node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of PayDay node\",\r\n    },\r\n    HomeBasedNumberLabel: {\r\n      displayName: \"HomeBasedNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedNumber node\",\r\n    },\r\n    BMNumberLabel: {\r\n      displayName: \"BrickMortarNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarNumber node\",\r\n    },\r\n    BMNumberLocationLabel: {\r\n      displayName: \"BrickMortarLocations\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarLocations node\",\r\n    },\r\n    PassedPayDayCountLabel: {\r\n      displayName: \"PassedPayDayCountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of PassedPayDayCountLabel node\",\r\n    },\r\n    HomeBasedBtn: {\r\n      displayName: \"HomeBasedBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedBtn node\",\r\n    },\r\n    BMBtn: {\r\n      displayName: \"BrickMortarBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarBtn node\",\r\n    },\r\n    LoanBtn: {\r\n      displayName: \"LoanBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanBtn node\",\r\n    },\r\n    MainPanelNode: {\r\n      displayName: \"MainPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of MainPanel node\",\r\n    },\r\n    ResultPanelNode: {\r\n      displayName: \"ResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultPanel node\",\r\n    },\r\n    LoanResultPanelNode: {\r\n      displayName: \"LoanResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanResultPanelNode node\",\r\n    },\r\n    ResultScreenTitleLabel: {\r\n      displayName: \"ResultScreenTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultScreenTitle node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of DiceResult node\",\r\n    },\r\n    TotalBusinessLabel: {\r\n      displayName: \"TotalBusinessLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalBusiness node\",\r\n    },\r\n    TotalAmountLabel: {\r\n      displayName: \"TotalAmountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount node\",\r\n    },\r\n    SkipLoanButton: {\r\n      displayName: \"SkipLoanButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of SkipLoanButton node\",\r\n    },\r\n    LoanFotterLabel: {\r\n      displayName: \"LoanFotterLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanFotterLabel node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI = cc.Class({\r\n  name: \"InvestUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Invest node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Invest node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Invest node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Invest node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of Invest node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI = cc.Class({\r\n  name: \"BuyOrSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of BuyOrSell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of BuyOrSell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of BuyOrSell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of BuyOrSell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI = cc.Class({\r\n  name: \"OneQuestionUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n    WaitingScreen: {\r\n      displayName: \"WaitingScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreen of OneQuestion node\",\r\n    },\r\n    DecisionTitleLabel: {\r\n      displayName: \"DecisionTitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    DecisionCashLabel: {\r\n      displayName: \"DecisionCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    DecisionPlayerNameLabel: {\r\n      displayName: \"DecisionPlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DecisionQuestionLabel: {\r\n      displayName: \"DecisionQuestionLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of player question of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PartnershipUI-------------------------//\r\nvar PartnershipUI = cc.Class({\r\n  name: \"PartnershipUI\",\r\n  properties: {\r\n    WaitingStatusScreen: {\r\n      displayName: \"WaitingStatusScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the waiting screen node of partnership ui\",\r\n    },\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PartnerShipPrefab: {\r\n      displayName: \"PartnerShipPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerName: {\r\n      displayName: \"DecisionPlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerCash: {\r\n      displayName: \"DecisionPlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionDescription: {\r\n      displayName: \"DecisionDescription\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for ResultUI-------------------------//\r\nvar ResultUI = cc.Class({\r\n  name: \"ResultUI\",\r\n  properties: {\r\n    ResultScreen: {\r\n      displayName: \"ResultScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    StatusLabel: {\r\n      displayName: \"StatusLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    BodyLabel: {\r\n      displayName: \"BodyLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount = \"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount = \"\";\r\nvar EnterBuySellAmount = \"\";\r\nvar StockBusinessName = \"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName = \"\";\r\n\r\nvar HomeBasedPaymentCompleted = false;\r\nvar BrickMortarPaymentCompleted = false;\r\nvar LoanPayed = false;\r\nvar TotalPayDayAmount = 0;\r\nvar DoublePayDay = false;\r\n\r\nvar GameplayUIManager = cc.Class({\r\n  name: \"GameplayUIManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    BusinessSetupData: {\r\n      default: null,\r\n      type: BusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessSetupUI class\",\r\n    },\r\n    TurnDecisionSetupUI: {\r\n      default: null,\r\n      type: TurnDecisionSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of TurnDecisionSetupUI class\",\r\n    },\r\n    InvestSellSetupUI: {\r\n      default: null,\r\n      type: InvestSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    PayDaySetupUI: {\r\n      default: null,\r\n      type: PayDayUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    SellBusinessSetupUI: {\r\n      default: {},\r\n      type: SellBusinessUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SellBusinessUI class\",\r\n    },\r\n    InvestSetupUI: {\r\n      default: {},\r\n      type: InvestUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestUI class\",\r\n    },\r\n    BuyOrSellSetupUI: {\r\n      default: {},\r\n      type: BuyOrSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyOrSellUI class\",\r\n    },\r\n    OneQuestionSetupUI: {\r\n      default: {},\r\n      type: OneQuestionUI,\r\n      serializable: true,\r\n      tooltip: \"reference of OneQuestionUI class\",\r\n    },\r\n    PartnershipSetupUI: {\r\n      default: {},\r\n      type: PartnershipUI,\r\n      serializable: true,\r\n      tooltip: \"reference of PartnershipUI class\",\r\n    },\r\n    ResultSetupUI: {\r\n      default: {},\r\n      type: ResultUI,\r\n      serializable: true,\r\n      tooltip: \"reference of ResultUI class\",\r\n    },\r\n    PopUpUI: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    PopUpUILabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for pop up screen\",\r\n    },\r\n    PopUpUIButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    BusinessSetupNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for business setup screen\",\r\n    },\r\n    GameplayUIScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for gameplay ui screen\",\r\n    },\r\n    DecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Decision screen\",\r\n    },\r\n    InvestSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest & sell screen\",\r\n    },\r\n    PayDayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for PayDay screen\",\r\n    },\r\n    SellBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellBusiness screen\",\r\n    },\r\n    InvestScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest screen\",\r\n    },\r\n    BuyOrSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BuyOrSell screen\",\r\n    },\r\n    OneQuestionSpaceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionSpace screen\",\r\n    },\r\n    OneQuestionDecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionDecision screen\",\r\n    },\r\n    InsufficientBalanceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for InsufficientBalanceScreen screen\",\r\n    },\r\n    TempDiceText: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for dice\",\r\n    },\r\n    LeaveRoomButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ResetAllData()\r\n  {\r\n     GameManager = null;\r\n     GamePlayReferenceManager = null;\r\n     businessDetailNodes = [];\r\n     oneQuestionNodes = [];\r\n     businessDetailPartnershipNodes = [];\r\n     PartnerShipData = null;\r\n     PartnerShipOfferReceived = false;\r\n     CancelledID = [];\r\n     SelectedBusinessPayDay = false;\r\n     HMAmount = 0;\r\n     BMAmount = 0;\r\n     BMLocations = 0;\r\n     SelectedBusinessIndex = 0;\r\n     TurnOverForInvest = false;\r\n     BusinessSetupCardFunctionality = false;\r\n     GivenCashBusiness = 0;\r\n     StartAnyBusinessWithoutCash = false;\r\n     PreviousCash = 0;\r\n     TimeoutRef=null;\r\n\r\n     InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n     //turn decisions\r\n     TempMarketingAmount = \"\";\r\n     TempHiringLawyer;\r\n     \r\n     //buyorsell\r\n      GoldCashAmount = \"\";\r\n      EnterBuySellAmount = \"\";\r\n      StockBusinessName = \"\";\r\n      DiceResult=0;\r\n      OnceOrShare;\r\n      LocationName = \"\";\r\n\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      TotalPayDayAmount = 0;\r\n      DoublePayDay = false;\r\n  },\r\n\r\n  onLoad() {\r\n    this.ResetAllData();\r\n    this.CheckReferences();\r\n\r\n    //local variables\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n    this.IsBotTurn = false;\r\n    this.PayDayCount = 0;\r\n    this.IsBankrupted = false;\r\n    this.BankruptedAmount = 0;\r\n  },\r\n\r\n  ResetTurnVariable() {\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null)\r\n      GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n\r\n    if (!GameManager || GameManager == null)\r\n      GameManager = require(\"GameManager\");\r\n  },\r\n\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  ToggleScreen_InsufficientBalance(_state)\r\n  {\r\n    this.InsufficientBalanceScreen.active = _state;\r\n  },\r\n\r\n  Exit___InsufficientBalance()\r\n  {\r\n    this.ToggleScreen_InsufficientBalance(false);\r\n  },\r\n  //#region Spectate UI Setup\r\n  InitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = true;\r\n  },\r\n\r\n  CloseInitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = false;\r\n  },\r\n\r\n  ToggleLeaveRoomButton_SpectateModeUI(_state) {\r\n    this.LeaveRoomButton.active = _state;\r\n  },\r\n\r\n  OnLeaveButtonClicked_SpectateModeUI() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(\r\n      true\r\n    );\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"MainMenu\");\r\n    }, 500);\r\n  },\r\n  //#endregion\r\n\r\n  //#region BusinessSetup with loan\r\n  //Business setup ui//------------------------\r\n  StartNewBusiness_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false,\r\n    _BankruptAmount = 0,\r\n    _isCardFunctionality = false,\r\n    _GivenCash = 0,\r\n    _StartAnyBusinessWithoutCash=false\r\n  ) {\r\n    //called first time form GameManager onload function\r\n    this.CheckReferences();\r\n    this.BusinessSetupNode.active = true;\r\n\r\n     BusinessSetupCardFunctionality = _isCardFunctionality;\r\n     GivenCashBusiness = _GivenCash;\r\n     StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n    \r\n    this.IsBankrupted = _isBankrupted;\r\n    this.BankruptedAmount = _BankruptAmount;\r\n\r\n    if (_isBankrupted) this.ResetTurnVariable();\r\n\r\n    this.Init_BusinessSetup(isFirstTime, insideGame, modeIndex, _isBankrupted);\r\n  },\r\n  Init_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false,\r\n  ) {\r\n    PlayerDataIntance = new GameManager.PlayerData();\r\n    PlayerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n    PlayerBusinessDataIntance = new GameManager.BusinessInfo();\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n\r\n    if (isFirstTime) {\r\n      this.BusinessSetupData.ExitButtonNode.active = false;\r\n      this.BusinessSetupData.TimerNode.active = true;\r\n      PlayerDataIntance.Cash = StartGameCash;\r\n    }\r\n\r\n    this.ResetButtonStates_BusinessSetup();\r\n\r\n    if (insideGame) {\r\n      this.BusinessSetupData.ExitButtonNode.active = true;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n\r\n      for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID == GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID)\r\n        {\r\n          InsideGameBusinessSetup = index;\r\n          PlayerDataIntance = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n          if (BusinessSetupCardFunctionality) {\r\n            if (StartAnyBusinessWithoutCash) {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = 0;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n            }\r\n            else {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = GivenCashBusiness;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n            }\r\n            \r\n          }\r\n          else {\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n            this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      InsideGameBusinessSetup = -1;\r\n      this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n      this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n      this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n    }\r\n  },\r\n  GetObj_BusinessSetup: function () {\r\n    return this.BusinessSetupData;\r\n  },\r\n  OnChangeName_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n    PlayerDataIntance.PlayerName = name;\r\n  },\r\n  OnChangeUID_BusinessSetup: function (UID) {\r\n    PlayerDataIntance.PlayerUID = UID;\r\n  },\r\n  OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessTypeTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessTypeDescription = name;\r\n  },\r\n  OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessNameTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessName = name;\r\n  },\r\n  ResetButtonStates_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BusinessTypeLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameTextUI = \"\";\r\n    this.BusinessSetupData.BusinessTypeTextUI = \"\";\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n  },\r\n  OnHomeBasedSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = true;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =GameManager.EnumBusinessType.HomeBased;\r\n  },\r\n  OnBrickMortarSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = true;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =GameManager.EnumBusinessType.brickAndmortar;\r\n  },\r\n  OnChangeCash_BusinessSetup: function (amount) {\r\n    this.BusinessSetupData.PlayerCashUI.string = \"$\" + amount;\r\n    PlayerDataIntance.Cash = amount;\r\n  },\r\n  CalculateLoan_BusinessSetup: function (amount) {\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    if (!BusinessSetupCardFunctionality) {\r\n      for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n        if (PlayerDataIntance.NoOfBusiness[index].LoanTaken) {\r\n          _loanTaken = true;\r\n          _businessIndex = index;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_loanTaken) {\r\n        this.ShowToast(\"You have already taken loan of $\" +PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount,LongMessageTime);\r\n      } else {\r\n        if (PlayerDataIntance.Cash >= amount) {\r\n          this.ShowToast(\r\n            \"You do not need loan, you have enough cash to buy current selected business.\",LongMessageTime);\r\n        } else {\r\n          this.BusinessSetupData.LoanSetupNode.active = true;\r\n          RequiredCash = Math.abs(parseInt(PlayerDataIntance.Cash) - amount);\r\n          this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(\r\n            cc.Label\r\n          ).string = \"$\" + RequiredCash;\r\n        }\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanButtonClicked_BusinessSetup: function (event) {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar) {\r\n        this.CalculateLoan_BusinessSetup(50000);\r\n      } else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased) {\r\n        this.CalculateLoan_BusinessSetup(10000);\r\n      } else {\r\n        this.ShowToast(\"please select business between Home Based and brick & mortar.\");\r\n      }\r\n    }else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanBackButtonClicked_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanSetupNode.active = false;\r\n  },\r\n  HighLightLoanSelection_BusinessSetup: function (index) {\r\n    for (var i = 0; i < this.BusinessSetupData.LoanAmountLabel.length; i++) {\r\n      if (index == i)\r\n        this.BusinessSetupData.LoanAmountLabel[i].children[0].active = true;\r\n      else this.BusinessSetupData.LoanAmountLabel[i].children[0].active = false;\r\n    }\r\n  },\r\n  OnLoanAmountChoosed_01_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.Other;\r\n    this.HighLightLoanSelection_BusinessSetup(0);\r\n  },\r\n  OnLoanAmountChoosed_02_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TenThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(1);\r\n  },\r\n  OnLoanAmountChoosed_03_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TentyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(2);\r\n  },\r\n  OnLoanAmountChoosed_04_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.ThirtyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(3);\r\n  },\r\n  OnLoanAmountChoosed_05_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FortyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(4);\r\n  },\r\n  OnLoanAmountChoosed_06_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FiftyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(5);\r\n  },\r\n  OnTakenLoanClicked_BusinessSetup: function (event) {\r\n    if (this.BusinessSetupData.LoanAmount == LoanAmountEnum.Other)\r\n      PlayerBusinessDataIntance.LoanAmount = RequiredCash;\r\n    else\r\n      PlayerBusinessDataIntance.LoanAmount = parseInt(\r\n        this.BusinessSetupData.LoanAmount\r\n      );\r\n\r\n    PlayerBusinessDataIntance.LoanTaken = true;\r\n    this.OnLoanBackButtonClicked_BusinessSetup();\r\n    PlayerDataIntance.Cash =\r\n      PlayerDataIntance.Cash + PlayerBusinessDataIntance.LoanAmount;\r\n    this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n  },\r\n\r\n  SyncData: function (_data, _ID) {\r\n    if (_ID !=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr)\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n\r\n    console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length >=GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers) {\r\n      //setting room property to declare initial setup has been\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\"InitialSetup\", true, true);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\r\n          \"PlayerGameInfo\",\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo,\r\n          true\r\n        );\r\n      this.BusinessSetupData.WaitingStatusNode.active = false;\r\n      this.BusinessSetupNode.active = false;\r\n      this.GameplayUIScreen.active = true;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n      console.log(\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo\r\n      );\r\n    }\r\n  },\r\n\r\n  PurchaseBusiness: function (_amount, _businessName, _isHomeBased) {\r\n    if (PlayerDataIntance.Cash < _amount && !StartAnyBusinessWithoutCash) {\r\n      this.ShowToast(\"You have not enough cash to buy this \" + _businessName + \" business.\",LongMessageTime);\r\n    } else {\r\n      if (_isHomeBased) {\r\n        if (PlayerDataIntance.HomeBasedAmount < 3) {\r\n\r\n          if (!StartAnyBusinessWithoutCash) {\r\n            PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n            this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n          }\r\n\r\n          this.StartGame = true;\r\n          PlayerDataIntance.HomeBasedAmount++;\r\n        } else {\r\n          this.StartGame = false;\r\n          this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n        }\r\n      } else {\r\n        if (!StartAnyBusinessWithoutCash) {\r\n          PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n          this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n        }\r\n        this.StartGame = true;\r\n        PlayerDataIntance.BrickAndMortarAmount++;\r\n      }\r\n    }\r\n  },\r\n\r\n  Exit_BusinessSetup: function () {\r\n    if(!BusinessSetupCardFunctionality)\r\n    {\r\n      this.BusinessSetupNode.active = false;\r\n\r\n      if (PlayerBusinessDataIntance.LoanTaken) {\r\n        PlayerBusinessDataIntance.LoanTaken = false;\r\n        PlayerDataIntance.Cash =\r\n          PlayerDataIntance.Cash - PlayerBusinessDataIntance.LoanAmount;\r\n        PlayerBusinessDataIntance.LoanAmount = 0;\r\n        this.ShowToast(\"Reverting back loan amount.\");\r\n      }\r\n    } else\r\n    {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  InitialSetup_BusinessSetup: function () {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (this.IsBankrupted) {\r\n      PlayerDataIntance.IsBankrupt = true;\r\n      PlayerDataIntance.BankruptAmount = this.BankruptedAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()] = PlayerDataIntance;\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n    }\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      //setting player current data in custom properties when his/her turn overs\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n\r\n      if (!this.IsBankrupted) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1,PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n\r\n        var _data = {Data: {bankrupted: true,turn: GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(),PlayerDataMain: PlayerDataIntance,},};\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(9, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else if (_mode == 1) {\r\n      //for AI\r\n      if (!this.IsBankrupted) {\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n        setTimeout(() => {\r\n          this.BusinessSetupData.WaitingStatusNode.active = false;\r\n          this.BusinessSetupNode.active = false;\r\n          this.GameplayUIScreen.active = true;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n        }, 1600);\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else {\r\n      console.error(\"no mode selected\");\r\n    }\r\n  },\r\n\r\n  StartNewSetup_DuringGame_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      this.ToggleDecision_TurnDecision(true);\r\n    }\r\n    else\r\n    {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;  \r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  PayAmountToPlayGame: function () {\r\n    this.StartGame = false;\r\n\r\n    if (PlayerBusinessDataIntance.BusinessTypeDescription == \"\")\r\n      this.ShowToast(\"please write a business type.\");\r\n    else if (PlayerBusinessDataIntance.BusinessName == \"\")\r\n      this.ShowToast(\"please write a business name.\");\r\n    else {\r\n\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.None || PlayerBusinessDataIntance.BusinessType==undefined)\r\n      {\r\n        this.ShowToast(\"please select a business\");\r\n        return;\r\n      }\r\n      \r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased)\r\n        //if selected business is homebassed\r\n        this.PurchaseBusiness(10000, \"home\", true);\r\n      else if (\r\n        PlayerBusinessDataIntance.BusinessType ==GameManager.EnumBusinessType.brickAndmortar)\r\n        //if selected business is brick and mortar\r\n        this.PurchaseBusiness(50000, \"brick and mortar\", false);\r\n\r\n      if (this.StartGame == true || this.IsBankrupted == true) {\r\n        PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n        if (InsideGameBusinessSetup != -1) {\r\n          //if start new business has not been called from inside game\r\n          this.StartNewSetup_DuringGame_BusinessSetup();\r\n        }\r\n        //if start new business has been called at start of game as initial setup\r\n        else {\r\n          this.InitialSetup_BusinessSetup();\r\n        }\r\n\r\n        //prtinting all values to console\r\n        for (var i = 0;i <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;i++) {\r\n          console.log(\"player name: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n          console.log(\"player ID: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n          console.log(\"Is player bot: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n          console.log(\"no of business of player (see below): \");\r\n          console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n          console.log(\"player cash: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n          console.log(\"player taken loan: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n          console.log(\"taken loan amount: \" +GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region TurnDecisionSetupUI\r\n  //TurnDecisionSetupUI//------------------------\r\n  ToggleDecision_TurnDecision: function (isactive) {\r\n    this.DecisionScreen.active = isactive;\r\n    this.UpdateCash_TurnDecision();\r\n  },\r\n\r\n  UpdateCash_TurnDecision: function () {\r\n    this.TurnDecisionSetupUI.CashAmountLabel.string =\r\n      \"$ \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()\r\n      ].Cash;\r\n  },\r\n\r\n  OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    TempMarketingAmount = amount;\r\n  },\r\n\r\n  OnMarketingAmountSelected_TurnDecision: function () {\r\n    if (TempMarketingAmount == \"\" || TempMarketingAmount == null) {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      this.marketingAmount = parseInt(TempMarketingAmount);\r\n      console.log(\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash\r\n      );\r\n\r\n      //if player entered amount is greater than total cash he owns\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= this.marketingAmount\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - this.marketingAmount;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].MarketingAmount =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].MarketingAmount + this.marketingAmount;\r\n        this.ShowToast(\r\n          \"you successfully marketed amount of $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].MarketingAmount +\r\n            \" , remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\",LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you don't have enough money.\");\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      }\r\n    }\r\n  },\r\n\r\n  OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n    // if player has more than 5000$\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    if (\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        _playerIndex\r\n      ].LawyerStatus\r\n    ) {\r\n      this.ShowToast(\"you have already hired a lawyer.\");\r\n    } else {\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= 5000\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].LawyerStatus = true;\r\n        TempHiringLawyer = true;\r\n        console.log(TempHiringLawyer);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - 5000;\r\n        this.ShowToast(\r\n          \"you have successfully hired a lawyer, remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\",LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n      } else {\r\n        this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  onLocationNameChanged_ExpandBusiness_TurnDecision(_name) {\r\n    LocationName = _name;\r\n  },\r\n  OnExpandButtonClicked_TurnDecision: function (event=null,_isCardFunctionality = false,_GivenCash = 0,_StartAnyBusinessWithoutCash=false) {\r\n    //if player has brick and mortar business he could expand it\r\n    console.log(\"expand business\");\r\n    \r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = true;\r\n    var generatedLength = GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision(BusinessSetupCardFunctionality,GivenCashBusiness,StartAnyBusinessWithoutCash);\r\n\r\n    if (generatedLength == 0) {\r\n      this.ShowToast(\"You have no brick and mortar business to expand.\");\r\n      setTimeout(() => {\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      }, 1600);\r\n    }\r\n  },\r\n\r\n  OnExpandButtonExitClicked_TurnDecision: function () {\r\n    if (!BusinessSetupCardFunctionality)\r\n    {\r\n      this.UpdateCash_TurnDecision();\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n    }\r\n    else\r\n    {\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  OnNewBusinessButtonClicked_TurnDecision: function () {\r\n    console.log(\"starting new business\");\r\n    this.StartNewBusiness_BusinessSetup(false, true);\r\n  },\r\n\r\n  OnGoldAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    GoldCashAmount = amount;\r\n  },\r\n\r\n  OnGoldDiceClicked_TurnDecision: function () {\r\n    if (!this.GoldInvested) {\r\n      this.GoldInvested = true;\r\n      EnterBuySellAmount = \"\";\r\n      this.ToggleInvestSellScreen_InvestSell(true);\r\n      this.InvestSellSetupUI.InvestState = InvestEnum.GoldInvest;\r\n      DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n      OnceOrShare = DiceResult * 1000;\r\n\r\n      this.AssignData_InvestSell(\r\n        \"Invest In GOLD\",\r\n        DiceResult,\r\n        \"Each Ounce of GOLD price is:\",\r\n        OnceOrShare + \"/ounce\",\r\n        \"Enter the number of ounce of GOLD you want to BUY\",\r\n        \"Total Buying Amount:\",\r\n        OnceOrShare + \"*0=0\",\r\n        \"BUY\",\r\n        this.InvestSellSetupUI.InvestState\r\n      );\r\n    } else {\r\n      this.ShowToast(\"You can invest in gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n    StockBusinessName = name;\r\n  },\r\n\r\n  OnStockDiceClicked_TurnDecision: function (event=null,_isTurnOver=false) {\r\n    TurnOverForInvest = _isTurnOver;\r\n\r\n    console.error(_isTurnOver);\r\n\r\n    if (TurnOverForInvest)\r\n      StockBusinessName = \"Friend's Business\";\r\n      \r\n    if (!this.StockInvested || TurnOverForInvest) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (StockBusinessName == \"\") {\r\n        this.ResetStockBusinessNameInput();\r\n        this.ShowToast(\"Please enter a business name to invest.\");\r\n      } else {\r\n        this.StockInvested = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockInvest;\r\n\r\n        if(!TurnOverForInvest)\r\n          DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        else\r\n          DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n        \r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Invest in Stock\",\r\n          DiceResult,\r\n          \"Each Share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to BUY\",\r\n          \"Total Buying Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"BUY\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can invest in stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellGoldClicked_TurnDecision: function () {\r\n    if (!this.GoldSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].GoldCount > 0\r\n      ) {\r\n        this.GoldSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.GoldSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell GOLD\",\r\n          DiceResult,\r\n          \"Each Ounce of GOLD price is:\",\r\n          OnceOrShare + \"/ounce\",\r\n          \"Enter the number of ounce of GOLD you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\r\n          \"you have not purchased any GOLD ounces, please buy them.\"\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellStockClicked_TurnDecision: function () {\r\n    if (!this.StockSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].StockCount > 0\r\n      ) {\r\n        this.StockSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell STOCK\",\r\n          DiceResult,\r\n          \"Each share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnPartnershipClicked_TurnDecision: function () {\r\n    console.log(\"go into partner ship\");\r\n    // this.ShowToast(\"work in progress, coming soon...\");\r\n    // var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    this.EnablePartnership_PartnerShipSetup();\r\n  },\r\n\r\n  OnRollDiceClicked_TurnDecision: function () {\r\n    console.log(\"roll the dice\");\r\n    this.ToggleDecision_TurnDecision(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n  },\r\n\r\n  PrintDiceValue_TurnDecision: function (value) {\r\n    //this.TempDiceText.string=value;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Partnership setup\r\n  ToggleScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.WaitingStatusScreen.active = _state;\r\n  },\r\n\r\n  ToggleDecisionScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.DecisionScreen.active = _state;\r\n  },\r\n\r\n  EnablePartnership_PartnerShipSetup() {\r\n    CancelledID = [];\r\n    this.Reset_PartnerShipSetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.ToggleScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.PlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.PlayerCash.string =\"$\"+_tempData.Cash;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.PartnershipSetupUI.PartnerShipPrefab);\r\n      node.parent = this.PartnershipSetupUI.ScrollContent;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n        var _allLocationsAmount = _totalLocations * 25000;\r\n        var _finalAmount = 50000 + _allLocationsAmount;\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n      }\r\n      else {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n      }\r\n\r\n      businessDetailPartnershipNodes.push(node);\r\n      \r\n    }\r\n  },\r\n\r\n  EnablePartnershipDecision_PartnerShipSetup(_msg) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.ToggleDecisionScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.DecisionPlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.DecisionPlayerCash.string =\"$\"+_tempData.Cash;\r\n    this.PartnershipSetupUI.DecisionDescription.string = _msg;\r\n  },\r\n\r\n  Exit_PartnerShipSetup() {\r\n    this.Reset_PartnerShipSetup();\r\n    this.ToggleScreen_PartnerShipSetup(false);\r\n  },\r\n  \r\n  Reset_PartnerShipSetup()\r\n  {\r\n    for (let index = 0; index < businessDetailPartnershipNodes.length; index++) {\r\n      businessDetailPartnershipNodes[index].destroy();\r\n    }\r\n    businessDetailPartnershipNodes = [];\r\n  },\r\n\r\n  ReceiveEvent_PartnershipSetup(_data)\r\n  {\r\n    PartnerShipOfferReceived = true;\r\n    PartnerShipData = _data;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 1)\r\n      _businessMode = \"Home Based\";\r\n    else if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 2)\r\n      _businessMode = \"Brick & Mortar\";\r\n      \r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false)\r\n    {\r\n      var _msg = \"you have received partnership offer by \" + _playerData.PlayerName + \" , following are the details of business: \" + \"\\n\" + \"\\n\" +\r\n        \"Business Name: \" + _playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessName + \"\\n\" +\r\n        \"Business Mode: \" + _businessMode + \"\\n\" +\r\n        \"Business Value: $\" + _businessValue + \"\\n\" +\r\n        \"Cash Payment: $\" + _payAmount + \"\\n\" + \"\\n\" +\r\n        \"if offer is accepted you will receive 50% share of that particular business and will receive profit/lose on that particular business.\";\r\n    \r\n      this.EnablePartnershipDecision_PartnerShipSetup(_msg);\r\n    }\r\n\r\n  },\r\n\r\n  AcceptOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _allActors = GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _data = PartnerShipData;\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    var myIndex = _manager.GetMyIndex();\r\n  \r\n    if (PartnerShipOfferReceived == true) {\r\n      if (_manager.PlayerGameInfo[myIndex].Cash >= _payAmount) {\r\n        _manager.PlayerGameInfo[myIndex].Cash -= _payAmount;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[myIndex]);\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(true, _payAmount, false, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"congratulations! you have started business partnership\");\r\n      } else {\r\n        this.ShowToast(\"Not enough cash.\");\r\n      }\r\n    } else\r\n    {\r\n      this.ShowToast(\"Offer has been accepted by other player.\");\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      }\r\n  },\r\n\r\n  CancelOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _data = PartnerShipData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var myIndex = _manager.GetMyIndex();\r\n    console.log(_manager.PlayerGameInfo[myIndex].PlayerUID);\r\n    if (PartnerShipOfferReceived == true) {\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(false, 0, true, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"you have cancelled the offer.\");\r\n    } else\r\n    {\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    }\r\n  },\r\n\r\n  RaiseEventDecisionAnswer_PartnershipSetup(_isAccepted=false,_payment=0,_isCancelled=false,_uID=\"\",_data=null,_businessIndex=0)\r\n  {\r\n    var _mainData = { Data: { Accepted: _isAccepted, CashPayment:_payment,Cancelled:_isCancelled,PlayerID:_uID,PlayerData:_data,BusinessIndex:_businessIndex} };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(12, _mainData);\r\n  },\r\n\r\n  ReceiveEventDecisionAnswer_PartnershipSetup(_data)\r\n  {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = _manager.GetTurnNumber();\r\n\r\n      console.log(_data);\r\n      var _accepted = _data.Data.Accepted;\r\n      var _cash = _data.Data.CashPayment;\r\n      var _cancelled = _data.Data.Cancelled;\r\n      var _uid = _data.Data.PlayerID;\r\n      var _playerData = _data.Data.PlayerData;\r\n      var _businessIndex = _data.Data.BusinessIndex;\r\n    \r\n      console.log(\"answer received\");\r\n      if(_manager.PlayerGameInfo[_playerIndex].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n      {\r\n        if (_accepted) {\r\n          this.ToggleScreen_PartnerShipSetup(false);\r\n          this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n          _manager.PlayerGameInfo[_playerIndex].Cash += _cash;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerID = _uid;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerName = _playerData.PlayerName;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"offer accepted\");\r\n          this.ShowToast(\"your partnership offer has been accepted by \" + _playerData.PlayerName + \", cash $\" + _cash + \" has been added to your account.\", LongMessageTime);\r\n          this.UpdateCash_TurnDecision();\r\n        } else if (_cancelled) {\r\n          if (CancelledID.includes(_uid) == false)\r\n              CancelledID.push(_uid);\r\n        \r\n          console.log(CancelledID);\r\n          if (CancelledID.length == _manager.PlayerGameInfo.length - 1) {\r\n            this.ToggleScreen_PartnerShipSetup(false);\r\n            this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n            this.ShowToast(\"your partnership offer has been cancelled by all other users.\");\r\n          }\r\n\r\n          console.log(\"offer rejected\");\r\n        }\r\n      } else {\r\n        if (_accepted) {\r\n          PartnerShipOfferReceived = false;\r\n          this.ShowToast(\"Offer has been accepted by other player.\");\r\n          this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        } else if (_cancelled) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Invest and sell moddule\r\n\r\n  ResetGoldInput() {\r\n    this.TurnDecisionSetupUI.GoldEditBox.string = \"\";\r\n    GoldCashAmount = \"\";\r\n  },\r\n\r\n  ResetStockBusinessNameInput() {\r\n    this.TurnDecisionSetupUI.StockEditBox.string = \"\";\r\n    StockBusinessName = \"\";\r\n  },\r\n\r\n  onAmountChanged_InvestSell(_amount) {\r\n    EnterBuySellAmount = _amount;\r\n\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n    } else {\r\n      var _amount = parseInt(EnterBuySellAmount);\r\n      var _amount = OnceOrShare * _amount;\r\n      this.UpdateData_InvestSell(\r\n        OnceOrShare + \"*\" + EnterBuySellAmount + \"=\" + _amount\r\n      );\r\n    }\r\n  },\r\n\r\n  ToggleInvestSellScreen_InvestSell(_state) {\r\n    this.InvestSellScreen.active = _state;\r\n    this.UpdateCash_TurnDecision();\r\n    this.ResetGoldInput();\r\n    this.ResetStockBusinessNameInput();\r\n  },\r\n\r\n  AssignData_InvestSell(\r\n    _title,\r\n    _diceResult,\r\n    _priceTitle,\r\n    _priceValue,\r\n    _buyOrSellTitle,\r\n    _totalAmountTitle,\r\n    _totalAmountValue,\r\n    _buttonName,\r\n    _state\r\n  ) {\r\n    this.CheckReferences();\r\n    this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n    this.InvestSellSetupUI.TitleLabel.string = _title;\r\n    this.InvestSellSetupUI.DiceResultLabel.string = _diceResult;\r\n    this.InvestSellSetupUI.PriceTitleLabel.string = _priceTitle;\r\n    this.InvestSellSetupUI.PriceValueLabel.string = _priceValue;\r\n    this.InvestSellSetupUI.BuyOrSellTitleLabel.string = _buyOrSellTitle;\r\n    this.InvestSellSetupUI.TotalAmountTitleLabel.string = _totalAmountTitle;\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n    this.InvestSellSetupUI.ButtonNameLabel.string = _buttonName;\r\n  },\r\n\r\n  UpdateData_InvestSell(_totalAmountValue) {\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n  },\r\n\r\n  ApplyButton_InvestSell() {\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -=_TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex ].GoldCount += _amount;\r\n          this.ShowToast(\r\n            \"You have successfully bought \" + _amount + \" ounces of GOLD\",\r\n            LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        if (_amount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash  += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount -= _amount;\r\n          this.ShowToast(\r\n            \"You have successfully sold \" +\r\n              _amount +\r\n              \" ounces of GOLD for  $\" +\r\n              _TotalAmount,\r\n              LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\r\n            \"you don't have enough GOLD ounces, you own \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[_playerIndex].GoldCount +\r\n              \" of GOLD ounces\",LongMessageTime\r\n          );\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount += _amount;\r\n          //can add multiple stocks with business name in object if required\r\n\r\n          this.ShowToast(\r\n            \"You have successfully bought \" +\r\n              _amount +\r\n              \" shares of business \" +\r\n              StockBusinessName,\r\n              LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n\r\n        if (_amount <=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount -= _amount;\r\n\r\n          this.ShowToast(\r\n            \"You have successfully sold \" +\r\n              _amount +\r\n              \" shares of stock for  $\" +\r\n              _TotalAmount,\r\n              LongMessageTime\r\n          );\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\r\n            \"you don't have enough stocks shares, you own \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[_playerIndex].StockCount +\r\n              \" of stock shares\",LongMessageTime\r\n          );\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ExitButton_InvestSell() {\r\n    this.ToggleInvestSellScreen_InvestSell(false);\r\n\r\n    if (TurnOverForInvest)\r\n    {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn(); \r\n      TurnOverForInvest = false; \r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Payday or Double pay Day\r\n  TogglePayDayScreen_PayDay(_state) {\r\n    this.PayDayScreen.active = _state;\r\n  },\r\n\r\n  ToggleResultPanelScreen_PayDay(_state) {\r\n    this.PayDaySetupUI.ResultPanelNode.active = _state;\r\n  },\r\n\r\n  UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken) {\r\n    if (HMAmount == 0) {\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = false;\r\n    } else {\r\n      HomeBasedPaymentCompleted = false;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = true;\r\n    }\r\n\r\n    if (BMAmount == 0) {\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      BrickMortarPaymentCompleted = false;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (!loanTaken) {\r\n      LoanPayed = true;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      LoanPayed = false;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n  },\r\n\r\n  GetLoanAmount_PayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    var _loan = 0;\r\n    for (\r\n      let index = 0;\r\n      index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n      index++\r\n    ) {\r\n      if (_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loan =\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n        break;\r\n      }\r\n    }\r\n    return _loan;\r\n  },\r\n\r\n  AssignData_PayDay(_title,_isDoublePayDay = false,_skipHM = false,_skipBM = false,_isBot = false,_forSelectedBusiness=false,_SelectedBusinessIndex=0,_hMAmount=0,_bmAmount=0,_bmLocation=0,PaydayCounter=1) {\r\n    this.IsBotTurn = _isBot;\r\n    this.PayDayCount = PaydayCounter;\r\n    DoublePayDay = _isDoublePayDay;\r\n    this.TogglePayDayScreen_PayDay(true);\r\n    this.PayDaySetupUI.TitleLabel.string = _title;\r\n    var _time = 1800;\r\n    SelectedBusinessPayDay = _forSelectedBusiness;\r\n    SelectedBusinessIndex = _SelectedBusinessIndex;\r\n    HMAmount=_hMAmount;\r\n    BMAmount=_bmAmount;\r\n    BMLocations = _bmLocation;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      if (_isBot == false) {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM)\r\n          this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\", _time);\r\n        else if (_skipHM)\r\n          this.ShowToast(\"your payday on home based businessess will be skipped.\", _time);\r\n        else if (_skipBM)\r\n          this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\", _time);\r\n      } else {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM)\r\n          console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n        else if (_skipHM)\r\n          console.log(\"your payday on home based businessess will be skipped.\");\r\n        else if (_skipBM)\r\n          console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n      }\r\n    }\r\n\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    \r\n    if (!SelectedBusinessPayDay) {\r\n       HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n       BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n       BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n    }\r\n\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var loanTaken = false;\r\n    \r\n    if (!SelectedBusinessPayDay) {\r\n      loanTaken = _loanTaken;\r\n    }\r\n\r\n    this.PayDaySetupUI.HomeBasedNumberLabel.string = HMAmount;\r\n    this.PayDaySetupUI.BMNumberLabel.string = BMAmount;\r\n    this.PayDaySetupUI.BMNumberLocationLabel.string = BMLocations;\r\n    this.PayDaySetupUI.PassedPayDayCountLabel.string = this.PayDayCount;\r\n\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    //check if loan was skipped previously\r\n    if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) {\r\n      var _loan = this.GetLoanAmount_PayDay();\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $\" + _loan;\r\n    } else {\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $5000\";\r\n    }\r\n\r\n    //check skip payday variables\r\n    if (_skipHM && _skipBM) this.UpdateButtons_PayDay(0, 0, loanTaken);\r\n    else if (_skipHM) this.UpdateButtons_PayDay(0, BMAmount, loanTaken);\r\n    else if (_skipBM) this.UpdateButtons_PayDay(HMAmount, 0, loanTaken);\r\n    else this.UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken);\r\n\r\n    if (_skipBM || _skipHM) {\r\n      setTimeout(() => {\r\n        this.PayDayCompleted();\r\n      }, _time + 200);\r\n    }\r\n\r\n    if (_isBot) {\r\n      setTimeout(() => {\r\n        this.OnHomeBasedPaymentClicked_PayDay();\r\n        this.OnBMPaymentClicked_PayDay();\r\n        this.OnLoanPaymentClicked_PayDay();  \r\n      }, 0);\r\n    }\r\n  },\r\n\r\n  OnHomeBasedPaymentClicked_PayDay() {\r\n    if (!HomeBasedPaymentCompleted) {\r\n        this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay)\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else\r\n      {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      }\r\n\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n      //partnership code\r\n      if (_doublePayDay)\r\n        _multiplier = 2;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 1) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _payment =_paydaymultiplier* _multiplier * _dice * 1000;\r\n              _amountToBeSend = (_payment / 2);\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else\r\n      {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 1) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _payment = _paydaymultiplier*_multiplier * _dice * 1000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n      //partnership code\r\n\r\n      if (!_doublePayDay)\r\n        TotalPayDayAmount = _paydaymultiplier*HMAmount * _dice * 1000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = _paydaymultiplier*2 * (HMAmount * _dice) * 1000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = HMAmount;\r\n\r\n      if (!_doublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + HMAmount + \"*\" + \"1000)-\"+_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + HMAmount + \"*\" + \"1000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnBMPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!BrickMortarPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay)\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else\r\n          this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else\r\n      {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      \r\n      if (!SelectedBusinessPayDay) {\r\n        BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n      }\r\n\r\n      var _amount = BMAmount + BMLocations;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      if (_doublePayDay)\r\n        _multiplier = 2;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 2) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _locations = _tempData[index].LocationsName.length + 1;\r\n              var _payment = _paydaymultiplier*_locations * _multiplier * _dice * 2000;\r\n              _amountToBeSend = (_payment / 2);\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else\r\n      {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 2) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _locations = _tempData[SelectedBusinessIndex].LocationsName.length + 1;\r\n            var _payment = _paydaymultiplier*_locations * _multiplier * _dice * 2000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n\r\n      if (!_doublePayDay)\r\n        TotalPayDayAmount = _paydaymultiplier*_amount * _dice * 2000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = _paydaymultiplier*2 * (_amount * _dice) * 2000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = _amount;\r\n\r\n      if (!_doublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + _amount + \"*\" + \"2000)-\" +_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_paydaymultiplier+\"*\"+_dice + \"*\" + _amount + \"*\" + \"2000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnLoanPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!LoanPayed) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _EstimateLoan = 0;\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)//if player had skippped loan previously call all amount due\r\n        _EstimateLoan = this.GetLoanAmount_PayDay();\r\n      else\r\n        _EstimateLoan = 5000;\r\n\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= _EstimateLoan) {\r\n        LoanPayed = true;\r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - _EstimateLoan;\r\n\r\n        var _loanTaken = false;\r\n        var _businessIndex = 0;\r\n\r\n        for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n          if (\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            _loanTaken = true;\r\n            _businessIndex = index;\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount - _EstimateLoan;\r\n        \r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount <= 0) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = 0;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken = false;\r\n        }\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = false;\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        this.PayDayCompleted();\r\n      }\r\n      else {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = false;\r\n        else\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = true;\r\n\r\n        this.PayDaySetupUI.LoanResultPanelNode.active = true;\r\n        console.error(\"out of money\");\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceivePayment_PayDay() {\r\n    //all\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[ _playerIndex].Cash + TotalPayDayAmount;\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    if (!this.IsBotTurn) {\r\n      this.ShowToast(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n      );\r\n      setTimeout(() => {\r\n        this.ToggleResultPanelScreen_PayDay(false);\r\n        this.PayDayCompleted();\r\n      }, 500);\r\n    } else {\r\n      console.log(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n      );\r\n      this.ToggleResultPanelScreen_PayDay(false);\r\n      this.PayDayCompleted();\r\n    }\r\n  },\r\n\r\n  SkipLoanOneTime_PayDay() {\r\n    this.ShowToast(\r\n      \"You have skipped the loan payment, bank will call upon complete loan amount on next payday\"\r\n    );\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = true;\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    LoanPayed = true;\r\n    this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    this.PayDayCompleted();\r\n    LoanPayed = true;\r\n  },\r\n\r\n  SellBusiness_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    this.EnableSellScreen__SellBusinessUISetup(false);\r\n  },\r\n\r\n  UpdateCash_PayDay(_amount) {\r\n    this.PayDaySetupUI.CashLabel.string = \"$\" + _amount;\r\n  },\r\n\r\n  ExitLoanScreen_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n  },\r\n\r\n  StartNewGame_PayDay() {\r\n    //if bankrupted you can start new game\r\n    this.ShowToast(\r\n      \"You will lose all progress and start new game from the start.\");\r\n    setTimeout(() => {\r\n      this.ExitLoanScreen_PayDay();\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      this.Exit___InsufficientBalance();\r\n      cc.systemEvent.emit(\"ShowCard\", \"\", false);\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false,false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n    }, 3010);\r\n  },\r\n\r\n  PayDayCompleted() {\r\n    if (HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      console.log(\"all payday done\");\r\n      this.TogglePayDayScreen_PayDay(false);\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false, false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleDoublePayNextTurn(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n      }\r\n      else\r\n      {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Sell & manipulate Business UI\r\n  ToggleSellBusinessScreen_SellBusinessUISetup(_state) {\r\n    this.SellBusinessScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    this.SellBusinessSetupUI.TitleLabel.string = \"SELL\";\r\n    this.SellBusinessSetupUI.CashLabel.string =_manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellBusinessSetupUI.PlayerNameLabel.string =_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellBusinessSetupUI.BusinessCountLabel.string =\"No of Businesses : \" +_manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n        node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      else node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n\r\n  SetBusinessUI_BusinessManipulationUISetup(_isBot=false) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (!_isBot) {\r\n      this.SellBusinessSetupUI.TitleLabel.string = \"BUSINESS\";\r\n      this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n      this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n      this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n    }\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessManipulationPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_isBot)\r\n      {\r\n        node.getComponent(\"BusinessDetail\").SelectBusinessforPayDay();\r\n        break;\r\n      }\r\n      // if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      // else\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n  Reset_SellBusinessUISetup() {\r\n    for (let index = 0; index < businessDetailNodes.length; index++) {\r\n      businessDetailNodes[index].destroy();\r\n    }\r\n\r\n    businessDetailNodes = [];\r\n  },\r\n\r\n  EnableSellScreen__SellBusinessUISetup(_isTurnover = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    this.SetBusinessUI_SellBusinessUISetup();\r\n  },\r\n\r\n  EnableManipilationScreen__BusinessManipulationUISetup(_isTurnover = false,_isBot=false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n\r\n    if(!_isBot)\r\n      this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    \r\n    this.SetBusinessUI_BusinessManipulationUISetup(_isBot);\r\n  },\r\n\r\n  ExitSellScreen__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n  },\r\n\r\n  ExitSellScreenAlongTurnOver__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Invest UI\r\n  ToggleInvestScreen_InvestSetupUI(_state) {\r\n    this.InvestScreen.active = _state;\r\n  },\r\n\r\n  EnableInvest_InvestSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleInvestScreen_InvestSetupUI(true);\r\n    this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n  },\r\n  SetInvestUI_InvestSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.InvestSetupUI.TitleLabel.string = \"INVEST\";\r\n    this.InvestSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.InvestSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.InvestSetupUI.ExitButton.active = false;\r\n      this.InvestSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.InvestSetupUI.ExitButton.active = true;\r\n      this.InvestSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitInvest_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n  },\r\n\r\n  ExitInvestAlongTurnOver_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region BuyORSell UI\r\n  ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state) {\r\n    this.BuyOrSellScreen.active = _state;\r\n  },\r\n\r\n  EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n    this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n  },\r\n  SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.BuyOrSellSetupUI.TitleLabel.string = \"BUY OR SELL\";\r\n    this.BuyOrSellSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.BuyOrSellSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.BuyOrSellSetupUI.ExitButton.active = false;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.BuyOrSellSetupUI.ExitButton.active = true;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitSellOrBuy_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n  },\r\n\r\n  ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region One Question setup Ui\r\n  ToggleDecisionScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionDecisionScreen.active = _state;\r\n  },\r\n\r\n  ToggleSpaceScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSpaceScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSetupUI.WaitingScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_OneQuestionSetupUI(\r\n    _myData,\r\n    _actorsData,\r\n    _isTurnOver,\r\n    _modeIndex = 0\r\n  ) {\r\n    this.OneQuestionSetupUI.TitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.PlayerDetailLabel.string =\r\n      \"No of Players: \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (\r\n          _actorsData[index].customProperties.RoomEssentials.IsSpectate == false\r\n        ) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (\r\n            _myData.PlayerUID !=\r\n            _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n          ) {\r\n            var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n            node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerName(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerName\r\n              );\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerUID(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n              );\r\n            oneQuestionNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n          node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerName(_actorsData[index].PlayerName);\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerUID(_actorsData[index].PlayerUID);\r\n          oneQuestionNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.OneQuestionSetupUI.ExitButton.active = false;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.OneQuestionSetupUI.ExitButton.active = true;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_OneQuestionSetupUI() {\r\n    for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n      oneQuestionNodes[index].destroy();\r\n    }\r\n    oneQuestionNodes = [];\r\n  },\r\n\r\n  Exit_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  SetUpDecisionScreen_OneQuestionSetupUI(_question) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor()\r\n      .customProperties.PlayerSessionData;\r\n    this.OneQuestionSetupUI.DecisionTitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.DecisionCashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.DecisionPlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.DecisionQuestionLabel.string =\r\n      \"Player has asked if \" +\r\n      _question +\r\n      \"\\n\" +\r\n      \"\\n\" +\r\n      \"*either answer question or pay $5000 to player whose asking question.\";\r\n  },\r\n  //#endregion\r\n\r\n  ShowToast: function (message, time = ShortMessageTime,_hasbutton=true) {\r\n    this.PopUpUI.active = true;\r\n    this.PopUpUILabel.string = message;\r\n    var SelfToast = this;\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    \r\n    if (mode == 1) //for bot mode only\r\n    {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length>0 && GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].IsBot)\r\n      {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n      }\r\n      else\r\n      {\r\n        if (_hasbutton) {\r\n          this.PopUpUIButton.active = true;\r\n          clearTimeout(TimeoutRef);\r\n          TimeoutRef = setTimeout(() => {\r\n            this.CompleteToast();\r\n          }, CompletionWindowTime);\r\n        }\r\n        else {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n        }\r\n      }\r\n    }\r\n    else //for real players\r\n    {\r\n      if (_hasbutton) {\r\n        this.PopUpUIButton.active = true;\r\n        clearTimeout(TimeoutRef);\r\n        TimeoutRef = setTimeout(() => {\r\n          this.CompleteToast();\r\n        }, CompletionWindowTime);\r\n      }\r\n      else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n      }\r\n    }\r\n  },\r\n\r\n  CompleteToast()\r\n  {\r\n    console.error(\"complete toast called\");\r\n    this.PopUpUI.active = false;\r\n    clearTimeout(TimeoutRef);\r\n  },\r\n\r\n  ShowResultScreen: function (_status,_data) {\r\n    this.ResultSetupUI.ResultScreen.active = true;\r\n    this.ResultSetupUI.StatusLabel.string = _status;\r\n    this.ResultSetupUI.BodyLabel.string = _data;\r\n  },\r\n\r\n  RestartTheGame()\r\n  {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n  },\r\n});\r\n"]}