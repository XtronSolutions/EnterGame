{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","businessDetailNodes","oneQuestionNodes","businessDetailPartnershipNodes","PartnerShipData","PartnerShipOfferReceived","CancelledID","StartGameCash","SelectedBusinessPayDay","HMAmount","BMAmount","BMLocations","SelectedBusinessIndex","TurnOverForInvest","BusinessSetupCardFunctionality","GivenCashBusiness","StartAnyBusinessWithoutCash","PreviousCash","TimeoutRef","CompletionWindowTime","LongMessageTime","ShortMessageTime","PayDayInfo","InvestSellInfo","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","AddButtonNode","AddCashScreen","AddCashLabel","AddCashEditBox","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","BusinessManipulationPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","PassedPayDayCountLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PartnershipUI","WaitingStatusScreen","MainScreen","TitleName","PlayerName","PlayerCash","PartnerShipPrefab","DecisionScreen","DecisionPlayerName","DecisionPlayerCash","DecisionDescription","ResultUI","ResultScreen","StatusLabel","BodyLabel","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PartnershipSetupUI","ResultSetupUI","PopUpUI","PopUpUILabel","PopUpUIButton","GameplayUIScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","InsufficientBalanceScreen","TempDiceText","LeaveRoomButton","AvatarSprites","SpriteFrame","ResetAllData","HBDiceCounter","BMDiceCounter","onLoad","CheckReferences","GoldInvested","GoldSold","StockInvested","StockSold","IsBotTurn","PayDayCount","DoublePayDayCount","IsBankrupted","BankruptedAmount","AddCashAmount","ResetTurnVariable","require","onEnable","systemEvent","on","SyncData","onDisable","off","ToggleScreen_InsufficientBalance","_state","active","Exit___InsufficientBalance","InitialScreen_SpectateMode","CloseInitialScreen_SpectateMode","console","trace","ToggleLeaveRoomButton_SpectateModeUI","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","ToggleCashAddScreen_BusinessSetup","EnableCashAdd_BusinessSetup","StudentData","gameCash","OnCashAdd_BusinessSetup","_val","OnClickDoneCashAdd_BusinessSetup","_gamecash","parseInt","_amount","undefined","Cash","log","toString","UpdateUserData","ShowToast","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","_isCardFunctionality","_GivenCash","_StartAnyBusinessWithoutCash","Init_BusinessSetup","PlayerData","CardFunctionality","CardDataFunctionality","BusinessInfo","BusinessType","EnumBusinessType","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","userID","PlayerUID","OnChangeName_BusinessSetup","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","OnChangAvatarID_BusinessSetup","AvatarID","avatarId","GetObj_BusinessSetup","UID","isNaN","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","Math","abs","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","PushDataForPlayerLeft","_data","_mode","GetSelectedMode","_playerDataIntance","PlayerID","HomeBasedAmount","IsActive","_playerBusinessDataIntance","push","RaiseEvent","_ID","_playerLeft","_isSpectate","PhotonActor","getCustomProperty","MaxPlayers","GetRealActors","actorNr","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_businessName","_isHomeBased","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","completeCardTurn","InitialSetup_BusinessSetup","IsBankrupt","BankruptAmount","GetTurnNumber","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","IsBot","isactive","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","_isTurnOver","ResetStockBusinessNameInput","RollOneDice","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","EnablePartnership_PartnerShipSetup","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ToggleScreen_PartnerShipSetup","ToggleWaitingScreen_PartnerShipSetup","ToggleDecisionScreen_PartnerShipSetup","Reset_PartnerShipSetup","_manager","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","_totalLocations","LocationsName","SetBusinessMode","SetMode","SetBusinessValue","SetFinalBusinessValue","_allLocationsAmount","_finalAmount","SetBalance","SetLocations","IsPartnership","TogglePartnerShipButton","SetPartnerName","PartnerName","EnablePartnershipDecision_PartnerShipSetup","_msg","customProperties","PlayerSessionData","Exit_PartnerShipSetup","destroy","ReceiveEvent_PartnershipSetup","_actor","_turn","Turn","_playerData","_SelectedBusinessIndex","SelectedBusinsessIndex","_businessValue","BusValue","_payAmount","_businessMode","CheckSpectate","AcceptOffer_PartnershipSetup","_allActors","RoomActors","myIndex","GetMyIndex","RaiseEventDecisionAnswer_PartnershipSetup","CancelOffer_PartnershipSetup","_isAccepted","_payment","_isCancelled","_uID","_mainData","Accepted","CashPayment","Cancelled","BusinessIndex","ReceiveEventDecisionAnswer_PartnershipSetup","_accepted","_cash","_cancelled","_uid","PartnerID","includes","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","RaiseEventToSyncInfo","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","loanTaken","Button","interactable","GetLoanAmount_PayDay","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_forSelectedBusiness","_hMAmount","_bmAmount","_bmLocation","PaydayCounter","DoublePayCounter","_res","_time","UpdateCash_PayDay","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_doublePayDay","_dice","_amountToBeSend","_amountToBeAdjusted","_multiplier","_paydaymultiplier","SendProfit_Partner_TurnDecision","ReceivePayment_PayDay","_locations","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","StartNewGame_PayDay","emit","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","ShowInfo","info","ToggleDoublePayNextTurn","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","Reset_SellBusinessUISetup","Amount","ToggleSellLocationButton","SetBusinessUI_BusinessManipulationUISetup","SelectBusinessforPayDay","_isTurnover","EnableManipilationScreen__BusinessManipulationUISetup","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_modeIndex","RoomEssentials","IsSpectate","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","_question","message","time","_hasbutton","SelfToast","mode","clearTimeout","CompleteToast","ShowResultScreen","_status","RestartTheGame","RestartGame","_dataInfo"],"mappings":";;;;;;AAAA,IAAIA,WAAW,GAAG,IAAlB;AACA,IAAIC,wBAAwB,GAAG,IAA/B;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACA,IAAIC,gBAAgB,GAAG,EAAvB;AACA,IAAIC,8BAA8B,GAAG,EAArC;AACA,IAAIC,eAAe,GAAG,IAAtB;AACA,IAAIC,wBAAwB,GAAG,KAA/B;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAIC,aAAa,GAAG,KAApB;AACA,IAAIC,sBAAsB,GAAG,KAA7B;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,QAAQ,GAAG,CAAf;AACA,IAAIC,WAAW,GAAG,CAAlB;AACA,IAAIC,qBAAqB,GAAG,CAA5B;AACA,IAAIC,iBAAiB,GAAG,KAAxB;AACA,IAAIC,8BAA8B,GAAG,KAArC;AACA,IAAIC,iBAAiB,GAAG,CAAxB;AACA,IAAIC,2BAA2B,GAAG,KAAlC;AACA,IAAIC,YAAY,GAAG,CAAnB;AACA,IAAIC,UAAJ;AACA,IAAIC,oBAAoB,GAAG,IAA3B;AACA,IAAIC,eAAe,GAAG,IAAtB;AACA,IAAIC,gBAAgB,GAAG,IAAvB;AAEA,IAAIC,UAAU,GAAG,EAAjB;AACA,IAAIC,cAAc,GAAG,EAArB,EAEA;AACA;AACA;AACA;;AACA,IAAIC,cAAc,GAAGC,EAAE,CAACC,IAAH,CAAQ;AAC3BC,EAAAA,IAAI,EAAE,CADqB;AAE3BC,EAAAA,WAAW,EAAE,KAFc;AAG3BC,EAAAA,aAAa,EAAE,KAHY;AAI3BC,EAAAA,cAAc,EAAE,KAJW;AAK3BC,EAAAA,aAAa,EAAE,KALY;AAM3BC,EAAAA,aAAa,EAAE,KANY;AAO3BC,EAAAA,KAAK,EAAE;AAPoB,CAAR,CAArB,EASA;;AACA,IAAIC,eAAe,GAAGT,EAAE,CAACU,KAAH,CAAS;AAC7BC,EAAAA,IAAI,EAAE,iBADuB;AAG7BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,YAAY,EAAE;AACZC,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZ,iBAAS,IAHG;AAIZC,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KADJ;AAQVC,IAAAA,YAAY,EAAE;AACZL,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZ,iBAAS,IAHG;AAIZC,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KARJ;AAeVE,IAAAA,kBAAkB,EAAE;AAClBN,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACqB,IAFS;AAGlB,iBAAS,EAHS;AAIlBJ,MAAAA,YAAY,EAAE,KAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAfV;AAsBVI,IAAAA,kBAAkB,EAAE;AAClBR,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACqB,IAFS;AAGlB,iBAAS,EAHS;AAIlBJ,MAAAA,YAAY,EAAE,KAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAtBV;AA6BVK,IAAAA,iBAAiB,EAAE;AACjBT,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFQ;AAGjB,iBAAS,IAHQ;AAIjBP,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KA7BT;AAoCVO,IAAAA,iBAAiB,EAAE;AACjBX,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFQ;AAGjB,iBAAS,IAHQ;AAIjBP,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KApCT;AA2CVQ,IAAAA,eAAe,EAAE;AACfZ,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGf,iBAAS,IAHM;AAIfV,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KA3CP;AAkDVU,IAAAA,oBAAoB,EAAE;AACpBd,MAAAA,WAAW,EAAE,sBADO;AAEpBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFW;AAGpB,iBAAS,IAHW;AAIpBV,MAAAA,YAAY,EAAE,IAJM;AAKpBC,MAAAA,OAAO,EAAE;AALW,KAlDZ;AAyDVW,IAAAA,OAAO,EAAE;AACPf,MAAAA,WAAW,EAAE,SADN;AAEPC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFF;AAGP,iBAAS,IAHF;AAIPC,MAAAA,YAAY,EAAE,IAJP;AAKPC,MAAAA,OAAO,EAAE;AALF,KAzDC;AAgEVY,IAAAA,SAAS,EAAE;AACThB,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFA;AAGT,iBAAS,IAHA;AAITV,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KAhED;AAuEVa,IAAAA,iBAAiB,EAAE;AACjBjB,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjB,iBAAS,IAHQ;AAIjBV,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KAvET;AA8EVc,IAAAA,aAAa,EAAE;AACblB,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KA9EL;AAqFVe,IAAAA,UAAU,EAAE;AACVnB,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEhB,cAFI;AAGV,iBAASA,cAAc,CAACG,IAHd;AAIVe,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KArFF;AA4FVgB,IAAAA,eAAe,EAAE;AACfpB,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAE,CAACf,EAAE,CAAC2B,IAAJ,CAFS;AAGf,iBAAS,EAHM;AAIfV,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KA5FP;AAmGViB,IAAAA,iBAAiB,EAAE;AACjBrB,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjB,iBAAS,IAHQ;AAIjBV,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KAnGT;AA0GVkB,IAAAA,cAAc,EAAE;AACdtB,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGd,iBAAS,IAHK;AAIdV,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK,KA1GN;AAiHVmB,IAAAA,aAAa,EAAE;AACbvB,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAjHL;AAwHVoB,IAAAA,aAAa,EAAE;AACbxB,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAxHL;AA+HVqB,IAAAA,YAAY,EAAE;AACZzB,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZ,iBAAS,IAHG;AAIZC,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KA/HJ;AAsIVsB,IAAAA,cAAc,EAAE;AACd1B,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFK;AAGd,iBAAS,IAHK;AAIdP,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK;AAtIN,GAHiB;AAiJ7BuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD,GAnJ4B;AAqJ7BC,EAAAA,wBAAwB,EAAE,kCAAU/B,IAAV,EAAgB;AACxC,SAAKE,YAAL,CAAkB8B,MAAlB,GAA2BhC,IAA3B;AACD;AAvJ4B,CAAT,CAAtB,EA0JA;;AACA,IAAIiC,mBAAmB,GAAG5C,EAAE,CAACU,KAAH,CAAS;AACjCC,EAAAA,IAAI,EAAE,qBAD2B;AAGjCC,EAAAA,UAAU,EAAE;AACViC,IAAAA,gBAAgB,EAAE;AAChB/B,MAAAA,WAAW,EAAE,kBADG;AAEhBC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFO;AAGhB,iBAAS,IAHO;AAIhBP,MAAAA,YAAY,EAAE,IAJE;AAKhBC,MAAAA,OAAO,EAAE;AALO,KADR;AAQV4B,IAAAA,WAAW,EAAE;AACXhC,MAAAA,WAAW,EAAE,aADF;AAEXC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFE;AAGX,iBAAS,IAHE;AAIXP,MAAAA,YAAY,EAAE,IAJH;AAKXC,MAAAA,OAAO,EAAE;AALE,KARH;AAeV6B,IAAAA,YAAY,EAAE;AACZjC,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFG;AAGZ,iBAAS,IAHG;AAIZP,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KAfJ;AAsBV8B,IAAAA,eAAe,EAAE;AACflC,MAAAA,WAAW,EAAE,MADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAtBP;AA6BV+B,IAAAA,kBAAkB,EAAE;AAClBnC,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KA7BV;AAoCVgC,IAAAA,2BAA2B,EAAE;AAC3BpC,MAAAA,WAAW,EAAE,6BADc;AAE3BC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFkB;AAG3B,iBAAS,IAHkB;AAI3BV,MAAAA,YAAY,EAAE,IAJa;AAK3BC,MAAAA,OAAO,EAAE;AALkB,KApCnB;AA2CViC,IAAAA,oBAAoB,EAAE;AACpBrC,MAAAA,WAAW,EAAE,sBADO;AAEpBC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFW;AAGpB,iBAAS,IAHW;AAIpBnC,MAAAA,YAAY,EAAE,IAJM;AAKpBC,MAAAA,OAAO,EAAE;AALW;AA3CZ,GAHqB;AAsDjCuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD,GAxDgC;AA0DjCC,EAAAA,wBAAwB,EAAE,kCAAU/B,IAAV,EAAgB;AACxC,SAAKE,YAAL,CAAkB8B,MAAlB,GAA2BhC,IAA3B;AACD;AA5DgC,CAAT,CAA1B,EA+DA;;AACA,IAAI0C,UAAU,GAAGrD,EAAE,CAACC,IAAH,CAAQ;AACvBC,EAAAA,IAAI,EAAE,CADiB;AAEvBoD,EAAAA,WAAW,EAAE,CAFU;AAGvBC,EAAAA,UAAU,EAAE,CAHW;AAIvBC,EAAAA,SAAS,EAAE,CAJY;AAKvBC,EAAAA,QAAQ,EAAE,CALa;AAMvBjD,EAAAA,KAAK,EAAE;AANgB,CAAR,CAAjB,EASA;;AACA,IAAIkD,YAAY,GAAG1D,EAAE,CAACU,KAAH,CAAS;AAC1BC,EAAAA,IAAI,EAAE,cADoB;AAE1BC,EAAAA,UAAU,EAAE;AACV+C,IAAAA,UAAU,EAAE;AACV7C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQV0C,IAAAA,eAAe,EAAE;AACf9C,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KARP;AAeV2C,IAAAA,eAAe,EAAE;AACf/C,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV4C,IAAAA,eAAe,EAAE;AACfhD,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAtBP;AA6BV6C,IAAAA,mBAAmB,EAAE;AACnBjD,MAAAA,WAAW,EAAE,gBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFU;AAGnB,iBAAS,IAHU;AAInBC,MAAAA,YAAY,EAAE,IAJK;AAKnBC,MAAAA,OAAO,EAAE;AALU,KA7BX;AAoCV8C,IAAAA,qBAAqB,EAAE;AACrBlD,MAAAA,WAAW,EAAE,kBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY,KApCb;AA2CV+C,IAAAA,qBAAqB,EAAE;AACrBnD,MAAAA,WAAW,EAAE,kBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY,KA3Cb;AAkDVgD,IAAAA,eAAe,EAAE;AACfpD,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAlDP;AAyDViD,IAAAA,WAAW,EAAE;AACXrD,MAAAA,WAAW,EAAE,aADF;AAEXC,MAAAA,IAAI,EAAEsC,UAFK;AAGX,iBAASA,UAAU,CAACnD,IAHT;AAIXe,MAAAA,YAAY,EAAE;AAJH,KAzDH;AA+DVmD,IAAAA,aAAa,EAAE;AACbtD,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACwB,OAFI;AAGb,iBAAS,IAHI;AAIbP,MAAAA,YAAY,EAAE;AAJD;AA/DL,GAFc;AAwE1BwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA1EyB,CAAT,CAAnB,EA6EA;;AACA,IAAI4B,cAAc,GAAGrE,EAAE,CAACU,KAAH,CAAS;AAC5BC,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,UAAU,EAAE;AACV+C,IAAAA,UAAU,EAAE;AACV7C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVoD,IAAAA,SAAS,EAAE;AACTxD,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVqD,IAAAA,eAAe,EAAE;AACfzD,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBVsD,IAAAA,kBAAkB,EAAE;AAClB1D,MAAAA,WAAW,EAAE,eADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAtBV;AA6BVuD,IAAAA,iBAAiB,EAAE;AACjB3D,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjB,iBAAS,IAHQ;AAIjBV,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KA7BT;AAoCVwD,IAAAA,kBAAkB,EAAE;AAClB5D,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFS;AAGlB,iBAAS,IAHS;AAIlBnC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KApCV;AA2CVyD,IAAAA,0BAA0B,EAAE;AAC1B7D,MAAAA,WAAW,EAAE,4BADa;AAE1BC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFiB;AAG1B,iBAAS,IAHiB;AAI1BnC,MAAAA,YAAY,EAAE,IAJY;AAK1BC,MAAAA,OAAO,EAAE;AALiB,KA3ClB;AAkDV0D,IAAAA,UAAU,EAAE;AACV9D,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAlDF;AAyDV2D,IAAAA,kBAAkB,EAAE;AAClB/D,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS;AAzDV,GAFgB;AAmE5BuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AArE2B,CAAT,CAArB,EAwEA;;AACA,IAAIqC,QAAQ,GAAG9E,EAAE,CAACU,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAE,UADgB;AAEtBC,EAAAA,UAAU,EAAE;AACV+C,IAAAA,UAAU,EAAE;AACV7C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVoD,IAAAA,SAAS,EAAE;AACTxD,MAAAA,WAAW,EAAE,MADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeV6D,IAAAA,oBAAoB,EAAE;AACpBjE,MAAAA,WAAW,EAAE,iBADO;AAEpBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFW;AAGpB,iBAAS,IAHW;AAIpBC,MAAAA,YAAY,EAAE,IAJM;AAKpBC,MAAAA,OAAO,EAAE;AALW,KAfZ;AAsBV8D,IAAAA,aAAa,EAAE;AACblE,MAAAA,WAAW,EAAE,mBADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFI;AAGb,iBAAS,IAHI;AAIbC,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAtBL;AA6BV+D,IAAAA,qBAAqB,EAAE;AACrBnE,MAAAA,WAAW,EAAE,sBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY,KA7Bb;AAoCVgE,IAAAA,sBAAsB,EAAE;AACtBpE,MAAAA,WAAW,EAAE,wBADS;AAEtBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFa;AAGtB,iBAAS,IAHa;AAItBC,MAAAA,YAAY,EAAE,IAJQ;AAKtBC,MAAAA,OAAO,EAAE;AALa,KApCd;AA2CViE,IAAAA,YAAY,EAAE;AACZrE,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZ,iBAAS,IAHG;AAIZV,MAAAA,YAAY,EAAE,IAJF;AAKZC,MAAAA,OAAO,EAAE;AALG,KA3CJ;AAkDVkE,IAAAA,KAAK,EAAE;AACLtE,MAAAA,WAAW,EAAE,gBADR;AAELC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFJ;AAGL,iBAAS,IAHJ;AAILV,MAAAA,YAAY,EAAE,IAJT;AAKLC,MAAAA,OAAO,EAAE;AALJ,KAlDG;AAyDVmE,IAAAA,OAAO,EAAE;AACPvE,MAAAA,WAAW,EAAE,SADN;AAEPC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFF;AAGP,iBAAS,IAHF;AAIPV,MAAAA,YAAY,EAAE,IAJP;AAKPC,MAAAA,OAAO,EAAE;AALF,KAzDC;AAgEVoE,IAAAA,aAAa,EAAE;AACbxE,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAhEL;AAuEVqE,IAAAA,eAAe,EAAE;AACfzE,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGf,iBAAS,IAHM;AAIfV,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAvEP;AA8EVsE,IAAAA,mBAAmB,EAAE;AACnB1E,MAAAA,WAAW,EAAE,qBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFU;AAGnB,iBAAS,IAHU;AAInBV,MAAAA,YAAY,EAAE,IAJK;AAKnBC,MAAAA,OAAO,EAAE;AALU,KA9EX;AAqFVuE,IAAAA,sBAAsB,EAAE;AACtB3E,MAAAA,WAAW,EAAE,mBADS;AAEtBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFa;AAGtB,iBAAS,IAHa;AAItBC,MAAAA,YAAY,EAAE,IAJQ;AAKtBC,MAAAA,OAAO,EAAE;AALa,KArFd;AA4FV0C,IAAAA,eAAe,EAAE;AACf9C,MAAAA,WAAW,EAAE,YADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KA5FP;AAmGVwE,IAAAA,kBAAkB,EAAE;AAClB5E,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAnGV;AA0GVyE,IAAAA,gBAAgB,EAAE;AAChB7E,MAAAA,WAAW,EAAE,kBADG;AAEhBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFO;AAGhB,iBAAS,IAHO;AAIhBC,MAAAA,YAAY,EAAE,IAJE;AAKhBC,MAAAA,OAAO,EAAE;AALO,KA1GR;AAiHV0E,IAAAA,cAAc,EAAE;AACd9E,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGd,iBAAS,IAHK;AAIdV,MAAAA,YAAY,EAAE,IAJA;AAKdC,MAAAA,OAAO,EAAE;AALK,KAjHN;AAwHV2E,IAAAA,eAAe,EAAE;AACf/E,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM;AAxHP,GAFU;AAkItBuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AApIqB,CAAT,CAAf,EAuIA;;AACA,IAAIqD,QAAQ,GAAG9F,EAAE,CAACU,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAE,UADgB;AAEtBC,EAAAA,UAAU,EAAE;AACV+C,IAAAA,UAAU,EAAE;AACV7C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVoD,IAAAA,SAAS,EAAE;AACTxD,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVqD,IAAAA,eAAe,EAAE;AACfzD,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV0D,IAAAA,UAAU,EAAE;AACV9D,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAtBF;AA6BV2D,IAAAA,kBAAkB,EAAE;AAClB/D,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS;AA7BV,GAFU;AAuCtBuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAzCqB,CAAT,CAAf,EA4CA;;AACA,IAAIsD,WAAW,GAAG/F,EAAE,CAACU,KAAH,CAAS;AACzBC,EAAAA,IAAI,EAAE,aADmB;AAEzBC,EAAAA,UAAU,EAAE;AACV+C,IAAAA,UAAU,EAAE;AACV7C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVoD,IAAAA,SAAS,EAAE;AACTxD,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVqD,IAAAA,eAAe,EAAE;AACfzD,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV0D,IAAAA,UAAU,EAAE;AACV9D,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAtBF;AA6BV2D,IAAAA,kBAAkB,EAAE;AAClB/D,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS;AA7BV,GAFa;AAuCzBuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAzCwB,CAAT,CAAlB,EA4CA;;AACA,IAAIuD,aAAa,GAAGhG,EAAE,CAACU,KAAH,CAAS;AAC3BC,EAAAA,IAAI,EAAE,eADqB;AAE3BC,EAAAA,UAAU,EAAE;AACV+C,IAAAA,UAAU,EAAE;AACV7C,MAAAA,WAAW,EAAE,OADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KADF;AAQVoD,IAAAA,SAAS,EAAE;AACTxD,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE,IAJL;AAKTC,MAAAA,OAAO,EAAE;AALA,KARD;AAeVqD,IAAAA,eAAe,EAAE;AACfzD,MAAAA,WAAW,EAAE,iBADE;AAEfC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFM;AAGf,iBAAS,IAHM;AAIfC,MAAAA,YAAY,EAAE,IAJC;AAKfC,MAAAA,OAAO,EAAE;AALM,KAfP;AAsBV0D,IAAAA,UAAU,EAAE;AACV9D,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE,IAJJ;AAKVC,MAAAA,OAAO,EAAE;AALC,KAtBF;AA6BV2D,IAAAA,kBAAkB,EAAE;AAClB/D,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlB,iBAAS,IAHS;AAIlBV,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KA7BV;AAoCV+E,IAAAA,iBAAiB,EAAE;AACjBnF,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFQ;AAGjB,iBAAS,IAHQ;AAIjBC,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KApCT;AA2CVgF,IAAAA,aAAa,EAAE;AACbpF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFI;AAGb,iBAAS,IAHI;AAIbnC,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KA3CL;AAkDViF,IAAAA,aAAa,EAAE;AACbrF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAlDL;AAyDVkF,IAAAA,aAAa,EAAE;AACbtF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE,IAJD;AAKbC,MAAAA,OAAO,EAAE;AALI,KAzDL;AAgEVmF,IAAAA,kBAAkB,EAAE;AAClBvF,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE,IAJI;AAKlBC,MAAAA,OAAO,EAAE;AALS,KAhEV;AAuEVoF,IAAAA,iBAAiB,EAAE;AACjBxF,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFQ;AAGjB,iBAAS,IAHQ;AAIjBC,MAAAA,YAAY,EAAE,IAJG;AAKjBC,MAAAA,OAAO,EAAE;AALQ,KAvET;AA8EVqF,IAAAA,uBAAuB,EAAE;AACvBzF,MAAAA,WAAW,EAAE,yBADU;AAEvBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFc;AAGvB,iBAAS,IAHc;AAIvBC,MAAAA,YAAY,EAAE,IAJS;AAKvBC,MAAAA,OAAO,EAAE;AALc,KA9Ef;AAqFVsF,IAAAA,qBAAqB,EAAE;AACrB1F,MAAAA,WAAW,EAAE,uBADQ;AAErBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFY;AAGrB,iBAAS,IAHY;AAIrBC,MAAAA,YAAY,EAAE,IAJO;AAKrBC,MAAAA,OAAO,EAAE;AALY;AArFb,GAFe;AA+F3BuB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AAjG0B,CAAT,CAApB,EAoGA;;AACA,IAAIgE,aAAa,GAAGzG,EAAE,CAACU,KAAH,CAAS;AAC3BC,EAAAA,IAAI,EAAE,eADqB;AAE3BC,EAAAA,UAAU,EAAE;AACV8F,IAAAA,mBAAmB,EAAE;AACnB5F,MAAAA,WAAW,EAAE,qBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFU;AAGnB,iBAAS,IAHU;AAInBV,MAAAA,YAAY,EAAE,IAJK;AAKnBC,MAAAA,OAAO,EAAE;AALU,KADX;AAQVyF,IAAAA,UAAU,EAAE;AACV7F,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFC;AAGV,iBAAS,IAHC;AAIVV,MAAAA,YAAY,EAAE;AAJJ,KARF;AAcV2F,IAAAA,SAAS,EAAE;AACT9F,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE;AAJL,KAdD;AAoBV4F,IAAAA,UAAU,EAAE;AACV/F,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ,KApBF;AA0BV6F,IAAAA,UAAU,EAAE;AACVhG,MAAAA,WAAW,EAAE,YADH;AAEVC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFC;AAGV,iBAAS,IAHC;AAIVC,MAAAA,YAAY,EAAE;AAJJ,KA1BF;AAgCV8F,IAAAA,iBAAiB,EAAE;AACjBjG,MAAAA,WAAW,EAAE,mBADI;AAEjBC,MAAAA,IAAI,EAAEf,EAAE,CAACoD,MAFQ;AAGjB,iBAAS,IAHQ;AAIjBnC,MAAAA,YAAY,EAAE;AAJG,KAhCT;AAsCVkF,IAAAA,aAAa,EAAE;AACbrF,MAAAA,WAAW,EAAE,eADA;AAEbC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGb,iBAAS,IAHI;AAIbV,MAAAA,YAAY,EAAE;AAJD,KAtCL;AA6CV+F,IAAAA,cAAc,EAAE;AACdlG,MAAAA,WAAW,EAAE,gBADC;AAEdC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGd,iBAAS,IAHK;AAIdV,MAAAA,YAAY,EAAE;AAJA,KA7CN;AAoDVgG,IAAAA,kBAAkB,EAAE;AAClBnG,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE;AAJI,KApDV;AA2DViG,IAAAA,kBAAkB,EAAE;AAClBpG,MAAAA,WAAW,EAAE,oBADK;AAElBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFS;AAGlB,iBAAS,IAHS;AAIlBC,MAAAA,YAAY,EAAE;AAJI,KA3DV;AAkEVkG,IAAAA,mBAAmB,EAAE;AACnBrG,MAAAA,WAAW,EAAE,qBADM;AAEnBC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFU;AAGnB,iBAAS,IAHU;AAInBC,MAAAA,YAAY,EAAE;AAJK;AAlEX,GAFe;AA2E3BwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA7E0B,CAAT,CAApB,EAgFA;;AACA,IAAI2E,QAAQ,GAAGpH,EAAE,CAACU,KAAH,CAAS;AACtBC,EAAAA,IAAI,EAAE,UADgB;AAEtBC,EAAAA,UAAU,EAAE;AACVyG,IAAAA,YAAY,EAAE;AACZvG,MAAAA,WAAW,EAAE,cADD;AAEZC,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZ,iBAAS,IAHG;AAIZV,MAAAA,YAAY,EAAE;AAJF,KADJ;AAQVqG,IAAAA,WAAW,EAAE;AACXxG,MAAAA,WAAW,EAAE,aADF;AAEXC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFE;AAGX,iBAAS,IAHE;AAIXC,MAAAA,YAAY,EAAE;AAJH,KARH;AAeVsG,IAAAA,SAAS,EAAE;AACTzG,MAAAA,WAAW,EAAE,WADJ;AAETC,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFA;AAGT,iBAAS,IAHA;AAITC,MAAAA,YAAY,EAAE;AAJL;AAfD,GAFU;AAwBtBwB,EAAAA,IAAI,EAAE,gBAAY,CAChB;AACD;AA1BqB,CAAT,CAAf,EA6BA;;AACA,IAAI+E,iBAAJ;AACA,IAAIC,yBAAJ;AACA,IAAIC,YAAJ;AACA,IAAIC,uBAAuB,GAAG,CAAC,CAA/B,EAAkC;AAElC;;AACA,IAAIC,mBAAmB,GAAG,EAA1B;AACA,IAAIC,gBAAJ,EAEA;;AACA,IAAIC,cAAc,GAAG,EAArB;AACA,IAAIC,kBAAkB,GAAG,EAAzB;AACA,IAAIC,iBAAiB,GAAG,EAAxB;AACA,IAAIC,UAAJ;AACA,IAAIC,WAAJ;AACA,IAAIC,YAAY,GAAG,EAAnB;AAEA,IAAIC,yBAAyB,GAAG,KAAhC;AACA,IAAIC,2BAA2B,GAAG,KAAlC;AACA,IAAIC,SAAS,GAAG,KAAhB;AACA,IAAIC,iBAAiB,GAAG,CAAxB;AACA,IAAIC,YAAY,GAAG,KAAnB;AAEA,IAAIC,iBAAiB,GAAGzI,EAAE,CAACU,KAAH,CAAS;AAC/BC,EAAAA,IAAI,EAAE,mBADyB;AAE/B,aAASX,EAAE,CAAC0I,SAFmB;AAG/B9H,EAAAA,UAAU,EAAE;AACV+H,IAAAA,iBAAiB,EAAE;AACjB,iBAAS,IADQ;AAEjB5H,MAAAA,IAAI,EAAEN,eAFW;AAGjBQ,MAAAA,YAAY,EAAE,IAHG;AAIjBC,MAAAA,OAAO,EAAE;AAJQ,KADT;AAOV0B,IAAAA,mBAAmB,EAAE;AACnB,iBAAS,IADU;AAEnB7B,MAAAA,IAAI,EAAE6B,mBAFa;AAGnB3B,MAAAA,YAAY,EAAE,IAHK;AAInBC,MAAAA,OAAO,EAAE;AAJU,KAPX;AAaV0H,IAAAA,iBAAiB,EAAE;AACjB,iBAAS,IADQ;AAEjB7H,MAAAA,IAAI,EAAE2C,YAFW;AAGjBzC,MAAAA,YAAY,EAAE,IAHG;AAIjBC,MAAAA,OAAO,EAAE;AAJQ,KAbT;AAmBV2H,IAAAA,aAAa,EAAE;AACb,iBAAS,IADI;AAEb9H,MAAAA,IAAI,EAAE+D,QAFO;AAGb7D,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KAnBL;AAyBV4H,IAAAA,mBAAmB,EAAE;AACnB,iBAAS,EADU;AAEnB/H,MAAAA,IAAI,EAAEsD,cAFa;AAGnBpD,MAAAA,YAAY,EAAE,IAHK;AAInBC,MAAAA,OAAO,EAAE;AAJU,KAzBX;AA+BV6H,IAAAA,aAAa,EAAE;AACb,iBAAS,EADI;AAEbhI,MAAAA,IAAI,EAAE+E,QAFO;AAGb7E,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KA/BL;AAqCV8H,IAAAA,gBAAgB,EAAE;AAChB,iBAAS,EADO;AAEhBjI,MAAAA,IAAI,EAAEgF,WAFU;AAGhB9E,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAE;AAJO,KArCR;AA2CV+H,IAAAA,kBAAkB,EAAE;AAClB,iBAAS,EADS;AAElBlI,MAAAA,IAAI,EAAEiF,aAFY;AAGlB/E,MAAAA,YAAY,EAAE,IAHI;AAIlBC,MAAAA,OAAO,EAAE;AAJS,KA3CV;AAiDVgI,IAAAA,kBAAkB,EAAE;AAClB,iBAAS,EADS;AAElBnI,MAAAA,IAAI,EAAE0F,aAFY;AAGlBxF,MAAAA,YAAY,EAAE,IAHI;AAIlBC,MAAAA,OAAO,EAAE;AAJS,KAjDV;AAuDViI,IAAAA,aAAa,EAAE;AACb,iBAAS,EADI;AAEbpI,MAAAA,IAAI,EAAEqG,QAFO;AAGbnG,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KAvDL;AA6DVkI,IAAAA,OAAO,EAAE;AACP,iBAAS,IADF;AAEPrI,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFF;AAGPV,MAAAA,YAAY,EAAE,IAHP;AAIPC,MAAAA,OAAO,EAAE;AAJF,KA7DC;AAmEVmI,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZtI,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZC,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAnEJ;AAyEVoI,IAAAA,aAAa,EAAE;AACb,iBAAS,IADI;AAEbvI,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFI;AAGbV,MAAAA,YAAY,EAAE,IAHD;AAIbC,MAAAA,OAAO,EAAE;AAJI,KAzEL;AA+EVa,IAAAA,iBAAiB,EAAE;AACjB,iBAAS,IADQ;AAEjBhB,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFQ;AAGjBV,MAAAA,YAAY,EAAE,IAHG;AAIjBC,MAAAA,OAAO,EAAE;AAJQ,KA/ET;AAqFVqI,IAAAA,gBAAgB,EAAE;AAChB,iBAAS,IADO;AAEhBxI,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFO;AAGhBV,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAE;AAJO,KArFR;AA2FV8F,IAAAA,cAAc,EAAE;AACd,iBAAS,IADK;AAEdjG,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFK;AAGdV,MAAAA,YAAY,EAAE,IAHA;AAIdC,MAAAA,OAAO,EAAE;AAJK,KA3FN;AAiGVsI,IAAAA,gBAAgB,EAAE;AAChB,iBAAS,IADO;AAEhBzI,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFO;AAGhBV,MAAAA,YAAY,EAAE,IAHE;AAIhBC,MAAAA,OAAO,EAAE;AAJO,KAjGR;AAuGVuI,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZ1I,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZV,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAvGJ;AA6GVwI,IAAAA,kBAAkB,EAAE;AAClB,iBAAS,IADS;AAElB3I,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFS;AAGlBV,MAAAA,YAAY,EAAE,IAHI;AAIlBC,MAAAA,OAAO,EAAE;AAJS,KA7GV;AAmHVyI,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZ5I,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFG;AAGZV,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAnHJ;AAyHV0I,IAAAA,eAAe,EAAE;AACf,iBAAS,IADM;AAEf7I,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGfV,MAAAA,YAAY,EAAE,IAHC;AAIfC,MAAAA,OAAO,EAAE;AAJM,KAzHP;AA+HV2I,IAAAA,sBAAsB,EAAE;AACtB,iBAAS,IADa;AAEtB9I,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFa;AAGtBV,MAAAA,YAAY,EAAE,IAHQ;AAItBC,MAAAA,OAAO,EAAE;AAJa,KA/Hd;AAqIV4I,IAAAA,yBAAyB,EAAE;AACzB,iBAAS,IADgB;AAEzB/I,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFgB;AAGzBV,MAAAA,YAAY,EAAE,IAHW;AAIzBC,MAAAA,OAAO,EAAE;AAJgB,KArIjB;AA2IV6I,IAAAA,yBAAyB,EAAE;AACzB,iBAAS,IADgB;AAEzBhJ,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFgB;AAGzBV,MAAAA,YAAY,EAAE,IAHW;AAIzBC,MAAAA,OAAO,EAAE;AAJgB,KA3IjB;AAiJV8I,IAAAA,YAAY,EAAE;AACZ,iBAAS,IADG;AAEZjJ,MAAAA,IAAI,EAAEf,EAAE,CAACgB,KAFG;AAGZC,MAAAA,YAAY,EAAE,IAHF;AAIZC,MAAAA,OAAO,EAAE;AAJG,KAjJJ;AAuJV+I,IAAAA,eAAe,EAAE;AACf,iBAAS,IADM;AAEflJ,MAAAA,IAAI,EAAEf,EAAE,CAAC2B,IAFM;AAGfV,MAAAA,YAAY,EAAE;AAHC,KAvJP;AA4JViJ,IAAAA,aAAa,EAAE;AACb,iBAAS,EADI;AAEbnJ,MAAAA,IAAI,EAAEf,EAAE,CAACmK,WAFI;AAGblJ,MAAAA,YAAY,EAAE;AAHD;AA5JL,GAHmB;AAsK/BmJ,EAAAA,YAtK+B,0BAsKhB;AACb9L,IAAAA,WAAW,GAAG,IAAd;AACAC,IAAAA,wBAAwB,GAAG,IAA3B;AACAC,IAAAA,mBAAmB,GAAG,EAAtB;AACAC,IAAAA,gBAAgB,GAAG,EAAnB;AACAC,IAAAA,8BAA8B,GAAG,EAAjC;AACAC,IAAAA,eAAe,GAAG,IAAlB;AACAC,IAAAA,wBAAwB,GAAG,KAA3B;AACAC,IAAAA,WAAW,GAAG,EAAd;AACAE,IAAAA,sBAAsB,GAAG,KAAzB;AACAC,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,QAAQ,GAAG,CAAX;AACAC,IAAAA,WAAW,GAAG,CAAd;AACAC,IAAAA,qBAAqB,GAAG,CAAxB;AACAC,IAAAA,iBAAiB,GAAG,KAApB;AACAC,IAAAA,8BAA8B,GAAG,KAAjC;AACAC,IAAAA,iBAAiB,GAAG,CAApB;AACAC,IAAAA,2BAA2B,GAAG,KAA9B;AACAC,IAAAA,YAAY,GAAG,CAAf;AACAC,IAAAA,UAAU,GAAG,IAAb;AAEAkI,IAAAA,uBAAuB,GAAG,CAAC,CAA3B,CArBa,CAqBiB;AAE9B;;AACAC,IAAAA,mBAAmB,GAAG,EAAtB;AACAC,IAAAA,gBAAgB,CAzBH,CA2Bb;;AACAC,IAAAA,cAAc,GAAG,EAAjB;AACAC,IAAAA,kBAAkB,GAAG,EAArB;AACAC,IAAAA,iBAAiB,GAAG,EAApB;AACAC,IAAAA,UAAU,GAAG,CAAb;AACAC,IAAAA,WAAW;AACXC,IAAAA,YAAY,GAAG,EAAf;AAEAC,IAAAA,yBAAyB,GAAG,KAA5B;AACAC,IAAAA,2BAA2B,GAAG,KAA9B;AACAC,IAAAA,SAAS,GAAG,KAAZ;AACAC,IAAAA,iBAAiB,GAAG,CAApB;AACAC,IAAAA,YAAY,GAAG,KAAf;AAEA6B,IAAAA,aAAa,GAAG,CAAhB;AACAC,IAAAA,aAAa,GAAG,CAAhB;AACAzK,IAAAA,UAAU,GAAG,EAAb;AACAC,IAAAA,cAAc,GAAG,EAAjB;AACD,GAnN8B;AAqN/ByK,EAAAA,MArN+B,oBAqNtB;AACP,SAAKH,YAAL;AACA,SAAKI,eAAL,GAFO,CAIP;;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,SAAKC,iBAAL,GAAyB,CAAzB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AACA,SAAKC,aAAL,GAAqB,EAArB;AACD,GApO8B;AAsO/BC,EAAAA,iBAtO+B,+BAsOX;AAClB,SAAKV,YAAL,GAAoB,KAApB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACD,GA3O8B;AA6O/BJ,EAAAA,eA7O+B,6BA6Ob;AAChB,QAAI,CAACjM,wBAAD,IAA6BA,wBAAwB,IAAI,IAA7D,EAAmEA,wBAAwB,GAAG6M,OAAO,CAAC,0BAAD,CAAlC;AAEnE,QAAI,CAAC9M,WAAD,IAAgBA,WAAW,IAAI,IAAnC,EAAyCA,WAAW,GAAG8M,OAAO,CAAC,aAAD,CAArB;AAC1C,GAjP8B;AAmP/BC,EAAAA,QAAQ,EAAE,oBAAY;AACpB;AACArL,IAAAA,EAAE,CAACsL,WAAH,CAAeC,EAAf,CAAkB,UAAlB,EAA8B,KAAKC,QAAnC,EAA6C,IAA7C;AACD,GAtP8B;AAwP/BC,EAAAA,SAAS,EAAE,qBAAY;AACrBzL,IAAAA,EAAE,CAACsL,WAAH,CAAeI,GAAf,CAAmB,UAAnB,EAA+B,KAAKF,QAApC,EAA8C,IAA9C;AACD,GA1P8B;AA4P/BG,EAAAA,gCA5P+B,4CA4PEC,MA5PF,EA4PU;AACvC,SAAK7B,yBAAL,CAA+B8B,MAA/B,GAAwCD,MAAxC;AACD,GA9P8B;AAgQ/BE,EAAAA,0BAhQ+B,wCAgQF;AAC3B,SAAKH,gCAAL,CAAsC,KAAtC;AACD,GAlQ8B;AAmQ/B;AACAI,EAAAA,0BApQ+B,wCAoQF;AAC3B,SAAKpD,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,IAAlD;AACD,GAtQ8B;AAwQ/BG,EAAAA,+BAxQ+B,6CAwQG;AAChC,SAAKrD,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,KAAlD;AACAI,IAAAA,OAAO,CAACC,KAAR,CAAc,2CAAd;AACD,GA3Q8B;AA6Q/BC,EAAAA,oCA7Q+B,gDA6QMP,MA7QN,EA6Qc;AAC3C,SAAK3B,eAAL,CAAqB4B,MAArB,GAA8BD,MAA9B;AACD,GA/Q8B;AAiR/BQ,EAAAA,mCAjR+B,iDAiRO;AACpC7N,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DC,oBAA9D,CAAmF,IAAnF;AACAhO,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DE,gBAA9D;AACAC,IAAAA,UAAU,CAAC,YAAM;AACflO,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDC,mBAApD;AACApO,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DM,iBAA9D;AACArO,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCQ,0BAAlC,GAA+DD,iBAA/D;AACArO,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDF,iBAAtD;AACArO,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCO,iBAAlC;AACA5M,MAAAA,EAAE,CAAC+M,QAAH,CAAYC,SAAZ,CAAsB,UAAtB;AACD,KAPS,EAOP,GAPO,CAAV;AAQD,GA5R8B;AA6R/B;AAEA;AACA;AACAC,EAAAA,iCAAiC,EAAE,2CAAUrB,MAAV,EAAkB;AACnD,SAAKjD,iBAAL,CAAuBrG,aAAvB,CAAqCuJ,MAArC,GAA8CD,MAA9C;AACD,GAnS8B;AAqS/BsB,EAAAA,2BAA2B,EAAE,uCAAY;AACvC,SAAKvE,iBAAL,CAAuBnG,cAAvB,CAAsCG,MAAtC,GAA+C,EAA/C;AACA,SAAKuI,aAAL,GAAqB,EAArB;AACA,SAAK+B,iCAAL,CAAuC,IAAvC;AACA,SAAKtE,iBAAL,CAAuBpG,YAAvB,CAAoCI,MAApC,GAA6CpE,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAA/G;AACD,GA1S8B;AA4S/BC,EAAAA,uBAAuB,EAAE,iCAAUC,IAAV,EAAgB;AACvC,SAAKpC,aAAL,GAAqBoC,IAArB;AACD,GA9S8B;AAgT/BC,EAAAA,gCAAgC,EAAE,4CAAY;AAC5C,SAAKN,iCAAL,CAAuC,KAAvC;;AACA,QAAIO,SAAS,GAAGC,QAAQ,CAAClP,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAAnE,CAAxB;;AACA,QAAIM,OAAO,GAAGD,QAAQ,CAAC,KAAKvC,aAAN,CAAtB;;AACA,QAAI,KAAKA,aAAL,IAAsB,IAAtB,IAA8B,KAAKA,aAAL,IAAsB,EAApD,IAA0D,KAAKA,aAAL,IAAsByC,SAApF,EAA+F;AAC7F,UAAID,OAAO,IAAIF,SAAf,EAA0B;AACxBhG,QAAAA,iBAAiB,CAACoG,IAAlB,IAA0BF,OAA1B;AACAzB,QAAAA,OAAO,CAAC4B,GAAR,CAAYrG,iBAAiB,CAACoG,IAA9B;AACA,aAAKjF,iBAAL,CAAuBxH,YAAvB,CAAoCwB,MAApC,GAA6C6E,iBAAiB,CAACoG,IAAlB,CAAuBE,QAAvB,EAA7C;AACAN,QAAAA,SAAS,IAAIE,OAAb;AACAnP,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAAlE,GAA6EI,SAAS,CAACM,QAAV,EAA7E;AACAvP,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDiB,cAAtD,CAAqExP,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEC,QAAvI,EAAiJ,CAAC,CAAlJ,EAAqJ,CAAC,CAAtJ;AAEA,aAAKY,SAAL,CAAe,WAAW,KAAK9C,aAAhB,GAAgC,kBAA/C;AACA,aAAKvC,iBAAL,CAAuBnG,cAAvB,CAAsCG,MAAtC,GAA+C,EAA/C;AACA,aAAKuI,aAAL,GAAqB,EAArB;AACD,OAXD,MAWO;AACL,aAAK8C,SAAL,CAAe,sCAAf;AACD;AACF;AACF,GApU8B;AAsU/BC,EAAAA,8BAA8B,EAAE,wCAAUC,WAAV,EAAuBC,UAAvB,EAA2CC,SAA3C,EAA0DC,aAA1D,EAAiFC,eAAjF,EAAsGC,oBAAtG,EAAoIC,UAApI,EAAoJC,4BAApJ,EAA0L;AAAA,QAAnKN,UAAmK;AAAnKA,MAAAA,UAAmK,GAAtJ,KAAsJ;AAAA;;AAAA,QAA/IC,SAA+I;AAA/IA,MAAAA,SAA+I,GAAnI,CAAmI;AAAA;;AAAA,QAAhIC,aAAgI;AAAhIA,MAAAA,aAAgI,GAAhH,KAAgH;AAAA;;AAAA,QAAzGC,eAAyG;AAAzGA,MAAAA,eAAyG,GAAvF,CAAuF;AAAA;;AAAA,QAApFC,oBAAoF;AAApFA,MAAAA,oBAAoF,GAA7D,KAA6D;AAAA;;AAAA,QAAtDC,UAAsD;AAAtDA,MAAAA,UAAsD,GAAzC,CAAyC;AAAA;;AAAA,QAAtCC,4BAAsC;AAAtCA,MAAAA,4BAAsC,GAAP,KAAO;AAAA;;AACxN;AACA,SAAKjE,eAAL;AACA,SAAKzI,iBAAL,CAAuB8J,MAAvB,GAAgC,IAAhC;AAEAxM,IAAAA,8BAA8B,GAAGkP,oBAAjC;AACAjP,IAAAA,iBAAiB,GAAGkP,UAApB;AACAjP,IAAAA,2BAA2B,GAAGkP,4BAA9B;AAEA,SAAKzD,YAAL,GAAoBqD,aAApB;AACA,SAAKpD,gBAAL,GAAwBqD,eAAxB;AAEA,QAAID,aAAJ,EAAmB,KAAKlD,iBAAL;AAEnB,SAAKuD,kBAAL,CAAwBR,WAAxB,EAAqCC,UAArC,EAAiDC,SAAjD,EAA4DC,aAA5D;AACD,GArV8B;AAsV/BK,EAAAA,kBAAkB,EAAE,4BAAUR,WAAV,EAAuBC,UAAvB,EAA2CC,SAA3C,EAA0DC,aAA1D,EAAiF;AAAA,QAA1DF,UAA0D;AAA1DA,MAAAA,UAA0D,GAA7C,KAA6C;AAAA;;AAAA,QAAtCC,SAAsC;AAAtCA,MAAAA,SAAsC,GAA1B,CAA0B;AAAA;;AAAA,QAAvBC,aAAuB;AAAvBA,MAAAA,aAAuB,GAAP,KAAO;AAAA;;AACnG7G,IAAAA,iBAAiB,GAAG,IAAIlJ,WAAW,CAACqQ,UAAhB,EAApB;AACAnH,IAAAA,iBAAiB,CAACoH,iBAAlB,GAAsC,IAAItQ,WAAW,CAACuQ,qBAAhB,EAAtC;AACApH,IAAAA,yBAAyB,GAAG,IAAInJ,WAAW,CAACwQ,YAAhB,EAA5B;AACArH,IAAAA,yBAAyB,CAACsH,YAA1B,GAAyCzQ,WAAW,CAAC0Q,gBAAZ,CAA6B9O,IAAtE;AACA,SAAKyI,iBAAL,CAAuBtG,aAAvB,CAAqCwJ,MAArC,GAA8C,KAA9C;;AAEA,QAAIqC,WAAJ,EAAiB;AACf,WAAKvF,iBAAL,CAAuBvG,cAAvB,CAAsCyJ,MAAtC,GAA+C,KAA/C;AACA,WAAKlD,iBAAL,CAAuB7G,SAAvB,CAAiC+J,MAAjC,GAA0C,IAA1C;AACArE,MAAAA,iBAAiB,CAACoG,IAAlB,GAAyB9O,aAAzB;AACA,WAAK6J,iBAAL,CAAuBtG,aAAvB,CAAqCwJ,MAArC,GAA8C,IAA9C;AACD;;AAED,SAAKoD,+BAAL;;AAEA,QAAId,UAAJ,EAAgB;AACd,WAAKxF,iBAAL,CAAuBvG,cAAvB,CAAsCyJ,MAAtC,GAA+C,IAA/C;AACA,WAAKlD,iBAAL,CAAuB7G,SAAvB,CAAiC+J,MAAjC,GAA0C,KAA1C;;AAEA,WAAK,IAAIqD,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG3Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEC,MAA/F,EAAuGF,KAAK,EAA5G,EAAgH;AAC9G,YAAI3Q,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEkC,MAAlE,IAA4E9Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0EI,SAA1J,EAAqK;AACnK3H,UAAAA,uBAAuB,GAAGuH,KAA1B;AACA1H,UAAAA,iBAAiB,GAAGjJ,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,CAApB;;AACA,cAAI7P,8BAAJ,EAAoC;AAClC,gBAAIE,2BAAJ,EAAiC;AAC/BC,cAAAA,YAAY,GAAGgI,iBAAiB,CAACoG,IAAjC;AACApG,cAAAA,iBAAiB,CAACoG,IAAlB,GAAyB,CAAzB;AACA,mBAAK2B,0BAAL,CAAgChR,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0ErI,UAA1G;AACA,mBAAK2I,yBAAL,CAA+BjR,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0EI,SAAzG;AACA,mBAAKG,0BAAL,CAAgCjI,iBAAiB,CAACoG,IAAlD;AACA,mBAAK8B,6BAAL,CAAmCjC,QAAQ,CAAClP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0ES,QAA3E,CAA3C;AACD,aAPD,MAOO;AACLnQ,cAAAA,YAAY,GAAGgI,iBAAiB,CAACoG,IAAjC;AACApG,cAAAA,iBAAiB,CAACoG,IAAlB,GAAyBtO,iBAAzB;AACA,mBAAKiQ,0BAAL,CAAgChR,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0ErI,UAA1G;AACA,mBAAK2I,yBAAL,CAA+BjR,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0EI,SAAzG;AACA,mBAAKG,0BAAL,CAAgCjI,iBAAiB,CAACoG,IAAlD;AACA,mBAAK8B,6BAAL,CAAmCjC,QAAQ,CAAClP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0ES,QAA3E,CAA3C;AACD;AACF,WAhBD,MAgBO;AACL,iBAAKJ,0BAAL,CAAgChR,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0ErI,UAA1G;AACA,iBAAK2I,yBAAL,CAA+BjR,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0EI,SAAzG;AACA,iBAAKG,0BAAL,CAAgClR,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0EtB,IAA1G;AACA,iBAAK8B,6BAAL,CAAmCjC,QAAQ,CAAClP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmED,KAAnE,EAA0ES,QAA3E,CAA3C;AACD;AACF;AACF;AACF,KAhCD,MAgCO;AACLhI,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACA,WAAK4H,0BAAL,CAAgChR,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkExM,IAAlG;AACA,WAAK6O,yBAAL,CAA+BjR,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEkC,MAAjG;AACA,WAAKI,0BAAL,CAAgCjI,iBAAiB,CAACoG,IAAlD;AACA,WAAK8B,6BAAL,CAAmCjC,QAAQ,CAAClP,wBAAwB,CAAC8N,QAAzB,CAAkCS,iBAAlC,GAAsDK,WAAtD,CAAkEyC,QAAnE,CAA3C;AACD;AACF,GA7Y8B;AA8Y/BC,EAAAA,oBAAoB,EAAE,gCAAY;AAChC,WAAO,KAAKlH,iBAAZ;AACD,GAhZ8B;AAiZ/B4G,EAAAA,0BAA0B,EAAE,oCAAU5O,IAAV,EAAgB;AAC1C,SAAKgI,iBAAL,CAAuBjG,wBAAvB,CAAgD/B,IAAhD;AACA6G,IAAAA,iBAAiB,CAACX,UAAlB,GAA+BlG,IAA/B;AACD,GApZ8B;AAqZ/B6O,EAAAA,yBAAyB,EAAE,mCAAUM,GAAV,EAAe;AACxCtI,IAAAA,iBAAiB,CAAC8H,SAAlB,GAA8BQ,GAA9B;AACD,GAvZ8B;AAwZ/BJ,EAAAA,6BAA6B,EAAE,uCAAUI,GAAV,EAAe;AAC5C,QAAIC,KAAK,CAACD,GAAD,CAAL,IAAcA,GAAG,IAAInC,SAAzB,EAAoCmC,GAAG,GAAG,CAAN;AAEpCtI,IAAAA,iBAAiB,CAACmI,QAAlB,GAA6BG,GAA7B;AACD,GA5Z8B;AA6Z/BE,EAAAA,uCAAuC,EAAE,iDAAUrP,IAAV,EAAgB;AACvD,SAAKgI,iBAAL,CAAuBvH,kBAAvB,GAA4CT,IAA5C;AACA8G,IAAAA,yBAAyB,CAACwI,uBAA1B,GAAoDtP,IAApD;AACD,GAha8B;AAia/BuP,EAAAA,uCAAuC,EAAE,iDAAUvP,IAAV,EAAgB;AACvD,SAAKgI,iBAAL,CAAuBrH,kBAAvB,GAA4CX,IAA5C;AACA8G,IAAAA,yBAAyB,CAAC0I,YAA1B,GAAyCxP,IAAzC;AACD,GApa8B;AAqa/BsO,EAAAA,+BAA+B,EAAE,2CAAY;AAC3C,SAAKtG,iBAAL,CAAuBjH,eAAvB,CAAuC0O,QAAvC,CAAgD,CAAhD,EAAmDA,QAAnD,CAA4D,CAA5D,EAA+DvE,MAA/D,GAAwE,KAAxE;AACA,SAAKlD,iBAAL,CAAuB/G,oBAAvB,CAA4CwO,QAA5C,CAAqD,CAArD,EAAwDA,QAAxD,CAAiE,CAAjE,EAAoEvE,MAApE,GAA6E,KAA7E;AACA,SAAKlD,iBAAL,CAAuBpH,iBAAvB,CAAyCoB,MAAzC,GAAkD,EAAlD;AACA,SAAKgG,iBAAL,CAAuBlH,iBAAvB,CAAyCkB,MAAzC,GAAkD,EAAlD;AACA,SAAKgG,iBAAL,CAAuBrH,kBAAvB,GAA4C,EAA5C;AACA,SAAKqH,iBAAL,CAAuBvH,kBAAvB,GAA4C,EAA5C;AACAqG,IAAAA,yBAAyB,CAACsH,YAA1B,GAAyCzQ,WAAW,CAAC0Q,gBAAZ,CAA6B9O,IAAtE;AACD,GA7a8B;AA8a/BmQ,EAAAA,iCAAiC,EAAE,6CAAY;AAC7C,SAAK1H,iBAAL,CAAuBjH,eAAvB,CAAuC0O,QAAvC,CAAgD,CAAhD,EAAmDA,QAAnD,CAA4D,CAA5D,EAA+DvE,MAA/D,GAAwE,IAAxE;AACA,SAAKlD,iBAAL,CAAuB/G,oBAAvB,CAA4CwO,QAA5C,CAAqD,CAArD,EAAwDA,QAAxD,CAAiE,CAAjE,EAAoEvE,MAApE,GAA6E,KAA7E;AAEApE,IAAAA,yBAAyB,CAACsH,YAA1B,GAAyCzQ,WAAW,CAAC0Q,gBAAZ,CAA6BsB,SAAtE;AACD,GAnb8B;AAob/BC,EAAAA,mCAAmC,EAAE,+CAAY;AAC/C,SAAK5H,iBAAL,CAAuBjH,eAAvB,CAAuC0O,QAAvC,CAAgD,CAAhD,EAAmDA,QAAnD,CAA4D,CAA5D,EAA+DvE,MAA/D,GAAwE,KAAxE;AACA,SAAKlD,iBAAL,CAAuB/G,oBAAvB,CAA4CwO,QAA5C,CAAqD,CAArD,EAAwDA,QAAxD,CAAiE,CAAjE,EAAoEvE,MAApE,GAA6E,IAA7E;AAEApE,IAAAA,yBAAyB,CAACsH,YAA1B,GAAyCzQ,WAAW,CAAC0Q,gBAAZ,CAA6BwB,cAAtE;AACD,GAzb8B;AA0b/Bf,EAAAA,0BAA0B,EAAE,oCAAUgB,MAAV,EAAkB;AAC5C,SAAK9H,iBAAL,CAAuBxH,YAAvB,CAAoCwB,MAApC,GAA6C8N,MAA7C;AACAjJ,IAAAA,iBAAiB,CAACoG,IAAlB,GAAyB6C,MAAzB;AACD,GA7b8B;AA8b/BC,EAAAA,2BAA2B,EAAE,qCAAUD,MAAV,EAAkB;AAC7C,QAAIE,UAAU,GAAG,KAAjB;AACA,QAAIC,cAAc,GAAG,CAArB;;AAEA,QAAI,CAACvR,8BAAL,EAAqC;AACnC,WAAK,IAAI6P,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG1H,iBAAiB,CAACqJ,YAAlB,CAA+BzB,MAA3D,EAAmEF,KAAK,EAAxE,EAA4E;AAC1E,YAAI1H,iBAAiB,CAACqJ,YAAlB,CAA+B3B,KAA/B,EAAsC4B,SAA1C,EAAqD;AACnDH,UAAAA,UAAU,GAAG,IAAb;AACAC,UAAAA,cAAc,GAAG1B,KAAjB;AACA;AACD;AACF;;AAED,UAAIyB,UAAJ,EAAgB;AACd,aAAK3C,SAAL,CAAe,qCAAqCxG,iBAAiB,CAACqJ,YAAlB,CAA+BD,cAA/B,EAA+C3O,UAAnG,EAA+GtC,eAA/G;AACD,OAFD,MAEO;AACL,YAAI6H,iBAAiB,CAACoG,IAAlB,IAA0B6C,MAA9B,EAAsC;AACpC,eAAKzC,SAAL,CAAe,8EAAf,EAA+FrO,eAA/F;AACD,SAFD,MAEO;AACL,eAAKgJ,iBAAL,CAAuB3G,aAAvB,CAAqC6J,MAArC,GAA8C,IAA9C;AACAnE,UAAAA,YAAY,GAAGqJ,IAAI,CAACC,GAAL,CAASvD,QAAQ,CAACjG,iBAAiB,CAACoG,IAAnB,CAAR,GAAmC6C,MAA5C,CAAf;AACA,eAAK9H,iBAAL,CAAuBzG,eAAvB,CAAuC,CAAvC,EAA0CkO,QAA1C,CAAmD,CAAnD,EAAsDA,QAAtD,CAA+D,CAA/D,EAAkEa,YAAlE,CAA+EjR,EAAE,CAACgB,KAAlF,EAAyF2B,MAAzF,GAAkG,MAAM+E,YAAxG;AACD;AACF;AACF,KApBD,MAoBO;AACL,WAAKsG,SAAL,CAAe,iDAAf;AACD;AACF,GAzd8B;AA0d/BkD,EAAAA,iCAAiC,EAAE,2CAAUC,KAAV,EAAiB;AAClD,QAAI,CAAC9R,8BAAL,EAAqC;AACnC,UAAIoI,yBAAyB,CAACsH,YAA1B,IAA0CzQ,WAAW,CAAC0Q,gBAAZ,CAA6BwB,cAA3E,EAA2F;AACzF,aAAKE,2BAAL,CAAiC,KAAjC;AACD,OAFD,MAEO,IAAIjJ,yBAAyB,CAACsH,YAA1B,IAA0CzQ,WAAW,CAAC0Q,gBAAZ,CAA6BsB,SAA3E,EAAsF;AAC3F,aAAKI,2BAAL,CAAiC,KAAjC;AACD,OAFM,MAEA;AACL,aAAK1C,SAAL,CAAe,+DAAf;AACD;AACF,KARD,MAQO;AACL,WAAKA,SAAL,CAAe,iDAAf;AACD;AACF,GAte8B;AAue/BoD,EAAAA,qCAAqC,EAAE,+CAAUD,KAAV,EAAiB;AACtD,SAAKxI,iBAAL,CAAuB3G,aAAvB,CAAqC6J,MAArC,GAA8C,KAA9C;AACD,GAze8B;AA0e/BwF,EAAAA,oCAAoC,EAAE,8CAAUnC,KAAV,EAAiB;AACrD,SAAK,IAAIoC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK3I,iBAAL,CAAuBzG,eAAvB,CAAuCkN,MAA3D,EAAmEkC,CAAC,EAApE,EAAwE;AACtE,UAAIpC,KAAK,IAAIoC,CAAb,EAAgB,KAAK3I,iBAAL,CAAuBzG,eAAvB,CAAuCoP,CAAvC,EAA0ClB,QAA1C,CAAmD,CAAnD,EAAsDvE,MAAtD,GAA+D,IAA/D,CAAhB,KACK,KAAKlD,iBAAL,CAAuBzG,eAAvB,CAAuCoP,CAAvC,EAA0ClB,QAA1C,CAAmD,CAAnD,EAAsDvE,MAAtD,GAA+D,KAA/D;AACN;AACF,GA/e8B;AAgf/B0F,EAAAA,oCAAoC,EAAE,8CAAUJ,KAAV,EAAiB;AACrD,SAAKxI,iBAAL,CAAuB1G,UAAvB,GAAoClC,cAAc,CAACS,KAAnD;AACA,SAAK6Q,oCAAL,CAA0C,CAA1C;AACD,GAnf8B;AAof/BG,EAAAA,oCAAoC,EAAE,8CAAUL,KAAV,EAAiB;AACrD,SAAKxI,iBAAL,CAAuB1G,UAAvB,GAAoClC,cAAc,CAACI,WAAnD;AACA,SAAKkR,oCAAL,CAA0C,CAA1C;AACD,GAvf8B;AAwf/BI,EAAAA,oCAAoC,EAAE,8CAAUN,KAAV,EAAiB;AACrD,SAAKxI,iBAAL,CAAuB1G,UAAvB,GAAoClC,cAAc,CAACK,aAAnD;AACA,SAAKiR,oCAAL,CAA0C,CAA1C;AACD,GA3f8B;AA4f/BK,EAAAA,oCAAoC,EAAE,8CAAUP,KAAV,EAAiB;AACrD,SAAKxI,iBAAL,CAAuB1G,UAAvB,GAAoClC,cAAc,CAACM,cAAnD;AACA,SAAKgR,oCAAL,CAA0C,CAA1C;AACD,GA/f8B;AAggB/BM,EAAAA,oCAAoC,EAAE,8CAAUR,KAAV,EAAiB;AACrD,SAAKxI,iBAAL,CAAuB1G,UAAvB,GAAoClC,cAAc,CAACO,aAAnD;AACA,SAAK+Q,oCAAL,CAA0C,CAA1C;AACD,GAngB8B;AAogB/BO,EAAAA,oCAAoC,EAAE,8CAAUT,KAAV,EAAiB;AACrD,SAAKxI,iBAAL,CAAuB1G,UAAvB,GAAoClC,cAAc,CAACQ,aAAnD;AACA,SAAK8Q,oCAAL,CAA0C,CAA1C;AACD,GAvgB8B;AAwgB/BQ,EAAAA,gCAAgC,EAAE,0CAAUV,KAAV,EAAiB;AACjD,QAAI,KAAKxI,iBAAL,CAAuB1G,UAAvB,IAAqClC,cAAc,CAACS,KAAxD,EAA+DiH,yBAAyB,CAACxF,UAA1B,GAAuCyF,YAAvC,CAA/D,KACKD,yBAAyB,CAACxF,UAA1B,GAAuCwL,QAAQ,CAAC,KAAK9E,iBAAL,CAAuB1G,UAAxB,CAA/C;AAELwF,IAAAA,yBAAyB,CAACqJ,SAA1B,GAAsC,IAAtC;AACA,SAAKM,qCAAL;AACA5J,IAAAA,iBAAiB,CAACoG,IAAlB,GAAyBpG,iBAAiB,CAACoG,IAAlB,GAAyBnG,yBAAyB,CAACxF,UAA5E;AACA,SAAKwN,0BAAL,CAAgCjI,iBAAiB,CAACoG,IAAlD;AACD,GAhhB8B;AAkhB/BkE,EAAAA,qBAlhB+B,iCAkhBTC,KAlhBS,EAkhBF;AAC3B,QAAIC,KAAK,GAAGzT,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8D2F,eAA9D,EAAZ;;AACA,QAAID,KAAK,IAAI,CAAb,EAAgB;AACdE,MAAAA,kBAAkB,GAAG,IAAI5T,WAAW,CAACqQ,UAAhB,EAArB;AACAuD,MAAAA,kBAAkB,CAACtE,IAAnB,GAA0B,KAA1B;AACAsE,MAAAA,kBAAkB,CAACC,QAAnB,GAA8BJ,KAAK,CAAC1C,MAApC;AACA6C,MAAAA,kBAAkB,CAACrL,UAAnB,GAAgCkL,KAAK,CAACpR,IAAtC;AACAuR,MAAAA,kBAAkB,CAACvC,QAAnB,GAA8B,CAA9B;AACAuC,MAAAA,kBAAkB,CAACE,eAAnB,GAAqC,CAArC;AACAF,MAAAA,kBAAkB,CAACG,QAAnB,GAA8B,KAA9B;AACAH,MAAAA,kBAAkB,CAACtD,iBAAnB,GAAuC,IAAItQ,WAAW,CAACuQ,qBAAhB,EAAvC;AACAyD,MAAAA,0BAA0B,GAAG,IAAIhU,WAAW,CAACwQ,YAAhB,EAA7B;AACAwD,MAAAA,0BAA0B,CAACvD,YAA3B,GAA0CzQ,WAAW,CAAC0Q,gBAAZ,CAA6BsB,SAAvE;AACAgC,MAAAA,0BAA0B,CAACrC,uBAA3B,GAAqD,QAArD;AACAqC,MAAAA,0BAA0B,CAACnC,YAA3B,GAA0C,YAA1C;;AACA+B,MAAAA,kBAAkB,CAACrB,YAAnB,CAAgC0B,IAAhC,CAAqCD,0BAArC;;AAEA/T,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCQ,0BAAlC,GAA+D2F,UAA/D,CAA0E,CAA1E,EAA6EN,kBAA7E;AACD;AACF,GAriB8B;AAsiB/B1G,EAAAA,QAAQ,EAAE,kBAAUuG,KAAV,EAAiBU,GAAjB,EAAsBC,WAAtB,EAA2C;AAAA,QAArBA,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AACnD,QAAIC,WAAW,GAAGpU,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4EC,iBAA5E,CAA8F,gBAA9F,EAAgH,YAAhH,CAAlB;;AAEA,QAAIF,WAAJ,EAAiB;AACfpU,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DwG,UAA9D,GAA2EvU,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DyG,aAA9D,EAA3E;AACD;;AAED,QAAI,CAACL,WAAL,EAAkB;AAChB,UAAID,GAAG,IAAIlU,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4EI,OAAvF,EAAgGzU,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEoD,IAAnE,CAAwER,KAAxE;AACjG,KATkD,CAWnD;;;AAEA,QAAIxT,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEC,MAAnE,IAA6E7Q,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DwG,UAA/I,EAA2J;AACzJ;AACAvU,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8D2G,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,cAAxG,EAAwH,IAAxH,EAA8H,IAA9H;AACA5U,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8D2G,YAA9D,GAA6EC,MAA7E,GAAsFC,iBAAtF,CAAwG,gBAAxG,EAA0H5U,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAA9K,EAA8L,IAA9L;AACA,WAAKxG,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,KAAlD;AACA,WAAK9J,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;AACA,WAAKtC,gBAAL,CAAsBsC,MAAtB,GAA+B,IAA/B;AAEAtN,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD0G,SAApD;AAEAnH,MAAAA,OAAO,CAAC4B,GAAR,CAAYtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAAhE;AACD;AACF,GA/jB8B;AAikB/BkE,EAAAA,gBAAgB,EAAE,0BAAU3F,OAAV,EAAmB4F,aAAnB,EAAkCC,YAAlC,EAAgD;AAChE,QAAI/L,iBAAiB,CAACoG,IAAlB,GAAyBF,OAAzB,IAAoC,CAACnO,2BAAzC,EAAsE;AACpE,WAAKyO,SAAL,CAAe,0CAA0CsF,aAA1C,GAA0D,YAAzE,EAAuF3T,eAAvF;AACD,KAFD,MAEO;AACL,UAAI4T,YAAJ,EAAkB;AAChB,YAAI/L,iBAAiB,CAAC4K,eAAlB,GAAoC,CAAxC,EAA2C;AACzC,cAAI,CAAC7S,2BAAL,EAAkC;AAChCiI,YAAAA,iBAAiB,CAACoG,IAAlB,GAAyBpG,iBAAiB,CAACoG,IAAlB,GAAyBF,OAAlD;AACA,iBAAK/E,iBAAL,CAAuBxH,YAAvB,CAAoCwB,MAApC,GAA6C,MAAM6E,iBAAiB,CAACoG,IAArE;AACD;;AAED,eAAK4F,SAAL,GAAiB,IAAjB;AACAhM,UAAAA,iBAAiB,CAAC4K,eAAlB;AACD,SARD,MAQO;AACL,eAAKoB,SAAL,GAAiB,KAAjB;AACA,eAAKxF,SAAL,CAAe,sDAAf;AACD;AACF,OAbD,MAaO;AACL,YAAI,CAACzO,2BAAL,EAAkC;AAChCiI,UAAAA,iBAAiB,CAACoG,IAAlB,GAAyBpG,iBAAiB,CAACoG,IAAlB,GAAyBF,OAAlD;AACA,eAAK/E,iBAAL,CAAuBxH,YAAvB,CAAoCwB,MAApC,GAA6C,MAAM6E,iBAAiB,CAACoG,IAArE;AACD;;AACD,aAAK4F,SAAL,GAAiB,IAAjB;AACAhM,QAAAA,iBAAiB,CAACiM,oBAAlB;AACD;AACF;AACF,GA3lB8B;AA6lB/BC,EAAAA,kBAAkB,EAAE,8BAAY;AAC9B,QAAI,CAACrU,8BAAL,EAAqC;AACnC,WAAK0C,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;;AAEA,UAAIpE,yBAAyB,CAACqJ,SAA9B,EAAyC;AACvCrJ,QAAAA,yBAAyB,CAACqJ,SAA1B,GAAsC,KAAtC;AACAtJ,QAAAA,iBAAiB,CAACoG,IAAlB,GAAyBpG,iBAAiB,CAACoG,IAAlB,GAAyBnG,yBAAyB,CAACxF,UAA5E;AACAwF,QAAAA,yBAAyB,CAACxF,UAA1B,GAAuC,CAAvC;AACA,aAAK+L,SAAL,CAAe,6BAAf;AACD;AACF,KATD,MASO;AACLxG,MAAAA,iBAAiB,CAACoG,IAAlB,GAAyBpO,YAAzB;AACA,WAAKuC,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;AACAlE,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACAtI,MAAAA,8BAA8B,GAAG,KAAjC;AACAC,MAAAA,iBAAiB,GAAG,CAApB;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAhB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD;AACF,GAhnB8B;AAknB/BC,EAAAA,0BAA0B,EAAE,sCAAY;AAAA;;AACtC,QAAI5B,KAAK,GAAGzT,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8D2F,eAA9D,EAAZ;;AAEA,QAAI,KAAKjH,YAAT,EAAuB;AACrBxD,MAAAA,iBAAiB,CAACqM,UAAlB,GAA+B,IAA/B;AACArM,MAAAA,iBAAiB,CAACsM,cAAlB,GAAmC,KAAK7I,gBAAxC;AACA1M,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE5Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnE,IAA0IvM,iBAA1I;AACD,KAJD,MAIO;AACLjJ,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEoD,IAAnE,CAAwE/K,iBAAxE;AACD;;AAED,QAAIwK,KAAK,IAAI,CAAb,EAAgB;AACd;AACA;AACAzT,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmH3L,iBAAnH;;AAEA,UAAI,CAAC,KAAKwD,YAAV,EAAwB;AACtBzM,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCQ,0BAAlC,GAA+D2F,UAA/D,CAA0E,CAA1E,EAA6EhL,iBAA7E;AACA,aAAKmB,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,IAAlD;AACD,OAHD,MAGO;AACL,aAAKlD,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,KAAlD;AACA,aAAK9J,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;AACA,aAAKtC,gBAAL,CAAsBsC,MAAtB,GAA+B,IAA/B;AAEA,YAAIkG,KAAK,GAAG;AAAEiC,UAAAA,IAAI,EAAE;AAAEC,YAAAA,UAAU,EAAE,IAAd;AAAoBC,YAAAA,IAAI,EAAE3V,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAA1B;AAA+FI,YAAAA,cAAc,EAAE3M;AAA/G;AAAR,SAAZ;AACAjJ,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCQ,0BAAlC,GAA+D2F,UAA/D,CAA0E,CAA1E,EAA6ET,KAA7E;AACAxT,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD0H,sBAApD;AACD;AACF,KAjBD,MAiBO,IAAIpC,KAAK,IAAI,CAAb,EAAgB;AACrB;AACA,UAAI,CAAC,KAAKhH,YAAV,EAAwB;AACtB,aAAKrC,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,IAAlD;AACAY,QAAAA,UAAU,CAAC,YAAM;AACf,UAAA,KAAI,CAAC9D,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,KAAlD;AACA,UAAA,KAAI,CAAC9J,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;AACA,UAAA,KAAI,CAACtC,gBAAL,CAAsBsC,MAAtB,GAA+B,IAA/B;AACAtN,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD0G,SAApD;AACD,SALS,EAKP,IALO,CAAV;AAMD,OARD,MAQO;AACL,aAAKzK,iBAAL,CAAuBxG,iBAAvB,CAAyC0J,MAAzC,GAAkD,KAAlD;AACA,aAAK9J,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;AACA,aAAKtC,gBAAL,CAAsBsC,MAAtB,GAA+B,IAA/B;AACAtN,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD0H,sBAApD;AACD;AACF,KAhBM,MAgBA;AACLnI,MAAAA,OAAO,CAACoI,KAAR,CAAc,kBAAd;AACD;AACF,GAjqB8B;AAmqB/BC,EAAAA,sCAAsC,EAAE,kDAAY;AAClD,QAAI,CAACjV,8BAAL,EAAqC;AACnCd,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmExH,uBAAnE,IAA8FH,iBAA9F;AACA,WAAKzF,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;AACAlE,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACA,WAAK4M,2BAAL,CAAiC,IAAjC;AACD,KALD,MAKO;AACL/M,MAAAA,iBAAiB,CAACoG,IAAlB,GAAyBpO,YAAzB;AACAjB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmExH,uBAAnE,IAA8FH,iBAA9F;AACA,WAAKzF,iBAAL,CAAuB8J,MAAvB,GAAgC,KAAhC;AACAlE,MAAAA,uBAAuB,GAAG,CAAC,CAA3B;AACAtI,MAAAA,8BAA8B,GAAG,KAAjC;AACAC,MAAAA,iBAAiB,GAAG,CAApB;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAhB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD;AACF,GAnrB8B;AAqrB/Ba,EAAAA,mBAAmB,EAAE,+BAAY;AAC/B,SAAKhB,SAAL,GAAiB,KAAjB;AAEA,QAAI/L,yBAAyB,CAACwI,uBAA1B,IAAqD,EAAzD,EAA6D,KAAKjC,SAAL,CAAe,+BAAf,EAA7D,KACK,IAAIvG,yBAAyB,CAAC0I,YAA1B,IAA0C,EAA9C,EAAkD,KAAKnC,SAAL,CAAe,+BAAf,EAAlD,KACA;AACH,UAAIvG,yBAAyB,CAACsH,YAA1B,IAA0CzQ,WAAW,CAAC0Q,gBAAZ,CAA6B9O,IAAvE,IAA+EuH,yBAAyB,CAACsH,YAA1B,IAA0CpB,SAA7H,EAAwI;AACtI,aAAKK,SAAL,CAAe,0BAAf;AACA;AACD;;AAED,UAAIvG,yBAAyB,CAACsH,YAA1B,IAA0CzQ,WAAW,CAAC0Q,gBAAZ,CAA6BsB,SAA3E,EACE;AACA,aAAK+C,gBAAL,CAAsB,KAAtB,EAA6B,MAA7B,EAAqC,IAArC,EAFF,KAGK,IAAI5L,yBAAyB,CAACsH,YAA1B,IAA0CzQ,WAAW,CAAC0Q,gBAAZ,CAA6BwB,cAA3E,EACH;AACA,aAAK6C,gBAAL,CAAsB,KAAtB,EAA6B,kBAA7B,EAAiD,KAAjD;;AAEF,UAAI,KAAKG,SAAL,IAAkB,IAAlB,IAA0B,KAAKxI,YAAL,IAAqB,IAAnD,EAAyD;AACvDxD,QAAAA,iBAAiB,CAACqJ,YAAlB,CAA+B0B,IAA/B,CAAoC9K,yBAApC;;AAEA,YAAIE,uBAAuB,IAAI,CAAC,CAAhC,EAAmC;AACjC;AACA,eAAK2M,sCAAL;AACD,SAHD,CAIA;AAJA,aAKK;AACH,iBAAKV,0BAAL;AACD,WAVsD,CAYvD;;;AACA,aAAK,IAAItC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG/S,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEC,MAAvF,EAA+FkC,CAAC,EAAhG,EAAoG;AAClGrF,UAAAA,OAAO,CAAC4B,GAAR,CAAY,kBAAkBtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEmC,CAAnE,EAAsEzK,UAApG;AACAoF,UAAAA,OAAO,CAAC4B,GAAR,CAAY,gBAAgBtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEmC,CAAnE,EAAsEhC,SAAlG;AACArD,UAAAA,OAAO,CAAC4B,GAAR,CAAY,oBAAoBtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEmC,CAAnE,EAAsEmD,KAAtG;AACAxI,UAAAA,OAAO,CAAC4B,GAAR,CAAY,wCAAZ;AACA5B,UAAAA,OAAO,CAAC4B,GAAR,CAAYtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEmC,CAAnE,EAAsET,YAAlF;AACA5E,UAAAA,OAAO,CAAC4B,GAAR,CAAY,kBAAkBtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEmC,CAAnE,EAAsE1D,IAApG;AACA3B,UAAAA,OAAO,CAAC4B,GAAR,CAAY,wBAAwBtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEmC,CAAnE,EAAsER,SAA1G;AACA7E,UAAAA,OAAO,CAAC4B,GAAR,CAAY,wBAAwBtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEmC,CAAnE,EAAsErP,UAA1G;AACD;AACF;AACF;AACF,GAhuB8B;AAiuB/B;AAEA;AACA;AACAsS,EAAAA,2BAA2B,EAAE,qCAAUG,QAAV,EAAoB;AAC/C,SAAK1N,cAAL,CAAoB6E,MAApB,GAA6B6I,QAA7B;AACA,SAAKC,uBAAL;AACD,GAxuB8B;AA0uB/BA,EAAAA,uBAAuB,EAAE,mCAAY;AACnC,SAAK/R,mBAAL,CAAyBI,eAAzB,CAAyCL,MAAzC,GAAkD,OAAOpE,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE5Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnE,EAAwInG,IAAjM;AACD,GA5uB8B;AA8uB/BgH,EAAAA,qCAAqC,EAAE,+CAAUnE,MAAV,EAAkB;AACvD;AACA7I,IAAAA,mBAAmB,GAAG6I,MAAtB;AACD,GAjvB8B;AAmvB/BoE,EAAAA,sCAAsC,EAAE,kDAAY;AAClD,QAAIjN,mBAAmB,IAAI,EAAvB,IAA6BA,mBAAmB,IAAI,IAAxD,EAA8D;AAC5D,WAAKoG,SAAL,CAAe,yBAAf;AACD,KAFD,MAEO;AACL,UAAI8G,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,WAAKgB,eAAL,GAAuBtH,QAAQ,CAAC7F,mBAAD,CAA/B;AACAqE,MAAAA,OAAO,CAAC4B,GAAR,CAAYtP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAA7F,EAHK,CAKL;;AACA,UAAIrP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,IAAyF,KAAKmH,eAAlG,EAAmH;AACjHxW,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwFrP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwF,KAAKmH,eAArL;AACAxW,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFE,eAAjF,GAAmGzW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFE,eAAjF,GAAmG,KAAKD,eAA3M;AACA,aAAK/G,SAAL,CACE,0CAA0CzP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFE,eAA3H,GAA6I,wBAA7I,GAAwKzW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAzP,GAAgQ,GADlQ,EAEEjO,eAFF;AAIA,aAAKgV,uBAAL,GAPiH,CASjH;;AACA,aAAK/R,mBAAL,CAAyBC,gBAAzB,CAA0CF,MAA1C,GAAmD,EAAnD;AACAiF,QAAAA,mBAAmB,GAAG,EAAtB;AACD,OAZD,MAYO;AACL,aAAKoG,SAAL,CAAe,8BAAf,EADK,CAGL;;AACA,aAAKpL,mBAAL,CAAyBC,gBAAzB,CAA0CF,MAA1C,GAAmD,EAAnD;AACAiF,QAAAA,mBAAmB,GAAG,EAAtB;AACD;AACF;AACF,GAhxB8B;AAkxB/BqN,EAAAA,wCAAwC,EAAE,oDAAY;AACpD;AACA,QAAIH,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,QAAIxV,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFI,YAArF,EAAmG;AACjG,WAAKlH,SAAL,CAAe,kCAAf;AACD,KAFD,MAEO;AACL,UAAIzP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,IAAyF,IAA7F,EAAmG;AACjGrP,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFI,YAAjF,GAAgG,IAAhG;AACArN,QAAAA,gBAAgB,GAAG,IAAnB;AACAoE,QAAAA,OAAO,CAAC4B,GAAR,CAAYhG,gBAAZ;AACAtJ,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwFrP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwF,IAAhL;AACA,aAAKI,SAAL,CAAe,8DAA8DzP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAA/I,GAAsJ,GAArK,EAA0KjO,eAA1K;AACA,aAAKgV,uBAAL;AACD,OAPD,MAOO;AACL,aAAK3G,SAAL,CAAe,qDAAf;AACD;AACF;AACF,GAnyB8B;AAqyB/BmH,EAAAA,iDAryB+B,6DAqyBmBC,KAryBnB,EAqyB0B;AACvDjN,IAAAA,YAAY,GAAGiN,KAAf;AACD,GAvyB8B;AAwyB/BC,EAAAA,kCAAkC,EAAE,4CAAUlE,KAAV,EAAwB5C,oBAAxB,EAAsDC,UAAtD,EAAsEC,4BAAtE,EAA4G;AAAA;;AAAA,QAAlG0C,KAAkG;AAAlGA,MAAAA,KAAkG,GAA1F,IAA0F;AAAA;;AAAA,QAApF5C,oBAAoF;AAApFA,MAAAA,oBAAoF,GAA7D,KAA6D;AAAA;;AAAA,QAAtDC,UAAsD;AAAtDA,MAAAA,UAAsD,GAAzC,CAAyC;AAAA;;AAAA,QAAtCC,4BAAsC;AAAtCA,MAAAA,4BAAsC,GAAP,KAAO;AAAA;;AAC9I;AACAxC,IAAAA,OAAO,CAAC4B,GAAR,CAAY,iBAAZ;AAEAxO,IAAAA,8BAA8B,GAAGkP,oBAAjC;AACAjP,IAAAA,iBAAiB,GAAGkP,UAApB;AACAjP,IAAAA,2BAA2B,GAAGkP,4BAA9B;AAEA,SAAK7L,mBAAL,CAAyBK,kBAAzB,CAA4C4I,MAA5C,GAAqD,IAArD;AACA,QAAIyJ,eAAe,GAAG/W,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD6I,2CAApD,CAAgGlW,8BAAhG,EAAgIC,iBAAhI,EAAmJC,2BAAnJ,CAAtB;;AAEA,QAAI+V,eAAe,IAAI,CAAvB,EAA0B;AACxB,WAAKtH,SAAL,CAAe,kDAAf;AACAvB,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAAC7J,mBAAL,CAAyBK,kBAAzB,CAA4C4I,MAA5C,GAAqD,KAArD;AACD,OAFS,EAEP,IAFO,CAAV;AAGD;AACF,GAzzB8B;AA2zB/B2J,EAAAA,sCAAsC,EAAE,kDAAY;AAClD,QAAI,CAACnW,8BAAL,EAAqC;AACnC,WAAKsV,uBAAL;AACA,WAAKnK,eAAL;AACArC,MAAAA,YAAY,GAAG,EAAf;AACA8D,MAAAA,OAAO,CAAC4B,GAAR,CAAY,6BAAZ;AACAtP,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD+I,qBAApD;AACA,WAAK7S,mBAAL,CAAyBK,kBAAzB,CAA4C4I,MAA5C,GAAqD,KAArD;AACD,KAPD,MAOO;AACL,WAAKrB,eAAL;AACArC,MAAAA,YAAY,GAAG,EAAf;AACA8D,MAAAA,OAAO,CAAC4B,GAAR,CAAY,6BAAZ;AACAtP,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD+I,qBAApD;AACA,WAAK7S,mBAAL,CAAyBK,kBAAzB,CAA4C4I,MAA5C,GAAqD,KAArD;AACAxM,MAAAA,8BAA8B,GAAG,KAAjC;AACAC,MAAAA,iBAAiB,GAAG,CAApB;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAhB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD;AACF,GA90B8B;AAg1B/B+B,EAAAA,uCAAuC,EAAE,mDAAY;AACnDzJ,IAAAA,OAAO,CAAC4B,GAAR,CAAY,uBAAZ;AACA,SAAKI,8BAAL,CAAoC,KAApC,EAA2C,IAA3C;AACD,GAn1B8B;AAq1B/B0H,EAAAA,gCAAgC,EAAE,0CAAUlF,MAAV,EAAkB;AAClD;AACA3I,IAAAA,cAAc,GAAG2I,MAAjB;AACD,GAx1B8B;AA01B/BmF,EAAAA,8BAA8B,EAAE,0CAAY;AAC1C,QAAI,CAAC,KAAKnL,YAAV,EAAwB;AACtB,WAAKA,YAAL,GAAoB,IAApB;AACA1C,MAAAA,kBAAkB,GAAG,EAArB;AACA,WAAK8N,iCAAL,CAAuC,IAAvC;AACA,WAAKjN,iBAAL,CAAuBzE,WAAvB,GAAqCd,UAAU,CAACE,UAAhD;AACA0E,MAAAA,UAAU,GAAG1J,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDoJ,YAApD,EAAb;AACA5N,MAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,WAAK8N,qBAAL,CAA2B,gBAA3B,EAA6C9N,UAA7C,EAAyD,8BAAzD,EAAyFC,WAAW,GAAG,QAAvG,EAAiH,mDAAjH,EAAsK,sBAAtK,EAA8LA,WAAW,GAAG,MAA5M,EAAoN,KAApN,EAA2N,KAAKU,iBAAL,CAAuBzE,WAAlP;AACD,KATD,MASO;AACL,WAAK6J,SAAL,CAAe,8CAAf;AACD;AACF,GAv2B8B;AAy2B/BgI,EAAAA,uCAAuC,EAAE,iDAAUrV,IAAV,EAAgB;AACvDqH,IAAAA,iBAAiB,GAAGrH,IAApB;AACD,GA32B8B;AA62B/BsV,EAAAA,+BAA+B,EAAE,yCAAU9E,KAAV,EAAwB+E,WAAxB,EAA6C;AAAA,QAAnC/E,KAAmC;AAAnCA,MAAAA,KAAmC,GAA3B,IAA2B;AAAA;;AAAA,QAArB+E,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AAC5E9W,IAAAA,iBAAiB,GAAG8W,WAApB;AAEAjK,IAAAA,OAAO,CAACoI,KAAR,CAAc6B,WAAd;AAEA,QAAI9W,iBAAJ,EAAuB4I,iBAAiB,GAAG,mBAApB;;AAEvB,QAAI,CAAC,KAAK2C,aAAN,IAAuBvL,iBAA3B,EAA8C;AAC5C,UAAI0V,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,UAAI/L,iBAAiB,IAAI,EAAzB,EAA6B;AAC3B,aAAKmO,2BAAL;AACA,aAAKnI,SAAL,CAAe,yCAAf;AACD,OAHD,MAGO;AACL,aAAKrD,aAAL,GAAqB,IAArB;AACA5C,QAAAA,kBAAkB,GAAG,EAArB;AACA,aAAK8N,iCAAL,CAAuC,IAAvC;AACA,aAAKjN,iBAAL,CAAuBzE,WAAvB,GAAqCd,UAAU,CAACC,WAAhD;AAEA,YAAI,CAAClE,iBAAL,EAAwB6I,UAAU,GAAG1J,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDoJ,YAApD,EAAb,CAAxB,KACK7N,UAAU,GAAG1J,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD0J,WAApD,EAAb;AAELlO,QAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,aAAK8N,qBAAL,CAA2B,iBAA3B,EAA8C9N,UAA9C,EAA0D,+BAA1D,EAA2FC,WAAW,GAAG,QAAzG,EAAmH,qDAAnH,EAA0K,sBAA1K,EAAkMA,WAAW,GAAG,MAAhN,EAAwN,KAAxN,EAA+N,KAAKU,iBAAL,CAAuBzE,WAAtP;AACD;AACF,KAlBD,MAkBO;AACL,WAAK6J,SAAL,CAAe,gDAAf;AACD;AACF,GAz4B8B;AA24B/BqI,EAAAA,8BAA8B,EAAE,0CAAY;AAC1C,QAAI,CAAC,KAAK3L,QAAV,EAAoB;AAClB,UAAIoK,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,UAAIxV,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFwB,SAAjF,GAA6F,CAAjG,EAAoG;AAClG,aAAK5L,QAAL,GAAgB,IAAhB;AACA3C,QAAAA,kBAAkB,GAAG,EAArB;AACA,aAAK8N,iCAAL,CAAuC,IAAvC;AACA,aAAKjN,iBAAL,CAAuBzE,WAAvB,GAAqCd,UAAU,CAACI,QAAhD;AACAwE,QAAAA,UAAU,GAAG1J,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDoJ,YAApD,EAAb;AACA5N,QAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,aAAK8N,qBAAL,CAA2B,WAA3B,EAAwC9N,UAAxC,EAAoD,8BAApD,EAAoFC,WAAW,GAAG,QAAlG,EAA4G,oDAA5G,EAAkK,uBAAlK,EAA2LA,WAAW,GAAG,MAAzM,EAAiN,MAAjN,EAAyN,KAAKU,iBAAL,CAAuBzE,WAAhP;AACD,OATD,MASO;AACL,aAAK6J,SAAL,CAAe,0DAAf;AACD;AACF,KAdD,MAcO;AACL,WAAKA,SAAL,CAAe,yCAAf;AACD;AACF,GA75B8B;AA+5B/BuI,EAAAA,+BAA+B,EAAE,2CAAY;AAC3C,QAAI,CAAC,KAAK3L,SAAV,EAAqB;AACnB,UAAIkK,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,UAAIxV,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiF0B,UAAjF,GAA8F,CAAlG,EAAqG;AACnG,aAAK5L,SAAL,GAAiB,IAAjB;AACA7C,QAAAA,kBAAkB,GAAG,EAArB;AACA,aAAK8N,iCAAL,CAAuC,IAAvC;AACA,aAAKjN,iBAAL,CAAuBzE,WAAvB,GAAqCd,UAAU,CAACG,SAAhD;AACAyE,QAAAA,UAAU,GAAG1J,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDoJ,YAApD,EAAb;AACA5N,QAAAA,WAAW,GAAGD,UAAU,GAAG,IAA3B;AAEA,aAAK8N,qBAAL,CAA2B,YAA3B,EAAyC9N,UAAzC,EAAqD,+BAArD,EAAsFC,WAAW,GAAG,QAApG,EAA8G,sDAA9G,EAAsK,uBAAtK,EAA+LA,WAAW,GAAG,MAA7M,EAAqN,MAArN,EAA6N,KAAKU,iBAAL,CAAuBzE,WAApP;AACD,OATD,MASO;AACL,aAAK6J,SAAL,CAAe,qDAAf;AACD;AACF,KAdD,MAcO;AACL,WAAKA,SAAL,CAAe,2CAAf;AACD;AACF,GAj7B8B;AAm7B/ByI,EAAAA,iCAAiC,EAAE,6CAAY;AAC7CxK,IAAAA,OAAO,CAAC4B,GAAR,CAAY,sBAAZ,EAD6C,CAE7C;AACA;;AACA,SAAK6I,kCAAL;AACD,GAx7B8B;AA07B/BC,EAAAA,8BAA8B,EAAE,0CAAY;AAC1C1K,IAAAA,OAAO,CAAC4B,GAAR,CAAY,eAAZ;AACA,SAAK0G,2BAAL,CAAiC,KAAjC;AACAhW,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDkK,QAApD;AACD,GA97B8B;AAg8B/BC,EAAAA,2BAA2B,EAAE,qCAAUC,KAAV,EAAiB,CAC5C;AACD,GAl8B8B;AAm8B/B;AAEA;AACAC,EAAAA,6BAt8B+B,yCAs8BDnL,MAt8BC,EAs8BO;AACpC,SAAK1C,kBAAL,CAAwBvC,UAAxB,CAAmCkF,MAAnC,GAA4CD,MAA5C;AACD,GAx8B8B;AA08B/BoL,EAAAA,oCA18B+B,gDA08BMpL,MA18BN,EA08Bc;AAC3C,SAAK1C,kBAAL,CAAwBxC,mBAAxB,CAA4CmF,MAA5C,GAAqDD,MAArD;AACD,GA58B8B;AA88B/BqL,EAAAA,qCA98B+B,iDA88BOrL,MA98BP,EA88Be;AAC5C,SAAK1C,kBAAL,CAAwBlC,cAAxB,CAAuC6E,MAAvC,GAAgDD,MAAhD;AACD,GAh9B8B;AAk9B/B8K,EAAAA,kCAl9B+B,gDAk9BM;AACnC7X,IAAAA,WAAW,GAAG,EAAd;AACA,SAAKqY,sBAAL;;AACA,QAAIC,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGqC,QAAQ,CAACpD,aAAT,EAAnB;;AACA,QAAIqD,SAAS,GAAGD,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,CAAhB;AACA,SAAKiC,6BAAL,CAAmC,IAAnC;AACA,SAAK7N,kBAAL,CAAwBrC,UAAxB,CAAmClE,MAAnC,GAA4CyU,SAAS,CAACvQ,UAAtD;AACA,SAAKqC,kBAAL,CAAwBpC,UAAxB,CAAmCnE,MAAnC,GAA4C,MAAMyU,SAAS,CAACxJ,IAA5D;;AAEA,SAAK,IAAIsB,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGkI,SAAS,CAACvG,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAImI,IAAI,GAAGrX,EAAE,CAACsX,WAAH,CAAe,KAAKpO,kBAAL,CAAwBnC,iBAAvC,CAAX;AACAsQ,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAKrO,kBAAL,CAAwB/C,aAAtC;AACAkR,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCzG,eAApC;AACA6M,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCuG,OAApC,CAA4CJ,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACAkH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCwG,OAApC,CAA4CL,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACAoH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCyG,gBAApC,CAAqDxI,KAArD;AAEA,UAAIyI,eAAe,GAAGP,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8B0I,aAA9B,CAA4CxI,MAAlE;;AAEA,UAAI3B,QAAQ,CAAC2J,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DsI,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC4G,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC6G,OAApC,CAA4C,YAA5C;AACAT,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC8G,gBAApC,CAAqD,KAArD;AACAV,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC+G,qBAApC,CAA0D,KAA1D;AACD,OALD,MAKO,IAAIvK,QAAQ,CAAC2J,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEsI,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC4G,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC6G,OAApC,CAA4C,gBAA5C;;AACA,YAAIG,mBAAmB,GAAGN,eAAe,GAAG,KAA5C;;AACA,YAAIO,YAAY,GAAG,QAAQD,mBAA3B;;AACAZ,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC8G,gBAApC,CAAqDG,YAArD;AACAb,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC+G,qBAApC,CAA0DE,YAA1D;AACD;;AAEDb,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCkH,UAApC,CAA+Cf,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BjN,UAA7E;AACAoV,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCmH,YAApC,CAAiDhB,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8B0I,aAA9B,CAA4CxI,MAA7F;;AAEA,UAAIgI,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BmJ,aAA9B,IAA+C,IAAnD,EAAyD;AACvDhB,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCqH,uBAApC,CAA4D,KAA5D;AACAjB,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCsH,cAApC,CAAmDnB,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BsJ,WAAjF;AACD,OAHD,MAGO;AACLnB,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCqH,uBAApC,CAA4D,IAA5D;AACAjB,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCsH,cAApC,CAAmD,MAAnD;AACD;;AAED7Z,MAAAA,8BAA8B,CAAC6T,IAA/B,CAAoC8E,IAApC;AACD;AACF,GAjgC8B;AAmgC/BoB,EAAAA,0CAngC+B,sDAmgCYC,IAngCZ,EAmgCkB;AAC/C,QAAIvB,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGqC,QAAQ,CAACpD,aAAT,EAAnB;;AACA,QAAIqD,SAAS,GAAG7Y,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4E+F,gBAA5E,CAA6FC,iBAA7G;AACA,SAAK3B,qCAAL,CAA2C,IAA3C;AACA,SAAK/N,kBAAL,CAAwBjC,kBAAxB,CAA2CtE,MAA3C,GAAoDyU,SAAS,CAACvQ,UAA9D;AACA,SAAKqC,kBAAL,CAAwBhC,kBAAxB,CAA2CvE,MAA3C,GAAoD,MAAMyU,SAAS,CAACxJ,IAApE;AACA,SAAK1E,kBAAL,CAAwB/B,mBAAxB,CAA4CxE,MAA5C,GAAqD+V,IAArD;AACD,GA3gC8B;AA6gC/BG,EAAAA,qBA7gC+B,mCA6gCP;AACtB,SAAK3B,sBAAL;AACA,SAAKH,6BAAL,CAAmC,KAAnC;AACD,GAhhC8B;AAkhC/BG,EAAAA,sBAlhC+B,oCAkhCN;AACvB,SAAK,IAAIhI,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGxQ,8BAA8B,CAAC0Q,MAA3D,EAAmEF,KAAK,EAAxE,EAA4E;AAC1ExQ,MAAAA,8BAA8B,CAACwQ,KAAD,CAA9B,CAAsC4J,OAAtC;AACD;;AACDpa,IAAAA,8BAA8B,GAAG,EAAjC;AACD,GAvhC8B;AAyhC/Bqa,EAAAA,6BAzhC+B,yCAyhCDhH,KAzhCC,EAyhCM;AACnCnT,IAAAA,wBAAwB,GAAG,IAA3B;AACAD,IAAAA,eAAe,GAAGoT,KAAlB;;AACA,QAAIiH,MAAM,GAAGza,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,EAAb;;AACA,QAAIqG,KAAK,GAAGlH,KAAK,CAACiC,IAAN,CAAWkF,IAAvB;AACA,QAAIC,WAAW,GAAGpH,KAAK,CAACiC,IAAN,CAAWrF,UAA7B;AACA,QAAIyK,sBAAsB,GAAGrH,KAAK,CAACiC,IAAN,CAAWqF,sBAAxC;AACA,QAAIC,cAAc,GAAGvH,KAAK,CAACiC,IAAN,CAAWuF,QAAhC;;AACA,QAAIC,UAAU,GAAGF,cAAc,GAAG,CAAlC;;AACA,QAAIG,aAAa,GAAG,EAApB;AAEA,QAAIN,WAAW,CAACtI,YAAZ,CAAyBuI,sBAAzB,EAAiDrK,YAAjD,IAAiE,CAArE,EAAwE0K,aAAa,GAAG,YAAhB,CAAxE,KACK,IAAIN,WAAW,CAACtI,YAAZ,CAAyBuI,sBAAzB,EAAiDrK,YAAjD,IAAiE,CAArE,EAAwE0K,aAAa,GAAG,gBAAhB;;AAE7E,QAAIlb,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DoN,aAA9D,MAAiF,KAArF,EAA4F;AAC1F,UAAIhB,IAAI,GACN,4CACAS,WAAW,CAACtS,UADZ,GAEA,4CAFA,GAGA,IAHA,GAIA,IAJA,GAKA,iBALA,GAMAsS,WAAW,CAACtI,YAAZ,CAAyBuI,sBAAzB,EAAiDjJ,YANjD,GAOA,IAPA,GAQA,iBARA,GASAsJ,aATA,GAUA,IAVA,GAWA,mBAXA,GAYAH,cAZA,GAaA,IAbA,GAcA,iBAdA,GAeAE,UAfA,GAgBA,IAhBA,GAiBA,IAjBA,GAkBA,uIAnBF;;AAqBA,WAAKf,0CAAL,CAAgDC,IAAhD;AACD;AACF,GA/jC8B;AAikC/BiB,EAAAA,4BAjkC+B,0CAikCA;AAC7B,QAAIxC,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIkN,UAAU,GAAGrb,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DuN,UAA9D,EAAjB;;AACA,QAAIb,MAAM,GAAGza,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4E+F,gBAA5E,CAA6FC,iBAA1G;AACA,QAAI7G,KAAK,GAAGpT,eAAZ;AACA,QAAIsa,KAAK,GAAGlH,KAAK,CAACiC,IAAN,CAAWkF,IAAvB;AACA,QAAIC,WAAW,GAAGpH,KAAK,CAACiC,IAAN,CAAWrF,UAA7B;AACA,QAAIyK,sBAAsB,GAAGrH,KAAK,CAACiC,IAAN,CAAWqF,sBAAxC;AACA,QAAIC,cAAc,GAAGvH,KAAK,CAACiC,IAAN,CAAWuF,QAAhC;;AACA,QAAIC,UAAU,GAAGF,cAAc,GAAG,CAAlC;;AACA,QAAIG,aAAa,GAAG,EAApB;;AAEA,QAAIK,OAAO,GAAG3C,QAAQ,CAAC4C,UAAT,EAAd;;AAEA,QAAInb,wBAAwB,IAAI,IAAhC,EAAsC;AACpC,UAAIuY,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,EAAiClM,IAAjC,IAAyC4L,UAA7C,EAAyD;AACvDrC,QAAAA,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,EAAiClM,IAAjC,IAAyC4L,UAAzC;AACAjb,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmHgE,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,CAAnH;AACA,aAAKE,yCAAL,CAA+C,IAA/C,EAAqDR,UAArD,EAAiE,KAAjE,EAAwErC,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,EAAiCxK,SAAzG,EAAoH6H,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,CAApH,EAAsJV,sBAAtJ;AACA,aAAKnC,qCAAL,CAA2C,KAA3C;AACA,aAAKjJ,SAAL,CAAe,wDAAf;AACD,OAND,MAMO;AACL,aAAKA,SAAL,CAAe,kBAAf;AACD;AACF,KAVD,MAUO;AACL,WAAKA,SAAL,CAAe,0CAAf;AACA,WAAKiJ,qCAAL,CAA2C,KAA3C;AACD;AACF,GA7lC8B;AA+lC/BgD,EAAAA,4BA/lC+B,0CA+lCA;AAC7B,QAAI9C,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIqF,KAAK,GAAGpT,eAAZ;AACA,QAAIya,sBAAsB,GAAGrH,KAAK,CAACiC,IAAN,CAAWqF,sBAAxC;;AACA,QAAIS,OAAO,GAAG3C,QAAQ,CAAC4C,UAAT,EAAd;;AACA9N,IAAAA,OAAO,CAAC4B,GAAR,CAAYsJ,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,EAAiCxK,SAA7C;;AACA,QAAI1Q,wBAAwB,IAAI,IAAhC,EAAsC;AACpC,WAAKob,yCAAL,CAA+C,KAA/C,EAAsD,CAAtD,EAAyD,IAAzD,EAA+D7C,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,EAAiCxK,SAAhG,EAA2G6H,QAAQ,CAAChI,cAAT,CAAwB2K,OAAxB,CAA3G,EAA6IV,sBAA7I;AACA,WAAKnC,qCAAL,CAA2C,KAA3C;AACA,WAAKjJ,SAAL,CAAe,+BAAf;AACD,KAJD,MAIO;AACL,WAAKiJ,qCAAL,CAA2C,KAA3C;AACA,WAAKjJ,SAAL,CAAe,+BAAf;AACD;AACF,GA7mC8B;AA+mC/BgM,EAAAA,yCA/mC+B,qDA+mCWE,WA/mCX,EA+mCgCC,QA/mChC,EA+mC8CC,YA/mC9C,EA+mCoEC,IA/mCpE,EA+mC+EtI,KA/mC/E,EA+mC6FnB,cA/mC7F,EA+mCiH;AAAA,QAAtGsJ,WAAsG;AAAtGA,MAAAA,WAAsG,GAAxF,KAAwF;AAAA;;AAAA,QAAjFC,QAAiF;AAAjFA,MAAAA,QAAiF,GAAtE,CAAsE;AAAA;;AAAA,QAAnEC,YAAmE;AAAnEA,MAAAA,YAAmE,GAApD,KAAoD;AAAA;;AAAA,QAA7CC,IAA6C;AAA7CA,MAAAA,IAA6C,GAAtC,EAAsC;AAAA;;AAAA,QAAlCtI,KAAkC;AAAlCA,MAAAA,KAAkC,GAA1B,IAA0B;AAAA;;AAAA,QAApBnB,cAAoB;AAApBA,MAAAA,cAAoB,GAAH,CAAG;AAAA;;AAC9I,QAAI0J,SAAS,GAAG;AAAEtG,MAAAA,IAAI,EAAE;AAAEuG,QAAAA,QAAQ,EAAEL,WAAZ;AAAyBM,QAAAA,WAAW,EAAEL,QAAtC;AAAgDM,QAAAA,SAAS,EAAEL,YAA3D;AAAyEjI,QAAAA,QAAQ,EAAEkI,IAAnF;AAAyF1L,QAAAA,UAAU,EAAEoD,KAArG;AAA4G2I,QAAAA,aAAa,EAAE9J;AAA3H;AAAR,KAAhB;AACArS,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCQ,0BAAlC,GAA+D2F,UAA/D,CAA0E,EAA1E,EAA8E8H,SAA9E;AACD,GAlnC8B;AAonC/BK,EAAAA,2CApnC+B,uDAonCa5I,KApnCb,EAonCoB;AACjD,QAAIxT,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DoN,aAA9D,MAAiF,KAArF,EAA4F;AAC1F,UAAIvC,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIoI,YAAY,GAAGqC,QAAQ,CAACpD,aAAT,EAAnB;;AAEA9H,MAAAA,OAAO,CAAC4B,GAAR,CAAYkE,KAAZ;AACA,UAAI6I,SAAS,GAAG7I,KAAK,CAACiC,IAAN,CAAWuG,QAA3B;AACA,UAAIM,KAAK,GAAG9I,KAAK,CAACiC,IAAN,CAAWwG,WAAvB;AACA,UAAIM,UAAU,GAAG/I,KAAK,CAACiC,IAAN,CAAWyG,SAA5B;AACA,UAAIM,IAAI,GAAGhJ,KAAK,CAACiC,IAAN,CAAW7B,QAAtB;AACA,UAAIgH,WAAW,GAAGpH,KAAK,CAACiC,IAAN,CAAWrF,UAA7B;AACA,UAAIiC,cAAc,GAAGmB,KAAK,CAACiC,IAAN,CAAW0G,aAAhC;AAEAzO,MAAAA,OAAO,CAAC4B,GAAR,CAAY,iBAAZ;;AACA,UAAIsJ,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCxF,SAAtC,IAAmD/Q,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4E+F,gBAA5E,CAA6F3E,IAA7F,CAAkG3E,MAAzJ,EAAiK;AAC/J,YAAIuL,SAAJ,EAAe;AACb,eAAK7D,6BAAL,CAAmC,KAAnC;AACA,eAAKC,oCAAL,CAA0C,KAA1C;AACAG,UAAAA,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsClH,IAAtC,IAA8CiN,KAA9C;AACA1D,UAAAA,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmDD,cAAnD,EAAmEyH,aAAnE,GAAmF,IAAnF;AACAlB,UAAAA,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmDD,cAAnD,EAAmEoK,SAAnE,GAA+ED,IAA/E;AACA5D,UAAAA,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmDD,cAAnD,EAAmE4H,WAAnE,GAAiFW,WAAW,CAACtS,UAA7F;AACAtI,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4EO,iBAA5E,CAA8F,mBAA9F,EAAmHgE,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,CAAnH;AAEA7I,UAAAA,OAAO,CAAC4B,GAAR,CAAY,gBAAZ;AACA,eAAKG,SAAL,CAAe,iDAAiDmL,WAAW,CAACtS,UAA7D,GAA0E,UAA1E,GAAuFgU,KAAvF,GAA+F,kCAA9G,EAAkJlb,eAAlJ;AACA,eAAKgV,uBAAL;AACD,SAZD,MAYO,IAAImG,UAAJ,EAAgB;AACrB,cAAIjc,WAAW,CAACoc,QAAZ,CAAqBF,IAArB,KAA8B,KAAlC,EAAyClc,WAAW,CAAC0T,IAAZ,CAAiBwI,IAAjB;AAEzC9O,UAAAA,OAAO,CAAC4B,GAAR,CAAYhP,WAAZ;;AACA,cAAIA,WAAW,CAACuQ,MAAZ,IAAsB+H,QAAQ,CAAChI,cAAT,CAAwBC,MAAxB,GAAiC,CAA3D,EAA8D;AAC5D,iBAAK2H,6BAAL,CAAmC,KAAnC;AACA,iBAAKC,oCAAL,CAA0C,KAA1C;AACA,iBAAKhJ,SAAL,CAAe,+DAAf;AACD;;AAED/B,UAAAA,OAAO,CAAC4B,GAAR,CAAY,gBAAZ;AACD;AACF,OAzBD,MAyBO;AACL,YAAI+M,SAAJ,EAAe;AACbhc,UAAAA,wBAAwB,GAAG,KAA3B;AACA,eAAKoP,SAAL,CAAe,0CAAf;AACA,eAAKiJ,qCAAL,CAA2C,KAA3C;AACD,SAJD,MAIO,IAAI6D,UAAJ,EAAgB,CACtB;AACF;AACF;AACF,GApqC8B;AAqqC/B;AAEA;AAEAI,EAAAA,cAzqC+B,4BAyqCd;AACf,SAAKtY,mBAAL,CAAyBE,WAAzB,CAAqCH,MAArC,GAA8C,EAA9C;AACAmF,IAAAA,cAAc,GAAG,EAAjB;AACD,GA5qC8B;AA8qC/BqO,EAAAA,2BA9qC+B,yCA8qCD;AAC5B,SAAKvT,mBAAL,CAAyBG,YAAzB,CAAsCJ,MAAtC,GAA+C,EAA/C;AACAqF,IAAAA,iBAAiB,GAAG,EAApB;AACD,GAjrC8B;AAmrC/BmT,EAAAA,0BAnrC+B,sCAmrCJzN,OAnrCI,EAmrCK;AAClC3F,IAAAA,kBAAkB,GAAG2F,OAArB;;AAEA,QAAI3F,kBAAkB,IAAI,EAA1B,EAA8B;AAC5B,WAAKqT,qBAAL,CAA2BlT,WAAW,GAAG,MAAzC;AACD,KAFD,MAEO;AACL,UAAIwF,OAAO,GAAGD,QAAQ,CAAC1F,kBAAD,CAAtB;;AACA,UAAI2F,OAAO,GAAGxF,WAAW,GAAGwF,OAA5B;;AACA,WAAK0N,qBAAL,CAA2BlT,WAAW,GAAG,GAAd,GAAoBH,kBAApB,GAAyC,GAAzC,GAA+C2F,OAA1E;AACD;AACF,GA7rC8B;AA+rC/BmI,EAAAA,iCA/rC+B,6CA+rCGjK,MA/rCH,EA+rCW;AACxC,SAAKpC,gBAAL,CAAsBqC,MAAtB,GAA+BD,MAA/B;AACA,SAAK+I,uBAAL;AACA,SAAKuG,cAAL;AACA,SAAK/E,2BAAL;AACD,GApsC8B;AAssC/BJ,EAAAA,qBAtsC+B,iCAssCTsF,MAtsCS,EAssCDC,WAtsCC,EAssCYC,WAtsCZ,EAssCyBC,WAtsCzB,EAssCsCC,eAtsCtC,EAssCuDC,iBAtsCvD,EAssC0EC,iBAtsC1E,EAssC6FC,WAtsC7F,EAssC0GhQ,MAtsC1G,EAssCkH;AAC/I,SAAKpB,eAAL;AACA,SAAK5B,iBAAL,CAAuBxE,aAAvB,CAAqCzB,MAArC,GAA8C,EAA9C;AACA,SAAKiG,iBAAL,CAAuBjF,UAAvB,CAAkChB,MAAlC,GAA2C0Y,MAA3C;AACA,SAAKzS,iBAAL,CAAuBhF,eAAvB,CAAuCjB,MAAvC,GAAgD2Y,WAAhD;AACA,SAAK1S,iBAAL,CAAuB/E,eAAvB,CAAuClB,MAAvC,GAAgD4Y,WAAhD;AACA,SAAK3S,iBAAL,CAAuB9E,eAAvB,CAAuCnB,MAAvC,GAAgD6Y,WAAhD;AACA,SAAK5S,iBAAL,CAAuB7E,mBAAvB,CAA2CpB,MAA3C,GAAoD8Y,eAApD;AACA,SAAK7S,iBAAL,CAAuB5E,qBAAvB,CAA6CrB,MAA7C,GAAsD+Y,iBAAtD;AACA,SAAK9S,iBAAL,CAAuB3E,qBAAvB,CAA6CtB,MAA7C,GAAsDgZ,iBAAtD;AACA,SAAK/S,iBAAL,CAAuB1E,eAAvB,CAAuCvB,MAAvC,GAAgDiZ,WAAhD;AACD,GAjtC8B;AAmtC/BR,EAAAA,qBAntC+B,iCAmtCTO,iBAntCS,EAmtCU;AACvC,SAAK/S,iBAAL,CAAuB3E,qBAAvB,CAA6CtB,MAA7C,GAAsDgZ,iBAAtD;AACD,GArtC8B;AAutC/BE,EAAAA,sBAvtC+B,oCAutCN;AAAA;;AACvB,QAAI9T,kBAAkB,IAAI,EAA1B,EAA8B;AAC5B,WAAKiG,SAAL,CAAe,yBAAf;AACD,KAFD,MAEO;AACL,UAAI8G,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACAjU,MAAAA,cAAc,GAAG,EAAjB;;AAEA,UAAI,KAAK8I,iBAAL,CAAuBzE,WAAvB,IAAsCd,UAAU,CAACE,UAArD,EAAiE;AAC/D,YAAImK,OAAO,GAAGD,QAAQ,CAAC1F,kBAAD,CAAtB;;AACA,YAAI+T,YAAY,GAAG5T,WAAW,GAAGwF,OAAjC;;AACA,YAAIoO,YAAY,IAAIvd,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAArG,EAA2G;AACzGrP,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,IAAyFkO,YAAzF;AACAvd,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFwB,SAAjF,IAA8F5I,OAA9F;AACA,eAAKM,SAAL,CAAe,kCAAkCN,OAAlC,GAA4C,iBAA3D,EAA8E/N,eAA9E;AAEAG,UAAAA,cAAc,GAAG,iBAAiB,IAAjB,GAAwB,IAAxB,GAA+B,eAA/B,GAAiDoI,WAAW,GAAG,IAA/D,GAAsE,IAAtE,GAA6E,oBAA7E,GAAoGA,WAApG,GAAkH,IAAlH,GAAyH,oBAAzH,GAAgJwF,OAAhJ,GAA0J,IAA1J,GAAiK,6BAAjK,GAAiMoO,YAAlN;AAEA,eAAKC,oBAAL,CAA0Bjc,cAA1B;AAEA2M,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACuP,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAZD,MAYO;AACL,eAAKZ,qBAAL,CAA2BlT,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKa,iBAAL,CAAuBxE,aAAvB,CAAqCzB,MAArC,GAA8C,EAA9C;AACA,eAAKqL,SAAL,CAAe,6BAAf;AACD;AACF,OArBD,MAqBO,IAAI,KAAKpF,iBAAL,CAAuBzE,WAAvB,IAAsCd,UAAU,CAACI,QAArD,EAA+D;AACpE,YAAIiK,OAAO,GAAGD,QAAQ,CAAC1F,kBAAD,CAAtB;;AACA,YAAI2F,OAAO,IAAInP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFwB,SAAhG,EAA2G;AACzG,cAAIwF,YAAY,GAAG5T,WAAW,GAAGwF,OAAjC;;AACAnP,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,IAAyFkO,YAAzF;AACAvd,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFwB,SAAjF,IAA8F5I,OAA9F;AACA,eAAKM,SAAL,CAAe,gCAAgCN,OAAhC,GAA0C,wBAA1C,GAAqEoO,YAApF,EAAkGnc,eAAlG;AAEAG,UAAAA,cAAc,GAAG,kBAAkB,IAAlB,GAAyB,IAAzB,GAAgC,eAAhC,GAAkDoI,WAAW,GAAG,IAAhE,GAAuE,IAAvE,GAA8E,oBAA9E,GAAqGA,WAArG,GAAmH,IAAnH,GAA0H,eAA1H,GAA4IwF,OAA5I,GAAsJ,IAAtJ,GAA6J,6BAA7J,GAA6LoO,YAA9M;AAEA,eAAKC,oBAAL,CAA0Bjc,cAA1B;AAEA2M,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACuP,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAbD,MAaO;AACL,eAAKZ,qBAAL,CAA2BlT,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKa,iBAAL,CAAuBxE,aAAvB,CAAqCzB,MAArC,GAA8C,EAA9C;AACA,eAAKqL,SAAL,CAAe,gDAAgDzP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFwB,SAAjI,GAA6I,iBAA5J,EAA+K3W,eAA/K;AACD;AACF,OArBM,MAqBA,IAAI,KAAKiJ,iBAAL,CAAuBzE,WAAvB,IAAsCd,UAAU,CAACC,WAArD,EAAkE;AACvE,YAAIoK,OAAO,GAAGD,QAAQ,CAAC1F,kBAAD,CAAtB;;AACA,YAAI+T,YAAY,GAAG5T,WAAW,GAAGwF,OAAjC;;AACA,YAAIoO,YAAY,IAAIvd,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAArG,EAA2G;AACzGrP,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,IAAyFkO,YAAzF;AACAvd,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiF0B,UAAjF,IAA+F9I,OAA/F,CAFyG,CAGzG;;AAEA,eAAKM,SAAL,CAAe,kCAAkCN,OAAlC,GAA4C,sBAA5C,GAAqE1F,iBAApF,EAAuGrI,eAAvG;AAEAG,UAAAA,cAAc,GAAG,kBAAkB,IAAlB,GAAyB,IAAzB,GAAgC,eAAhC,GAAkDoI,WAAW,GAAG,IAAhE,GAAuE,IAAvE,GAA8E,oBAA9E,GAAqGA,WAArG,GAAmH,IAAnH,GAA0H,oBAA1H,GAAiJwF,OAAjJ,GAA2J,IAA3J,GAAkK,6BAAlK,GAAkMoO,YAAnN;AAEA,eAAKC,oBAAL,CAA0Bjc,cAA1B;AAEA2M,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACuP,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAdD,MAcO;AACL,eAAKZ,qBAAL,CAA2BlT,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKa,iBAAL,CAAuBxE,aAAvB,CAAqCzB,MAArC,GAA8C,EAA9C;AACA,eAAKqL,SAAL,CAAe,6BAAf;AACD;AACF,OAvBM,MAuBA,IAAI,KAAKpF,iBAAL,CAAuBzE,WAAvB,IAAsCd,UAAU,CAACG,SAArD,EAAgE;AACrE,YAAIkK,OAAO,GAAGD,QAAQ,CAAC1F,kBAAD,CAAtB;;AAEA,YAAI2F,OAAO,IAAInP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiF0B,UAAhG,EAA4G;AAC1G,cAAIsF,YAAY,GAAG5T,WAAW,GAAGwF,OAAjC;;AACAnP,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,IAAyFkO,YAAzF;AACAvd,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiF0B,UAAjF,IAA+F9I,OAA/F;AAEA,eAAKM,SAAL,CAAe,gCAAgCN,OAAhC,GAA0C,yBAA1C,GAAsEoO,YAArF,EAAmGnc,eAAnG;AAEAG,UAAAA,cAAc,GAAG,mBAAmB,IAAnB,GAA0B,IAA1B,GAAiC,eAAjC,GAAmDoI,WAAW,GAAG,IAAjE,GAAwE,IAAxE,GAA+E,oBAA/E,GAAsGA,WAAtG,GAAoH,IAApH,GAA2H,eAA3H,GAA6IwF,OAA7I,GAAuJ,IAAvJ,GAA8J,6BAA9J,GAA8LoO,YAA/M;AAEA,eAAKC,oBAAL,CAA0Bjc,cAA1B;AAEA2M,UAAAA,UAAU,CAAC,YAAM;AACf,YAAA,MAAI,CAACuP,qBAAL;AACD,WAFS,EAEP,GAFO,CAAV;AAGD,SAdD,MAcO;AACL,eAAKZ,qBAAL,CAA2BlT,WAAW,GAAG,MAAzC;AACAH,UAAAA,kBAAkB,GAAG,EAArB;AACA,eAAKa,iBAAL,CAAuBxE,aAAvB,CAAqCzB,MAArC,GAA8C,EAA9C;AACA,eAAKqL,SAAL,CAAe,kDAAkDzP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiF0B,UAAnI,GAAgJ,kBAA/J,EAAmL7W,eAAnL;AACD;AACF;AACF;AACF,GAxzC8B;AA0zC/Bqc,EAAAA,qBA1zC+B,mCA0zCP;AACtB,SAAKnG,iCAAL,CAAuC,KAAvC;;AAEA,QAAIzW,iBAAJ,EAAuB;AACrBb,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACAvU,MAAAA,iBAAiB,GAAG,KAApB;AACD;AACF,GAj0C8B;AAk0C/B;AAEA;AACA6c,EAAAA,yBAr0C+B,qCAq0CLrQ,MAr0CK,EAq0CG;AAChC,SAAKnC,YAAL,CAAkBoC,MAAlB,GAA2BD,MAA3B;AACD,GAv0C8B;AAy0C/BsQ,EAAAA,8BAz0C+B,0CAy0CAtQ,MAz0CA,EAy0CQ;AACrC,SAAK/C,aAAL,CAAmBtD,eAAnB,CAAmCsG,MAAnC,GAA4CD,MAA5C;AACD,GA30C8B;AA60C/BuQ,EAAAA,oBA70C+B,gCA60CVnd,QA70CU,EA60CAC,QA70CA,EA60CUmd,SA70CV,EA60CqB;AAClD,QAAIpd,QAAQ,IAAI,CAAhB,EAAmB;AACjBoJ,MAAAA,yBAAyB,GAAG,IAA5B;AACA,WAAKS,aAAL,CAAmB1D,YAAnB,CAAgC8L,YAAhC,CAA6CjR,EAAE,CAACqc,MAAhD,EAAwDC,YAAxD,GAAuE,KAAvE;AACD,KAHD,MAGO;AACLlU,MAAAA,yBAAyB,GAAG,KAA5B;AACA,WAAKS,aAAL,CAAmB1D,YAAnB,CAAgC8L,YAAhC,CAA6CjR,EAAE,CAACqc,MAAhD,EAAwDC,YAAxD,GAAuE,IAAvE;AACD;;AAED,QAAIrd,QAAQ,IAAI,CAAhB,EAAmB;AACjBoJ,MAAAA,2BAA2B,GAAG,IAA9B;AACA,WAAKQ,aAAL,CAAmBzD,KAAnB,CAAyB6L,YAAzB,CAAsCjR,EAAE,CAACqc,MAAzC,EAAiDC,YAAjD,GAAgE,KAAhE;AACD,KAHD,MAGO;AACLjU,MAAAA,2BAA2B,GAAG,KAA9B;AACA,WAAKQ,aAAL,CAAmBzD,KAAnB,CAAyB6L,YAAzB,CAAsCjR,EAAE,CAACqc,MAAzC,EAAiDC,YAAjD,GAAgE,IAAhE;AACD;;AAED,QAAI,CAACF,SAAL,EAAgB;AACd9T,MAAAA,SAAS,GAAG,IAAZ;AACA,WAAKO,aAAL,CAAmBxD,OAAnB,CAA2B4L,YAA3B,CAAwCjR,EAAE,CAACqc,MAA3C,EAAmDC,YAAnD,GAAkE,KAAlE;AACD,KAHD,MAGO;AACLhU,MAAAA,SAAS,GAAG,KAAZ;AACA,WAAKO,aAAL,CAAmBxD,OAAnB,CAA2B4L,YAA3B,CAAwCjR,EAAE,CAACqc,MAA3C,EAAmDC,YAAnD,GAAkE,IAAlE;AACD;AACF,GAr2C8B;AAu2C/BC,EAAAA,oBAv2C+B,kCAu2CR;AACrB,QAAIpF,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AAEA,QAAIyI,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAItN,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGiI,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmDzB,MAA/E,EAAuFF,KAAK,EAA5F,EAAgG;AAC9F,UAAIiI,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmD3B,KAAnD,EAA0D4B,SAA9D,EAAyE;AACvE0L,QAAAA,KAAK,GAAGrF,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmD3B,KAAnD,EAA0DjN,UAAlE;AACA;AACD;AACF;;AACD,WAAOua,KAAP;AACD,GAn3C8B;AAq3C/BC,EAAAA,iBAr3C+B,6BAq3CbpB,MAr3Ca,EAq3CLqB,eAr3CK,EAq3CoBC,OAr3CpB,EAq3CqCC,OAr3CrC,EAq3CsDC,MAr3CtD,EAq3CsEC,oBAr3CtE,EAq3CoG1D,sBAr3CpG,EAq3CgI2D,SAr3ChI,EAq3C+IC,SAr3C/I,EAq3C8JC,WAr3C9J,EAq3C+KC,aAr3C/K,EAq3CkMC,gBAr3ClM,EAq3CwN;AAAA;;AAAA,QAA7NT,eAA6N;AAA7NA,MAAAA,eAA6N,GAA3M,KAA2M;AAAA;;AAAA,QAApMC,OAAoM;AAApMA,MAAAA,OAAoM,GAA1L,KAA0L;AAAA;;AAAA,QAAnLC,OAAmL;AAAnLA,MAAAA,OAAmL,GAAzK,KAAyK;AAAA;;AAAA,QAAlKC,MAAkK;AAAlKA,MAAAA,MAAkK,GAAzJ,KAAyJ;AAAA;;AAAA,QAAlJC,oBAAkJ;AAAlJA,MAAAA,oBAAkJ,GAA3H,KAA2H;AAAA;;AAAA,QAApH1D,sBAAoH;AAApHA,MAAAA,sBAAoH,GAA3F,CAA2F;AAAA;;AAAA,QAAxF2D,SAAwF;AAAxFA,MAAAA,SAAwF,GAA5E,CAA4E;AAAA;;AAAA,QAAzEC,SAAyE;AAAzEA,MAAAA,SAAyE,GAA7D,CAA6D;AAAA;;AAAA,QAA1DC,WAA0D;AAA1DA,MAAAA,WAA0D,GAA5C,CAA4C;AAAA;;AAAA,QAAzCC,aAAyC;AAAzCA,MAAAA,aAAyC,GAAzB,CAAyB;AAAA;;AAAA,QAAtBC,gBAAsB;AAAtBA,MAAAA,gBAAsB,GAAH,CAAG;AAAA;;AACrP9S,IAAAA,aAAa,GAAG,CAAhB;AACAC,IAAAA,aAAa,GAAG,CAAhB,CAFqP,CAIrP;AAEA;;AAEA,QAAI8S,IAAI,GAAGF,aAAa,GAAGC,gBAA3B;;AACAtd,IAAAA,UAAU,GAAG,oCAAoCud,IAAjD;AAEA,SAAKvS,SAAL,GAAiBgS,MAAjB;AACA,SAAK/R,WAAL,GAAmBoS,aAAnB;AACA,SAAKnS,iBAAL,GAAyBoS,gBAAzB;AACA3U,IAAAA,YAAY,GAAGkU,eAAf;AACA,SAAKT,yBAAL,CAA+B,IAA/B;AACA,SAAKpT,aAAL,CAAmBlF,UAAnB,CAA8BhB,MAA9B,GAAuC0Y,MAAvC;AACA,QAAIgC,KAAK,GAAG,IAAZ;AACAte,IAAAA,sBAAsB,GAAG+d,oBAAzB;AACA3d,IAAAA,qBAAqB,GAAGia,sBAAxB;AACApa,IAAAA,QAAQ,GAAG+d,SAAX;AACA9d,IAAAA,QAAQ,GAAG+d,SAAX;AACA9d,IAAAA,WAAW,GAAG+d,WAAd;;AAEA,QAAI,CAACle,sBAAL,EAA6B;AAC3B,UAAI8d,MAAM,IAAI,KAAd,EAAqB;AACnB;AACA,YAAIF,OAAO,IAAIC,OAAf,EAAwB,KAAK5O,SAAL,CAAe,2EAAf,EAA4FqP,KAA5F,EAAxB,KACK,IAAIV,OAAJ,EAAa,KAAK3O,SAAL,CAAe,wDAAf,EAAyEqP,KAAzE,EAAb,KACA,IAAIT,OAAJ,EAAa,KAAK5O,SAAL,CAAe,4DAAf,EAA6EqP,KAA7E;AACnB,OALD,MAKO;AACL;AACA,YAAIV,OAAO,IAAIC,OAAf,EAAwB3Q,OAAO,CAAC4B,GAAR,CAAY,2EAAZ,EAAxB,KACK,IAAI8O,OAAJ,EAAa1Q,OAAO,CAAC4B,GAAR,CAAY,wDAAZ,EAAb,KACA,IAAI+O,OAAJ,EAAa3Q,OAAO,CAAC4B,GAAR,CAAY,4DAAZ;AACnB;AACF;;AAED,QAAIiH,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,SAAKuJ,iBAAL,CAAuB/e,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAxG;;AAEA,QAAI,CAAC7O,sBAAL,EAA6B;AAC3BC,MAAAA,QAAQ,GAAGT,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiF1C,eAA5F;AACAnT,MAAAA,QAAQ,GAAGV,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFrB,oBAA5F;AACAvU,MAAAA,WAAW,GAAGX,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFyI,oBAA/F;AACD;;AAED,QAAI5M,UAAU,GAAG,KAAjB;AACA,QAAIC,cAAc,GAAG,CAArB;;AAEA,SAAK,IAAI1B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG3Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8FzB,MAA1H,EAAkIF,KAAK,EAAvI,EAA2I;AACzI,UAAI3Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8F3B,KAA9F,EAAqG4B,SAAzG,EAAoH;AAClHH,QAAAA,UAAU,GAAG,IAAb;AACAC,QAAAA,cAAc,GAAG1B,KAAjB;AACA;AACD;AACF;;AAED,QAAIkN,SAAS,GAAG,KAAhB;;AAEA,QAAI,CAACrd,sBAAL,EAA6B;AAC3Bqd,MAAAA,SAAS,GAAGzL,UAAZ;AACD;;AAED,SAAK9H,aAAL,CAAmB9D,oBAAnB,CAAwCpC,MAAxC,GAAiD3D,QAAjD;AACA,SAAK6J,aAAL,CAAmB7D,aAAnB,CAAiCrC,MAAjC,GAA0C1D,QAA1C;AACA,SAAK4J,aAAL,CAAmB5D,qBAAnB,CAAyCtC,MAAzC,GAAkDzD,WAAlD;AACA,SAAK2J,aAAL,CAAmB3D,sBAAnB,CAA0CvC,MAA1C,GAAmD,KAAKmI,WAAxD;;AAEA,QAAIqM,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB,CAtEqP,CAwErP;;;AACA,QAAIoD,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsC0I,kBAA1C,EAA8D;AAC5D,UAAIhB,KAAK,GAAG,KAAKD,oBAAL,EAAZ;;AACA,WAAK1T,aAAL,CAAmBhD,eAAnB,CAAmClD,MAAnC,GAA4C,WAAW6Z,KAAvD;AACD,KAHD,MAGO;AACL,WAAK3T,aAAL,CAAmBhD,eAAnB,CAAmClD,MAAnC,GAA4C,YAA5C;AACD,KA9EoP,CAgFrP;;;AACA,QAAIga,OAAO,IAAIC,OAAf,EAAwB,KAAKT,oBAAL,CAA0B,CAA1B,EAA6B,CAA7B,EAAgCC,SAAhC,EAAxB,KACK,IAAIO,OAAJ,EAAa,KAAKR,oBAAL,CAA0B,CAA1B,EAA6Bld,QAA7B,EAAuCmd,SAAvC,EAAb,KACA,IAAIQ,OAAJ,EAAa,KAAKT,oBAAL,CAA0Bnd,QAA1B,EAAoC,CAApC,EAAuCod,SAAvC,EAAb,KACA,KAAKD,oBAAL,CAA0Bnd,QAA1B,EAAoCC,QAApC,EAA8Cmd,SAA9C;;AAEL,QAAIQ,OAAO,IAAID,OAAf,EAAwB;AACtBlQ,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACgR,eAAL;AACD,OAFS,EAEPJ,KAAK,GAAG,GAFD,CAAV;AAGD;;AAED,QAAIR,MAAJ,EAAY;AACVpQ,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACiR,gCAAL;;AACA,QAAA,MAAI,CAACC,yBAAL;;AACA,QAAA,MAAI,CAACC,2BAAL;AACD,OAJS,EAIP,CAJO,CAAV;AAKD;AACF,GAx9C8B;AA09C/BF,EAAAA,gCA19C+B,8CA09CI;AACjC,QAAI,CAACtV,yBAAL,EAAgC;AAC9B,WAAK8T,8BAAL,CAAoC,IAApC;AAEA,UAAI2B,aAAa,GAAGrV,YAApB;;AAEA,UAAI,CAACzJ,sBAAL,EAA6B;AAC3B,YAAI,CAAC8e,aAAL,EAAoB,KAAKhV,aAAL,CAAmBpD,sBAAnB,CAA0C9C,MAA1C,GAAmD,QAAnD,CAApB,KACK,KAAKkG,aAAL,CAAmBpD,sBAAnB,CAA0C9C,MAA1C,GAAmD,cAAnD;AACN,OAHD,MAGO;AACLkb,QAAAA,aAAa,GAAG,KAAhB;AACA,aAAKhV,aAAL,CAAmBpD,sBAAnB,CAA0C9C,MAA1C,GAAmD,QAAnD;AACD;;AAEDyF,MAAAA,yBAAyB,GAAG,IAA5B;AACA,WAAKS,aAAL,CAAmB1D,YAAnB,CAAgC8L,YAAhC,CAA6CjR,EAAE,CAACqc,MAAhD,EAAwDC,YAAxD,GAAuE,KAAvE;;AAEA,UAAInF,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AAEA,UAAI,CAAChV,sBAAL,EAA6B;AAC3BC,QAAAA,QAAQ,GAAGT,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiF1C,eAA5F;AACD;;AAED,UAAI0L,KAAK,GAAGvf,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD0J,WAApD,EAAZ;;AACA,UAAIgB,SAAS,GAAGD,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtD;AAEA,UAAIkN,eAAe,GAAG,CAAtB;AACA,UAAIC,mBAAmB,GAAG,CAA1B;AACA,UAAIC,WAAW,GAAG,CAAlB;AACA,UAAIC,iBAAiB,GAAG,KAAKpT,WAA7B,CA7B8B,CA8B9B;;AACA,UAAI+S,aAAJ,EAAmB;AACjB,YAAI,KAAK9S,iBAAL,IAA0B,CAA9B,EAAiC;AAC/BkT,UAAAA,WAAW,GAAG,IAAI,KAAKlT,iBAAvB;AACD,SAFD,MAEO;AACLkT,UAAAA,WAAW,GAAG,CAAd;AACD;AACF;;AAED,UAAI,CAAClf,sBAAL,EAA6B;AAC3B,aAAK,IAAImQ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGkI,SAAS,CAAChI,MAAtC,EAA8CF,KAAK,EAAnD,EAAuD;AACrD,cAAIkI,SAAS,CAAClI,KAAD,CAAT,CAAiBH,YAAjB,IAAiC,CAArC,EAAwC;AACtC,gBAAIqI,SAAS,CAAClI,KAAD,CAAT,CAAiBmJ,aAArB,EAAoC;AAClC,kBAAI8B,QAAQ,GAAG+D,iBAAiB,GAAGD,WAApB,GAAkCH,KAAlC,GAA0C,IAAzD;;AACAC,cAAAA,eAAe,GAAG5D,QAAQ,GAAG,CAA7B;;AACAhD,cAAAA,QAAQ,CAACgH,+BAAT,CAAyCJ,eAAzC,EAA0D3G,SAAS,CAAClI,KAAD,CAAT,CAAiB8L,SAA3E;;AACAgD,cAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;AACF,OAXD,MAWO;AACL,YAAI3G,SAAS,CAACjY,qBAAD,CAAT,CAAiC4P,YAAjC,IAAiD,CAArD,EAAwD;AACtD,cAAIqI,SAAS,CAACjY,qBAAD,CAAT,CAAiCkZ,aAArC,EAAoD;AAClD,gBAAI8B,QAAQ,GAAG+D,iBAAiB,GAAGD,WAApB,GAAkCH,KAAlC,GAA0C,IAAzD;;AACAC,YAAAA,eAAe,GAAG5D,QAAQ,GAAG,CAA7B;;AACAhD,YAAAA,QAAQ,CAACgH,+BAAT,CAAyCJ,eAAzC,EAA0D3G,SAAS,CAACjY,qBAAD,CAAT,CAAiC6b,SAA3F;;AACAgD,YAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;;AAED,UAAIC,mBAAmB,GAAG,CAA1B,EAA6B;AAC3B,aAAKhQ,SAAL,CAAe,qGAAf,EAAsHrO,eAAtH;AACD,OA/D6B,CAgE9B;;;AAEA,UAAI,CAACke,aAAL,EAAoBtV,iBAAiB,GAAG2V,iBAAiB,GAAGlf,QAApB,GAA+B8e,KAA/B,GAAuC,IAAvC,GAA8CE,mBAAlE,CAApB,KACKzV,iBAAiB,GAAG2V,iBAAiB,GAAGD,WAApB,IAAmCjf,QAAQ,GAAG8e,KAA9C,IAAuD,IAAvD,GAA8DE,mBAAlF;AAEL,WAAKnV,aAAL,CAAmBjF,eAAnB,CAAmCjB,MAAnC,GAA4Cmb,KAA5C;AACA,WAAKjV,aAAL,CAAmBnD,kBAAnB,CAAsC/C,MAAtC,GAA+C3D,QAA/C;AAEA,UAAI,CAAC6e,aAAL,EAAoB,KAAKhV,aAAL,CAAmBlD,gBAAnB,CAAoChD,MAApC,GAA6C,MAAMub,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8C9e,QAA9C,GAAyD,GAAzD,GAA+D,QAA/D,GAA0Egf,mBAA1E,GAAgG,GAAhG,GAAsGzV,iBAAnJ,CAApB,KACK,KAAKM,aAAL,CAAmBlD,gBAAnB,CAAoChD,MAApC,GAA6C,MAAMub,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8C9e,QAA9C,GAAyD,GAAzD,GAA+D,OAA/D,GAAyEif,WAAzE,GAAuF,IAAvF,GAA8FD,mBAA9F,GAAoH,GAApH,GAA0HzV,iBAAvK;AAEL1I,MAAAA,UAAU,IAAI,OAAO,IAAP,GAAc,uBAAd,GAAwCb,QAAxC,GAAmD,IAAnD,GAA0D,eAA1D,GAA4E8e,KAA5E,GAAoF,IAApF,GAA2F,oBAA3F,GAAkHvV,iBAAhI;;AAEA,UAAI,KAAKsC,SAAT,EAAoB;AAClB,aAAKuT,qBAAL;AACD;AACF;AACF,GA5iD8B;AA8iD/BT,EAAAA,yBA9iD+B,uCA8iDH;AAC1B;AACA,QAAI,CAACtV,2BAAL,EAAkC;AAChC,WAAK6T,8BAAL,CAAoC,IAApC;AAEA,UAAI2B,aAAa,GAAGrV,YAApB;AACA,UAAI0V,iBAAiB,GAAG,KAAKpT,WAA7B;;AAEA,UAAI,CAAC/L,sBAAL,EAA6B;AAC3B,YAAI,CAAC8e,aAAL,EAAoB,KAAKhV,aAAL,CAAmBpD,sBAAnB,CAA0C9C,MAA1C,GAAmD,QAAnD,CAApB,KACK,KAAKkG,aAAL,CAAmBpD,sBAAnB,CAA0C9C,MAA1C,GAAmD,cAAnD;AACN,OAHD,MAGO;AACLkb,QAAAA,aAAa,GAAG,KAAhB;AACA,aAAKhV,aAAL,CAAmBpD,sBAAnB,CAA0C9C,MAA1C,GAAmD,QAAnD;AACD;;AAED0F,MAAAA,2BAA2B,GAAG,IAA9B;AACA,WAAKQ,aAAL,CAAmBzD,KAAnB,CAAyB6L,YAAzB,CAAsCjR,EAAE,CAACqc,MAAzC,EAAiDC,YAAjD,GAAgE,KAAhE;;AACA,UAAInF,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AAEA,UAAI,CAAChV,sBAAL,EAA6B;AAC3BE,QAAAA,QAAQ,GAAGV,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFrB,oBAA5F;AACAvU,QAAAA,WAAW,GAAGX,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFyI,oBAA/F;AACD;;AAED,UAAI7P,OAAO,GAAGzO,QAAQ,GAAGC,WAAzB;;AACA,UAAI4e,KAAK,GAAGvf,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDoJ,YAApD,EAAZ;;AAEA,UAAIsB,SAAS,GAAGD,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtD;AAEA,UAAIkN,eAAe,GAAG,CAAtB;AACA,UAAIC,mBAAmB,GAAG,CAA1B;AACA,UAAIC,WAAW,GAAG,CAAlB;;AAEA,UAAIJ,aAAJ,EAAmB;AACjB,YAAI,KAAK9S,iBAAL,IAA0B,CAA9B,EAAiC;AAC/BkT,UAAAA,WAAW,GAAG,IAAI,KAAKlT,iBAAvB;AACD,SAFD,MAEO;AACLkT,UAAAA,WAAW,GAAG,CAAd;AACD;AACF;;AAED,UAAI,CAAClf,sBAAL,EAA6B;AAC3B,aAAK,IAAImQ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGkI,SAAS,CAAChI,MAAtC,EAA8CF,KAAK,EAAnD,EAAuD;AACrD,cAAIkI,SAAS,CAAClI,KAAD,CAAT,CAAiBH,YAAjB,IAAiC,CAArC,EAAwC;AACtC,gBAAIqI,SAAS,CAAClI,KAAD,CAAT,CAAiBmJ,aAArB,EAAoC;AAClC,kBAAIgG,UAAU,GAAGjH,SAAS,CAAClI,KAAD,CAAT,CAAiB0I,aAAjB,CAA+BxI,MAA/B,GAAwC,CAAzD;;AACA,kBAAI+K,QAAQ,GAAG+D,iBAAiB,GAAGG,UAApB,GAAiCJ,WAAjC,GAA+CH,KAA/C,GAAuD,IAAtE;;AACAC,cAAAA,eAAe,GAAG5D,QAAQ,GAAG,CAA7B;;AACAhD,cAAAA,QAAQ,CAACgH,+BAAT,CAAyCJ,eAAzC,EAA0D3G,SAAS,CAAClI,KAAD,CAAT,CAAiB8L,SAA3E;;AACAgD,cAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;AACF,OAZD,MAYO;AACL,YAAI3G,SAAS,CAACjY,qBAAD,CAAT,CAAiC4P,YAAjC,IAAiD,CAArD,EAAwD;AACtD,cAAIqI,SAAS,CAACjY,qBAAD,CAAT,CAAiCkZ,aAArC,EAAoD;AAClD,gBAAIgG,UAAU,GAAGjH,SAAS,CAACjY,qBAAD,CAAT,CAAiCyY,aAAjC,CAA+CxI,MAA/C,GAAwD,CAAzE;;AACA,gBAAI+K,QAAQ,GAAG+D,iBAAiB,GAAGG,UAApB,GAAiCJ,WAAjC,GAA+CH,KAA/C,GAAuD,IAAtE;;AACAC,YAAAA,eAAe,GAAG5D,QAAQ,GAAG,CAA7B;;AACAhD,YAAAA,QAAQ,CAACgH,+BAAT,CAAyCJ,eAAzC,EAA0D3G,SAAS,CAACjY,qBAAD,CAAT,CAAiC6b,SAA3F;;AACAgD,YAAAA,mBAAmB,IAAID,eAAvB;AACD;AACF;AACF;;AAED,UAAIC,mBAAmB,GAAG,CAA1B,EAA6B;AAC3B,aAAKhQ,SAAL,CAAe,qGAAf,EAAsHrO,eAAtH;AACD;;AAED,UAAI,CAACke,aAAL,EAAoBtV,iBAAiB,GAAG2V,iBAAiB,GAAGxQ,OAApB,GAA8BoQ,KAA9B,GAAsC,IAAtC,GAA6CE,mBAAjE,CAApB,KACKzV,iBAAiB,GAAG2V,iBAAiB,GAAGD,WAApB,IAAmCvQ,OAAO,GAAGoQ,KAA7C,IAAsD,IAAtD,GAA6DE,mBAAjF;AAEL,WAAKnV,aAAL,CAAmBjF,eAAnB,CAAmCjB,MAAnC,GAA4Cmb,KAA5C;AACA,WAAKjV,aAAL,CAAmBnD,kBAAnB,CAAsC/C,MAAtC,GAA+C+K,OAA/C;AAEA,UAAI,CAACmQ,aAAL,EAAoB,KAAKhV,aAAL,CAAmBlD,gBAAnB,CAAoChD,MAApC,GAA6C,MAAMub,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8CpQ,OAA9C,GAAwD,GAAxD,GAA8D,QAA9D,GAAyEsQ,mBAAzE,GAA+F,GAA/F,GAAqGzV,iBAAlJ,CAApB,KACK,KAAKM,aAAL,CAAmBlD,gBAAnB,CAAoChD,MAApC,GAA6C,MAAMub,iBAAN,GAA0B,GAA1B,GAAgCJ,KAAhC,GAAwC,GAAxC,GAA8CpQ,OAA9C,GAAwD,GAAxD,GAA8D,OAA9D,GAAwEuQ,WAAxE,GAAsF,IAAtF,GAA6FD,mBAA7F,GAAmH,GAAnH,GAAyHzV,iBAAtK;AAEL1I,MAAAA,UAAU,IAAI,OAAO,IAAP,GAAc,2BAAd,GAA4C6N,OAA5C,GAAsD,IAAtD,GAA6D,eAA7D,GAA+EoQ,KAA/E,GAAuF,IAAvF,GAA8F,oBAA9F,GAAqHvV,iBAAnI;;AAEA,UAAI,KAAKsC,SAAT,EAAoB;AAClB,aAAKuT,qBAAL;AACD;AACF;AACF,GApoD8B;AAsoD/BR,EAAAA,2BAtoD+B,yCAsoDD;AAC5B;AACA,QAAI,CAACtV,SAAL,EAAgB;AACd,UAAI6O,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,UAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,UAAIuK,aAAa,GAAG,CAApB;AAEA,UAAInH,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsC0I,kBAA1C,EACE;AACAc,QAAAA,aAAa,GAAG,KAAK/B,oBAAL,EAAhB,CAFF,KAGK+B,aAAa,GAAG,IAAhB;;AAEL,UAAI/f,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,IAAyF0Q,aAA7F,EAA4G;AAC1GhW,QAAAA,SAAS,GAAG,IAAZ;AACA,aAAKO,aAAL,CAAmBxD,OAAnB,CAA2B4L,YAA3B,CAAwCjR,EAAE,CAACqc,MAA3C,EAAmDC,YAAnD,GAAkE,KAAlE;AACA/d,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwFrP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwF0Q,aAAhL;AAEA,YAAI3N,UAAU,GAAG,KAAjB;AACA,YAAIC,cAAc,GAAG,CAArB;;AAEA,aAAK,IAAI1B,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG3Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8FzB,MAA1H,EAAkIF,KAAK,EAAvI,EAA2I;AACzI,cAAI3Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8F3B,KAA9F,EAAqG4B,SAAzG,EAAoH;AAClHH,YAAAA,UAAU,GAAG,IAAb;AACAC,YAAAA,cAAc,GAAG1B,KAAjB;AACA;AACD;AACF;;AAED3Q,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8FD,cAA9F,EAA8G3O,UAA9G,GAA2H1D,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8FD,cAA9F,EAA8G3O,UAA9G,GAA2Hqc,aAAtP;;AAEA,YAAI/f,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8FD,cAA9F,EAA8G3O,UAA9G,IAA4H,CAAhI,EAAmI;AACjI1D,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8FD,cAA9F,EAA8G3O,UAA9G,GAA2H,CAA3H;AACA1D,UAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFjE,YAAjF,CAA8FD,cAA9F,EAA8GE,SAA9G,GAA0H,KAA1H;AACD;;AAED,YAAIqG,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsC0I,kBAA1C,EAA8DrG,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsC0I,kBAAtC,GAA2D,KAA3D;AAE9D,aAAKF,iBAAL,CAAuB/e,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAxG;AACA,aAAK6P,eAAL;AACD,OA3BD,MA2BO;AACL,YAAItG,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,YAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AAEA,YAAIoD,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsC0I,kBAA1C,EAA8D,KAAK3U,aAAL,CAAmBjD,cAAnB,CAAkCqL,YAAlC,CAA+CjR,EAAE,CAACqc,MAAlD,EAA0DC,YAA1D,GAAyE,KAAzE,CAA9D,KACK,KAAKzT,aAAL,CAAmBjD,cAAnB,CAAkCqL,YAAlC,CAA+CjR,EAAE,CAACqc,MAAlD,EAA0DC,YAA1D,GAAyE,IAAzE;AAEL,aAAKzT,aAAL,CAAmBrD,mBAAnB,CAAuCqG,MAAvC,GAAgD,IAAhD;AACAI,QAAAA,OAAO,CAACoI,KAAR,CAAc,cAAd;AACD;AACF;AACF,GAxrD8B;AA0rD/B+J,EAAAA,qBA1rD+B,mCA0rDP;AAAA;;AACtB;AACA,QAAItJ,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACAxV,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwFrP,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAjF,GAAwFrF,iBAAhL;AACA,SAAK+U,iBAAL,CAAuB/e,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAxG;;AACA,QAAI,CAAC,KAAK/C,SAAV,EAAqB;AACnB,WAAKmD,SAAL,CAAe,aAAazF,iBAAb,GAAiC,8DAAjC,GAAkGhK,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAAlM;AACAnB,MAAAA,UAAU,CAAC,YAAM;AACf,QAAA,MAAI,CAACyP,8BAAL,CAAoC,KAApC;;AACA,QAAA,MAAI,CAACuB,eAAL;AACD,OAHS,EAGP,GAHO,CAAV;AAID,KAND,MAMO;AACLxR,MAAAA,OAAO,CAAC4B,GAAR,CAAY,aAAatF,iBAAb,GAAiC,8DAAjC,GAAkGhK,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE2F,YAAnE,EAAiFlH,IAA/L;AACA,WAAKsO,8BAAL,CAAoC,KAApC;AACA,WAAKuB,eAAL;AACD;AACF,GA1sD8B;AA4sD/Bc,EAAAA,sBA5sD+B,oCA4sDN;AACvB,SAAKvQ,SAAL,CAAe,4FAAf;;AACA,QAAImJ,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACAoD,IAAAA,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsC0I,kBAAtC,GAA2D,IAA3D;AACA,SAAK3U,aAAL,CAAmBrD,mBAAnB,CAAuCqG,MAAvC,GAAgD,KAAhD;AACAvD,IAAAA,SAAS,GAAG,IAAZ;AACA,SAAKO,aAAL,CAAmBxD,OAAnB,CAA2B4L,YAA3B,CAAwCjR,EAAE,CAACqc,MAA3C,EAAmDC,YAAnD,GAAkE,KAAlE;AACA,SAAKmB,eAAL;AACAnV,IAAAA,SAAS,GAAG,IAAZ;AACD,GAttD8B;AAwtD/BkW,EAAAA,mBAxtD+B,iCAwtDT;AACpB,SAAK3V,aAAL,CAAmBrD,mBAAnB,CAAuCqG,MAAvC,GAAgD,KAAhD;AACA,SAAK4S,qCAAL,CAA2C,KAA3C;AACD,GA3tD8B;AA6tD/BnB,EAAAA,iBA7tD+B,6BA6tDb5P,OA7tDa,EA6tDJ;AACzB,SAAK7E,aAAL,CAAmBvE,SAAnB,CAA6B3B,MAA7B,GAAsC,MAAM+K,OAA5C;AACD,GA/tD8B;AAiuD/BgR,EAAAA,qBAjuD+B,mCAiuDP;AACtB,SAAK7V,aAAL,CAAmBrD,mBAAnB,CAAuCqG,MAAvC,GAAgD,KAAhD;AACD,GAnuD8B;AAquD/B8S,EAAAA,mBAruD+B,iCAquDT;AAAA;;AACpB;AACA,SAAK3Q,SAAL,CAAe,+DAAf,EAAgF,IAAhF,EAAsF,KAAtF;AACAvB,IAAAA,UAAU,CAAC,YAAM;AACf,MAAA,MAAI,CAACiS,qBAAL;;AACA,MAAA,MAAI,CAACzC,yBAAL,CAA+B,KAA/B;;AACA,MAAA,MAAI,CAACnQ,0BAAL;;AACA9L,MAAAA,EAAE,CAACsL,WAAH,CAAesT,IAAf,CAAoB,UAApB,EAAgC,EAAhC,EAAoC,KAApC;AACAxW,MAAAA,yBAAyB,GAAG,KAA5B;AACAC,MAAAA,2BAA2B,GAAG,KAA9B;AACAC,MAAAA,SAAS,GAAG,KAAZ;AACA/J,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDmS,sBAApD,CAA2E,KAA3E;AACAtgB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDoS,0BAApD,CAA+E,KAA/E;AACAvgB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqS,+BAApD,CAAoF,KAApF;AACAxgB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDsS,YAApD,CAAiE,KAAjE,EAAwE,KAAxE;AACAzgB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDuS,qBAApD;AACD,KAbS,EAaP,IAbO,CAAV;AAcD,GAtvD8B;AAwvD/BC,EAAAA,QAxvD+B,oBAwvDtBnN,KAxvDsB,EAwvDf;AACd,SAAK/D,SAAL,CAAe+D,KAAK,CAACoN,IAArB,EAA2B,IAA3B,EAAiC,IAAjC;AACD,GA1vD8B;AA4vD/B1B,EAAAA,eA5vD+B,6BA4vDb;AAChB,QAAIrV,yBAAyB,IAAIC,2BAA7B,IAA4DC,SAAhE,EAA2E;AACzE,UAAIwM,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA9H,MAAAA,OAAO,CAAC4B,GAAR,CAAY,iBAAZ;AACA,WAAKoO,yBAAL,CAA+B,KAA/B;;AAEA,UAAI,CAACld,sBAAL,EAA6B;AAC3BR,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDmS,sBAApD,CAA2E,KAA3E;AACAtgB,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDoS,0BAApD,CAA+E,KAA/E;AACAvgB,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqS,+BAApD,CAAoF,KAApF;AACAxgB,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDsS,YAApD,CAAiE,KAAjE,EAAwE,KAAxE;AACAzgB,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD0S,uBAApD,CAA4E,KAA5E;AACA7gB,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoD2S,YAApD;AACD,OAPD,MAOO;AACL9gB,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD;;AAED,WAAKoI,oBAAL,CAA0Blc,UAA1B;AACD;AACF,GA/wD8B;AAgxD/B;AAEA;AACAyf,EAAAA,4CAnxD+B,wDAmxDc1T,MAnxDd,EAmxDsB;AACnD,SAAKlC,kBAAL,CAAwBmC,MAAxB,GAAiCD,MAAjC;AACD,GArxD8B;AAuxD/B2T,EAAAA,iCAvxD+B,+CAuxDK;AAClC,SAAKC,yBAAL;;AACA,QAAIrI,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,QAAIqD,SAAS,GAAGD,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,CAAhB;AAEA,SAAKhM,mBAAL,CAAyBnF,UAAzB,CAAoChB,MAApC,GAA6C,MAA7C;AACA,SAAKmG,mBAAL,CAAyBxE,SAAzB,CAAmC3B,MAAnC,GAA4CwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsClH,IAAlF;AACA,SAAK9E,mBAAL,CAAyBvE,eAAzB,CAAyC5B,MAAzC,GAAkDwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjO,UAAxF;AACA,SAAKiC,mBAAL,CAAyBtE,kBAAzB,CAA4C7B,MAA5C,GAAqD,wBAAwBwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmDzB,MAAhI;;AAEA,SAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGkI,SAAS,CAACvG,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAImI,IAAI,GAAGrX,EAAE,CAACsX,WAAH,CAAe,KAAKxO,mBAAL,CAAyBpE,kBAAxC,CAAX;AACA2S,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAKzO,mBAAL,CAAyBrE,iBAAvC;AACA4S,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCzG,eAApC;AACA6M,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCuG,OAApC,CAA4CJ,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACAkH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCwG,OAApC,CAA4CL,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACAoH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCwG,OAApC,CAA4CL,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACAoH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCyG,gBAApC,CAAqDxI,KAArD;;AAEA,UAAIzB,QAAQ,CAAC2J,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DsI,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC4G,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC6G,OAApC,CAA4C,YAA5C;AACD,OAHD,MAGO,IAAIrK,QAAQ,CAAC2J,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEsI,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC4G,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC6G,OAApC,CAA4C,gBAA5C;AACD;;AAEDT,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCkH,UAApC,CAA+Cf,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BuQ,MAA7E;AACApI,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCmH,YAApC,CAAiDhB,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8B0I,aAA9B,CAA4CxI,MAA7F;AAEA,UAAIgI,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8B0I,aAA9B,CAA4CxI,MAA5C,IAAsD,CAA1D,EAA6DiI,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCyO,wBAApC,CAA6D,KAA7D,EAA7D,KACKrI,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCyO,wBAApC,CAA6D,IAA7D;AAELlhB,MAAAA,mBAAmB,CAAC+T,IAApB,CAAyB8E,IAAzB;AACD;AACF,GA3zD8B;AA6zD/BsI,EAAAA,yCA7zD+B,qDA6zDW9C,MA7zDX,EA6zD2B;AAAA,QAAhBA,MAAgB;AAAhBA,MAAAA,MAAgB,GAAP,KAAO;AAAA;;AACxD,SAAK2C,yBAAL;;AACA,QAAIrI,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AACA,QAAIqD,SAAS,GAAGD,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,CAAhB;;AAEA,QAAI,CAAC+H,MAAL,EAAa;AACX,WAAK/T,mBAAL,CAAyBnF,UAAzB,CAAoChB,MAApC,GAA6C,UAA7C;AACA,WAAKmG,mBAAL,CAAyBxE,SAAzB,CAAmC3B,MAAnC,GAA4CwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsClH,IAAlF;AACA,WAAK9E,mBAAL,CAAyBvE,eAAzB,CAAyC5B,MAAzC,GAAkDwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjO,UAAxF;AACA,WAAKiC,mBAAL,CAAyBtE,kBAAzB,CAA4C7B,MAA5C,GAAqD,wBAAwBwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjE,YAAtC,CAAmDzB,MAAhI;AACD;;AAED,SAAK,IAAIF,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGkI,SAAS,CAACvG,YAAV,CAAuBzB,MAAnD,EAA2DF,KAAK,EAAhE,EAAoE;AAClE,UAAImI,IAAI,GAAGrX,EAAE,CAACsX,WAAH,CAAe,KAAKxO,mBAAL,CAAyBnE,0BAAxC,CAAX;AACA0S,MAAAA,IAAI,CAACE,MAAL,GAAc,KAAKzO,mBAAL,CAAyBrE,iBAAvC;AACA4S,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCzG,eAApC;AACA6M,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCuG,OAApC,CAA4CJ,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BiB,YAA1E;AACAkH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCwG,OAApC,CAA4CL,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACAoH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCwG,OAApC,CAA4CL,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8Be,uBAA1E;AACAoH,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCyG,gBAApC,CAAqDxI,KAArD;;AAEA,UAAIzB,QAAQ,CAAC2J,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AAC7DsI,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC4G,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC6G,OAApC,CAA4C,YAA5C;AACD,OAHD,MAGO,IAAIrK,QAAQ,CAAC2J,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BH,YAA/B,CAAR,IAAwD,CAA5D,EAA+D;AACpEsI,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC4G,eAApC,CAAoD,CAApD;AACAR,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC6G,OAApC,CAA4C,gBAA5C;AACD;;AAEDT,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCkH,UAApC,CAA+Cf,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8BuQ,MAA7E;AACApI,MAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoCmH,YAApC,CAAiDhB,SAAS,CAACvG,YAAV,CAAuB3B,KAAvB,EAA8B0I,aAA9B,CAA4CxI,MAA7F;;AAEA,UAAIyN,MAAJ,EAAY;AACVxF,QAAAA,IAAI,CAACpG,YAAL,CAAkB,gBAAlB,EAAoC2O,uBAApC;AACA;AACD,OAvBiE,CAwBlE;AACA;AACA;AACA;;;AAEAphB,MAAAA,mBAAmB,CAAC+T,IAApB,CAAyB8E,IAAzB;AACD;AACF,GAz2D8B;AA02D/BmI,EAAAA,yBA12D+B,uCA02DH;AAC1B,SAAK,IAAItQ,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG1Q,mBAAmB,CAAC4Q,MAAhD,EAAwDF,KAAK,EAA7D,EAAiE;AAC/D1Q,MAAAA,mBAAmB,CAAC0Q,KAAD,CAAnB,CAA2B4J,OAA3B;AACD;;AAEDta,IAAAA,mBAAmB,GAAG,EAAtB;AACD,GAh3D8B;AAk3D/BigB,EAAAA,qCAl3D+B,iDAk3DOoB,WAl3DP,EAk3D4B;AAAA,QAArBA,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AACzD,QAAIA,WAAJ,EAAiB;AACf,WAAK/W,mBAAL,CAAyBlE,UAAzB,CAAoCiH,MAApC,GAA6C,KAA7C;AACA,WAAK/C,mBAAL,CAAyBjE,kBAAzB,CAA4CgH,MAA5C,GAAqD,IAArD;AACD,KAHD,MAGO;AACL,WAAK/C,mBAAL,CAAyBlE,UAAzB,CAAoCiH,MAApC,GAA6C,IAA7C;AACA,WAAK/C,mBAAL,CAAyBjE,kBAAzB,CAA4CgH,MAA5C,GAAqD,KAArD;AACD;;AACD,SAAKyT,4CAAL,CAAkD,IAAlD;AACA,SAAKC,iCAAL;AACD,GA53D8B;AA83D/BO,EAAAA,qDA93D+B,iEA83DuBD,WA93DvB,EA83D4ChD,MA93D5C,EA83D4D;AAAA,QAArCgD,WAAqC;AAArCA,MAAAA,WAAqC,GAAvB,KAAuB;AAAA;;AAAA,QAAhBhD,MAAgB;AAAhBA,MAAAA,MAAgB,GAAP,KAAO;AAAA;;AACzF,QAAIgD,WAAJ,EAAiB;AACf,WAAK/W,mBAAL,CAAyBlE,UAAzB,CAAoCiH,MAApC,GAA6C,KAA7C;AACA,WAAK/C,mBAAL,CAAyBjE,kBAAzB,CAA4CgH,MAA5C,GAAqD,IAArD;AACD,KAHD,MAGO;AACL,WAAK/C,mBAAL,CAAyBlE,UAAzB,CAAoCiH,MAApC,GAA6C,IAA7C;AACA,WAAK/C,mBAAL,CAAyBjE,kBAAzB,CAA4CgH,MAA5C,GAAqD,KAArD;AACD;;AAED,QAAI,CAACgR,MAAL,EAAa,KAAKyC,4CAAL,CAAkD,IAAlD;AAEb,SAAKK,yCAAL,CAA+C9C,MAA/C;AACD,GA14D8B;AA44D/BkD,EAAAA,mCA54D+B,iDA44DO;AACpC,SAAKP,yBAAL;AACA,SAAKF,4CAAL,CAAkD,KAAlD;AACD,GA/4D8B;AAi5D/BU,EAAAA,gDAj5D+B,8DAi5DoB;AACjD,SAAKR,yBAAL;AACA,SAAKF,4CAAL,CAAkD,KAAlD;AACA/gB,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD,GAr5D8B;AAu5D/B;AAEA;AACAsM,EAAAA,gCA15D+B,4CA05DErU,MA15DF,EA05DU;AACvC,SAAKjC,YAAL,CAAkBkC,MAAlB,GAA2BD,MAA3B;AACD,GA55D8B;AA85D/BsU,EAAAA,0BA95D+B,sCA85DJL,WA95DI,EA85DiB;AAAA,QAArBA,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AAC9C,SAAK1U,iBAAL;AACA,SAAK8U,gCAAL,CAAsC,IAAtC;AACA,SAAKE,yBAAL,CAA+BN,WAA/B;AACD,GAl6D8B;AAm6D/BM,EAAAA,yBAn6D+B,qCAm6DLN,WAn6DK,EAm6DQ;AACrC,QAAI1I,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AAEA,SAAKhL,aAAL,CAAmBpF,UAAnB,CAA8BhB,MAA9B,GAAuC,QAAvC;AACA,SAAKoG,aAAL,CAAmBzE,SAAnB,CAA6B3B,MAA7B,GAAsCwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsClH,IAA5E;AACA,SAAK7E,aAAL,CAAmBxE,eAAnB,CAAmC5B,MAAnC,GAA4CwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjO,UAAlF;;AAEA,QAAIgZ,WAAJ,EAAiB;AACf,WAAK9W,aAAL,CAAmBnE,UAAnB,CAA8BiH,MAA9B,GAAuC,KAAvC;AACA,WAAK9C,aAAL,CAAmBlE,kBAAnB,CAAsCgH,MAAtC,GAA+C,IAA/C;AACD,KAHD,MAGO;AACL,WAAK9C,aAAL,CAAmBnE,UAAnB,CAA8BiH,MAA9B,GAAuC,IAAvC;AACA,WAAK9C,aAAL,CAAmBlE,kBAAnB,CAAsCgH,MAAtC,GAA+C,KAA/C;AACD;AACF,GAl7D8B;AAo7D/BuU,EAAAA,wBAp7D+B,sCAo7DJ;AACzB,SAAKH,gCAAL,CAAsC,KAAtC;AACD,GAt7D8B;AAw7D/BI,EAAAA,qCAx7D+B,mDAw7DS;AACtC,SAAKJ,gCAAL,CAAsC,KAAtC;AACA1hB,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD,GA37D8B;AA47D/B;AAEA;AACA2M,EAAAA,sCA/7D+B,kDA+7DQ1U,MA/7DR,EA+7DgB;AAC7C,SAAKhC,eAAL,CAAqBiC,MAArB,GAA8BD,MAA9B;AACD,GAj8D8B;AAm8D/B2U,EAAAA,gCAn8D+B,4CAm8DEV,WAn8DF,EAm8DuB;AAAA,QAArBA,WAAqB;AAArBA,MAAAA,WAAqB,GAAP,KAAO;AAAA;;AACpD,SAAK1U,iBAAL;AACA,SAAKmV,sCAAL,CAA4C,IAA5C;AACA,SAAKE,+BAAL,CAAqCX,WAArC;AACD,GAv8D8B;AAw8D/BW,EAAAA,+BAx8D+B,2CAw8DCX,WAx8DD,EAw8Dc;AAC3C,QAAI1I,QAAQ,GAAG5Y,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,EAAf;;AACA,QAAIoI,YAAY,GAAGvW,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnB;;AAEA,SAAK/K,gBAAL,CAAsBrF,UAAtB,CAAiChB,MAAjC,GAA0C,aAA1C;AACA,SAAKqG,gBAAL,CAAsB1E,SAAtB,CAAgC3B,MAAhC,GAAyCwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsClH,IAA/E;AACA,SAAK5E,gBAAL,CAAsBzE,eAAtB,CAAsC5B,MAAtC,GAA+CwU,QAAQ,CAAChI,cAAT,CAAwB2F,YAAxB,EAAsCjO,UAArF;;AAEA,QAAIgZ,WAAJ,EAAiB;AACf,WAAK7W,gBAAL,CAAsBpE,UAAtB,CAAiCiH,MAAjC,GAA0C,KAA1C;AACA,WAAK7C,gBAAL,CAAsBnE,kBAAtB,CAAyCgH,MAAzC,GAAkD,IAAlD;AACD,KAHD,MAGO;AACL,WAAK7C,gBAAL,CAAsBpE,UAAtB,CAAiCiH,MAAjC,GAA0C,IAA1C;AACA,WAAK7C,gBAAL,CAAsBnE,kBAAtB,CAAyCgH,MAAzC,GAAkD,KAAlD;AACD;AACF,GAv9D8B;AAy9D/B4U,EAAAA,8BAz9D+B,4CAy9DE;AAC/B,SAAKH,sCAAL,CAA4C,KAA5C;AACD,GA39D8B;AA69D/BI,EAAAA,2CA79D+B,yDA69De;AAC5C,SAAKJ,sCAAL,CAA4C,KAA5C;AACA/hB,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD,GAh+D8B;AAi+D/B;AAEA;AACAgN,EAAAA,uCAp+D+B,mDAo+DS/U,MAp+DT,EAo+DiB;AAC9C,SAAK9B,yBAAL,CAA+B+B,MAA/B,GAAwCD,MAAxC;AACD,GAt+D8B;AAw+D/BgV,EAAAA,oCAx+D+B,gDAw+DMhV,MAx+DN,EAw+Dc;AAC3C,SAAK/B,sBAAL,CAA4BgC,MAA5B,GAAqCD,MAArC;AACD,GA1+D8B;AA4+D/BiV,EAAAA,sCA5+D+B,kDA4+DQjV,MA5+DR,EA4+DgB;AAC7C,SAAK3C,kBAAL,CAAwB7C,aAAxB,CAAsCyF,MAAtC,GAA+CD,MAA/C;AACD,GA9+D8B;AAg/D/BkV,EAAAA,mCAh/D+B,+CAg/DKC,OAh/DL,EAg/DcC,WAh/Dd,EAg/D2B9K,WAh/D3B,EAg/DwC+K,UAh/DxC,EAg/DwD;AAAA,QAAhBA,UAAgB;AAAhBA,MAAAA,UAAgB,GAAH,CAAG;AAAA;;AACrF,SAAKhY,kBAAL,CAAwBtF,UAAxB,CAAmChB,MAAnC,GAA4C,cAA5C;AACA,SAAKsG,kBAAL,CAAwB3E,SAAxB,CAAkC3B,MAAlC,GAA2C,MAAMoe,OAAO,CAACnT,IAAzD;AACA,SAAK3E,kBAAL,CAAwB1E,eAAxB,CAAwC5B,MAAxC,GAAiDoe,OAAO,CAACla,UAAzD;AACA,SAAKoC,kBAAL,CAAwBhD,iBAAxB,CAA0CtD,MAA1C,GAAmD,oBAAoBpE,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEC,MAA1I;;AAEA,QAAI6R,UAAU,IAAI,CAAlB,EAAqB;AACnB,WAAK,IAAI/R,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG8R,WAAW,CAAC5R,MAAxC,EAAgDF,KAAK,EAArD,EAAyD;AACvD,YAAI8R,WAAW,CAAC9R,KAAD,CAAX,CAAmByJ,gBAAnB,CAAoCuI,cAApC,CAAmDC,UAAnD,IAAiE,KAArE,EAA4E;AAC1E;AACA,cAAIJ,OAAO,CAACzR,SAAR,IAAqB0R,WAAW,CAAC9R,KAAD,CAAX,CAAmByJ,gBAAnB,CAAoCC,iBAApC,CAAsDtJ,SAA/E,EAA0F;AACxF,gBAAI+H,IAAI,GAAGrX,EAAE,CAACsX,WAAH,CAAe,KAAKrO,kBAAL,CAAwB/C,aAAvC,CAAX;AACAmR,YAAAA,IAAI,CAACE,MAAL,GAAc,KAAKtO,kBAAL,CAAwB9C,aAAtC;AACAkR,YAAAA,IAAI,CAACpG,YAAL,CAAkB,eAAlB,EAAmCmQ,aAAnC,CAAiDJ,WAAW,CAAC9R,KAAD,CAAX,CAAmByJ,gBAAnB,CAAoCC,iBAApC,CAAsD/R,UAAvG;AACAwQ,YAAAA,IAAI,CAACpG,YAAL,CAAkB,eAAlB,EAAmCoQ,YAAnC,CAAgDL,WAAW,CAAC9R,KAAD,CAAX,CAAmByJ,gBAAnB,CAAoCC,iBAApC,CAAsDtJ,SAAtG;AACA7Q,YAAAA,gBAAgB,CAAC8T,IAAjB,CAAsB8E,IAAtB;AACD;AACF;AACF;AACF,KAbD,MAaO,IAAI4J,UAAU,IAAI,CAAlB,EAAqB;AAC1B;AACA,WAAK,IAAI/R,MAAK,GAAG,CAAjB,EAAoBA,MAAK,GAAG8R,WAAW,CAAC5R,MAAxC,EAAgDF,MAAK,EAArD,EAAyD;AACvD,YAAI6R,OAAO,CAACzR,SAAR,IAAqB0R,WAAW,CAAC9R,MAAD,CAAX,CAAmBI,SAA5C,EAAuD;AACrD,cAAI+H,IAAI,GAAGrX,EAAE,CAACsX,WAAH,CAAe,KAAKrO,kBAAL,CAAwB/C,aAAvC,CAAX;AACAmR,UAAAA,IAAI,CAACE,MAAL,GAAc,KAAKtO,kBAAL,CAAwB9C,aAAtC;AACAkR,UAAAA,IAAI,CAACpG,YAAL,CAAkB,eAAlB,EAAmCmQ,aAAnC,CAAiDJ,WAAW,CAAC9R,MAAD,CAAX,CAAmBrI,UAApE;AACAwQ,UAAAA,IAAI,CAACpG,YAAL,CAAkB,eAAlB,EAAmCoQ,YAAnC,CAAgDL,WAAW,CAAC9R,MAAD,CAAX,CAAmBI,SAAnE;AACA7Q,UAAAA,gBAAgB,CAAC8T,IAAjB,CAAsB8E,IAAtB;AACD;AACF;AACF;;AAED,QAAInB,WAAJ,EAAiB;AACf,WAAKjN,kBAAL,CAAwBrE,UAAxB,CAAmCiH,MAAnC,GAA4C,KAA5C;AACA,WAAK5C,kBAAL,CAAwBpE,kBAAxB,CAA2CgH,MAA3C,GAAoD,IAApD;AACD,KAHD,MAGO;AACL,WAAK5C,kBAAL,CAAwBrE,UAAxB,CAAmCiH,MAAnC,GAA4C,IAA5C;AACA,WAAK5C,kBAAL,CAAwBpE,kBAAxB,CAA2CgH,MAA3C,GAAoD,KAApD;AACD;AACF,GAvhE8B;AAyhE/ByV,EAAAA,mCAzhE+B,iDAyhEO;AACpC,SAAK,IAAIpS,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGzQ,gBAAgB,CAAC2Q,MAA7C,EAAqDF,KAAK,EAA1D,EAA8D;AAC5DzQ,MAAAA,gBAAgB,CAACyQ,KAAD,CAAhB,CAAwB4J,OAAxB;AACD;;AACDra,IAAAA,gBAAgB,GAAG,EAAnB;AACD,GA9hE8B;AAgiE/B8iB,EAAAA,uBAhiE+B,qCAgiEL;AACxB,SAAKX,oCAAL,CAA0C,KAA1C;AACD,GAliE8B;AAoiE/BY,EAAAA,oCApiE+B,kDAoiEQ;AACrC,SAAKZ,oCAAL,CAA0C,KAA1C;AACAriB,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDiH,gBAApD;AACD,GAviE8B;AAyiE/B8N,EAAAA,sCAziE+B,kDAyiEQC,SAziER,EAyiEmB;AAChD,QAAIX,OAAO,GAAGxiB,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8DsG,WAA9D,GAA4E+F,gBAA5E,CAA6FC,iBAA3G;AACA,SAAK3P,kBAAL,CAAwB5C,kBAAxB,CAA2C1D,MAA3C,GAAoD,cAApD;AACA,SAAKsG,kBAAL,CAAwB3C,iBAAxB,CAA0C3D,MAA1C,GAAmD,MAAMoe,OAAO,CAACnT,IAAjE;AACA,SAAK3E,kBAAL,CAAwB1C,uBAAxB,CAAgD5D,MAAhD,GAAyDoe,OAAO,CAACla,UAAjE;AACA,SAAKoC,kBAAL,CAAwBzC,qBAAxB,CAA8C7D,MAA9C,GAAuD,yBAAyB+e,SAAzB,GAAqC,IAArC,GAA4C,IAA5C,GAAmD,uEAA1G;AACD,GA/iE8B;AAgjE/B;AAEA1T,EAAAA,SAAS,EAAE,mBAAU2T,OAAV,EAAmBC,IAAnB,EAA4CC,UAA5C,EAA+D;AAAA;;AAAA,QAA5CD,IAA4C;AAA5CA,MAAAA,IAA4C,GAArChiB,gBAAqC;AAAA;;AAAA,QAAnBiiB,UAAmB;AAAnBA,MAAAA,UAAmB,GAAN,IAAM;AAAA;;AACxE,SAAKzY,OAAL,CAAayC,MAAb,GAAsB,IAAtB;AACA,SAAKxC,YAAL,CAAkB1G,MAAlB,GAA2Bgf,OAA3B;AACA,QAAIG,SAAS,GAAG,IAAhB;AACA,QAAIC,IAAI,GAAGxjB,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8D2F,eAA9D,EAAX;;AAEA,QAAI8P,IAAI,IAAI,CAAZ,EAAe;AACb;AACA,UAAIxjB,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmEC,MAAnE,GAA4E,CAA5E,IAAiF7Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDyC,cAApD,CAAmE5Q,wBAAwB,CAAC8N,QAAzB,CAAkCK,eAAlC,GAAoDqH,aAApD,EAAnE,EAAwIU,KAA7N,EAAoO;AAClO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAKnL,aAAL,CAAmBuC,MAAnB,GAA4B,KAA5B;AACAY,QAAAA,UAAU,CAAC,YAAY;AACrBqV,UAAAA,SAAS,CAAC1Y,OAAV,CAAkByC,MAAlB,GAA2B,KAA3B;AACD,SAFS,EAEP+V,IAFO,CAAV,CAVkO,CAalO;AACD,OAdD,MAcO;AACL,YAAIC,UAAJ,EAAgB;AACd,eAAKvY,aAAL,CAAmBuC,MAAnB,GAA4B,IAA5B;AACAmW,UAAAA,YAAY,CAACviB,UAAD,CAAZ;AACAA,UAAAA,UAAU,GAAGgN,UAAU,CAAC,YAAM;AAC5B,YAAA,MAAI,CAACwV,aAAL;AACD,WAFsB,EAEpBviB,oBAFoB,CAAvB;AAGD,SAND,MAMO;AACL,eAAK4J,aAAL,CAAmBuC,MAAnB,GAA4B,KAA5B;AACAY,UAAAA,UAAU,CAAC,YAAY;AACrBqV,YAAAA,SAAS,CAAC1Y,OAAV,CAAkByC,MAAlB,GAA2B,KAA3B;AACD,WAFS,EAEP+V,IAFO,CAAV;AAGD;AACF;AACF,KA9BD,CA8BE;AA9BF,SA+BK;AACH,YAAIC,UAAJ,EAAgB;AACd,eAAKvY,aAAL,CAAmBuC,MAAnB,GAA4B,IAA5B;AACAmW,UAAAA,YAAY,CAACviB,UAAD,CAAZ;AACAA,UAAAA,UAAU,GAAGgN,UAAU,CAAC,YAAM;AAC5B,YAAA,MAAI,CAACwV,aAAL;AACD,WAFsB,EAEpBviB,oBAFoB,CAAvB;AAGD,SAND,MAMO;AACL,eAAK4J,aAAL,CAAmBuC,MAAnB,GAA4B,KAA5B;AACAY,UAAAA,UAAU,CAAC,YAAY;AACrBqV,YAAAA,SAAS,CAAC1Y,OAAV,CAAkByC,MAAlB,GAA2B,KAA3B;AACD,WAFS,EAEP+V,IAFO,CAAV;AAGD;AACF;AACF,GArmE8B;AAumE/BK,EAAAA,aAvmE+B,2BAumEf;AACdhW,IAAAA,OAAO,CAACoI,KAAR,CAAc,uBAAd;AACA,SAAKjL,OAAL,CAAayC,MAAb,GAAsB,KAAtB;AACAmW,IAAAA,YAAY,CAACviB,UAAD,CAAZ;AACD,GA3mE8B;AA6mE/ByiB,EAAAA,gBAAgB,EAAE,0BAAUC,OAAV,EAAmBpQ,KAAnB,EAA0B;AAC1C,SAAK5I,aAAL,CAAmB9B,YAAnB,CAAgCwE,MAAhC,GAAyC,IAAzC;AACA,SAAK1C,aAAL,CAAmB7B,WAAnB,CAA+B3E,MAA/B,GAAwCwf,OAAxC;AACA,SAAKhZ,aAAL,CAAmB5B,SAAnB,CAA6B5E,MAA7B,GAAsCoP,KAAtC;AACD,GAjnE8B;AAmnE/BqQ,EAAAA,cAnnE+B,4BAmnEd;AACf7jB,IAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8D+V,WAA9D;AACD,GArnE8B;AAunE/BtG,EAAAA,oBAvnE+B,gCAunEVuG,SAvnEU,EAunEC;AAC9B,QAAItQ,KAAK,GAAGzT,wBAAwB,CAAC8N,QAAzB,CAAkCC,yBAAlC,GAA8D2F,eAA9D,EAAZ;;AAEA,QAAID,KAAK,IAAI,CAAb,EAAgB;AACd;AACA,UAAID,KAAK,GAAG;AAAEoN,QAAAA,IAAI,EAAEmD;AAAR,OAAZ;AACA/jB,MAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCQ,0BAAlC,GAA+D2F,UAA/D,CAA0E,EAA1E,EAA8ET,KAA9E;AACD,KAJD,MAIO,IAAIC,KAAK,IAAI,CAAb,EAAgB;AACrB;AACA,UAAI,KAAKnH,SAAT,EAAoB;AAClB,YAAIkH,KAAK,GAAG;AAAEoN,UAAAA,IAAI,EAAEmD;AAAR,SAAZ;AACA/jB,QAAAA,wBAAwB,CAAC8N,QAAzB,CAAkCQ,0BAAlC,GAA+D2F,UAA/D,CAA0E,EAA1E,EAA8ET,KAA9E;AACD;AACF;AACF;AAroE8B,CAAT,CAAxB","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager = null;\r\nvar businessDetailNodes = [];\r\nvar oneQuestionNodes = [];\r\nvar businessDetailPartnershipNodes = [];\r\nvar PartnerShipData = null;\r\nvar PartnerShipOfferReceived = false;\r\nvar CancelledID = [];\r\nvar StartGameCash = 20000;\r\nvar SelectedBusinessPayDay = false;\r\nvar HMAmount = 0;\r\nvar BMAmount = 0;\r\nvar BMLocations = 0;\r\nvar SelectedBusinessIndex = 0;\r\nvar TurnOverForInvest = false;\r\nvar BusinessSetupCardFunctionality = false;\r\nvar GivenCashBusiness = 0;\r\nvar StartAnyBusinessWithoutCash = false;\r\nvar PreviousCash = 0;\r\nvar TimeoutRef;\r\nvar CompletionWindowTime = 8000;\r\nvar LongMessageTime = 5000;\r\nvar ShortMessageTime = 2500;\r\n\r\nvar PayDayInfo = \"\";\r\nvar InvestSellInfo = \"\";\r\n\r\n// var CompletionWindowTime = 500;//8000\r\n// var LongMessageTime = 250;//5000\r\n// var ShortMessageTime = 50;//2500\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n  None: 0,\r\n  TenThousand: 10000,\r\n  TentyThousand: 20000,\r\n  ThirtyThousand: 30000,\r\n  FortyThousand: 40000,\r\n  FiftyThousand: 50000,\r\n  Other: 6,\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI = cc.Class({\r\n  name: \"BusinessSetupUI\",\r\n\r\n  properties: {\r\n    PlayerNameUI: {\r\n      displayName: \"PlayerNameUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player name\",\r\n    },\r\n    PlayerCashUI: {\r\n      displayName: \"PlayerCashUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player cash\",\r\n    },\r\n    BusinessTypeTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business type\",\r\n    },\r\n    BusinessNameTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business name\",\r\n    },\r\n    BusinessTypeLabel: {\r\n      displayName: \"BusinessTypeLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"reference for business type editbox\",\r\n    },\r\n    BusinessNameLabel: {\r\n      displayName: \"BusinessNameLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"referece for business name editbox\",\r\n    },\r\n    HomeBasedNodeUI: {\r\n      displayName: \"HomeBasedNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for home based business\",\r\n    },\r\n    BrickAndMortarNodeUI: {\r\n      displayName: \"BrickAndMortarNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for brick and mortar business\",\r\n    },\r\n    TimerUI: {\r\n      displayName: \"TimerUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the label for timer\",\r\n    },\r\n    TimerNode: {\r\n      displayName: \"TimerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for timer node in business setup\",\r\n    },\r\n    BusinessSetupNode: {\r\n      displayName: \"BusinessSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for business setup\",\r\n    },\r\n    LoanSetupNode: {\r\n      displayName: \"LoanSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for loan setup\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: LoanAmountEnum,\r\n      default: LoanAmountEnum.None,\r\n      serializable: true,\r\n      tooltip: \"loan amount taken by player (state machine)\",\r\n    },\r\n    LoanAmountLabel: {\r\n      displayName: \"LoanAmountLabel\",\r\n      type: [cc.Node],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Reference for all labels of amounts in loan UI\",\r\n    },\r\n    WaitingStatusNode: {\r\n      displayName: \"WaitingStatusNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for waiting status screen on initial business setup\",\r\n    },\r\n    ExitButtonNode: {\r\n      displayName: \"ExitButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for exit button node in business setup\",\r\n    },\r\n    AddButtonNode: {\r\n      displayName: \"AddButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for Add Cash button node in business setup\",\r\n    },\r\n    AddCashScreen: {\r\n      displayName: \"AddCashScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCashScreen node in business setup\",\r\n    },\r\n    AddCashLabel: {\r\n      displayName: \"AddCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCash label in business setup\",\r\n    },\r\n    AddCashEditBox: {\r\n      displayName: \"AddCashEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for AddCash editBox in business setup\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor//\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI = cc.Class({\r\n  name: \"TurnDecisionSetupUI\",\r\n\r\n  properties: {\r\n    MarketingEditBox: {\r\n      displayName: \"MarketingEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of marketing node\",\r\n    },\r\n    GoldEditBox: {\r\n      displayName: \"GoldEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest gold node\",\r\n    },\r\n    StockEditBox: {\r\n      displayName: \"StockEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest stock node\",\r\n    },\r\n    CashAmountLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to cash node\",\r\n    },\r\n    ExpandBusinessNode: {\r\n      displayName: \"ExpandBusinessNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for expnad business node\",\r\n    },\r\n    ExpandBusinessScrollContent: {\r\n      displayName: \"ExpandBusinessScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for content node of scroll view of expand business node\",\r\n    },\r\n    ExpandBusinessPrefab: {\r\n      displayName: \"ExpandBusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for prefab of expand business node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n  None: 0,\r\n  StockInvest: 1,\r\n  GoldInvest: 2,\r\n  StockSell: 3,\r\n  GoldSell: 4,\r\n  Other: 5,\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI = cc.Class({\r\n  name: \"InvestSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of invest&sell node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Dice Result of invest&sell node\",\r\n    },\r\n    PriceTitleLabel: {\r\n      displayName: \"PriceTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price Title of invest&sell node\",\r\n    },\r\n    PriceValueLabel: {\r\n      displayName: \"PriceValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price value of invest&sell node\",\r\n    },\r\n    BuyOrSellTitleLabel: {\r\n      displayName: \"BuyOrSellTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BuyOrSell Title of invest&sell node\",\r\n    },\r\n    TotalAmountTitleLabel: {\r\n      displayName: \"TotalAmountTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount Title of invest&sell node\",\r\n    },\r\n    TotalAmountValueLabel: {\r\n      displayName: \"TotalAmountValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount Value of invest&sell node\",\r\n    },\r\n    ButtonNameLabel: {\r\n      displayName: \"ButtonName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of button name of invest&sell node\",\r\n    },\r\n    InvestState: {\r\n      displayName: \"InvestState\",\r\n      type: InvestEnum,\r\n      default: InvestEnum.None,\r\n      serializable: true,\r\n    },\r\n    AmountEditBox: {\r\n      displayName: \"AmountEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI = cc.Class({\r\n  name: \"SellBusinessUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessSellPrefab: {\r\n      displayName: \"BusinessSellPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessSellPrefab of Sell node\",\r\n    },\r\n    BusinessManipulationPrefab: {\r\n      displayName: \"BusinessManipulationPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessManipulationPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI = cc.Class({\r\n  name: \"PayDayUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of PayDay node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of PayDay node\",\r\n    },\r\n    HomeBasedNumberLabel: {\r\n      displayName: \"HomeBasedNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedNumber node\",\r\n    },\r\n    BMNumberLabel: {\r\n      displayName: \"BrickMortarNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarNumber node\",\r\n    },\r\n    BMNumberLocationLabel: {\r\n      displayName: \"BrickMortarLocations\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarLocations node\",\r\n    },\r\n    PassedPayDayCountLabel: {\r\n      displayName: \"PassedPayDayCountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of PassedPayDayCountLabel node\",\r\n    },\r\n    HomeBasedBtn: {\r\n      displayName: \"HomeBasedBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedBtn node\",\r\n    },\r\n    BMBtn: {\r\n      displayName: \"BrickMortarBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarBtn node\",\r\n    },\r\n    LoanBtn: {\r\n      displayName: \"LoanBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanBtn node\",\r\n    },\r\n    MainPanelNode: {\r\n      displayName: \"MainPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of MainPanel node\",\r\n    },\r\n    ResultPanelNode: {\r\n      displayName: \"ResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultPanel node\",\r\n    },\r\n    LoanResultPanelNode: {\r\n      displayName: \"LoanResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanResultPanelNode node\",\r\n    },\r\n    ResultScreenTitleLabel: {\r\n      displayName: \"ResultScreenTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultScreenTitle node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of DiceResult node\",\r\n    },\r\n    TotalBusinessLabel: {\r\n      displayName: \"TotalBusinessLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalBusiness node\",\r\n    },\r\n    TotalAmountLabel: {\r\n      displayName: \"TotalAmountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount node\",\r\n    },\r\n    SkipLoanButton: {\r\n      displayName: \"SkipLoanButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of SkipLoanButton node\",\r\n    },\r\n    LoanFotterLabel: {\r\n      displayName: \"LoanFotterLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanFotterLabel node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI = cc.Class({\r\n  name: \"InvestUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Invest node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Invest node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Invest node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Invest node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Invest node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI = cc.Class({\r\n  name: \"BuyOrSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of BuyOrSell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of BuyOrSell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of BuyOrSell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of BuyOrSell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI = cc.Class({\r\n  name: \"OneQuestionUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n    WaitingScreen: {\r\n      displayName: \"WaitingScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreen of OneQuestion node\",\r\n    },\r\n    DecisionTitleLabel: {\r\n      displayName: \"DecisionTitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    DecisionCashLabel: {\r\n      displayName: \"DecisionCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    DecisionPlayerNameLabel: {\r\n      displayName: \"DecisionPlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DecisionQuestionLabel: {\r\n      displayName: \"DecisionQuestionLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player question of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PartnershipUI-------------------------//\r\nvar PartnershipUI = cc.Class({\r\n  name: \"PartnershipUI\",\r\n  properties: {\r\n    WaitingStatusScreen: {\r\n      displayName: \"WaitingStatusScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the waiting screen node of partnership ui\",\r\n    },\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PartnerShipPrefab: {\r\n      displayName: \"PartnerShipPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerName: {\r\n      displayName: \"DecisionPlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerCash: {\r\n      displayName: \"DecisionPlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionDescription: {\r\n      displayName: \"DecisionDescription\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for ResultUI-------------------------//\r\nvar ResultUI = cc.Class({\r\n  name: \"ResultUI\",\r\n  properties: {\r\n    ResultScreen: {\r\n      displayName: \"ResultScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    StatusLabel: {\r\n      displayName: \"StatusLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    BodyLabel: {\r\n      displayName: \"BodyLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount = \"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount = \"\";\r\nvar EnterBuySellAmount = \"\";\r\nvar StockBusinessName = \"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName = \"\";\r\n\r\nvar HomeBasedPaymentCompleted = false;\r\nvar BrickMortarPaymentCompleted = false;\r\nvar LoanPayed = false;\r\nvar TotalPayDayAmount = 0;\r\nvar DoublePayDay = false;\r\n\r\nvar GameplayUIManager = cc.Class({\r\n  name: \"GameplayUIManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    BusinessSetupData: {\r\n      default: null,\r\n      type: BusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessSetupUI class\",\r\n    },\r\n    TurnDecisionSetupUI: {\r\n      default: null,\r\n      type: TurnDecisionSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of TurnDecisionSetupUI class\",\r\n    },\r\n    InvestSellSetupUI: {\r\n      default: null,\r\n      type: InvestSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    PayDaySetupUI: {\r\n      default: null,\r\n      type: PayDayUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    SellBusinessSetupUI: {\r\n      default: {},\r\n      type: SellBusinessUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SellBusinessUI class\",\r\n    },\r\n    InvestSetupUI: {\r\n      default: {},\r\n      type: InvestUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestUI class\",\r\n    },\r\n    BuyOrSellSetupUI: {\r\n      default: {},\r\n      type: BuyOrSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyOrSellUI class\",\r\n    },\r\n    OneQuestionSetupUI: {\r\n      default: {},\r\n      type: OneQuestionUI,\r\n      serializable: true,\r\n      tooltip: \"reference of OneQuestionUI class\",\r\n    },\r\n    PartnershipSetupUI: {\r\n      default: {},\r\n      type: PartnershipUI,\r\n      serializable: true,\r\n      tooltip: \"reference of PartnershipUI class\",\r\n    },\r\n    ResultSetupUI: {\r\n      default: {},\r\n      type: ResultUI,\r\n      serializable: true,\r\n      tooltip: \"reference of ResultUI class\",\r\n    },\r\n    PopUpUI: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    PopUpUILabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for pop up screen\",\r\n    },\r\n    PopUpUIButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    BusinessSetupNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for business setup screen\",\r\n    },\r\n    GameplayUIScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for gameplay ui screen\",\r\n    },\r\n    DecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Decision screen\",\r\n    },\r\n    InvestSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest & sell screen\",\r\n    },\r\n    PayDayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for PayDay screen\",\r\n    },\r\n    SellBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellBusiness screen\",\r\n    },\r\n    InvestScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest screen\",\r\n    },\r\n    BuyOrSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BuyOrSell screen\",\r\n    },\r\n    OneQuestionSpaceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionSpace screen\",\r\n    },\r\n    OneQuestionDecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionDecision screen\",\r\n    },\r\n    InsufficientBalanceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for InsufficientBalanceScreen screen\",\r\n    },\r\n    TempDiceText: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for dice\",\r\n    },\r\n    LeaveRoomButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n    AvatarSprites: {\r\n      default: [],\r\n      type: cc.SpriteFrame,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  ResetAllData() {\r\n    GameManager = null;\r\n    GamePlayReferenceManager = null;\r\n    businessDetailNodes = [];\r\n    oneQuestionNodes = [];\r\n    businessDetailPartnershipNodes = [];\r\n    PartnerShipData = null;\r\n    PartnerShipOfferReceived = false;\r\n    CancelledID = [];\r\n    SelectedBusinessPayDay = false;\r\n    HMAmount = 0;\r\n    BMAmount = 0;\r\n    BMLocations = 0;\r\n    SelectedBusinessIndex = 0;\r\n    TurnOverForInvest = false;\r\n    BusinessSetupCardFunctionality = false;\r\n    GivenCashBusiness = 0;\r\n    StartAnyBusinessWithoutCash = false;\r\n    PreviousCash = 0;\r\n    TimeoutRef = null;\r\n\r\n    InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n    //turn decisions\r\n    TempMarketingAmount = \"\";\r\n    TempHiringLawyer;\r\n\r\n    //buyorsell\r\n    GoldCashAmount = \"\";\r\n    EnterBuySellAmount = \"\";\r\n    StockBusinessName = \"\";\r\n    DiceResult = 0;\r\n    OnceOrShare;\r\n    LocationName = \"\";\r\n\r\n    HomeBasedPaymentCompleted = false;\r\n    BrickMortarPaymentCompleted = false;\r\n    LoanPayed = false;\r\n    TotalPayDayAmount = 0;\r\n    DoublePayDay = false;\r\n\r\n    HBDiceCounter = 0;\r\n    BMDiceCounter = 0;\r\n    PayDayInfo = \"\";\r\n    InvestSellInfo = \"\";\r\n  },\r\n\r\n  onLoad() {\r\n    this.ResetAllData();\r\n    this.CheckReferences();\r\n\r\n    //local variables\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n    this.IsBotTurn = false;\r\n    this.PayDayCount = 0;\r\n    this.DoublePayDayCount = 0;\r\n    this.IsBankrupted = false;\r\n    this.BankruptedAmount = 0;\r\n    this.AddCashAmount = \"\";\r\n  },\r\n\r\n  ResetTurnVariable() {\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null) GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n\r\n    if (!GameManager || GameManager == null) GameManager = require(\"GameManager\");\r\n  },\r\n\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  ToggleScreen_InsufficientBalance(_state) {\r\n    this.InsufficientBalanceScreen.active = _state;\r\n  },\r\n\r\n  Exit___InsufficientBalance() {\r\n    this.ToggleScreen_InsufficientBalance(false);\r\n  },\r\n  //#region Spectate UI Setup\r\n  InitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = true;\r\n  },\r\n\r\n  CloseInitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = false;\r\n    console.trace(\"closedddddddddddddddddddddddddddddddddddd\");\r\n  },\r\n\r\n  ToggleLeaveRoomButton_SpectateModeUI(_state) {\r\n    this.LeaveRoomButton.active = _state;\r\n  },\r\n\r\n  OnLeaveButtonClicked_SpectateModeUI() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(true);\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"MainMenu\");\r\n    }, 500);\r\n  },\r\n  //#endregion\r\n\r\n  //#region BusinessSetup with loan\r\n  //Business setup ui//------------------------\r\n  ToggleCashAddScreen_BusinessSetup: function (_state) {\r\n    this.BusinessSetupData.AddCashScreen.active = _state;\r\n  },\r\n\r\n  EnableCashAdd_BusinessSetup: function () {\r\n    this.BusinessSetupData.AddCashEditBox.string = \"\";\r\n    this.AddCashAmount = \"\";\r\n    this.ToggleCashAddScreen_BusinessSetup(true);\r\n    this.BusinessSetupData.AddCashLabel.string = GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash;\r\n  },\r\n\r\n  OnCashAdd_BusinessSetup: function (_val) {\r\n    this.AddCashAmount = _val;\r\n  },\r\n\r\n  OnClickDoneCashAdd_BusinessSetup: function () {\r\n    this.ToggleCashAddScreen_BusinessSetup(false);\r\n    var _gamecash = parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash);\r\n    var _amount = parseInt(this.AddCashAmount);\r\n    if (this.AddCashAmount != null && this.AddCashAmount != \"\" && this.AddCashAmount != undefined) {\r\n      if (_amount <= _gamecash) {\r\n        PlayerDataIntance.Cash += _amount;\r\n        console.log(PlayerDataIntance.Cash);\r\n        this.BusinessSetupData.PlayerCashUI.string = PlayerDataIntance.Cash.toString();\r\n        _gamecash -= _amount;\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash = _gamecash.toString();\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().UpdateUserData(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.gameCash, -1, -1);\r\n\r\n        this.ShowToast(\"Cash $\" + this.AddCashAmount + \" has been added.\");\r\n        this.BusinessSetupData.AddCashEditBox.string = \"\";\r\n        this.AddCashAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you do not have enough in game cash.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  StartNewBusiness_BusinessSetup: function (isFirstTime, insideGame = false, modeIndex = 0, _isBankrupted = false, _BankruptAmount = 0, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    //called first time form GameManager onload function\r\n    this.CheckReferences();\r\n    this.BusinessSetupNode.active = true;\r\n\r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.IsBankrupted = _isBankrupted;\r\n    this.BankruptedAmount = _BankruptAmount;\r\n\r\n    if (_isBankrupted) this.ResetTurnVariable();\r\n\r\n    this.Init_BusinessSetup(isFirstTime, insideGame, modeIndex, _isBankrupted);\r\n  },\r\n  Init_BusinessSetup: function (isFirstTime, insideGame = false, modeIndex = 0, _isBankrupted = false) {\r\n    PlayerDataIntance = new GameManager.PlayerData();\r\n    PlayerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n    PlayerBusinessDataIntance = new GameManager.BusinessInfo();\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n    this.BusinessSetupData.AddButtonNode.active = false;\r\n\r\n    if (isFirstTime) {\r\n      this.BusinessSetupData.ExitButtonNode.active = false;\r\n      this.BusinessSetupData.TimerNode.active = true;\r\n      PlayerDataIntance.Cash = StartGameCash;\r\n      this.BusinessSetupData.AddButtonNode.active = true;\r\n    }\r\n\r\n    this.ResetButtonStates_BusinessSetup();\r\n\r\n    if (insideGame) {\r\n      this.BusinessSetupData.ExitButtonNode.active = true;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n\r\n      for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; index++) {\r\n        if (GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID == GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID) {\r\n          InsideGameBusinessSetup = index;\r\n          PlayerDataIntance = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n          if (BusinessSetupCardFunctionality) {\r\n            if (StartAnyBusinessWithoutCash) {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = 0;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n              this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n            } else {\r\n              PreviousCash = PlayerDataIntance.Cash;\r\n              PlayerDataIntance.Cash = GivenCashBusiness;\r\n              this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n              this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n              this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n              this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n            }\r\n          } else {\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n            this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);\r\n            this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].AvatarID));\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      InsideGameBusinessSetup = -1;\r\n      this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n      this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n      this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n      this.OnChangAvatarID_BusinessSetup(parseInt(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.avatarId));\r\n    }\r\n  },\r\n  GetObj_BusinessSetup: function () {\r\n    return this.BusinessSetupData;\r\n  },\r\n  OnChangeName_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n    PlayerDataIntance.PlayerName = name;\r\n  },\r\n  OnChangeUID_BusinessSetup: function (UID) {\r\n    PlayerDataIntance.PlayerUID = UID;\r\n  },\r\n  OnChangAvatarID_BusinessSetup: function (UID) {\r\n    if (isNaN(UID) || UID == undefined) UID = 0;\r\n\r\n    PlayerDataIntance.AvatarID = UID;\r\n  },\r\n  OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessTypeTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessTypeDescription = name;\r\n  },\r\n  OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessNameTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessName = name;\r\n  },\r\n  ResetButtonStates_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BusinessTypeLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameTextUI = \"\";\r\n    this.BusinessSetupData.BusinessTypeTextUI = \"\";\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.None;\r\n  },\r\n  OnHomeBasedSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = true;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.HomeBased;\r\n  },\r\n  OnBrickMortarSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = true;\r\n\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.brickAndmortar;\r\n  },\r\n  OnChangeCash_BusinessSetup: function (amount) {\r\n    this.BusinessSetupData.PlayerCashUI.string = amount;\r\n    PlayerDataIntance.Cash = amount;\r\n  },\r\n  CalculateLoan_BusinessSetup: function (amount) {\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    if (!BusinessSetupCardFunctionality) {\r\n      for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n        if (PlayerDataIntance.NoOfBusiness[index].LoanTaken) {\r\n          _loanTaken = true;\r\n          _businessIndex = index;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (_loanTaken) {\r\n        this.ShowToast(\"You have already taken loan of $\" + PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount, LongMessageTime);\r\n      } else {\r\n        if (PlayerDataIntance.Cash >= amount) {\r\n          this.ShowToast(\"You do not need loan, you have enough cash to buy current selected business.\", LongMessageTime);\r\n        } else {\r\n          this.BusinessSetupData.LoanSetupNode.active = true;\r\n          RequiredCash = Math.abs(parseInt(PlayerDataIntance.Cash) - amount);\r\n          this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(cc.Label).string = \"$\" + RequiredCash;\r\n        }\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanButtonClicked_BusinessSetup: function (event) {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar) {\r\n        this.CalculateLoan_BusinessSetup(50000);\r\n      } else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased) {\r\n        this.CalculateLoan_BusinessSetup(10000);\r\n      } else {\r\n        this.ShowToast(\"please select business between Home Based and brick & mortar.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You cannot take loan for current business setup\");\r\n    }\r\n  },\r\n  OnLoanBackButtonClicked_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanSetupNode.active = false;\r\n  },\r\n  HighLightLoanSelection_BusinessSetup: function (index) {\r\n    for (var i = 0; i < this.BusinessSetupData.LoanAmountLabel.length; i++) {\r\n      if (index == i) this.BusinessSetupData.LoanAmountLabel[i].children[0].active = true;\r\n      else this.BusinessSetupData.LoanAmountLabel[i].children[0].active = false;\r\n    }\r\n  },\r\n  OnLoanAmountChoosed_01_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.Other;\r\n    this.HighLightLoanSelection_BusinessSetup(0);\r\n  },\r\n  OnLoanAmountChoosed_02_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TenThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(1);\r\n  },\r\n  OnLoanAmountChoosed_03_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TentyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(2);\r\n  },\r\n  OnLoanAmountChoosed_04_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.ThirtyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(3);\r\n  },\r\n  OnLoanAmountChoosed_05_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FortyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(4);\r\n  },\r\n  OnLoanAmountChoosed_06_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FiftyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(5);\r\n  },\r\n  OnTakenLoanClicked_BusinessSetup: function (event) {\r\n    if (this.BusinessSetupData.LoanAmount == LoanAmountEnum.Other) PlayerBusinessDataIntance.LoanAmount = RequiredCash;\r\n    else PlayerBusinessDataIntance.LoanAmount = parseInt(this.BusinessSetupData.LoanAmount);\r\n\r\n    PlayerBusinessDataIntance.LoanTaken = true;\r\n    this.OnLoanBackButtonClicked_BusinessSetup();\r\n    PlayerDataIntance.Cash = PlayerDataIntance.Cash + PlayerBusinessDataIntance.LoanAmount;\r\n    this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n  },\r\n\r\n  PushDataForPlayerLeft(_data) {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n    if (_mode == 2) {\r\n      _playerDataIntance = new GameManager.PlayerData();\r\n      _playerDataIntance.Cash = 20000;\r\n      _playerDataIntance.PlayerID = _data.userID;\r\n      _playerDataIntance.PlayerName = _data.name;\r\n      _playerDataIntance.AvatarID = 0;\r\n      _playerDataIntance.HomeBasedAmount = 1;\r\n      _playerDataIntance.IsActive = false;\r\n      _playerDataIntance.CardFunctionality = new GameManager.CardDataFunctionality();\r\n      _playerBusinessDataIntance = new GameManager.BusinessInfo();\r\n      _playerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.HomeBased;\r\n      _playerBusinessDataIntance.BusinessTypeDescription = \"Saloon\";\r\n      _playerBusinessDataIntance.BusinessName = \"Eva Beauty\";\r\n      _playerDataIntance.NoOfBusiness.push(_playerBusinessDataIntance);\r\n\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1, _playerDataIntance);\r\n    }\r\n  },\r\n  SyncData: function (_data, _ID, _playerLeft = false) {\r\n    var _isSpectate = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().getCustomProperty(\"RoomEssentials\")[\"IsSpectate\"];\r\n\r\n    if (_isSpectate) {\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetRealActors();\r\n    }\r\n\r\n    if (!_playerLeft) {\r\n      if (_ID != GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr) GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n    }\r\n\r\n    // console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length >= GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers) {\r\n      //setting room property to declare initial setup has been\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"InitialSetup\", true, true);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\", GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo, true);\r\n      this.BusinessSetupData.WaitingStatusNode.active = false;\r\n      this.BusinessSetupNode.active = false;\r\n      this.GameplayUIScreen.active = true;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n      console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n    }\r\n  },\r\n\r\n  PurchaseBusiness: function (_amount, _businessName, _isHomeBased) {\r\n    if (PlayerDataIntance.Cash < _amount && !StartAnyBusinessWithoutCash) {\r\n      this.ShowToast(\"You have not enough cash to buy this \" + _businessName + \" business.\", LongMessageTime);\r\n    } else {\r\n      if (_isHomeBased) {\r\n        if (PlayerDataIntance.HomeBasedAmount < 3) {\r\n          if (!StartAnyBusinessWithoutCash) {\r\n            PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n            this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n          }\r\n\r\n          this.StartGame = true;\r\n          PlayerDataIntance.HomeBasedAmount++;\r\n        } else {\r\n          this.StartGame = false;\r\n          this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n        }\r\n      } else {\r\n        if (!StartAnyBusinessWithoutCash) {\r\n          PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n          this.BusinessSetupData.PlayerCashUI.string = \"$\" + PlayerDataIntance.Cash;\r\n        }\r\n        this.StartGame = true;\r\n        PlayerDataIntance.BrickAndMortarAmount++;\r\n      }\r\n    }\r\n  },\r\n\r\n  Exit_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      this.BusinessSetupNode.active = false;\r\n\r\n      if (PlayerBusinessDataIntance.LoanTaken) {\r\n        PlayerBusinessDataIntance.LoanTaken = false;\r\n        PlayerDataIntance.Cash = PlayerDataIntance.Cash - PlayerBusinessDataIntance.LoanAmount;\r\n        PlayerBusinessDataIntance.LoanAmount = 0;\r\n        this.ShowToast(\"Reverting back loan amount.\");\r\n      }\r\n    } else {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  InitialSetup_BusinessSetup: function () {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (this.IsBankrupted) {\r\n      PlayerDataIntance.IsBankrupt = true;\r\n      PlayerDataIntance.BankruptAmount = this.BankruptedAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()] = PlayerDataIntance;\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n    }\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      //setting player current data in custom properties when his/her turn overs\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n\r\n      if (!this.IsBankrupted) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1, PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n\r\n        var _data = { Data: { bankrupted: true, turn: GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(), PlayerDataMain: PlayerDataIntance } };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(9, _data);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else if (_mode == 1) {\r\n      //for AI\r\n      if (!this.IsBankrupted) {\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n        setTimeout(() => {\r\n          this.BusinessSetupData.WaitingStatusNode.active = false;\r\n          this.BusinessSetupNode.active = false;\r\n          this.GameplayUIScreen.active = true;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n        }, 1600);\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else {\r\n      console.error(\"no mode selected\");\r\n    }\r\n  },\r\n\r\n  StartNewSetup_DuringGame_BusinessSetup: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      this.ToggleDecision_TurnDecision(true);\r\n    } else {\r\n      PlayerDataIntance.Cash = PreviousCash;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup] = PlayerDataIntance;\r\n      this.BusinessSetupNode.active = false;\r\n      InsideGameBusinessSetup = -1;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  PayAmountToPlayGame: function () {\r\n    this.StartGame = false;\r\n\r\n    if (PlayerBusinessDataIntance.BusinessTypeDescription == \"\") this.ShowToast(\"please write a business type.\");\r\n    else if (PlayerBusinessDataIntance.BusinessName == \"\") this.ShowToast(\"please write a business name.\");\r\n    else {\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.None || PlayerBusinessDataIntance.BusinessType == undefined) {\r\n        this.ShowToast(\"please select a business\");\r\n        return;\r\n      }\r\n\r\n      if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.HomeBased)\r\n        //if selected business is homebassed\r\n        this.PurchaseBusiness(10000, \"home\", true);\r\n      else if (PlayerBusinessDataIntance.BusinessType == GameManager.EnumBusinessType.brickAndmortar)\r\n        //if selected business is brick and mortar\r\n        this.PurchaseBusiness(50000, \"brick and mortar\", false);\r\n\r\n      if (this.StartGame == true || this.IsBankrupted == true) {\r\n        PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n        if (InsideGameBusinessSetup != -1) {\r\n          //if start new business has not been called from inside game\r\n          this.StartNewSetup_DuringGame_BusinessSetup();\r\n        }\r\n        //if start new business has been called at start of game as initial setup\r\n        else {\r\n          this.InitialSetup_BusinessSetup();\r\n        }\r\n\r\n        //prtinting all values to console\r\n        for (var i = 0; i < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; i++) {\r\n          console.log(\"player name: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n          console.log(\"player ID: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n          console.log(\"Is player bot: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n          console.log(\"no of business of player (see below): \");\r\n          console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n          console.log(\"player cash: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n          console.log(\"player taken loan: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n          console.log(\"taken loan amount: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region TurnDecisionSetupUI\r\n  //TurnDecisionSetupUI//------------------------\r\n  ToggleDecision_TurnDecision: function (isactive) {\r\n    this.DecisionScreen.active = isactive;\r\n    this.UpdateCash_TurnDecision();\r\n  },\r\n\r\n  UpdateCash_TurnDecision: function () {\r\n    this.TurnDecisionSetupUI.CashAmountLabel.string = \"$ \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].Cash;\r\n  },\r\n\r\n  OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    TempMarketingAmount = amount;\r\n  },\r\n\r\n  OnMarketingAmountSelected_TurnDecision: function () {\r\n    if (TempMarketingAmount == \"\" || TempMarketingAmount == null) {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      this.marketingAmount = parseInt(TempMarketingAmount);\r\n      console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n\r\n      //if player entered amount is greater than total cash he owns\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= this.marketingAmount) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - this.marketingAmount;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount + this.marketingAmount;\r\n        this.ShowToast(\r\n          \"you successfully marketed amount of $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount + \" , remaining cash is $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + \".\",\r\n          LongMessageTime\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you don't have enough money.\");\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      }\r\n    }\r\n  },\r\n\r\n  OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n    // if player has more than 5000$\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus) {\r\n      this.ShowToast(\"you have already hired a lawyer.\");\r\n    } else {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= 5000) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus = true;\r\n        TempHiringLawyer = true;\r\n        console.log(TempHiringLawyer);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - 5000;\r\n        this.ShowToast(\"you have successfully hired a lawyer, remaining cash is $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + \".\", LongMessageTime);\r\n        this.UpdateCash_TurnDecision();\r\n      } else {\r\n        this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  onLocationNameChanged_ExpandBusiness_TurnDecision(_name) {\r\n    LocationName = _name;\r\n  },\r\n  OnExpandButtonClicked_TurnDecision: function (event = null, _isCardFunctionality = false, _GivenCash = 0, _StartAnyBusinessWithoutCash = false) {\r\n    //if player has brick and mortar business he could expand it\r\n    console.log(\"expand business\");\r\n\r\n    BusinessSetupCardFunctionality = _isCardFunctionality;\r\n    GivenCashBusiness = _GivenCash;\r\n    StartAnyBusinessWithoutCash = _StartAnyBusinessWithoutCash;\r\n\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = true;\r\n    var generatedLength = GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision(BusinessSetupCardFunctionality, GivenCashBusiness, StartAnyBusinessWithoutCash);\r\n\r\n    if (generatedLength == 0) {\r\n      this.ShowToast(\"You have no brick and mortar business to expand.\");\r\n      setTimeout(() => {\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      }, 1600);\r\n    }\r\n  },\r\n\r\n  OnExpandButtonExitClicked_TurnDecision: function () {\r\n    if (!BusinessSetupCardFunctionality) {\r\n      this.UpdateCash_TurnDecision();\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n    } else {\r\n      this.CheckReferences();\r\n      LocationName = \"\";\r\n      console.log(\"expand business exit called\");\r\n      GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n      this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      BusinessSetupCardFunctionality = false;\r\n      GivenCashBusiness = 0;\r\n      StartAnyBusinessWithoutCash = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }\r\n  },\r\n\r\n  OnNewBusinessButtonClicked_TurnDecision: function () {\r\n    console.log(\"starting new business\");\r\n    this.StartNewBusiness_BusinessSetup(false, true);\r\n  },\r\n\r\n  OnGoldAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    GoldCashAmount = amount;\r\n  },\r\n\r\n  OnGoldDiceClicked_TurnDecision: function () {\r\n    if (!this.GoldInvested) {\r\n      this.GoldInvested = true;\r\n      EnterBuySellAmount = \"\";\r\n      this.ToggleInvestSellScreen_InvestSell(true);\r\n      this.InvestSellSetupUI.InvestState = InvestEnum.GoldInvest;\r\n      DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n      OnceOrShare = DiceResult * 1000;\r\n\r\n      this.AssignData_InvestSell(\"Invest In GOLD\", DiceResult, \"Each Ounce of GOLD price is:\", OnceOrShare + \"/ounce\", \"Enter the number of ounce of GOLD you want to BUY\", \"Total Buying Amount:\", OnceOrShare + \"*0=0\", \"BUY\", this.InvestSellSetupUI.InvestState);\r\n    } else {\r\n      this.ShowToast(\"You can invest in gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n    StockBusinessName = name;\r\n  },\r\n\r\n  OnStockDiceClicked_TurnDecision: function (event = null, _isTurnOver = false) {\r\n    TurnOverForInvest = _isTurnOver;\r\n\r\n    console.error(_isTurnOver);\r\n\r\n    if (TurnOverForInvest) StockBusinessName = \"Friend's Business\";\r\n\r\n    if (!this.StockInvested || TurnOverForInvest) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (StockBusinessName == \"\") {\r\n        this.ResetStockBusinessNameInput();\r\n        this.ShowToast(\"Please enter a business name to invest.\");\r\n      } else {\r\n        this.StockInvested = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockInvest;\r\n\r\n        if (!TurnOverForInvest) DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        else DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Invest in Stock\", DiceResult, \"Each Share of stock price is:\", OnceOrShare + \"/share\", \"Enter the number of shares of stock you want to BUY\", \"Total Buying Amount:\", OnceOrShare + \"*0=0\", \"BUY\", this.InvestSellSetupUI.InvestState);\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can invest in stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellGoldClicked_TurnDecision: function () {\r\n    if (!this.GoldSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount > 0) {\r\n        this.GoldSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.GoldSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Sell GOLD\", DiceResult, \"Each Ounce of GOLD price is:\", OnceOrShare + \"/ounce\", \"Enter the number of ounce of GOLD you want to SELL\", \"Total Selling Amount:\", OnceOrShare + \"*0=0\", \"SELL\", this.InvestSellSetupUI.InvestState);\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any GOLD ounces, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell gold one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnSellStockClicked_TurnDecision: function () {\r\n    if (!this.StockSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount > 0) {\r\n        this.StockSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\"Sell STOCK\", DiceResult, \"Each share of stock price is:\", OnceOrShare + \"/share\", \"Enter the number of shares of stock you want to SELL\", \"Total Selling Amount:\", OnceOrShare + \"*0=0\", \"SELL\", this.InvestSellSetupUI.InvestState);\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell stocks one time during turn.\");\r\n    }\r\n  },\r\n\r\n  OnPartnershipClicked_TurnDecision: function () {\r\n    console.log(\"go into partner ship\");\r\n    // this.ShowToast(\"work in progress, coming soon...\");\r\n    // var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    this.EnablePartnership_PartnerShipSetup();\r\n  },\r\n\r\n  OnRollDiceClicked_TurnDecision: function () {\r\n    console.log(\"roll the dice\");\r\n    this.ToggleDecision_TurnDecision(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n  },\r\n\r\n  PrintDiceValue_TurnDecision: function (value) {\r\n    //this.TempDiceText.string=value;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Partnership setup\r\n  ToggleScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.WaitingStatusScreen.active = _state;\r\n  },\r\n\r\n  ToggleDecisionScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.DecisionScreen.active = _state;\r\n  },\r\n\r\n  EnablePartnership_PartnerShipSetup() {\r\n    CancelledID = [];\r\n    this.Reset_PartnerShipSetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.ToggleScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.PlayerName.string = _tempData.PlayerName;\r\n    this.PartnershipSetupUI.PlayerCash.string = \"$\" + _tempData.Cash;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.PartnershipSetupUI.PartnerShipPrefab);\r\n      node.parent = this.PartnershipSetupUI.ScrollContent;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n        var _allLocationsAmount = _totalLocations * 25000;\r\n        var _finalAmount = 50000 + _allLocationsAmount;\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n      } else {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n      }\r\n\r\n      businessDetailPartnershipNodes.push(node);\r\n    }\r\n  },\r\n\r\n  EnablePartnershipDecision_PartnerShipSetup(_msg) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.ToggleDecisionScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.DecisionPlayerName.string = _tempData.PlayerName;\r\n    this.PartnershipSetupUI.DecisionPlayerCash.string = \"$\" + _tempData.Cash;\r\n    this.PartnershipSetupUI.DecisionDescription.string = _msg;\r\n  },\r\n\r\n  Exit_PartnerShipSetup() {\r\n    this.Reset_PartnerShipSetup();\r\n    this.ToggleScreen_PartnerShipSetup(false);\r\n  },\r\n\r\n  Reset_PartnerShipSetup() {\r\n    for (let index = 0; index < businessDetailPartnershipNodes.length; index++) {\r\n      businessDetailPartnershipNodes[index].destroy();\r\n    }\r\n    businessDetailPartnershipNodes = [];\r\n  },\r\n\r\n  ReceiveEvent_PartnershipSetup(_data) {\r\n    PartnerShipOfferReceived = true;\r\n    PartnerShipData = _data;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 1) _businessMode = \"Home Based\";\r\n    else if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 2) _businessMode = \"Brick & Mortar\";\r\n\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _msg =\r\n        \"you have received partnership offer by \" +\r\n        _playerData.PlayerName +\r\n        \" , following are the details of business: \" +\r\n        \"\\n\" +\r\n        \"\\n\" +\r\n        \"Business Name: \" +\r\n        _playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessName +\r\n        \"\\n\" +\r\n        \"Business Mode: \" +\r\n        _businessMode +\r\n        \"\\n\" +\r\n        \"Business Value: $\" +\r\n        _businessValue +\r\n        \"\\n\" +\r\n        \"Cash Payment: $\" +\r\n        _payAmount +\r\n        \"\\n\" +\r\n        \"\\n\" +\r\n        \"if offer is accepted you will receive 50% share of that particular business and will receive profit/lose on that particular business.\";\r\n\r\n      this.EnablePartnershipDecision_PartnerShipSetup(_msg);\r\n    }\r\n  },\r\n\r\n  AcceptOffer_PartnershipSetup() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _allActors = GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _data = PartnerShipData;\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    var myIndex = _manager.GetMyIndex();\r\n\r\n    if (PartnerShipOfferReceived == true) {\r\n      if (_manager.PlayerGameInfo[myIndex].Cash >= _payAmount) {\r\n        _manager.PlayerGameInfo[myIndex].Cash -= _payAmount;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[myIndex]);\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(true, _payAmount, false, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"congratulations! you have started business partnership\");\r\n      } else {\r\n        this.ShowToast(\"Not enough cash.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"Offer has been accepted by other player.\");\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n    }\r\n  },\r\n\r\n  CancelOffer_PartnershipSetup() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _data = PartnerShipData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var myIndex = _manager.GetMyIndex();\r\n    console.log(_manager.PlayerGameInfo[myIndex].PlayerUID);\r\n    if (PartnerShipOfferReceived == true) {\r\n      this.RaiseEventDecisionAnswer_PartnershipSetup(false, 0, true, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    } else {\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\");\r\n    }\r\n  },\r\n\r\n  RaiseEventDecisionAnswer_PartnershipSetup(_isAccepted = false, _payment = 0, _isCancelled = false, _uID = \"\", _data = null, _businessIndex = 0) {\r\n    var _mainData = { Data: { Accepted: _isAccepted, CashPayment: _payment, Cancelled: _isCancelled, PlayerID: _uID, PlayerData: _data, BusinessIndex: _businessIndex } };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(12, _mainData);\r\n  },\r\n\r\n  ReceiveEventDecisionAnswer_PartnershipSetup(_data) {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = _manager.GetTurnNumber();\r\n\r\n      console.log(_data);\r\n      var _accepted = _data.Data.Accepted;\r\n      var _cash = _data.Data.CashPayment;\r\n      var _cancelled = _data.Data.Cancelled;\r\n      var _uid = _data.Data.PlayerID;\r\n      var _playerData = _data.Data.PlayerData;\r\n      var _businessIndex = _data.Data.BusinessIndex;\r\n\r\n      console.log(\"answer received\");\r\n      if (_manager.PlayerGameInfo[_playerIndex].PlayerUID == GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID) {\r\n        if (_accepted) {\r\n          this.ToggleScreen_PartnerShipSetup(false);\r\n          this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n          _manager.PlayerGameInfo[_playerIndex].Cash += _cash;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerID = _uid;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerName = _playerData.PlayerName;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"offer accepted\");\r\n          this.ShowToast(\"your partnership offer has been accepted by \" + _playerData.PlayerName + \", cash $\" + _cash + \" has been added to your account.\", LongMessageTime);\r\n          this.UpdateCash_TurnDecision();\r\n        } else if (_cancelled) {\r\n          if (CancelledID.includes(_uid) == false) CancelledID.push(_uid);\r\n\r\n          console.log(CancelledID);\r\n          if (CancelledID.length == _manager.PlayerGameInfo.length - 1) {\r\n            this.ToggleScreen_PartnerShipSetup(false);\r\n            this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n            this.ShowToast(\"your partnership offer has been cancelled by all other users.\");\r\n          }\r\n\r\n          console.log(\"offer rejected\");\r\n        }\r\n      } else {\r\n        if (_accepted) {\r\n          PartnerShipOfferReceived = false;\r\n          this.ShowToast(\"Offer has been accepted by other player.\");\r\n          this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        } else if (_cancelled) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Invest and sell moddule\r\n\r\n  ResetGoldInput() {\r\n    this.TurnDecisionSetupUI.GoldEditBox.string = \"\";\r\n    GoldCashAmount = \"\";\r\n  },\r\n\r\n  ResetStockBusinessNameInput() {\r\n    this.TurnDecisionSetupUI.StockEditBox.string = \"\";\r\n    StockBusinessName = \"\";\r\n  },\r\n\r\n  onAmountChanged_InvestSell(_amount) {\r\n    EnterBuySellAmount = _amount;\r\n\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n    } else {\r\n      var _amount = parseInt(EnterBuySellAmount);\r\n      var _amount = OnceOrShare * _amount;\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*\" + EnterBuySellAmount + \"=\" + _amount);\r\n    }\r\n  },\r\n\r\n  ToggleInvestSellScreen_InvestSell(_state) {\r\n    this.InvestSellScreen.active = _state;\r\n    this.UpdateCash_TurnDecision();\r\n    this.ResetGoldInput();\r\n    this.ResetStockBusinessNameInput();\r\n  },\r\n\r\n  AssignData_InvestSell(_title, _diceResult, _priceTitle, _priceValue, _buyOrSellTitle, _totalAmountTitle, _totalAmountValue, _buttonName, _state) {\r\n    this.CheckReferences();\r\n    this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n    this.InvestSellSetupUI.TitleLabel.string = _title;\r\n    this.InvestSellSetupUI.DiceResultLabel.string = _diceResult;\r\n    this.InvestSellSetupUI.PriceTitleLabel.string = _priceTitle;\r\n    this.InvestSellSetupUI.PriceValueLabel.string = _priceValue;\r\n    this.InvestSellSetupUI.BuyOrSellTitleLabel.string = _buyOrSellTitle;\r\n    this.InvestSellSetupUI.TotalAmountTitleLabel.string = _totalAmountTitle;\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n    this.InvestSellSetupUI.ButtonNameLabel.string = _buttonName;\r\n  },\r\n\r\n  UpdateData_InvestSell(_totalAmountValue) {\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n  },\r\n\r\n  ApplyButton_InvestSell() {\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      InvestSellInfo = \"\";\r\n\r\n      if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount += _amount;\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" ounces of GOLD\", LongMessageTime);\r\n\r\n          InvestSellInfo = \"Buying GOLD:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per Ounce price: $\" + OnceOrShare + \"\\n\" + \"Purchased Ounces: \" + _amount + \"\\n\" + \"Total Payment for Ounces: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        if (_amount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount -= _amount;\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" ounces of GOLD for  $\" + _TotalAmount, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Selling GOLD:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per Ounce price: $\" + OnceOrShare + \"\\n\" + \"Sold Ounces: \" + _amount + \"\\n\" + \"Total Payment for Ounces: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"you don't have enough GOLD ounces, you own \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount + \" of GOLD ounces\", LongMessageTime);\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (_TotalAmount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash -= _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount += _amount;\r\n          //can add multiple stocks with business name in object if required\r\n\r\n          this.ShowToast(\"You have successfully bought \" + _amount + \" shares of business \" + StockBusinessName, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Buying STOCK:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per share price: $\" + OnceOrShare + \"\\n\" + \"Purchased shares: \" + _amount + \"\\n\" + \"Total Payment for shares: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n\r\n        if (_amount <= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash += _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount -= _amount;\r\n\r\n          this.ShowToast(\"You have successfully sold \" + _amount + \" shares of stock for  $\" + _TotalAmount, LongMessageTime);\r\n\r\n          InvestSellInfo = \"Selling STOCK:\" + \"\\n\" + \"\\n\" + \"Dice Rolled: \" + OnceOrShare / 1000 + \"\\n\" + \"Per share price: $\" + OnceOrShare + \"\\n\" + \"Sold shares: \" + _amount + \"\\n\" + \"Total Payment for shares: $\" + _TotalAmount;\r\n\r\n          this.RaiseEventToSyncInfo(InvestSellInfo);\r\n\r\n          setTimeout(() => {\r\n            this.ExitButton_InvestSell();\r\n          }, 200);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"you don't have enough stocks shares, you own \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount + \" of stock shares\", LongMessageTime);\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ExitButton_InvestSell() {\r\n    this.ToggleInvestSellScreen_InvestSell(false);\r\n\r\n    if (TurnOverForInvest) {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      TurnOverForInvest = false;\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Payday or Double pay Day\r\n  TogglePayDayScreen_PayDay(_state) {\r\n    this.PayDayScreen.active = _state;\r\n  },\r\n\r\n  ToggleResultPanelScreen_PayDay(_state) {\r\n    this.PayDaySetupUI.ResultPanelNode.active = _state;\r\n  },\r\n\r\n  UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken) {\r\n    if (HMAmount == 0) {\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      HomeBasedPaymentCompleted = false;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (BMAmount == 0) {\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      BrickMortarPaymentCompleted = false;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (!loanTaken) {\r\n      LoanPayed = true;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      LoanPayed = false;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n  },\r\n\r\n  GetLoanAmount_PayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    var _loan = 0;\r\n    for (let index = 0; index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n      if (_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loan = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n        break;\r\n      }\r\n    }\r\n    return _loan;\r\n  },\r\n\r\n  AssignData_PayDay(_title, _isDoublePayDay = false, _skipHM = false, _skipBM = false, _isBot = false, _forSelectedBusiness = false, _SelectedBusinessIndex = 0, _hMAmount = 0, _bmAmount = 0, _bmLocation = 0, PaydayCounter = 1, DoublePayCounter = 0) {\r\n    HBDiceCounter = 0;\r\n    BMDiceCounter = 0;\r\n\r\n    //   if (DoublePayCounter == 0) DoublePayCounter = 1;\r\n\r\n    //  if (DoublePayDay) DoublePayCounter = DoublePayCounter * 2;\r\n\r\n    var _res = PaydayCounter + DoublePayCounter;\r\n    PayDayInfo = \"PayDay Result with multiplier: \" + _res;\r\n\r\n    this.IsBotTurn = _isBot;\r\n    this.PayDayCount = PaydayCounter;\r\n    this.DoublePayDayCount = DoublePayCounter;\r\n    DoublePayDay = _isDoublePayDay;\r\n    this.TogglePayDayScreen_PayDay(true);\r\n    this.PayDaySetupUI.TitleLabel.string = _title;\r\n    var _time = 1800;\r\n    SelectedBusinessPayDay = _forSelectedBusiness;\r\n    SelectedBusinessIndex = _SelectedBusinessIndex;\r\n    HMAmount = _hMAmount;\r\n    BMAmount = _bmAmount;\r\n    BMLocations = _bmLocation;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      if (_isBot == false) {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM) this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\", _time);\r\n        else if (_skipHM) this.ShowToast(\"your payday on home based businessess will be skipped.\", _time);\r\n        else if (_skipBM) this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\", _time);\r\n      } else {\r\n        //check skip payday variables\r\n        if (_skipHM && _skipBM) console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n        else if (_skipHM) console.log(\"your payday on home based businessess will be skipped.\");\r\n        else if (_skipBM) console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n      }\r\n    }\r\n\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n      BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n    }\r\n\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var loanTaken = false;\r\n\r\n    if (!SelectedBusinessPayDay) {\r\n      loanTaken = _loanTaken;\r\n    }\r\n\r\n    this.PayDaySetupUI.HomeBasedNumberLabel.string = HMAmount;\r\n    this.PayDaySetupUI.BMNumberLabel.string = BMAmount;\r\n    this.PayDaySetupUI.BMNumberLocationLabel.string = BMLocations;\r\n    this.PayDaySetupUI.PassedPayDayCountLabel.string = this.PayDayCount;\r\n\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    //check if loan was skipped previously\r\n    if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) {\r\n      var _loan = this.GetLoanAmount_PayDay();\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $\" + _loan;\r\n    } else {\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $5000\";\r\n    }\r\n\r\n    //check skip payday variables\r\n    if (_skipHM && _skipBM) this.UpdateButtons_PayDay(0, 0, loanTaken);\r\n    else if (_skipHM) this.UpdateButtons_PayDay(0, BMAmount, loanTaken);\r\n    else if (_skipBM) this.UpdateButtons_PayDay(HMAmount, 0, loanTaken);\r\n    else this.UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken);\r\n\r\n    if (_skipBM || _skipHM) {\r\n      setTimeout(() => {\r\n        this.PayDayCompleted();\r\n      }, _time + 200);\r\n    }\r\n\r\n    if (_isBot) {\r\n      setTimeout(() => {\r\n        this.OnHomeBasedPaymentClicked_PayDay();\r\n        this.OnBMPaymentClicked_PayDay();\r\n        this.OnLoanPaymentClicked_PayDay();\r\n      }, 0);\r\n    }\r\n  },\r\n\r\n  OnHomeBasedPaymentClicked_PayDay() {\r\n    if (!HomeBasedPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay) this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      }\r\n\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n      //partnership code\r\n      if (_doublePayDay) {\r\n        if (this.DoublePayDayCount != 0) {\r\n          _multiplier = 2 * this.DoublePayDayCount;\r\n        } else {\r\n          _multiplier = 2;\r\n        }\r\n      }\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 1) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _payment = _paydaymultiplier * _multiplier * _dice * 1000;\r\n              _amountToBeSend = _payment / 2;\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 1) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _payment = _paydaymultiplier * _multiplier * _dice * 1000;\r\n            _amountToBeSend = _payment / 2;\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted > 0) {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n      //partnership code\r\n\r\n      if (!_doublePayDay) TotalPayDayAmount = _paydaymultiplier * HMAmount * _dice * 1000 - _amountToBeAdjusted;\r\n      else TotalPayDayAmount = _paydaymultiplier * _multiplier * (HMAmount * _dice) * 1000 - _amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = HMAmount;\r\n\r\n      if (!_doublePayDay) this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + HMAmount + \"*\" + \"1000)-\" + _amountToBeAdjusted + \"=\" + TotalPayDayAmount;\r\n      else this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + HMAmount + \"*\" + \"1000*\" + _multiplier + \")-\" + _amountToBeAdjusted + \"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo += \"\\n\" + \"\\n\" + \"Home Based Business: \" + HMAmount + \"\\n\" + \"Dice Rolled: \" + _dice + \"\\n\" + \"Amount Received: $\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnBMPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!BrickMortarPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      var _doublePayDay = DoublePayDay;\r\n      var _paydaymultiplier = this.PayDayCount;\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        if (!_doublePayDay) this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n        else this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n      } else {\r\n        _doublePayDay = false;\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      }\r\n\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n      }\r\n\r\n      var _amount = BMAmount + BMLocations;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      if (_doublePayDay) {\r\n        if (this.DoublePayDayCount != 0) {\r\n          _multiplier = 2 * this.DoublePayDayCount;\r\n        } else {\r\n          _multiplier = 2;\r\n        }\r\n      }\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        for (let index = 0; index < _tempData.length; index++) {\r\n          if (_tempData[index].BusinessType == 2) {\r\n            if (_tempData[index].IsPartnership) {\r\n              var _locations = _tempData[index].LocationsName.length + 1;\r\n              var _payment = _paydaymultiplier * _locations * _multiplier * _dice * 2000;\r\n              _amountToBeSend = _payment / 2;\r\n              _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n              _amountToBeAdjusted += _amountToBeSend;\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (_tempData[SelectedBusinessIndex].BusinessType == 2) {\r\n          if (_tempData[SelectedBusinessIndex].IsPartnership) {\r\n            var _locations = _tempData[SelectedBusinessIndex].LocationsName.length + 1;\r\n            var _payment = _paydaymultiplier * _locations * _multiplier * _dice * 2000;\r\n            _amountToBeSend = _payment / 2;\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[SelectedBusinessIndex].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted > 0) {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", LongMessageTime);\r\n      }\r\n\r\n      if (!_doublePayDay) TotalPayDayAmount = _paydaymultiplier * _amount * _dice * 2000 - _amountToBeAdjusted;\r\n      else TotalPayDayAmount = _paydaymultiplier * _multiplier * (_amount * _dice) * 2000 - _amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = _amount;\r\n\r\n      if (!_doublePayDay) this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + _amount + \"*\" + \"2000)-\" + _amountToBeAdjusted + \"=\" + TotalPayDayAmount;\r\n      else this.PayDaySetupUI.TotalAmountLabel.string = \"(\" + _paydaymultiplier + \"*\" + _dice + \"*\" + _amount + \"*\" + \"2000*\" + _multiplier + \")-\" + _amountToBeAdjusted + \"=\" + TotalPayDayAmount;\r\n\r\n      PayDayInfo += \"\\n\" + \"\\n\" + \"Brick & Mortar Business: \" + _amount + \"\\n\" + \"Dice Rolled: \" + _dice + \"\\n\" + \"Amount Received: $\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnLoanPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!LoanPayed) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _EstimateLoan = 0;\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n        //if player had skippped loan previously call all amount due\r\n        _EstimateLoan = this.GetLoanAmount_PayDay();\r\n      else _EstimateLoan = 5000;\r\n\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= _EstimateLoan) {\r\n        LoanPayed = true;\r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - _EstimateLoan;\r\n\r\n        var _loanTaken = false;\r\n        var _businessIndex = 0;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n          if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            _loanTaken = true;\r\n            _businessIndex = index;\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount - _EstimateLoan;\r\n\r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount <= 0) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = 0;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken = false;\r\n        }\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = false;\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        this.PayDayCompleted();\r\n      } else {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = false;\r\n        else this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = true;\r\n\r\n        this.PayDaySetupUI.LoanResultPanelNode.active = true;\r\n        console.error(\"out of money\");\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceivePayment_PayDay() {\r\n    //all\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash + TotalPayDayAmount;\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    if (!this.IsBotTurn) {\r\n      this.ShowToast(\"Amount $\" + TotalPayDayAmount + \" has been added to your cash amount, Total Cash has become $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n      setTimeout(() => {\r\n        this.ToggleResultPanelScreen_PayDay(false);\r\n        this.PayDayCompleted();\r\n      }, 100);\r\n    } else {\r\n      console.log(\"Amount $\" + TotalPayDayAmount + \" has been added to your cash amount, Total Cash has become $\" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n      this.ToggleResultPanelScreen_PayDay(false);\r\n      this.PayDayCompleted();\r\n    }\r\n  },\r\n\r\n  SkipLoanOneTime_PayDay() {\r\n    this.ShowToast(\"You have skipped the loan payment, bank will call upon complete loan amount on next payday\");\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = true;\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    LoanPayed = true;\r\n    this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    this.PayDayCompleted();\r\n    LoanPayed = true;\r\n  },\r\n\r\n  SellBusiness_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    this.EnableSellScreen__SellBusinessUISetup(false);\r\n  },\r\n\r\n  UpdateCash_PayDay(_amount) {\r\n    this.PayDaySetupUI.CashLabel.string = \"$\" + _amount;\r\n  },\r\n\r\n  ExitLoanScreen_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n  },\r\n\r\n  StartNewGame_PayDay() {\r\n    //if bankrupted you can start new game\r\n    this.ShowToast(\"You will lose all progress and start new game from the start.\", 3000, false);\r\n    setTimeout(() => {\r\n      this.ExitLoanScreen_PayDay();\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      this.Exit___InsufficientBalance();\r\n      cc.systemEvent.emit(\"ShowCard\", \"\", false);\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false, false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n    }, 3010);\r\n  },\r\n\r\n  ShowInfo(_data) {\r\n    this.ShowToast(_data.info, 2000, true);\r\n  },\r\n\r\n  PayDayCompleted() {\r\n    if (HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      console.log(\"all payday done\");\r\n      this.TogglePayDayScreen_PayDay(false);\r\n\r\n      if (!SelectedBusinessPayDay) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false, false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().ToggleDoublePayNextTurn(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n      } else {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n      }\r\n\r\n      this.RaiseEventToSyncInfo(PayDayInfo);\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Sell & manipulate Business UI\r\n  ToggleSellBusinessScreen_SellBusinessUISetup(_state) {\r\n    this.SellBusinessScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    this.SellBusinessSetupUI.TitleLabel.string = \"SELL\";\r\n    this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].LocationsName.length == 0) node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      else node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n\r\n  SetBusinessUI_BusinessManipulationUISetup(_isBot = false) {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    if (!_isBot) {\r\n      this.SellBusinessSetupUI.TitleLabel.string = \"BUSINESS\";\r\n      this.SellBusinessSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n      this.SellBusinessSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n      this.SellBusinessSetupUI.BusinessCountLabel.string = \"No of Businesses : \" + _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n    }\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessManipulationPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_isBot) {\r\n        node.getComponent(\"BusinessDetail\").SelectBusinessforPayDay();\r\n        break;\r\n      }\r\n      // if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      // else\r\n      //   node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n  Reset_SellBusinessUISetup() {\r\n    for (let index = 0; index < businessDetailNodes.length; index++) {\r\n      businessDetailNodes[index].destroy();\r\n    }\r\n\r\n    businessDetailNodes = [];\r\n  },\r\n\r\n  EnableSellScreen__SellBusinessUISetup(_isTurnover = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    this.SetBusinessUI_SellBusinessUISetup();\r\n  },\r\n\r\n  EnableManipilationScreen__BusinessManipulationUISetup(_isTurnover = false, _isBot = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n\r\n    if (!_isBot) this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n\r\n    this.SetBusinessUI_BusinessManipulationUISetup(_isBot);\r\n  },\r\n\r\n  ExitSellScreen__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n  },\r\n\r\n  ExitSellScreenAlongTurnOver__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Invest UI\r\n  ToggleInvestScreen_InvestSetupUI(_state) {\r\n    this.InvestScreen.active = _state;\r\n  },\r\n\r\n  EnableInvest_InvestSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleInvestScreen_InvestSetupUI(true);\r\n    this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n  },\r\n  SetInvestUI_InvestSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.InvestSetupUI.TitleLabel.string = \"INVEST\";\r\n    this.InvestSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.InvestSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.InvestSetupUI.ExitButton.active = false;\r\n      this.InvestSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.InvestSetupUI.ExitButton.active = true;\r\n      this.InvestSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitInvest_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n  },\r\n\r\n  ExitInvestAlongTurnOver_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region BuyORSell UI\r\n  ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state) {\r\n    this.BuyOrSellScreen.active = _state;\r\n  },\r\n\r\n  EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n    this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n  },\r\n  SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.BuyOrSellSetupUI.TitleLabel.string = \"BUY OR SELL\";\r\n    this.BuyOrSellSetupUI.CashLabel.string = _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.BuyOrSellSetupUI.PlayerNameLabel.string = _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.BuyOrSellSetupUI.ExitButton.active = false;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.BuyOrSellSetupUI.ExitButton.active = true;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitSellOrBuy_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n  },\r\n\r\n  ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region One Question setup Ui\r\n  ToggleDecisionScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionDecisionScreen.active = _state;\r\n  },\r\n\r\n  ToggleSpaceScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSpaceScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSetupUI.WaitingScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_OneQuestionSetupUI(_myData, _actorsData, _isTurnOver, _modeIndex = 0) {\r\n    this.OneQuestionSetupUI.TitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.PlayerDetailLabel.string = \"No of Players: \" + GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_actorsData[index].customProperties.RoomEssentials.IsSpectate == false) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (_myData.PlayerUID != _actorsData[index].customProperties.PlayerSessionData.PlayerUID) {\r\n            var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n            node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n            node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n            node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n            oneQuestionNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n          node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n          node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].PlayerName);\r\n          node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].PlayerUID);\r\n          oneQuestionNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.OneQuestionSetupUI.ExitButton.active = false;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.OneQuestionSetupUI.ExitButton.active = true;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_OneQuestionSetupUI() {\r\n    for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n      oneQuestionNodes[index].destroy();\r\n    }\r\n    oneQuestionNodes = [];\r\n  },\r\n\r\n  Exit_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  SetUpDecisionScreen_OneQuestionSetupUI(_question) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.OneQuestionSetupUI.DecisionTitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.DecisionCashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.DecisionPlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.DecisionQuestionLabel.string = \"Player has asked if \" + _question + \"\\n\" + \"\\n\" + \"*either answer question or pay $5000 to player whose asking question.\";\r\n  },\r\n  //#endregion\r\n\r\n  ShowToast: function (message, time = ShortMessageTime, _hasbutton = true) {\r\n    this.PopUpUI.active = true;\r\n    this.PopUpUILabel.string = message;\r\n    var SelfToast = this;\r\n    var mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (mode == 1) {\r\n      //for bot mode only\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length > 0 && GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].IsBot) {\r\n        // if (_hasbutton) {\r\n        //   this.PopUpUIButton.active = true;\r\n        //   clearTimeout(TimeoutRef);\r\n        //   TimeoutRef = setTimeout(() => {\r\n        //     this.CompleteToast();\r\n        //   }, CompletionWindowTime);\r\n        // }\r\n        // else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n        // }\r\n      } else {\r\n        if (_hasbutton) {\r\n          this.PopUpUIButton.active = true;\r\n          clearTimeout(TimeoutRef);\r\n          TimeoutRef = setTimeout(() => {\r\n            this.CompleteToast();\r\n          }, CompletionWindowTime);\r\n        } else {\r\n          this.PopUpUIButton.active = false;\r\n          setTimeout(function () {\r\n            SelfToast.PopUpUI.active = false;\r\n          }, time);\r\n        }\r\n      }\r\n    } //for real players\r\n    else {\r\n      if (_hasbutton) {\r\n        this.PopUpUIButton.active = true;\r\n        clearTimeout(TimeoutRef);\r\n        TimeoutRef = setTimeout(() => {\r\n          this.CompleteToast();\r\n        }, CompletionWindowTime);\r\n      } else {\r\n        this.PopUpUIButton.active = false;\r\n        setTimeout(function () {\r\n          SelfToast.PopUpUI.active = false;\r\n        }, time);\r\n      }\r\n    }\r\n  },\r\n\r\n  CompleteToast() {\r\n    console.error(\"complete toast called\");\r\n    this.PopUpUI.active = false;\r\n    clearTimeout(TimeoutRef);\r\n  },\r\n\r\n  ShowResultScreen: function (_status, _data) {\r\n    this.ResultSetupUI.ResultScreen.active = true;\r\n    this.ResultSetupUI.StatusLabel.string = _status;\r\n    this.ResultSetupUI.BodyLabel.string = _data;\r\n  },\r\n\r\n  RestartTheGame() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().RestartGame();\r\n  },\r\n\r\n  RaiseEventToSyncInfo(_dataInfo) {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      var _data = { info: _dataInfo };\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data);\r\n    } else if (_mode == 1) {\r\n      //for bot\r\n      if (this.IsBotTurn) {\r\n        var _data = { info: _dataInfo };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(15, _data);\r\n      }\r\n    }\r\n  },\r\n});\r\n"]}