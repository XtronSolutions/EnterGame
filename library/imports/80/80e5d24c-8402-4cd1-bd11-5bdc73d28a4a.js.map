{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","businessDetailNodes","oneQuestionNodes","businessDetailPartnershipNodes","PartnerShipData","PartnerShipOfferReceived","CancelledID","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PartnershipUI","WaitingStatusScreen","MainScreen","TitleName","PlayerName","PlayerCash","PartnerShipPrefab","DecisionScreen","DecisionPlayerName","DecisionPlayerCash","DecisionDescription","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PartnershipSetupUI","PopUpUI","PopUpUILabel","GameplayUIScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","TempDiceText","LeaveRoomButton","onLoad","CheckReferences","GoldInvested","GoldSold","StockInvested","StockSold","IsBotTurn","IsBankrupted","BankruptedAmount","ResetTurnVariable","require","onEnable","systemEvent","on","SyncData","onDisable","off","InitialScreen_SpectateMode","active","CloseInitialScreen_SpectateMode","ToggleLeaveRoomButton_SpectateModeUI","_state","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","modeIndex","_isBankrupted","_BankruptAmount","Init_BusinessSetup","PlayerData","BusinessInfo","Cash","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","StudentData","userID","PlayerUID","OnChangeName_BusinessSetup","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","GetObj_BusinessSetup","UID","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","BusinessType","EnumBusinessType","none","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","ShowToast","Math","abs","parseInt","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","_data","_ID","PhotonActor","actorNr","push","console","log","MaxPlayers","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_amount","_businessName","_isHomeBased","HomeBasedAmount","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","InitialSetup_BusinessSetup","_mode","GetSelectedMode","IsBankrupt","BankruptAmount","GetTurnNumber","RaiseEvent","Data","bankrupted","turn","PlayerDataMain","StartTurnAfterBankrupt","error","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","IsBot","isactive","UpdateCash_TurnDecision","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","ResetStockBusinessNameInput","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","EnablePartnership_PartnerShipSetup","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ToggleScreen_PartnerShipSetup","ToggleWaitingScreen_PartnerShipSetup","ToggleDecisionScreen_PartnerShipSetup","Reset_PartnerShipSetup","_manager","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","_totalLocations","LocationsName","SetBusinessMode","SetMode","SetBusinessValue","SetFinalBusinessValue","_allLocationsAmount","_finalAmount","SetBalance","SetLocations","IsPartnership","TogglePartnerShipButton","SetPartnerName","PartnerName","EnablePartnershipDecision_PartnerShipSetup","_msg","customProperties","PlayerSessionData","Exit_PartnerShipSetup","destroy","ReceiveEvent_PartnershipSetup","_actor","_turn","Turn","_playerData","_SelectedBusinessIndex","SelectedBusinsessIndex","_businessValue","BusValue","_payAmount","_businessMode","CheckSpectate","AcceptOffer_PartnershipSetup","_allActors","RoomActors","myIndex","GetMyIndex","RaiseEventDecisionAnswer_PartnershipSetup","CancelOffer_PartnershipSetup","_isAccepted","_payment","_isCancelled","_uID","_mainData","Accepted","CashPayment","Cancelled","PlayerID","BusinessIndex","ReceiveEventDecisionAnswer_PartnershipSetup","_accepted","_cash","_cancelled","_uid","PartnerID","includes","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","HMAmount","BMAmount","loanTaken","Button","interactable","GetLoanAmount_PayDay","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_isBot","_time","UpdateCash_PayDay","BMLocations","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_dice","RollOneDice","_amountToBeSend","_amountToBeAdjusted","_multiplier","SendProfit_Partner_TurnDecision","ReceivePayment_PayDay","_locations","_EstimateLoan","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","StartNewGame_PayDay","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","Bankrupt_TurnDecision","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","Reset_SellBusinessUISetup","Amount","ToggleSellLocationButton","_isTurnover","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","completeCardTurn","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_isTurnOver","_modeIndex","RoomEssentials","IsSpectate","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","_question","message","time","SelfToast"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager = null;\r\nvar businessDetailNodes = [];\r\nvar oneQuestionNodes = [];\r\nvar businessDetailPartnershipNodes = [];\r\nvar PartnerShipData = null;\r\nvar PartnerShipOfferReceived = false;\r\nvar CancelledID = [];\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n  None: 0,\r\n  TenThousand: 10000,\r\n  TentyThousand: 20000,\r\n  ThirtyThousand: 30000,\r\n  FortyThousand: 40000,\r\n  FiftyThousand: 50000,\r\n  Other: 6,\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI = cc.Class({\r\n  name: \"BusinessSetupUI\",\r\n\r\n  properties: {\r\n    PlayerNameUI: {\r\n      displayName: \"PlayerNameUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player name\",\r\n    },\r\n    PlayerCashUI: {\r\n      displayName: \"PlayerCashUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label for player cash\",\r\n    },\r\n    BusinessTypeTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business type\",\r\n    },\r\n    BusinessNameTextUI: {\r\n      displayName: \"BusinessTypeTextUI\",\r\n      type: cc.Text,\r\n      default: \"\",\r\n      serializable: false,\r\n      tooltip: \"var to store text for business name\",\r\n    },\r\n    BusinessTypeLabel: {\r\n      displayName: \"BusinessTypeLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"reference for business type editbox\",\r\n    },\r\n    BusinessNameLabel: {\r\n      displayName: \"BusinessNameLabel\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"referece for business name editbox\",\r\n    },\r\n    HomeBasedNodeUI: {\r\n      displayName: \"HomeBasedNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for home based business\",\r\n    },\r\n    BrickAndMortarNodeUI: {\r\n      displayName: \"BrickAndMortarNodeUI\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for brick and mortar business\",\r\n    },\r\n    TimerUI: {\r\n      displayName: \"TimerUI\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the label for timer\",\r\n    },\r\n    TimerNode: {\r\n      displayName: \"TimerNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for timer node in business setup\",\r\n    },\r\n    BusinessSetupNode: {\r\n      displayName: \"BusinessSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for business setup\",\r\n    },\r\n    LoanSetupNode: {\r\n      displayName: \"LoanSetupNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the node for loan setup\",\r\n    },\r\n    LoanAmount: {\r\n      displayName: \"LoanAmount\",\r\n      type: LoanAmountEnum,\r\n      default: LoanAmountEnum.None,\r\n      serializable: true,\r\n      tooltip: \"loan amount taken by player (state machine)\",\r\n    },\r\n    LoanAmountLabel: {\r\n      displayName: \"LoanAmountLabel\",\r\n      type: [cc.Node],\r\n      default: [],\r\n      serializable: true,\r\n      tooltip: \"Reference for all labels of amounts in loan UI\",\r\n    },\r\n    WaitingStatusNode: {\r\n      displayName: \"WaitingStatusNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for waiting status screen on initial business setup\",\r\n    },\r\n    ExitButtonNode: {\r\n      displayName: \"ExitButtonNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for exit button node in business setup\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor//\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI = cc.Class({\r\n  name: \"TurnDecisionSetupUI\",\r\n\r\n  properties: {\r\n    MarketingEditBox: {\r\n      displayName: \"MarketingEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of marketing node\",\r\n    },\r\n    GoldEditBox: {\r\n      displayName: \"GoldEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest gold node\",\r\n    },\r\n    StockEditBox: {\r\n      displayName: \"StockEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the editbox of invest stock node\",\r\n    },\r\n    CashAmountLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to cash node\",\r\n    },\r\n    ExpandBusinessNode: {\r\n      displayName: \"ExpandBusinessNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for expnad business node\",\r\n    },\r\n    ExpandBusinessScrollContent: {\r\n      displayName: \"ExpandBusinessScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"Reference for content node of scroll view of expand business node\",\r\n    },\r\n    ExpandBusinessPrefab: {\r\n      displayName: \"ExpandBusinessPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"Reference for prefab of expand business node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n\r\n  ChangeName_BusinessSetup: function (name) {\r\n    this.PlayerNameUI.string = name;\r\n  },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n  None: 0,\r\n  StockInvest: 1,\r\n  GoldInvest: 2,\r\n  StockSell: 3,\r\n  GoldSell: 4,\r\n  Other: 5,\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI = cc.Class({\r\n  name: \"InvestSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of invest&sell node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Dice Result of invest&sell node\",\r\n    },\r\n    PriceTitleLabel: {\r\n      displayName: \"PriceTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price Title of invest&sell node\",\r\n    },\r\n    PriceValueLabel: {\r\n      displayName: \"PriceValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of Price value of invest&sell node\",\r\n    },\r\n    BuyOrSellTitleLabel: {\r\n      displayName: \"BuyOrSellTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of BuyOrSell Title of invest&sell node\",\r\n    },\r\n    TotalAmountTitleLabel: {\r\n      displayName: \"TotalAmountTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Title of invest&sell node\",\r\n    },\r\n    TotalAmountValueLabel: {\r\n      displayName: \"TotalAmountValue\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of TotalAmount Value of invest&sell node\",\r\n    },\r\n    ButtonNameLabel: {\r\n      displayName: \"ButtonName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of button name of invest&sell node\",\r\n    },\r\n    InvestState: {\r\n      displayName: \"InvestState\",\r\n      type: InvestEnum,\r\n      default: InvestEnum.None,\r\n      serializable: true,\r\n    },\r\n    AmountEditBox: {\r\n      displayName: \"AmountEditBox\",\r\n      type: cc.EditBox,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI = cc.Class({\r\n  name: \"SellBusinessUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Sell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Sell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Sell node\",\r\n    },\r\n    BusinessCountLabel: {\r\n      displayName: \"BusinessCount\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BusinessCount of Sell node\",\r\n    },\r\n    ScrollContentNode: {\r\n      displayName: \"ScrollContentNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ScrollContentNode of Sell node\",\r\n    },\r\n    BusinessSellPrefab: {\r\n      displayName: \"BusinessSellPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of BusinessSellPrefab of Sell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Sell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of TurnOverExitButton of Sell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI = cc.Class({\r\n  name: \"PayDayUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of PayDay node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"Cash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of PayDay node\",\r\n    },\r\n    HomeBasedNumberLabel: {\r\n      displayName: \"HomeBasedNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedNumber node\",\r\n    },\r\n    BMNumberLabel: {\r\n      displayName: \"BrickMortarNumber\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarNumber node\",\r\n    },\r\n    BMNumberLocationLabel: {\r\n      displayName: \"BrickMortarLocations\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarLocations node\",\r\n    },\r\n    HomeBasedBtn: {\r\n      displayName: \"HomeBasedBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of HomeBasedBtn node\",\r\n    },\r\n    BMBtn: {\r\n      displayName: \"BrickMortarBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of BrickMortarBtn node\",\r\n    },\r\n    LoanBtn: {\r\n      displayName: \"LoanBtn\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanBtn node\",\r\n    },\r\n    MainPanelNode: {\r\n      displayName: \"MainPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of MainPanel node\",\r\n    },\r\n    ResultPanelNode: {\r\n      displayName: \"ResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultPanel node\",\r\n    },\r\n    LoanResultPanelNode: {\r\n      displayName: \"LoanResultPanelNode\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanResultPanelNode node\",\r\n    },\r\n    ResultScreenTitleLabel: {\r\n      displayName: \"ResultScreenTitle\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of ResultScreenTitle node\",\r\n    },\r\n    DiceResultLabel: {\r\n      displayName: \"DiceResult\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of DiceResult node\",\r\n    },\r\n    TotalBusinessLabel: {\r\n      displayName: \"TotalBusinessLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalBusiness node\",\r\n    },\r\n    TotalAmountLabel: {\r\n      displayName: \"TotalAmountLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of TotalAmount node\",\r\n    },\r\n    SkipLoanButton: {\r\n      displayName: \"SkipLoanButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of SkipLoanButton node\",\r\n    },\r\n    LoanFotterLabel: {\r\n      displayName: \"LoanFotterLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of LoanFotterLabel node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI = cc.Class({\r\n  name: \"InvestUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of Invest node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of Invest node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of Invest node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of Invest node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of Invest node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI = cc.Class({\r\n  name: \"BuyOrSellUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of BuyOrSell node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of BuyOrSell node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of BuyOrSell node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of BuyOrSell node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI = cc.Class({\r\n  name: \"OneQuestionUI\",\r\n  properties: {\r\n    TitleLabel: {\r\n      displayName: \"Title\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    CashLabel: {\r\n      displayName: \"CashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    PlayerNameLabel: {\r\n      displayName: \"PlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    ExitButton: {\r\n      displayName: \"ExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab of ExitButton of OneQuestion node\",\r\n    },\r\n    TurnOverExitButton: {\r\n      displayName: \"TurnOverExitButton\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the prefab of TurnOverExitButton of OneQuestion node\",\r\n    },\r\n    PlayerDetailLabel: {\r\n      displayName: \"PlayerDetailLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DetailsPrefab: {\r\n      displayName: \"DetailsPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab DetailsPrefab of OneQuestion node\",\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the prefab ScrollContent of OneQuestion node\",\r\n    },\r\n    WaitingScreen: {\r\n      displayName: \"WaitingScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the node WaitingScreen of OneQuestion node\",\r\n    },\r\n    DecisionTitleLabel: {\r\n      displayName: \"DecisionTitleLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of title of OneQuestion node\",\r\n    },\r\n    DecisionCashLabel: {\r\n      displayName: \"DecisionCashLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of cash of OneQuestion node\",\r\n    },\r\n    DecisionPlayerNameLabel: {\r\n      displayName: \"DecisionPlayerNameLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference to the label of player name of OneQuestion node\",\r\n    },\r\n    DecisionQuestionLabel: {\r\n      displayName: \"DecisionQuestionLabel\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip:\r\n        \"UI reference to the label of player question of OneQuestion node\",\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for PartnershipUI-------------------------//\r\nvar PartnershipUI = cc.Class({\r\n  name: \"PartnershipUI\",\r\n  properties: {\r\n    WaitingStatusScreen: {\r\n      displayName: \"WaitingStatusScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n      tooltip: \"UI reference of the waiting screen node of partnership ui\",\r\n    },\r\n    MainScreen: {\r\n      displayName: \"MainScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    TitleName: {\r\n      displayName: \"TitleName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerName: {\r\n      displayName: \"PlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PlayerCash: {\r\n      displayName: \"PlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    PartnerShipPrefab: {\r\n      displayName: \"PartnerShipPrefab\",\r\n      type: cc.Prefab,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n    ScrollContent: {\r\n      displayName: \"ScrollContent\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionScreen: {\r\n      displayName: \"DecisionScreen\",\r\n      type: cc.Node,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerName: {\r\n      displayName: \"DecisionPlayerName\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionPlayerCash: {\r\n      displayName: \"DecisionPlayerCash\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n\r\n    DecisionDescription: {\r\n      displayName: \"DecisionDescription\",\r\n      type: cc.Label,\r\n      default: null,\r\n      serializable: true,\r\n    },\r\n  },\r\n  ctor: function () {\r\n    //constructor\r\n  },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup = -1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount = \"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount = \"\";\r\nvar EnterBuySellAmount = \"\";\r\nvar StockBusinessName = \"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName = \"\";\r\n\r\nvar HomeBasedPaymentCompleted = false;\r\nvar BrickMortarPaymentCompleted = false;\r\nvar LoanPayed = false;\r\nvar TotalPayDayAmount = 0;\r\nvar DoublePayDay = false;\r\n\r\nvar GameplayUIManager = cc.Class({\r\n  name: \"GameplayUIManager\",\r\n  extends: cc.Component,\r\n  properties: {\r\n    BusinessSetupData: {\r\n      default: null,\r\n      type: BusinessSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BusinessSetupUI class\",\r\n    },\r\n    TurnDecisionSetupUI: {\r\n      default: null,\r\n      type: TurnDecisionSetupUI,\r\n      serializable: true,\r\n      tooltip: \"reference of TurnDecisionSetupUI class\",\r\n    },\r\n    InvestSellSetupUI: {\r\n      default: null,\r\n      type: InvestSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    PayDaySetupUI: {\r\n      default: null,\r\n      type: PayDayUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestSellUI class\",\r\n    },\r\n    SellBusinessSetupUI: {\r\n      default: {},\r\n      type: SellBusinessUI,\r\n      serializable: true,\r\n      tooltip: \"reference of SellBusinessUI class\",\r\n    },\r\n    InvestSetupUI: {\r\n      default: {},\r\n      type: InvestUI,\r\n      serializable: true,\r\n      tooltip: \"reference of InvestUI class\",\r\n    },\r\n    BuyOrSellSetupUI: {\r\n      default: {},\r\n      type: BuyOrSellUI,\r\n      serializable: true,\r\n      tooltip: \"reference of BuyOrSellUI class\",\r\n    },\r\n    OneQuestionSetupUI: {\r\n      default: {},\r\n      type: OneQuestionUI,\r\n      serializable: true,\r\n      tooltip: \"reference of OneQuestionUI class\",\r\n    },\r\n    PartnershipSetupUI: {\r\n      default: {},\r\n      type: PartnershipUI,\r\n      serializable: true,\r\n      tooltip: \"reference of PartnershipUI class\",\r\n    },\r\n    PopUpUI: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for pop up screen\",\r\n    },\r\n    PopUpUILabel: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for pop up screen\",\r\n    },\r\n    BusinessSetupNode: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for business setup screen\",\r\n    },\r\n    GameplayUIScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for gameplay ui screen\",\r\n    },\r\n    DecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Decision screen\",\r\n    },\r\n    InvestSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest & sell screen\",\r\n    },\r\n    PayDayScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for PayDay screen\",\r\n    },\r\n    SellBusinessScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for SellBusiness screen\",\r\n    },\r\n    InvestScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for Invest screen\",\r\n    },\r\n    BuyOrSellScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for BuyOrSell screen\",\r\n    },\r\n    OneQuestionSpaceScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionSpace screen\",\r\n    },\r\n    OneQuestionDecisionScreen: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n      tooltip: \"Node reference for OneQuestionDecision screen\",\r\n    },\r\n    TempDiceText: {\r\n      default: null,\r\n      type: cc.Label,\r\n      serializable: true,\r\n      tooltip: \"label reference for dice\",\r\n    },\r\n    LeaveRoomButton: {\r\n      default: null,\r\n      type: cc.Node,\r\n      serializable: true,\r\n    },\r\n  },\r\n\r\n  onLoad() {\r\n    this.CheckReferences();\r\n\r\n    //local variables\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n    this.IsBotTurn = false;\r\n    this.IsBankrupted = false;\r\n    this.BankruptedAmount = 0;\r\n  },\r\n\r\n  ResetTurnVariable() {\r\n    this.GoldInvested = false;\r\n    this.GoldSold = false;\r\n    this.StockInvested = false;\r\n    this.StockSold = false;\r\n  },\r\n\r\n  CheckReferences() {\r\n    if (!GamePlayReferenceManager || GamePlayReferenceManager == null)\r\n      GamePlayReferenceManager = require(\"GamePlayReferenceManager\");\r\n\r\n    if (!GameManager || GameManager == null)\r\n      GameManager = require(\"GameManager\");\r\n  },\r\n\r\n  onEnable: function () {\r\n    //events subscription to be called\r\n    cc.systemEvent.on(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  onDisable: function () {\r\n    cc.systemEvent.off(\"SyncData\", this.SyncData, this);\r\n  },\r\n\r\n  //#region Spectate UI Setup\r\n  InitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = true;\r\n  },\r\n\r\n  CloseInitialScreen_SpectateMode() {\r\n    this.BusinessSetupData.WaitingStatusNode.active = false;\r\n  },\r\n\r\n  ToggleLeaveRoomButton_SpectateModeUI(_state) {\r\n    this.LeaveRoomButton.active = _state;\r\n  },\r\n\r\n  OnLeaveButtonClicked_SpectateModeUI() {\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(\r\n      true\r\n    );\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n    setTimeout(() => {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n      GamePlayReferenceManager.Instance.RemovePersistNode();\r\n      cc.director.loadScene(\"Splash\");\r\n    }, 500);\r\n  },\r\n  //#endregion\r\n\r\n  //#region BusinessSetup with loan\r\n  //Business setup ui//------------------------\r\n  StartNewBusiness_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false,\r\n    _BankruptAmount = 0\r\n  ) {\r\n    //called first time form GameManager onload function\r\n    this.CheckReferences();\r\n    this.BusinessSetupNode.active = true;\r\n\r\n    this.IsBankrupted = _isBankrupted;\r\n    this.BankruptedAmount = _BankruptAmount;\r\n\r\n    if (_isBankrupted) this.ResetTurnVariable();\r\n\r\n    this.Init_BusinessSetup(isFirstTime, insideGame, modeIndex, _isBankrupted);\r\n  },\r\n  Init_BusinessSetup: function (\r\n    isFirstTime,\r\n    insideGame = false,\r\n    modeIndex = 0,\r\n    _isBankrupted = false\r\n  ) {\r\n    PlayerDataIntance = new GameManager.PlayerData();\r\n    PlayerBusinessDataIntance = new GameManager.BusinessInfo();\r\n\r\n    if (isFirstTime) {\r\n      this.BusinessSetupData.ExitButtonNode.active = false;\r\n      this.BusinessSetupData.TimerNode.active = true;\r\n      PlayerDataIntance.Cash = 20000;\r\n    }\r\n\r\n    this.ResetButtonStates_BusinessSetup();\r\n\r\n    if (insideGame) {\r\n      this.BusinessSetupData.ExitButtonNode.active = true;\r\n      this.BusinessSetupData.TimerNode.active = false;\r\n\r\n      for (\r\n        let index = 0;\r\n        index <\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo\r\n          .length;\r\n        index++\r\n      ) {\r\n        if (\r\n          GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData\r\n            .userID ==\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            index\r\n          ].PlayerUID\r\n        ) {\r\n          InsideGameBusinessSetup = index;\r\n          PlayerDataIntance = GamePlayReferenceManager.Instance.Get_GameManager()\r\n            .PlayerGameInfo[index];\r\n          this.OnChangeName_BusinessSetup(\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              index\r\n            ].PlayerName\r\n          );\r\n          this.OnChangeUID_BusinessSetup(\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              index\r\n            ].PlayerUID\r\n          );\r\n          this.OnChangeCash_BusinessSetup(\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              index\r\n            ].Cash\r\n          );\r\n        }\r\n      }\r\n    } else {\r\n      InsideGameBusinessSetup = -1;\r\n      this.OnChangeName_BusinessSetup(\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name\r\n      );\r\n      this.OnChangeUID_BusinessSetup(\r\n        GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID\r\n      );\r\n      this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n    }\r\n  },\r\n  GetObj_BusinessSetup: function () {\r\n    return this.BusinessSetupData;\r\n  },\r\n  OnChangeName_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n    PlayerDataIntance.PlayerName = name;\r\n  },\r\n  OnChangeUID_BusinessSetup: function (UID) {\r\n    PlayerDataIntance.PlayerUID = UID;\r\n  },\r\n  OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessTypeTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessTypeDescription = name;\r\n  },\r\n  OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n    this.BusinessSetupData.BusinessNameTextUI = name;\r\n    PlayerBusinessDataIntance.BusinessName = name;\r\n  },\r\n  ResetButtonStates_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BusinessTypeLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameLabel.string = \"\";\r\n    this.BusinessSetupData.BusinessNameTextUI = \"\";\r\n    this.BusinessSetupData.BusinessTypeTextUI = \"\";\r\n    PlayerBusinessDataIntance.BusinessType = GameManager.EnumBusinessType.none;\r\n  },\r\n  OnHomeBasedSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = true;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = false;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =\r\n      GameManager.EnumBusinessType.HomeBased;\r\n  },\r\n  OnBrickMortarSelected_BusinessSetup: function () {\r\n    this.BusinessSetupData.HomeBasedNodeUI.children[0].children[1].active = false;\r\n    this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[1].active = true;\r\n\r\n    PlayerBusinessDataIntance.BusinessType =\r\n      GameManager.EnumBusinessType.brickAndmortar;\r\n  },\r\n  OnChangeCash_BusinessSetup: function (amount) {\r\n    this.BusinessSetupData.PlayerCashUI.string = \"$\" + amount;\r\n    PlayerDataIntance.Cash = amount;\r\n  },\r\n  CalculateLoan_BusinessSetup: function (amount) {\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (\r\n      let index = 0;\r\n      index < PlayerDataIntance.NoOfBusiness.length;\r\n      index++\r\n    ) {\r\n      if (PlayerDataIntance.NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (_loanTaken) {\r\n      this.ShowToast(\r\n        \"You have already taken loan of $\" +\r\n          PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount\r\n      );\r\n    } else {\r\n      if (PlayerDataIntance.Cash >= amount) {\r\n        this.ShowToast(\r\n          \"You do not need loan, you have enough cash to buy current selected business.\"\r\n        );\r\n      } else {\r\n        this.BusinessSetupData.LoanSetupNode.active = true;\r\n        RequiredCash = Math.abs(parseInt(PlayerDataIntance.Cash) - amount);\r\n        this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(\r\n          cc.Label\r\n        ).string = \"$\" + RequiredCash;\r\n      }\r\n    }\r\n  },\r\n  OnLoanButtonClicked_BusinessSetup: function (event) {\r\n    if (\r\n      PlayerBusinessDataIntance.BusinessType ==\r\n      GameManager.EnumBusinessType.brickAndmortar\r\n    ) {\r\n      this.CalculateLoan_BusinessSetup(50000);\r\n    } else if (\r\n      PlayerBusinessDataIntance.BusinessType ==\r\n      GameManager.EnumBusinessType.HomeBased\r\n    ) {\r\n      this.CalculateLoan_BusinessSetup(10000);\r\n    } else {\r\n      this.ShowToast(\r\n        \"please select business between Home Based and brick & mortar. \"\r\n      );\r\n    }\r\n  },\r\n  OnLoanBackButtonClicked_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanSetupNode.active = false;\r\n  },\r\n  HighLightLoanSelection_BusinessSetup: function (index) {\r\n    for (var i = 0; i < this.BusinessSetupData.LoanAmountLabel.length; i++) {\r\n      if (index == i)\r\n        this.BusinessSetupData.LoanAmountLabel[i].children[0].active = true;\r\n      else this.BusinessSetupData.LoanAmountLabel[i].children[0].active = false;\r\n    }\r\n  },\r\n  OnLoanAmountChoosed_01_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.Other;\r\n    this.HighLightLoanSelection_BusinessSetup(0);\r\n  },\r\n  OnLoanAmountChoosed_02_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TenThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(1);\r\n  },\r\n  OnLoanAmountChoosed_03_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.TentyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(2);\r\n  },\r\n  OnLoanAmountChoosed_04_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.ThirtyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(3);\r\n  },\r\n  OnLoanAmountChoosed_05_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FortyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(4);\r\n  },\r\n  OnLoanAmountChoosed_06_BusinessSetup: function (event) {\r\n    this.BusinessSetupData.LoanAmount = LoanAmountEnum.FiftyThousand;\r\n    this.HighLightLoanSelection_BusinessSetup(5);\r\n  },\r\n  OnTakenLoanClicked_BusinessSetup: function (event) {\r\n    if (this.BusinessSetupData.LoanAmount == LoanAmountEnum.Other)\r\n      PlayerBusinessDataIntance.LoanAmount = RequiredCash;\r\n    else\r\n      PlayerBusinessDataIntance.LoanAmount = parseInt(\r\n        this.BusinessSetupData.LoanAmount\r\n      );\r\n\r\n    PlayerBusinessDataIntance.LoanTaken = true;\r\n    this.OnLoanBackButtonClicked_BusinessSetup();\r\n    PlayerDataIntance.Cash =\r\n      PlayerDataIntance.Cash + PlayerBusinessDataIntance.LoanAmount;\r\n    this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash);\r\n  },\r\n\r\n  SyncData: function (_data, _ID) {\r\n    if (\r\n      _ID !=\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor()\r\n        .actorNr\r\n    )\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(\r\n        _data\r\n      );\r\n\r\n    console.log(\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo\r\n    );\r\n\r\n    if (\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo\r\n        .length >=\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers\r\n    ) {\r\n      //setting room property to declare initial setup has been\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\"InitialSetup\", true, true);\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .getPhotonRef()\r\n        .myRoom()\r\n        .setCustomProperty(\r\n          \"PlayerGameInfo\",\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo,\r\n          true\r\n        );\r\n      this.BusinessSetupData.WaitingStatusNode.active = false;\r\n      this.BusinessSetupNode.active = false;\r\n      this.GameplayUIScreen.active = true;\r\n\r\n      GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n      console.log(\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo\r\n      );\r\n    }\r\n  },\r\n\r\n  PurchaseBusiness: function (_amount, _businessName, _isHomeBased) {\r\n    if (PlayerDataIntance.Cash < _amount) {\r\n      this.ShowToast(\r\n        \"You have not enough cash to buy this \" + _businessName + \" business.\"\r\n      );\r\n    } else {\r\n      if (_isHomeBased) {\r\n        if (PlayerDataIntance.HomeBasedAmount < 3) {\r\n          PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n          this.BusinessSetupData.PlayerCashUI.string =\r\n            \"$\" + PlayerDataIntance.Cash;\r\n          this.StartGame = true;\r\n          PlayerDataIntance.HomeBasedAmount++;\r\n        } else {\r\n          this.StartGame = false;\r\n          this.ShowToast(\r\n            \"You cannot own more than three Home based businesses\"\r\n          );\r\n        }\r\n      } else {\r\n        PlayerDataIntance.Cash = PlayerDataIntance.Cash - _amount;\r\n        this.BusinessSetupData.PlayerCashUI.string =\r\n          \"$\" + PlayerDataIntance.Cash;\r\n        this.StartGame = true;\r\n        PlayerDataIntance.BrickAndMortarAmount++;\r\n      }\r\n    }\r\n  },\r\n\r\n  Exit_BusinessSetup: function () {\r\n    this.BusinessSetupNode.active = false;\r\n\r\n    if (PlayerBusinessDataIntance.LoanTaken) {\r\n      PlayerBusinessDataIntance.LoanTaken = false;\r\n      PlayerDataIntance.Cash =\r\n        PlayerDataIntance.Cash - PlayerBusinessDataIntance.LoanAmount;\r\n      PlayerBusinessDataIntance.LoanAmount = 0;\r\n      this.ShowToast(\"Reverting back loan amount.\", 500);\r\n    }\r\n  },\r\n\r\n  InitialSetup_BusinessSetup: function () {\r\n    var _mode = GamePlayReferenceManager.Instance.Get_MultiplayerController().GetSelectedMode();\r\n\r\n    if (this.IsBankrupted) {\r\n      PlayerDataIntance.IsBankrupt = true;\r\n      PlayerDataIntance.BankruptAmount = this.BankruptedAmount;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()\r\n      ] = PlayerDataIntance;\r\n    } else {\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(\r\n        PlayerDataIntance\r\n      );\r\n    }\r\n\r\n    if (_mode == 2) {\r\n      //for real players\r\n      //setting player current data in custom properties when his/her turn overs\r\n      GamePlayReferenceManager.Instance.Get_MultiplayerController()\r\n        .PhotonActor()\r\n        .setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n\r\n      if (!this.IsBankrupted) {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(\r\n          1,\r\n          PlayerDataIntance\r\n        );\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n\r\n        var _data = {\r\n          Data: {\r\n            bankrupted: true,\r\n            turn: GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber(),\r\n            PlayerDataMain: PlayerDataIntance,\r\n          },\r\n        };\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(\r\n          9,\r\n          _data\r\n        );\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else if (_mode == 1) {\r\n      //for AI\r\n      if (!this.IsBankrupted) {\r\n        this.BusinessSetupData.WaitingStatusNode.active = true;\r\n        setTimeout(() => {\r\n          this.BusinessSetupData.WaitingStatusNode.active = false;\r\n          this.BusinessSetupNode.active = false;\r\n          this.GameplayUIScreen.active = true;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n        }, 1600);\r\n      } else {\r\n        this.BusinessSetupData.WaitingStatusNode.active = false;\r\n        this.BusinessSetupNode.active = false;\r\n        this.GameplayUIScreen.active = true;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().StartTurnAfterBankrupt();\r\n      }\r\n    } else {\r\n      console.error(\"no mode selected\");\r\n    }\r\n  },\r\n\r\n  StartNewSetup_DuringGame_BusinessSetup: function () {\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n      InsideGameBusinessSetup\r\n    ] = PlayerDataIntance;\r\n    this.BusinessSetupNode.active = false;\r\n    InsideGameBusinessSetup = -1;\r\n    this.ToggleDecision_TurnDecision(true);\r\n  },\r\n\r\n  PayAmountToPlayGame: function () {\r\n    this.StartGame = false;\r\n\r\n    if (PlayerBusinessDataIntance.BusinessTypeDescription == \"\")\r\n      this.ShowToast(\"please write a business type.\");\r\n    else if (PlayerBusinessDataIntance.BusinessName == \"\")\r\n      this.ShowToast(\"please write a business name.\");\r\n    else {\r\n      if (\r\n        PlayerBusinessDataIntance.BusinessType ==\r\n        GameManager.EnumBusinessType.HomeBased\r\n      )\r\n        //if selected business is homebassed\r\n        this.PurchaseBusiness(10000, \"home\", true);\r\n      else if (\r\n        PlayerBusinessDataIntance.BusinessType ==\r\n        GameManager.EnumBusinessType.brickAndmortar\r\n      )\r\n        //if selected business is brick and mortar\r\n        this.PurchaseBusiness(50000, \"brick and mortar\", false);\r\n\r\n      if (this.StartGame == true || this.IsBankrupted == true) {\r\n        PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n        if (InsideGameBusinessSetup != -1)\r\n          //if start new business has not been called from inside game\r\n          this.StartNewSetup_DuringGame_BusinessSetup();\r\n        //if start new business has been called at start of game as initial setup\r\n        else this.InitialSetup_BusinessSetup();\r\n\r\n        //prtinting all values to console\r\n        for (\r\n          var i = 0;\r\n          i <\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo\r\n            .length;\r\n          i++\r\n        ) {\r\n          console.log(\r\n            \"player name: \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[i].PlayerName\r\n          );\r\n          console.log(\r\n            \"player ID: \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[i].PlayerUID\r\n          );\r\n          console.log(\r\n            \"Is player bot: \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[i].IsBot\r\n          );\r\n          console.log(\"no of business of player (see below): \");\r\n          console.log(\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              i\r\n            ].NoOfBusiness\r\n          );\r\n          console.log(\r\n            \"player cash: \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[i].Cash\r\n          );\r\n          console.log(\r\n            \"player taken loan: \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[i].LoanTaken\r\n          );\r\n          console.log(\r\n            \"taken loan amount: \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[i].LoanAmount\r\n          );\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region TurnDecisionSetupUI\r\n  //TurnDecisionSetupUI//------------------------\r\n  ToggleDecision_TurnDecision: function (isactive) {\r\n    this.DecisionScreen.active = isactive;\r\n    this.UpdateCash_TurnDecision();\r\n  },\r\n\r\n  UpdateCash_TurnDecision: function () {\r\n    this.TurnDecisionSetupUI.CashAmountLabel.string =\r\n      \"$ \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()\r\n      ].Cash;\r\n  },\r\n\r\n  OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    TempMarketingAmount = amount;\r\n  },\r\n\r\n  OnMarketingAmountSelected_TurnDecision: function () {\r\n    if (TempMarketingAmount == \"\" || TempMarketingAmount == null) {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      this.marketingAmount = parseInt(TempMarketingAmount);\r\n      console.log(\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash\r\n      );\r\n\r\n      //if player entered amount is greater than total cash he owns\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= this.marketingAmount\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - this.marketingAmount;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].MarketingAmount =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].MarketingAmount + this.marketingAmount;\r\n        this.ShowToast(\r\n          \"you successfully marketed amount of $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].MarketingAmount +\r\n            \" , remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\"\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      } else {\r\n        this.ShowToast(\"you don't have enough money.\");\r\n\r\n        //reseting marketing label and its holding variable\r\n        this.TurnDecisionSetupUI.MarketingEditBox.string = \"\";\r\n        TempMarketingAmount = \"\";\r\n      }\r\n    }\r\n  },\r\n\r\n  OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n    // if player has more than 5000$\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    if (\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n        _playerIndex\r\n      ].LawyerStatus\r\n    ) {\r\n      this.ShowToast(\"you have already hired a lawyer.\");\r\n    } else {\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash >= 5000\r\n      ) {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].LawyerStatus = true;\r\n        TempHiringLawyer = true;\r\n        console.log(TempHiringLawyer);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].Cash =\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash - 5000;\r\n        this.ShowToast(\r\n          \"you have successfully hired a lawyer, remaining cash is $\" +\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash +\r\n            \".\"\r\n        );\r\n        this.UpdateCash_TurnDecision();\r\n      } else {\r\n        this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n      }\r\n    }\r\n  },\r\n\r\n  onLocationNameChanged_ExpandBusiness_TurnDecision(_name) {\r\n    LocationName = _name;\r\n  },\r\n  OnExpandButtonClicked_TurnDecision: function () {\r\n    //if player has brick and mortar business he could expand it\r\n    console.log(\"expand business\");\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = true;\r\n    var generatedLength = GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision();\r\n\r\n    if (generatedLength == 0) {\r\n      this.ShowToast(\"You have no brick and mortar business to expand.\", 1500);\r\n      setTimeout(() => {\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n      }, 1600);\r\n    }\r\n  },\r\n\r\n  OnExpandButtonExitClicked_TurnDecision: function () {\r\n    this.UpdateCash_TurnDecision();\r\n    this.CheckReferences();\r\n    LocationName = \"\";\r\n    console.log(\"expand business exit called\");\r\n    GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n    this.TurnDecisionSetupUI.ExpandBusinessNode.active = false;\r\n  },\r\n\r\n  OnNewBusinessButtonClicked_TurnDecision: function () {\r\n    console.log(\"starting new business\");\r\n    this.StartNewBusiness_BusinessSetup(false, true);\r\n  },\r\n\r\n  OnGoldAmountChanged_TurnDecision: function (amount) {\r\n    //console.log(amount);\r\n    GoldCashAmount = amount;\r\n  },\r\n\r\n  OnGoldDiceClicked_TurnDecision: function () {\r\n    if (!this.GoldInvested) {\r\n      this.GoldInvested = true;\r\n      EnterBuySellAmount = \"\";\r\n      this.ToggleInvestSellScreen_InvestSell(true);\r\n      this.InvestSellSetupUI.InvestState = InvestEnum.GoldInvest;\r\n      DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n      OnceOrShare = DiceResult * 1000;\r\n\r\n      this.AssignData_InvestSell(\r\n        \"Invest In GOLD\",\r\n        DiceResult,\r\n        \"Each Ounce of GOLD price is:\",\r\n        OnceOrShare + \"/ounce\",\r\n        \"Enter the number of ounce of GOLD you want to BUY\",\r\n        \"Total Buying Amount:\",\r\n        OnceOrShare + \"*0=0\",\r\n        \"BUY\",\r\n        this.InvestSellSetupUI.InvestState\r\n      );\r\n    } else {\r\n      this.ShowToast(\"You can invest in gold one time during turn.\", 800);\r\n    }\r\n  },\r\n\r\n  OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n    StockBusinessName = name;\r\n  },\r\n\r\n  OnStockDiceClicked_TurnDecision: function () {\r\n    if (!this.StockInvested) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (StockBusinessName == \"\") {\r\n        this.ResetStockBusinessNameInput();\r\n        this.ShowToast(\"Please enter a business name to invest.\");\r\n      } else {\r\n        this.StockInvested = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockInvest;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Invest in Stock\",\r\n          DiceResult,\r\n          \"Each Share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to BUY\",\r\n          \"Total Buying Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"BUY\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can invest in stocks one time during turn.\", 800);\r\n    }\r\n  },\r\n\r\n  OnSellGoldClicked_TurnDecision: function () {\r\n    if (!this.GoldSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].GoldCount > 0\r\n      ) {\r\n        this.GoldSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.GoldSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell GOLD\",\r\n          DiceResult,\r\n          \"Each Ounce of GOLD price is:\",\r\n          OnceOrShare + \"/ounce\",\r\n          \"Enter the number of ounce of GOLD you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\r\n          \"you have not purchased any GOLD ounces, please buy them.\"\r\n        );\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell gold one time during turn.\", 800);\r\n    }\r\n  },\r\n\r\n  OnSellStockClicked_TurnDecision: function () {\r\n    if (!this.StockSold) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n          _playerIndex\r\n        ].StockCount > 0\r\n      ) {\r\n        this.StockSold = true;\r\n        EnterBuySellAmount = \"\";\r\n        this.ToggleInvestSellScreen_InvestSell(true);\r\n        this.InvestSellSetupUI.InvestState = InvestEnum.StockSell;\r\n        DiceResult = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n        OnceOrShare = DiceResult * 1000;\r\n\r\n        this.AssignData_InvestSell(\r\n          \"Sell STOCK\",\r\n          DiceResult,\r\n          \"Each share of stock price is:\",\r\n          OnceOrShare + \"/share\",\r\n          \"Enter the number of shares of stock you want to SELL\",\r\n          \"Total Selling Amount:\",\r\n          OnceOrShare + \"*0=0\",\r\n          \"SELL\",\r\n          this.InvestSellSetupUI.InvestState\r\n        );\r\n      } else {\r\n        this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n      }\r\n    } else {\r\n      this.ShowToast(\"You can sell stocks one time during turn.\", 800);\r\n    }\r\n  },\r\n\r\n  OnPartnershipClicked_TurnDecision: function () {\r\n    console.log(\"go into partner ship\");\r\n    // this.ShowToast(\"work in progress, coming soon...\");\r\n    // var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    this.EnablePartnership_PartnerShipSetup();\r\n  },\r\n\r\n  OnRollDiceClicked_TurnDecision: function () {\r\n    console.log(\"roll the dice\");\r\n    this.ToggleDecision_TurnDecision(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n  },\r\n\r\n  PrintDiceValue_TurnDecision: function (value) {\r\n    //this.TempDiceText.string=value;\r\n  },\r\n  //#endregion\r\n\r\n  //#region Partnership setup\r\n  ToggleScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.MainScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.WaitingStatusScreen.active = _state;\r\n  },\r\n\r\n  ToggleDecisionScreen_PartnerShipSetup(_state) {\r\n    this.PartnershipSetupUI.DecisionScreen.active = _state;\r\n  },\r\n\r\n  EnablePartnership_PartnerShipSetup() {\r\n    CancelledID = [];\r\n    this.Reset_PartnerShipSetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n    this.ToggleScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.PlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.PlayerCash.string =\"$\"+_tempData.Cash;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.PartnershipSetupUI.PartnerShipPrefab);\r\n      node.parent = this.PartnershipSetupUI.ScrollContent;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      var _totalLocations = _tempData.NoOfBusiness[index].LocationsName.length;\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(10000);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(10000);\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n        var _allLocationsAmount = _totalLocations * 25000;\r\n        var _finalAmount = 50000 + _allLocationsAmount;\r\n        node.getComponent(\"BusinessDetail\").SetBusinessValue(_finalAmount);\r\n        node.getComponent(\"BusinessDetail\").SetFinalBusinessValue(_finalAmount);\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].LoanAmount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].IsPartnership == true) {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(false);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(_tempData.NoOfBusiness[index].PartnerName);\r\n      }\r\n      else {\r\n        node.getComponent(\"BusinessDetail\").TogglePartnerShipButton(true);\r\n        node.getComponent(\"BusinessDetail\").SetPartnerName(\"none\");\r\n      }\r\n\r\n      businessDetailPartnershipNodes.push(node);\r\n      \r\n    }\r\n  },\r\n\r\n  EnablePartnershipDecision_PartnerShipSetup(_msg) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = _manager.GetTurnNumber();\r\n    var _tempData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    this.ToggleDecisionScreen_PartnerShipSetup(true);\r\n    this.PartnershipSetupUI.DecisionPlayerName.string =_tempData.PlayerName;\r\n    this.PartnershipSetupUI.DecisionPlayerCash.string =\"$\"+_tempData.Cash;\r\n    this.PartnershipSetupUI.DecisionDescription.string = _msg;\r\n  },\r\n\r\n  Exit_PartnerShipSetup() {\r\n    this.Reset_PartnerShipSetup();\r\n    this.ToggleScreen_PartnerShipSetup(false);\r\n  },\r\n  \r\n  Reset_PartnerShipSetup()\r\n  {\r\n    for (let index = 0; index < businessDetailPartnershipNodes.length; index++) {\r\n      businessDetailPartnershipNodes[index].destroy();\r\n    }\r\n    businessDetailPartnershipNodes = [];\r\n  },\r\n\r\n  ReceiveEvent_PartnershipSetup(_data)\r\n  {\r\n    PartnerShipOfferReceived = true;\r\n    PartnerShipData = _data;\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor();\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 1)\r\n      _businessMode = \"Home Based\";\r\n    else if (_playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessType == 2)\r\n      _businessMode = \"Brick & Mortar\";\r\n      \r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false)\r\n    {\r\n      var _msg = \"you have received partnership offer by \" + _playerData.PlayerName + \" , following are the details of business: \" + \"\\n\" + \"\\n\" +\r\n        \"Business Name: \" + _playerData.NoOfBusiness[_SelectedBusinessIndex].BusinessName + \"\\n\" +\r\n        \"Business Mode: \" + _businessMode + \"\\n\" +\r\n        \"Business Value: $\" + _businessValue + \"\\n\" +\r\n        \"Cash Payment: $\" + _payAmount + \"\\n\" + \"\\n\" +\r\n        \"if offer is accepted you will receive 50% share of that particular business and will receive profit/lose on that particular business.\";\r\n    \r\n      this.EnablePartnershipDecision_PartnerShipSetup(_msg);\r\n    }\r\n\r\n  },\r\n\r\n  AcceptOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _allActors = GamePlayReferenceManager.Instance.Get_MultiplayerController().RoomActors();\r\n    var _actor = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n    var _data = PartnerShipData;\r\n    var _turn = _data.Data.Turn;\r\n    var _playerData = _data.Data.PlayerData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var _businessValue = _data.Data.BusValue;\r\n    var _payAmount = _businessValue / 2;\r\n    var _businessMode = \"\";\r\n\r\n    var myIndex = _manager.GetMyIndex();\r\n  \r\n    if (PartnerShipOfferReceived == true) {\r\n      if (_manager.PlayerGameInfo[myIndex].Cash >= _payAmount) {\r\n        _manager.PlayerGameInfo[myIndex].Cash -= _payAmount;\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[myIndex]);\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(true, _payAmount, false, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"congratulations! you have started business partnership\",1800);\r\n      } else {\r\n        this.ShowToast(\"Not enough cash.\", 500);\r\n      }\r\n    } else\r\n    {\r\n      this.ShowToast(\"Offer has been accepted by other player.\");\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      }\r\n  },\r\n\r\n  CancelOffer_PartnershipSetup()\r\n  {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _data = PartnerShipData;\r\n    var _SelectedBusinessIndex = _data.Data.SelectedBusinsessIndex;\r\n    var myIndex = _manager.GetMyIndex();\r\n    console.log(_manager.PlayerGameInfo[myIndex].PlayerUID);\r\n    if (PartnerShipOfferReceived == true) {\r\n        this.RaiseEventDecisionAnswer_PartnershipSetup(false, 0, true, _manager.PlayerGameInfo[myIndex].PlayerUID, _manager.PlayerGameInfo[myIndex], _SelectedBusinessIndex);\r\n        this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        this.ShowToast(\"you have cancelled the offer.\",1200);\r\n    } else\r\n    {\r\n      this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n      this.ShowToast(\"you have cancelled the offer.\",1200);\r\n    }\r\n  },\r\n\r\n  RaiseEventDecisionAnswer_PartnershipSetup(_isAccepted=false,_payment=0,_isCancelled=false,_uID=\"\",_data=null,_businessIndex=0)\r\n  {\r\n    var _mainData = { Data: { Accepted: _isAccepted, CashPayment:_payment,Cancelled:_isCancelled,PlayerID:_uID,PlayerData:_data,BusinessIndex:_businessIndex} };\r\n    GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(12, _mainData);\r\n  },\r\n\r\n  ReceiveEventDecisionAnswer_PartnershipSetup(_data)\r\n  {\r\n    if (GamePlayReferenceManager.Instance.Get_MultiplayerController().CheckSpectate() == false) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = _manager.GetTurnNumber();\r\n\r\n      console.log(_data);\r\n      var _accepted = _data.Data.Accepted;\r\n      var _cash = _data.Data.CashPayment;\r\n      var _cancelled = _data.Data.Cancelled;\r\n      var _uid = _data.Data.PlayerID;\r\n      var _playerData = _data.Data.PlayerData;\r\n      var _businessIndex = _data.Data.BusinessIndex;\r\n    \r\n      console.log(\"answer received\");\r\n      if(_manager.PlayerGameInfo[_playerIndex].PlayerUID==GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.Data.userID)\r\n      {\r\n        if (_accepted) {\r\n          this.ToggleScreen_PartnerShipSetup(false);\r\n          this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n          _manager.PlayerGameInfo[_playerIndex].Cash += _cash;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].IsPartnership = true;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerID = _uid;\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].PartnerName = _playerData.PlayerName;\r\n          GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", _manager.PlayerGameInfo[_playerIndex]);\r\n\r\n          console.log(\"offer accepted\");\r\n          this.ShowToast(\"your partnership offer has been accepted by \" + _playerData.PlayerName + \", cash $\" + _cash + \" has been added to your account.\", 2800);\r\n          this.UpdateCash_TurnDecision();\r\n        } else if (_cancelled) {\r\n          if (CancelledID.includes(_uid) == false)\r\n              CancelledID.push(_uid);\r\n        \r\n          console.log(CancelledID);\r\n          if (CancelledID.length == _manager.PlayerGameInfo.length - 1) {\r\n            this.ToggleScreen_PartnerShipSetup(false);\r\n            this.ToggleWaitingScreen_PartnerShipSetup(false);\r\n            this.ShowToast(\"your partnership offer has been cancelled by all other users.\", 2800);\r\n          }\r\n\r\n          console.log(\"offer rejected\");\r\n        }\r\n      } else {\r\n        if (_accepted) {\r\n          PartnerShipOfferReceived = false;\r\n          this.ShowToast(\"Offer has been accepted by other player.\", 1800);\r\n          this.ToggleDecisionScreen_PartnerShipSetup(false);\r\n        } else if (_cancelled) {\r\n        }\r\n      }\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Invest and sell moddule\r\n\r\n  ResetGoldInput() {\r\n    this.TurnDecisionSetupUI.GoldEditBox.string = \"\";\r\n    GoldCashAmount = \"\";\r\n  },\r\n\r\n  ResetStockBusinessNameInput() {\r\n    this.TurnDecisionSetupUI.StockEditBox.string = \"\";\r\n    StockBusinessName = \"\";\r\n  },\r\n\r\n  onAmountChanged_InvestSell(_amount) {\r\n    EnterBuySellAmount = _amount;\r\n\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n    } else {\r\n      var _amount = parseInt(EnterBuySellAmount);\r\n      var _amount = OnceOrShare * _amount;\r\n      this.UpdateData_InvestSell(\r\n        OnceOrShare + \"*\" + EnterBuySellAmount + \"=\" + _amount\r\n      );\r\n    }\r\n  },\r\n\r\n  ToggleInvestSellScreen_InvestSell(_state) {\r\n    this.InvestSellScreen.active = _state;\r\n    this.UpdateCash_TurnDecision();\r\n    this.ResetGoldInput();\r\n    this.ResetStockBusinessNameInput();\r\n  },\r\n\r\n  AssignData_InvestSell(\r\n    _title,\r\n    _diceResult,\r\n    _priceTitle,\r\n    _priceValue,\r\n    _buyOrSellTitle,\r\n    _totalAmountTitle,\r\n    _totalAmountValue,\r\n    _buttonName,\r\n    _state\r\n  ) {\r\n    this.CheckReferences();\r\n    this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n    this.InvestSellSetupUI.TitleLabel.string = _title;\r\n    this.InvestSellSetupUI.DiceResultLabel.string = _diceResult;\r\n    this.InvestSellSetupUI.PriceTitleLabel.string = _priceTitle;\r\n    this.InvestSellSetupUI.PriceValueLabel.string = _priceValue;\r\n    this.InvestSellSetupUI.BuyOrSellTitleLabel.string = _buyOrSellTitle;\r\n    this.InvestSellSetupUI.TotalAmountTitleLabel.string = _totalAmountTitle;\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n    this.InvestSellSetupUI.ButtonNameLabel.string = _buttonName;\r\n  },\r\n\r\n  UpdateData_InvestSell(_totalAmountValue) {\r\n    this.InvestSellSetupUI.TotalAmountValueLabel.string = _totalAmountValue;\r\n  },\r\n\r\n  ApplyButton_InvestSell() {\r\n    if (EnterBuySellAmount == \"\") {\r\n      this.ShowToast(\"Please enter an amount.\");\r\n    } else {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n      if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (\r\n          _TotalAmount <=\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n        ) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash - _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].GoldCount =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].GoldCount + _amount;\r\n          this.ShowToast(\r\n            \"You have successfully bought \" + _amount + \" ounces of GOLD\",\r\n            1400\r\n          );\r\n          setTimeout(() => {\r\n            this.ToggleInvestSellScreen_InvestSell(false);\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.GoldSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        if (\r\n          _amount <=\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].GoldCount\r\n        ) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash + _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].GoldCount =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].GoldCount - _amount;\r\n          this.ShowToast(\r\n            \"You have successfully sold \" +\r\n              _amount +\r\n              \" ounces of GOLD for  $\" +\r\n              _TotalAmount,\r\n            1400\r\n          );\r\n          setTimeout(() => {\r\n            this.ToggleInvestSellScreen_InvestSell(false);\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\r\n            \"you don't have enough GOLD ounces, you own \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[_playerIndex].GoldCount +\r\n              \" of GOLD ounces\"\r\n          );\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockInvest) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n        var _TotalAmount = OnceOrShare * _amount;\r\n        if (\r\n          _TotalAmount <=\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n        ) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash - _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].StockCount =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].StockCount + _amount;\r\n          //can add multiple stocks with business name in object if required\r\n\r\n          this.ShowToast(\r\n            \"You have successfully bought \" +\r\n              _amount +\r\n              \" shares of business \" +\r\n              StockBusinessName,\r\n            1400\r\n          );\r\n          setTimeout(() => {\r\n            this.ToggleInvestSellScreen_InvestSell(false);\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\"You don't have enough cash.\");\r\n        }\r\n      } else if (this.InvestSellSetupUI.InvestState == InvestEnum.StockSell) {\r\n        var _amount = parseInt(EnterBuySellAmount);\r\n\r\n        if (\r\n          _amount <=\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].StockCount\r\n        ) {\r\n          var _TotalAmount = OnceOrShare * _amount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].Cash + _TotalAmount;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].StockCount =\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n              _playerIndex\r\n            ].StockCount - _amount;\r\n\r\n          this.ShowToast(\r\n            \"You have successfully sold \" +\r\n              _amount +\r\n              \" shares of stock for  $\" +\r\n              _TotalAmount,\r\n            1400\r\n          );\r\n          setTimeout(() => {\r\n            this.ToggleInvestSellScreen_InvestSell(false);\r\n          }, 1500);\r\n        } else {\r\n          this.UpdateData_InvestSell(OnceOrShare + \"*0=0\");\r\n          EnterBuySellAmount = \"\";\r\n          this.InvestSellSetupUI.AmountEditBox.string = \"\";\r\n          this.ShowToast(\r\n            \"you don't have enough stocks shares, you own \" +\r\n              GamePlayReferenceManager.Instance.Get_GameManager()\r\n                .PlayerGameInfo[_playerIndex].StockCount +\r\n              \" of stock shares\"\r\n          );\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  ExitButton_InvestSell() {\r\n    this.ToggleInvestSellScreen_InvestSell(false);\r\n  },\r\n  //#endregion\r\n\r\n  //#region Payday or Double pay Day\r\n  TogglePayDayScreen_PayDay(_state) {\r\n    this.PayDayScreen.active = _state;\r\n  },\r\n\r\n  ToggleResultPanelScreen_PayDay(_state) {\r\n    this.PayDaySetupUI.ResultPanelNode.active = _state;\r\n  },\r\n\r\n  UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken) {\r\n    if (HMAmount == 0) {\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = false;\r\n    } else {\r\n      HomeBasedPaymentCompleted = false;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(\r\n        cc.Button\r\n      ).interactable = true;\r\n    }\r\n\r\n    if (BMAmount == 0) {\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      BrickMortarPaymentCompleted = false;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n\r\n    if (!loanTaken) {\r\n      LoanPayed = true;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    } else {\r\n      LoanPayed = false;\r\n      this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = true;\r\n    }\r\n  },\r\n\r\n  GetLoanAmount_PayDay() {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    var _loan = 0;\r\n    for (\r\n      let index = 0;\r\n      index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n      index++\r\n    ) {\r\n      if (_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loan =\r\n          _manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n        break;\r\n      }\r\n    }\r\n    return _loan;\r\n  },\r\n\r\n  AssignData_PayDay(_title,_isDoublePayDay = false,_skipHM = false,_skipBM = false,_isBot = false) {\r\n    this.IsBotTurn = _isBot;\r\n    DoublePayDay = _isDoublePayDay;\r\n    this.TogglePayDayScreen_PayDay(true);\r\n    this.PayDaySetupUI.TitleLabel.string = _title;\r\n    var _time = 1800;\r\n\r\n    if (_isBot == false) {\r\n      //check skip payday variables\r\n      if (_skipHM && _skipBM)\r\n        this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\",_time);\r\n      else if (_skipHM)\r\n        this.ShowToast(\"your payday on home based businessess will be skipped.\",_time);\r\n      else if (_skipBM)\r\n        this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\",_time);\r\n    } else {\r\n      //check skip payday variables\r\n      if (_skipHM && _skipBM)\r\n        console.log(\"your payday on home based and brick & mortar businessess will be skipped.\");\r\n      else if (_skipHM)\r\n        console.log(\"your payday on home based businessess will be skipped.\");\r\n      else if (_skipBM)\r\n        console.log(\"your payday on brick & mortar businessess will be skipped.\");\r\n    }\r\n\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    this.UpdateCash_PayDay(\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash\r\n    );\r\n\r\n    var HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n    var BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n    var BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n    var _loanTaken = false;\r\n    var _businessIndex = 0;\r\n\r\n    for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n      if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n        _loanTaken = true;\r\n        _businessIndex = index;\r\n        break;\r\n      }\r\n    }\r\n\r\n    var loanTaken = _loanTaken;\r\n\r\n    this.PayDaySetupUI.HomeBasedNumberLabel.string = HMAmount;\r\n    this.PayDaySetupUI.BMNumberLabel.string = BMAmount;\r\n    this.PayDaySetupUI.BMNumberLocationLabel.string = BMLocations;\r\n\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    //check if loan was skipped previously\r\n    if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment) {\r\n      var _loan = this.GetLoanAmount_PayDay();\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $\" + _loan;\r\n    } else {\r\n      this.PayDaySetupUI.LoanFotterLabel.string = \"*pay $5000\";\r\n    }\r\n\r\n    //check skip payday variables\r\n    if (_skipHM && _skipBM) this.UpdateButtons_PayDay(0, 0, loanTaken);\r\n    else if (_skipHM) this.UpdateButtons_PayDay(0, BMAmount, loanTaken);\r\n    else if (_skipBM) this.UpdateButtons_PayDay(HMAmount, 0, loanTaken);\r\n    else this.UpdateButtons_PayDay(HMAmount, BMAmount, loanTaken);\r\n\r\n    if (_skipBM || _skipHM) {\r\n      setTimeout(() => {\r\n        this.PayDayCompleted();\r\n      }, _time + 200);\r\n    }\r\n\r\n    if (_isBot) {\r\n      this.OnHomeBasedPaymentClicked_PayDay();\r\n      this.OnBMPaymentClicked_PayDay();\r\n      this.OnLoanPaymentClicked_PayDay();\r\n    }\r\n  },\r\n\r\n  OnHomeBasedPaymentClicked_PayDay() {\r\n    if (!HomeBasedPaymentCompleted) {\r\n        this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      if (!DoublePayDay)\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      else\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n\r\n      HomeBasedPaymentCompleted = true;\r\n      this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable = false;\r\n\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var HMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      //partnership code\r\n      if (DoublePayDay)\r\n        _multiplier = 2;\r\n\r\n      for (let index = 0; index < _tempData.length; index++) {\r\n        if (_tempData[index].BusinessType == 1)\r\n        {\r\n          if (_tempData[index].IsPartnership)\r\n          {\r\n            var _payment =_multiplier* _dice * 1000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }  \r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", 2000);\r\n      }\r\n      //partnership code\r\n\r\n      if (!DoublePayDay)\r\n        TotalPayDayAmount = HMAmount * _dice * 1000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = 2 * (HMAmount * _dice) * 1000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = HMAmount;\r\n\r\n      if (!DoublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + HMAmount + \"*\" + \"1000)-\"+_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + HMAmount + \"*\" + \"1000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnBMPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!BrickMortarPaymentCompleted) {\r\n      this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n      if (!DoublePayDay)\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"PayDay\";\r\n      else\r\n        this.PayDaySetupUI.ResultScreenTitleLabel.string = \"DoublePayDay\";\r\n\r\n      BrickMortarPaymentCompleted = true;\r\n      this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable = false;\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var BMAmount = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n      var BMLocations = GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n      var _amount = BMAmount + BMLocations;\r\n      var _dice = GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n\r\n      var _tempData = _manager.PlayerGameInfo[_playerIndex].NoOfBusiness;\r\n\r\n      var _amountToBeSend = 0;\r\n      var _amountToBeAdjusted = 0;\r\n      var _multiplier = 1;\r\n\r\n      if (DoublePayDay)\r\n        _multiplier = 2;\r\n\r\n      for (let index = 0; index < _tempData.length; index++) {\r\n        if (_tempData[index].BusinessType == 2)\r\n        {\r\n          if (_tempData[index].IsPartnership)\r\n          {\r\n            var _locations = _tempData[index].LocationsName.length + 1;\r\n            var _payment =_locations*_multiplier* _dice * 2000;\r\n            _amountToBeSend = (_payment / 2);\r\n            _manager.SendProfit_Partner_TurnDecision(_amountToBeSend, _tempData[index].PartnerID);\r\n            _amountToBeAdjusted += _amountToBeSend;\r\n          }  \r\n        }\r\n      }\r\n\r\n      if (_amountToBeAdjusted>0)\r\n      {\r\n        this.ShowToast(\"you have partnership in some business, respective 50% profit of particular business will be shared.\", 2000);\r\n      }\r\n\r\n      if (!DoublePayDay)\r\n        TotalPayDayAmount = _amount * _dice * 2000-_amountToBeAdjusted;\r\n      else\r\n        TotalPayDayAmount = 2 * (_amount * _dice) * 2000-_amountToBeAdjusted;\r\n\r\n      this.PayDaySetupUI.DiceResultLabel.string = _dice;\r\n      this.PayDaySetupUI.TotalBusinessLabel.string = _amount;\r\n\r\n      if (!DoublePayDay)\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + _amount + \"*\" + \"2000)-\" +_amountToBeAdjusted+\"=\"+ TotalPayDayAmount;\r\n      else\r\n        this.PayDaySetupUI.TotalAmountLabel.string =\"(\"+_dice + \"*\" + _amount + \"*\" + \"2000*2)-\"+_amountToBeAdjusted+\"=\" + TotalPayDayAmount;\r\n\r\n      if (this.IsBotTurn) {\r\n        this.ReceivePayment_PayDay();\r\n      }\r\n    }\r\n  },\r\n\r\n  OnLoanPaymentClicked_PayDay() {\r\n    //brick and mortar\r\n    if (!LoanPayed) {\r\n      var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      var _EstimateLoan = 0;\r\n\r\n      if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)//if player had skippped loan previously call all amount due\r\n        _EstimateLoan = this.GetLoanAmount_PayDay();\r\n      else\r\n        _EstimateLoan = 5000;\r\n\r\n      if (\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash >= _EstimateLoan) {\r\n        LoanPayed = true;\r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash - _EstimateLoan;\r\n\r\n        var _loanTaken = false;\r\n        var _businessIndex = 0;\r\n\r\n        for (let index = 0;index <GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length;index++) {\r\n          if (\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken) {\r\n            _loanTaken = true;\r\n            _businessIndex = index;\r\n            break;\r\n          }\r\n        }\r\n\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount - _EstimateLoan;\r\n        \r\n        if (GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount <= 0) {\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount = 0;\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken = false;\r\n        }\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = false;\r\n\r\n        this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n        this.PayDayCompleted();\r\n      }\r\n      else {\r\n        var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        if (_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = false;\r\n        else\r\n          this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable = true;\r\n\r\n        this.PayDaySetupUI.LoanResultPanelNode.active = true;\r\n        console.error(\"out of money\");\r\n      }\r\n    }\r\n  },\r\n\r\n  ReceivePayment_PayDay() {\r\n    //all\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash =GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[ _playerIndex].Cash + TotalPayDayAmount;\r\n    this.UpdateCash_PayDay(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n    if (!this.IsBotTurn) {\r\n      this.ShowToast(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash,\r\n        1500\r\n      );\r\n      setTimeout(() => {\r\n        this.ToggleResultPanelScreen_PayDay(false);\r\n        this.PayDayCompleted();\r\n      }, 1550);\r\n    } else {\r\n      console.log(\r\n        \"Amount $\" +\r\n          TotalPayDayAmount +\r\n          \" has been added to your cash amount, Total Cash has become $\" +\r\n          GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[\r\n            _playerIndex\r\n          ].Cash\r\n      );\r\n      this.ToggleResultPanelScreen_PayDay(false);\r\n      this.PayDayCompleted();\r\n    }\r\n  },\r\n\r\n  SkipLoanOneTime_PayDay() {\r\n    this.ShowToast(\r\n      \"You have skipped the loan payment, bank will call upon complete loan amount on next payday\",\r\n      2000\r\n    );\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment = true;\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    LoanPayed = true;\r\n    this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable = false;\r\n    this.PayDayCompleted();\r\n    LoanPayed = true;\r\n  },\r\n\r\n  SellBusiness_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n    this.EnableSellScreen__SellBusinessUISetup(false);\r\n  },\r\n\r\n  UpdateCash_PayDay(_amount) {\r\n    this.PayDaySetupUI.CashLabel.string = \"$\" + _amount;\r\n  },\r\n\r\n  ExitLoanScreen_PayDay() {\r\n    this.PayDaySetupUI.LoanResultPanelNode.active = false;\r\n  },\r\n\r\n  StartNewGame_PayDay() {\r\n    //if bankrupted you can start new game\r\n    this.ShowToast(\r\n      \"You will lose all progress and start new game from the start.\",\r\n      3000\r\n    );\r\n    setTimeout(() => {\r\n      this.ExitLoanScreen_PayDay();\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      HomeBasedPaymentCompleted = false;\r\n      BrickMortarPaymentCompleted = false;\r\n      LoanPayed = false;\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(\r\n        false,\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().Bankrupt_TurnDecision();\r\n    }, 3010);\r\n  },\r\n\r\n  PayDayCompleted() {\r\n    if (HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed) {\r\n      var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n      console.log(\"all payday done\");\r\n      this.TogglePayDayScreen_PayDay(false);\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(\r\n        false,\r\n        false\r\n      );\r\n      GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n    }\r\n  },\r\n  //#endregion\r\n\r\n  //#region Sell Business UI\r\n  ToggleSellBusinessScreen_SellBusinessUISetup(_state) {\r\n    this.SellBusinessScreen.active = _state;\r\n  },\r\n\r\n  SetBusinessUI_SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n    var _tempData = _manager.PlayerGameInfo[_playerIndex];\r\n\r\n    this.SellBusinessSetupUI.TitleLabel.string = \"SELL\";\r\n    this.SellBusinessSetupUI.CashLabel.string =_manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.SellBusinessSetupUI.PlayerNameLabel.string =_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n    this.SellBusinessSetupUI.BusinessCountLabel.string =\"No of Businesses : \" +_manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n    for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n      var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n      node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n      node.getComponent(\"BusinessDetail\").CheckReferences();\r\n      node.getComponent(\"BusinessDetail\").SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n      node.getComponent(\"BusinessDetail\").SetBusinessIndex(index);\r\n\r\n      if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 1) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(1);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Home Based\");\r\n      } else if (parseInt(_tempData.NoOfBusiness[index].BusinessType) == 2) {\r\n        node.getComponent(\"BusinessDetail\").SetBusinessMode(2);\r\n        node.getComponent(\"BusinessDetail\").SetMode(\"Brick & Mortar\");\r\n      }\r\n\r\n      node.getComponent(\"BusinessDetail\").SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n      node.getComponent(\"BusinessDetail\").SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n      if (_tempData.NoOfBusiness[index].LocationsName.length == 0)\r\n        node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(false);\r\n      else node.getComponent(\"BusinessDetail\").ToggleSellLocationButton(true);\r\n\r\n      businessDetailNodes.push(node);\r\n    }\r\n  },\r\n\r\n  Reset_SellBusinessUISetup() {\r\n    for (let index = 0; index < businessDetailNodes.length; index++) {\r\n      businessDetailNodes[index].destroy();\r\n    }\r\n\r\n    businessDetailNodes = [];\r\n  },\r\n\r\n  EnableSellScreen__SellBusinessUISetup(_isTurnover = false) {\r\n    if (_isTurnover) {\r\n      this.SellBusinessSetupUI.ExitButton.active = false;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.SellBusinessSetupUI.ExitButton.active = true;\r\n      this.SellBusinessSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n    this.SetBusinessUI_SellBusinessUISetup();\r\n  },\r\n\r\n  ExitSellScreen__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n  },\r\n\r\n  ExitSellScreenAlongTurnOver__SellBusinessUISetup() {\r\n    this.Reset_SellBusinessUISetup();\r\n    this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  //#endregion\r\n\r\n  //#region Invest UI\r\n  ToggleInvestScreen_InvestSetupUI(_state) {\r\n    this.InvestScreen.active = _state;\r\n  },\r\n\r\n  EnableInvest_InvestSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleInvestScreen_InvestSetupUI(true);\r\n    this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n  },\r\n  SetInvestUI_InvestSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.InvestSetupUI.TitleLabel.string = \"INVEST\";\r\n    this.InvestSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.InvestSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.InvestSetupUI.ExitButton.active = false;\r\n      this.InvestSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.InvestSetupUI.ExitButton.active = true;\r\n      this.InvestSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitInvest_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n  },\r\n\r\n  ExitInvestAlongTurnOver_InvestSetupUI() {\r\n    this.ToggleInvestScreen_InvestSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region BuyORSell UI\r\n  ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state) {\r\n    this.BuyOrSellScreen.active = _state;\r\n  },\r\n\r\n  EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover = false) {\r\n    this.ResetTurnVariable();\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n    this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n  },\r\n  SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover) {\r\n    var _manager = GamePlayReferenceManager.Instance.Get_GameManager();\r\n    var _playerIndex = GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n    this.BuyOrSellSetupUI.TitleLabel.string = \"BUY OR SELL\";\r\n    this.BuyOrSellSetupUI.CashLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].Cash;\r\n    this.BuyOrSellSetupUI.PlayerNameLabel.string =\r\n      _manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n    if (_isTurnover) {\r\n      this.BuyOrSellSetupUI.ExitButton.active = false;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.BuyOrSellSetupUI.ExitButton.active = true;\r\n      this.BuyOrSellSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ExitSellOrBuy_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n  },\r\n\r\n  ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI() {\r\n    this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n  //#endregion\r\n\r\n  //#region One Question setup Ui\r\n  ToggleDecisionScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionDecisionScreen.active = _state;\r\n  },\r\n\r\n  ToggleSpaceScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSpaceScreen.active = _state;\r\n  },\r\n\r\n  ToggleWaitingScreen_OneQuestionSetupUI(_state) {\r\n    this.OneQuestionSetupUI.WaitingScreen.active = _state;\r\n  },\r\n\r\n  SetUpSpaceScreen_OneQuestionSetupUI(\r\n    _myData,\r\n    _actorsData,\r\n    _isTurnOver,\r\n    _modeIndex = 0\r\n  ) {\r\n    this.OneQuestionSetupUI.TitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.CashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.PlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.PlayerDetailLabel.string =\r\n      \"No of Players: \" +\r\n      GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n    if (_modeIndex == 2) {\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (\r\n          _actorsData[index].customProperties.RoomEssentials.IsSpectate == false\r\n        ) {\r\n          //check if player is spectate or not, dont add any spectates\r\n          if (\r\n            _myData.PlayerUID !=\r\n            _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n          ) {\r\n            var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n            node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerName(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerName\r\n              );\r\n            node\r\n              .getComponent(\"PlayerDetails\")\r\n              .setPlayerUID(\r\n                _actorsData[index].customProperties.PlayerSessionData.PlayerUID\r\n              );\r\n            oneQuestionNodes.push(node);\r\n          }\r\n        }\r\n      }\r\n    } else if (_modeIndex == 1) {\r\n      //for bot\r\n      for (let index = 0; index < _actorsData.length; index++) {\r\n        if (_myData.PlayerUID != _actorsData[index].PlayerUID) {\r\n          var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n          node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerName(_actorsData[index].PlayerName);\r\n          node\r\n            .getComponent(\"PlayerDetails\")\r\n            .setPlayerUID(_actorsData[index].PlayerUID);\r\n          oneQuestionNodes.push(node);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (_isTurnOver) {\r\n      this.OneQuestionSetupUI.ExitButton.active = false;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = true;\r\n    } else {\r\n      this.OneQuestionSetupUI.ExitButton.active = true;\r\n      this.OneQuestionSetupUI.TurnOverExitButton.active = false;\r\n    }\r\n  },\r\n\r\n  ResetSpaceScreen_OneQuestionSetupUI() {\r\n    for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n      oneQuestionNodes[index].destroy();\r\n    }\r\n    oneQuestionNodes = [];\r\n  },\r\n\r\n  Exit_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n  },\r\n\r\n  ExitAlongTurnOver_OneQuestionSetupUI() {\r\n    this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n  },\r\n\r\n  SetUpDecisionScreen_OneQuestionSetupUI(_question) {\r\n    var _myData = GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor()\r\n      .customProperties.PlayerSessionData;\r\n    this.OneQuestionSetupUI.DecisionTitleLabel.string = \"ONE QUESTION\";\r\n    this.OneQuestionSetupUI.DecisionCashLabel.string = \"$\" + _myData.Cash;\r\n    this.OneQuestionSetupUI.DecisionPlayerNameLabel.string = _myData.PlayerName;\r\n    this.OneQuestionSetupUI.DecisionQuestionLabel.string =\r\n      \"Player has asked if \" +\r\n      _question +\r\n      \"\\n\" +\r\n      \"\\n\" +\r\n      \"*either answer question or pay $5000 to player whose asking question.\";\r\n  },\r\n  //#endregion\r\n\r\n  ShowToast: function (message, time = 2250) {\r\n    this.PopUpUI.active = true;\r\n    this.PopUpUILabel.string = message;\r\n    var SelfToast = this;\r\n    setTimeout(function () {\r\n      SelfToast.PopUpUI.active = false;\r\n    }, time);\r\n  },\r\n});\r\n"]}