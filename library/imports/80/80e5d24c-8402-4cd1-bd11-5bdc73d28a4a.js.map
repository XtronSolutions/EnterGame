{"version":3,"sources":["assets\\Script\\GameplayUIManager.js"],"names":["GameManager","GamePlayReferenceManager","businessDetailNodes","oneQuestionNodes","LoanAmountEnum","cc","Enum","None","TenThousand","TentyThousand","ThirtyThousand","FortyThousand","FiftyThousand","Other","BusinessSetupUI","Class","name","properties","PlayerNameUI","displayName","type","Label","serializable","tooltip","PlayerCashUI","BusinessTypeTextUI","Text","BusinessNameTextUI","BusinessTypeLabel","EditBox","BusinessNameLabel","HomeBasedNodeUI","Node","BrickAndMortarNodeUI","TimerUI","TimerNode","BusinessSetupNode","LoanSetupNode","LoanAmount","LoanAmountLabel","WaitingStatusNode","ExitButtonNode","ctor","ChangeName_BusinessSetup","string","TurnDecisionSetupUI","MarketingEditBox","GoldEditBox","StockEditBox","CashAmountLabel","ExpandBusinessNode","ExpandBusinessScrollContent","ExpandBusinessPrefab","Prefab","InvestEnum","StockInvest","GoldInvest","StockSell","GoldSell","InvestSellUI","TitleLabel","DiceResultLabel","PriceTitleLabel","PriceValueLabel","BuyOrSellTitleLabel","TotalAmountTitleLabel","TotalAmountValueLabel","ButtonNameLabel","InvestState","AmountEditBox","SellBusinessUI","CashLabel","PlayerNameLabel","BusinessCountLabel","ScrollContentNode","BusinessSellPrefab","ExitButton","TurnOverExitButton","PayDayUI","HomeBasedNumberLabel","BMNumberLabel","BMNumberLocationLabel","HomeBasedBtn","BMBtn","LoanBtn","MainPanelNode","ResultPanelNode","LoanResultPanelNode","ResultScreenTitleLabel","TotalBusinessLabel","TotalAmountLabel","SkipLoanButton","LoanFotterLabel","InvestUI","BuyOrSellUI","OneQuestionUI","PlayerDetailLabel","DetailsPrefab","ScrollContent","WaitingScreen","DecisionTitleLabel","DecisionCashLabel","DecisionPlayerNameLabel","DecisionQuestionLabel","PlayerDataIntance","PlayerBusinessDataIntance","RequiredCash","InsideGameBusinessSetup","TempMarketingAmount","TempHiringLawyer","GoldCashAmount","EnterBuySellAmount","StockBusinessName","DiceResult","OnceOrShare","LocationName","HomeBasedPaymentCompleted","BrickMortarPaymentCompleted","LoanPayed","TotalPayDayAmount","DoublePayDay","GameplayUIManager","Component","BusinessSetupData","InvestSellSetupUI","PayDaySetupUI","SellBusinessSetupUI","InvestSetupUI","BuyOrSellSetupUI","OneQuestionSetupUI","PopUpUI","GameplayUIScreen","DecisionScreen","InvestSellScreen","PayDayScreen","SellBusinessScreen","InvestScreen","BuyOrSellScreen","OneQuestionSpaceScreen","OneQuestionDecisionScreen","TempDiceText","LeaveRoomButton","onLoad","CheckReferences","GoldInvested","GoldSold","StockInvested","StockSold","ResetTurnVariable","require","onEnable","systemEvent","on","SyncData","onDisable","off","InitialScreen_SpectateMode","active","CloseInitialScreen_SpectateMode","ToggleLeaveRoomButton_SpectateModeUI","_state","OnLeaveButtonClicked_SpectateModeUI","Instance","Get_MultiplayerController","ToggleLeaveRoom_Bool","DisconnectPhoton","setTimeout","Get_GameManager","ClearDisplayTimeout","RemovePersistNode","Get_MultiplayerSyncManager","Get_ServerBackend","director","loadScene","StartNewBusiness_BusinessSetup","isFirstTime","insideGame","Init_BusinessSetup","PlayerData","BusinessInfo","Cash","ResetButtonStates_BusinessSetup","index","PlayerGameInfo","length","StudentData","userID","PlayerUID","OnChangeName_BusinessSetup","PlayerName","OnChangeUID_BusinessSetup","OnChangeCash_BusinessSetup","GetObj_BusinessSetup","UID","OnBusinessTypeTextChanged_BusinessSetup","BusinessTypeDescription","OnBusinessNameTextChanged_BusinessSetup","BusinessName","children","BusinessType","EnumBusinessType","none","OnHomeBasedSelected_BusinessSetup","HomeBased","OnBrickMortarSelected_BusinessSetup","brickAndmortar","amount","CalculateLoan_BusinessSetup","_loanTaken","_businessIndex","NoOfBusiness","LoanTaken","ShowToast","Math","abs","parseInt","getComponent","OnLoanButtonClicked_BusinessSetup","event","OnLoanBackButtonClicked_BusinessSetup","HighLightLoanSelection_BusinessSetup","i","OnLoanAmountChoosed_01_BusinessSetup","OnLoanAmountChoosed_02_BusinessSetup","OnLoanAmountChoosed_03_BusinessSetup","OnLoanAmountChoosed_04_BusinessSetup","OnLoanAmountChoosed_05_BusinessSetup","OnLoanAmountChoosed_06_BusinessSetup","OnTakenLoanClicked_BusinessSetup","_data","_ID","PhotonActor","actorNr","push","console","log","MaxPlayers","getPhotonRef","myRoom","setCustomProperty","StartTurn","PurchaseBusiness","_amount","_businessName","_isHomeBased","HomeBasedAmount","StartGame","BrickAndMortarAmount","Exit_BusinessSetup","InitialSetup_BusinessSetup","RaiseEvent","StartNewSetup_DuringGame_BusinessSetup","ToggleDecision_TurnDecision","PayAmountToPlayGame","IsBot","isactive","UpdateCash_TurnDecision","GetTurnNumber","OnMarketingAmountChanged_TurnDecision","OnMarketingAmountSelected_TurnDecision","_playerIndex","marketingAmount","MarketingAmount","OnHiringLawyerButtonClicked_TurnDecision","LawyerStatus","onLocationNameChanged_ExpandBusiness_TurnDecision","_name","OnExpandButtonClicked_TurnDecision","generatedLength","GenerateExpandBusiness_Prefabs_TurnDecision","OnExpandButtonExitClicked_TurnDecision","DestroyGeneratedNodes","OnNewBusinessButtonClicked_TurnDecision","OnGoldAmountChanged_TurnDecision","OnGoldDiceClicked_TurnDecision","ToggleInvestSellScreen_InvestSell","RollTwoDices","AssignData_InvestSell","OnStockBusinessNameChanged_TurnDecision","OnStockDiceClicked_TurnDecision","ResetStockBusinessNameInput","OnSellGoldClicked_TurnDecision","GoldCount","OnSellStockClicked_TurnDecision","StockCount","OnPartnershipClicked_TurnDecision","OnRollDiceClicked_TurnDecision","RollDice","PrintDiceValue_TurnDecision","value","ResetGoldInput","onAmountChanged_InvestSell","UpdateData_InvestSell","_title","_diceResult","_priceTitle","_priceValue","_buyOrSellTitle","_totalAmountTitle","_totalAmountValue","_buttonName","ApplyButton_InvestSell","_TotalAmount","ExitButton_InvestSell","TogglePayDayScreen_PayDay","ToggleResultPanelScreen_PayDay","UpdateButtons_PayDay","HMAmount","BMAmount","loanTaken","Button","interactable","GetLoanAmount_PayDay","_manager","_loan","AssignData_PayDay","_isDoublePayDay","_skipHM","_skipBM","_time","BMLocations","TotalLocationsAmount","SkippedLoanPayment","PayDayCompleted","OnHomeBasedPaymentClicked_PayDay","_dice","RollOneDice","OnBMPaymentClicked_PayDay","OnLoanPaymentClicked_PayDay","_EstimateLoan","ReceivePayment_PayDay","SkipLoanOneTime_PayDay","SellBusiness_PayDay","EnableSellScreen__SellBusinessUISetup","ExitLoanScreen_PayDay","ToggleSkipPayDay_Whole","ToggleSkipPayDay_HomeBased","ToggleSkipPayDay_BrickAndMortar","TogglePayDay","callUponCard","ToggleSellBusinessScreen_SellBusinessUISetup","SetBusinessUI_SellBusinessUISetup","Reset_SellBusinessUISetup","_tempData","node","instantiate","parent","SetName","SetType","SetBusinessIndex","SetBusinessMode","SetMode","SetBalance","Amount","SetLocations","LocationsName","ToggleSellLocationButton","destroy","_isTurnover","ExitSellScreen__SellBusinessUISetup","ExitSellScreenAlongTurnOver__SellBusinessUISetup","completeCardTurn","ToggleInvestScreen_InvestSetupUI","EnableInvest_InvestSetupUI","SetInvestUI_InvestSetupUI","ExitInvest_InvestSetupUI","ExitInvestAlongTurnOver_InvestSetupUI","ToggleBuyOrSellScreen_BuyOrSellSetupUI","EnableBuyOrSell_BuyOrSellSetupUI","SetBuyOrSellUI_BuyOrSellSetupUI","ExitSellOrBuy_BuyOrSellSetupUI","ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI","ToggleDecisionScreen_OneQuestionSetupUI","ToggleSpaceScreen_OneQuestionSetupUI","ToggleWaitingScreen_OneQuestionSetupUI","SetUpSpaceScreen_OneQuestionSetupUI","_myData","_actorsData","_isTurnOver","customProperties","RoomEssentials","IsSpectate","PlayerSessionData","setPlayerName","setPlayerUID","ResetSpaceScreen_OneQuestionSetupUI","Exit_OneQuestionSetupUI","ExitAlongTurnOver_OneQuestionSetupUI","SetUpDecisionScreen_OneQuestionSetupUI","_question","message","time","SelfToast"],"mappings":"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","sourceRoot":"/","sourcesContent":["var GameManager = null;\r\nvar GamePlayReferenceManager=null;\r\nvar businessDetailNodes=[];\r\nvar oneQuestionNodes=[];\r\n//-------------------------------------------enumeration for amount of loan-------------------------//\r\nvar LoanAmountEnum = cc.Enum({\r\n    None:0,\r\n    TenThousand: 10000,                  \r\n    TentyThousand: 20000,\r\n    ThirtyThousand: 30000,\r\n    FortyThousand: 40000,\r\n    FiftyThousand: 50000,\r\n    Other:6\r\n});\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar BusinessSetupUI=cc.Class({\r\n    name:\"BusinessSetupUI\",\r\n\r\n    properties: {\r\n    PlayerNameUI:\r\n    {\r\n       displayName:\"PlayerNameUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label for player name\",},\r\n    PlayerCashUI:\r\n    {\r\n       displayName:\"PlayerCashUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label for player cash\",},\r\n    BusinessTypeTextUI:\r\n    {\r\n       displayName:\"BusinessTypeTextUI\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: false,\r\n       tooltip:\"var to store text for business type\",},\r\n    BusinessNameTextUI:\r\n    {\r\n       displayName:\"BusinessTypeTextUI\",\r\n       type: cc.Text,\r\n       default: \"\",\r\n       serializable: false,\r\n       tooltip:\"var to store text for business name\",},\r\n    BusinessTypeLabel:\r\n    {\r\n       displayName:\"BusinessTypeLabel\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"reference for business type editbox\",},\r\n    BusinessNameLabel:\r\n    {\r\n       displayName:\"BusinessNameLabel\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"referece for business name editbox\",},\r\n    HomeBasedNodeUI:\r\n    {\r\n       displayName:\"HomeBasedNodeUI\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for home based business\",},\r\n    BrickAndMortarNodeUI:\r\n    {\r\n       displayName:\"BrickAndMortarNodeUI\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for brick and mortar business\",},\r\n    TimerUI:\r\n    {\r\n       displayName:\"TimerUI\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the label for timer\",},\r\n    TimerNode:\r\n        {\r\n            displayName:\"TimerNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for timer node in business setup\"}, \r\n    BusinessSetupNode:\r\n    {\r\n       displayName:\"BusinessSetupNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for business setup\",},\r\n    LoanSetupNode:\r\n    {\r\n       displayName:\"LoanSetupNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference of the node for loan setup\",},\r\n    LoanAmount:\r\n    {\r\n        displayName:\"LoanAmount\",\r\n        type: LoanAmountEnum,\r\n        default: LoanAmountEnum.None,\r\n        serializable: true,\r\n        tooltip:\"loan amount taken by player (state machine)\"}, \r\n    LoanAmountLabel:\r\n        {\r\n            displayName:\"LoanAmountLabel\",\r\n            type: [cc.Node],\r\n            default: [],\r\n            serializable: true,\r\n            tooltip:\"Reference for all labels of amounts in loan UI\"}, \r\n    WaitingStatusNode:\r\n        {\r\n            displayName:\"WaitingStatusNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for waiting status screen on initial business setup\"}, \r\n    ExitButtonNode:\r\n        {\r\n            displayName:\"ExitButtonNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for exit button node in business setup\"}, \r\n},\r\n    ctor: function () {//constructor//\r\n    },\r\n\r\n    ChangeName_BusinessSetup: function (name) {\r\n        this.PlayerNameUI.string=name;\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for Business Setup UI-------------------------//\r\nvar TurnDecisionSetupUI=cc.Class({\r\n    name:\"TurnDecisionSetupUI\",\r\n\r\n    properties: {\r\n    MarketingEditBox:\r\n    {\r\n       displayName:\"MarketingEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of marketing node\",},\r\n    GoldEditBox:\r\n    {\r\n       displayName:\"GoldEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of invest gold node\",}, \r\n    StockEditBox:\r\n    {\r\n       displayName:\"StockEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the editbox of invest stock node\",},\r\n    CashAmountLabel:\r\n    {\r\n       displayName:\"Cash\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to cash node\",},\r\n    ExpandBusinessNode:\r\n        {\r\n            displayName:\"ExpandBusinessNode\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for expnad business node\"}, \r\n    ExpandBusinessScrollContent:\r\n        {\r\n            displayName:\"ExpandBusinessScrollContent\",\r\n            type: cc.Node,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for content node of scroll view of expand business node\"},   \r\n    ExpandBusinessPrefab:\r\n        {\r\n            displayName:\"ExpandBusinessPrefab\",\r\n            type: cc.Prefab,\r\n            default: null,\r\n            serializable: true,\r\n            tooltip:\"Reference for prefab of expand business node\"},             \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n\r\n    ChangeName_BusinessSetup: function (name) {\r\n        this.PlayerNameUI.string=name;\r\n    },\r\n});\r\n\r\n//-------------------------------------------enumeration for investment/buy and sell-------------------------//\r\nvar InvestEnum = cc.Enum({\r\n    None:0,\r\n    StockInvest: 1,                  \r\n    GoldInvest: 2,\r\n    StockSell: 3,\r\n    GoldSell: 4,\r\n    Other:5\r\n});\r\n\r\n//-------------------------------------------class for InvestSellUI-------------------------//\r\nvar InvestSellUI=cc.Class({\r\n    name:\"InvestSellUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of invest&sell node\"},\r\n    DiceResultLabel:\r\n    {\r\n       displayName:\"DiceResult\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Dice Result of invest&sell node\"},\r\n    PriceTitleLabel:\r\n    {\r\n       displayName:\"PriceTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Price Title of invest&sell node\"},\r\n    PriceValueLabel:\r\n    {\r\n       displayName:\"PriceValue\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of Price value of invest&sell node\"},\r\n    BuyOrSellTitleLabel:\r\n    {\r\n       displayName:\"BuyOrSellTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BuyOrSell Title of invest&sell node\"},\r\n    TotalAmountTitleLabel:\r\n    {\r\n       displayName:\"TotalAmountTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount Title of invest&sell node\"},\r\n    TotalAmountValueLabel:\r\n    {\r\n       displayName:\"TotalAmountValue\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount Value of invest&sell node\"},\r\n    ButtonNameLabel:\r\n    {\r\n       displayName:\"ButtonName\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of button name of invest&sell node\"},\r\n     InvestState:\r\n    {\r\n       displayName:\"InvestState\",\r\n       type: InvestEnum,\r\n       default: InvestEnum.None,\r\n       serializable: true},\r\n     AmountEditBox:\r\n    {\r\n       displayName:\"AmountEditBox\",\r\n       type: cc.EditBox,\r\n       default: null,\r\n       serializable: true},\r\n          \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for SellBusinessUI-------------------------//\r\nvar SellBusinessUI=cc.Class({\r\n    name:\"SellBusinessUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of Sell node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of Sell node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of Sell node\"}, \r\n    BusinessCountLabel:\r\n    {\r\n       displayName:\"BusinessCount\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BusinessCount of Sell node\"},  \r\n    ScrollContentNode:\r\n    {\r\n       displayName:\"ScrollContentNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ScrollContentNode of Sell node\"},  \r\n    BusinessSellPrefab:\r\n    {\r\n       displayName:\"BusinessSellPrefab\",\r\n       type: cc.Prefab,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of BusinessSellPrefab of Sell node\"},    \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of Sell node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of Sell node\"},  \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for PayDayUI-------------------------//\r\nvar PayDayUI=cc.Class({\r\n    name:\"PayDayUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of PayDay node\"},\r\n    HomeBasedNumberLabel:\r\n    {\r\n       displayName:\"HomeBasedNumber\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of HomeBasedNumber node\"},\r\n     BMNumberLabel:\r\n    {\r\n       displayName:\"BrickMortarNumber\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarNumber node\"},\r\n     BMNumberLocationLabel:\r\n    {\r\n       displayName:\"BrickMortarLocations\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarLocations node\"},\r\n    HomeBasedBtn:\r\n    {\r\n       displayName:\"HomeBasedBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of HomeBasedBtn node\"},\r\n    BMBtn:\r\n    {\r\n       displayName:\"BrickMortarBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of BrickMortarBtn node\"},\r\n    LoanBtn:\r\n    {\r\n       displayName:\"LoanBtn\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of LoanBtn node\"},\r\n    MainPanelNode:\r\n    {\r\n       displayName:\"MainPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of MainPanel node\"},\r\n    ResultPanelNode:\r\n    {\r\n       displayName:\"ResultPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ResultPanel node\"},\r\n    LoanResultPanelNode:\r\n    {\r\n       displayName:\"LoanResultPanelNode\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of LoanResultPanelNode node\"},\r\n     ResultScreenTitleLabel:\r\n    {\r\n       displayName:\"ResultScreenTitle\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of ResultScreenTitle node\"},\r\n     DiceResultLabel:\r\n    {\r\n       displayName:\"DiceResult\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of DiceResult node\"},\r\n   TotalBusinessLabel:\r\n    {\r\n       displayName:\"TotalBusinessLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalBusiness node\"},\r\n    TotalAmountLabel:\r\n    {\r\n       displayName:\"TotalAmountLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of TotalAmount node\"},\r\n    SkipLoanButton:\r\n    {\r\n       displayName:\"SkipLoanButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of SkipLoanButton node\"},\r\n   LoanFotterLabel:\r\n    {\r\n       displayName:\"LoanFotterLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of LoanFotterLabel node\"},\r\n          \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for InvestUI-------------------------//\r\nvar InvestUI=cc.Class({\r\n    name:\"InvestUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of Invest node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of Invest node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of Invest node\"}, \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of Invest node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of Invest node\"},  \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for BuyOrSellUI-------------------------//\r\nvar BuyOrSellUI=cc.Class({\r\n    name:\"BuyOrSellUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of BuyOrSell node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of BuyOrSell node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of BuyOrSell node\"}, \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of BuyOrSell node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of BuyOrSell node\"},  \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for OneQuestionUI-------------------------//\r\nvar OneQuestionUI=cc.Class({\r\n    name:\"OneQuestionUI\",\r\n    properties: {\r\n    TitleLabel:\r\n    {\r\n       displayName:\"Title\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of OneQuestion node\"},   \r\n    CashLabel:\r\n    {\r\n       displayName:\"CashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of OneQuestion node\"},   \r\n    PlayerNameLabel:\r\n    {\r\n       displayName:\"PlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of OneQuestion node\"}, \r\n     ExitButton:\r\n    {\r\n       displayName:\"ExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of ExitButton of OneQuestion node\"},  \r\n     TurnOverExitButton:\r\n    {\r\n       displayName:\"TurnOverExitButton\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab of TurnOverExitButton of OneQuestion node\"},\r\n   PlayerDetailLabel:\r\n    {\r\n       displayName:\"PlayerDetailLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of OneQuestion node\"}, \r\n    DetailsPrefab:\r\n    {\r\n       displayName:\"DetailsPrefab\",\r\n       type: cc.Prefab,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab DetailsPrefab of OneQuestion node\"},  \r\n    ScrollContent:\r\n    {\r\n       displayName:\"ScrollContent\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the prefab ScrollContent of OneQuestion node\"}, \r\n    WaitingScreen:\r\n    {\r\n       displayName:\"WaitingScreen\",\r\n       type: cc.Node,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the node WaitingScreen of OneQuestion node\"},  \r\n    DecisionTitleLabel:\r\n    {\r\n       displayName:\"DecisionTitleLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of title of OneQuestion node\"},   \r\n    DecisionCashLabel:\r\n    {\r\n       displayName:\"DecisionCashLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of cash of OneQuestion node\"},   \r\n    DecisionPlayerNameLabel:\r\n    {\r\n       displayName:\"DecisionPlayerNameLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player name of OneQuestion node\"},    \r\n    DecisionQuestionLabel:\r\n    {\r\n       displayName:\"DecisionQuestionLabel\",\r\n       type: cc.Label,\r\n       default: null,\r\n       serializable: true,\r\n       tooltip:\"UI reference to the label of player question of OneQuestion node\"},   \r\n},\r\n    ctor: function () {//constructor\r\n    },\r\n});\r\n\r\n//-------------------------------------------class for GameplayUIManager-------------------------//\r\nvar PlayerDataIntance;\r\nvar PlayerBusinessDataIntance;\r\nvar RequiredCash;\r\nvar InsideGameBusinessSetup=-1; //-1 means new business is not instantialted from inside game , if it has any other value it means its been instantiated from inside game and its value represents index of player\r\n\r\n//turn decisions\r\nvar TempMarketingAmount=\"\";\r\nvar TempHiringLawyer;\r\n\r\n//buyorsell\r\nvar GoldCashAmount=\"\";\r\nvar EnterBuySellAmount=\"\";\r\nvar StockBusinessName=\"\";\r\nvar DiceResult;\r\nvar OnceOrShare;\r\nvar LocationName=\"\";\r\n\r\nvar HomeBasedPaymentCompleted=false;\r\nvar BrickMortarPaymentCompleted=false;\r\nvar LoanPayed=false;\r\nvar TotalPayDayAmount=0;\r\nvar DoublePayDay=false;\r\n\r\nvar GameplayUIManager=cc.Class({\r\n    name:\"GameplayUIManager\",\r\n    extends: cc.Component,\r\n    properties: {\r\n        BusinessSetupData: {\r\n            default:null,                \r\n            type: BusinessSetupUI,\r\n            serializable: true,\r\n            tooltip:\"reference of BusinessSetupUI class\"},\r\n        TurnDecisionSetupUI: {\r\n            default:null,                \r\n            type: TurnDecisionSetupUI,\r\n            serializable: true,\r\n            tooltip:\"reference of TurnDecisionSetupUI class\"},\r\n        InvestSellSetupUI: {\r\n            default:null,                \r\n            type: InvestSellUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestSellUI class\",},  \r\n        PayDaySetupUI: {\r\n            default:null,                \r\n            type: PayDayUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestSellUI class\",},  \r\n        SellBusinessSetupUI: {\r\n            default:{},                 \r\n            type: SellBusinessUI,\r\n            serializable: true,\r\n            tooltip:\"reference of SellBusinessUI class\",},  \r\n        InvestSetupUI: {\r\n            default:{},                 \r\n            type: InvestUI,\r\n            serializable: true,\r\n            tooltip:\"reference of InvestUI class\",},    \r\n        BuyOrSellSetupUI: {\r\n            default:{},                 \r\n            type: BuyOrSellUI,\r\n            serializable: true,\r\n            tooltip:\"reference of BuyOrSellUI class\",},       \r\n        OneQuestionSetupUI: {\r\n            default:{},                 \r\n            type: OneQuestionUI,\r\n            serializable: true,\r\n            tooltip:\"reference of OneQuestionUI class\",},       \r\n        PopUpUI: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for pop up screen\",},   \r\n        BusinessSetupNode: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for business setup screen\",},  \r\n        GameplayUIScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for gameplay ui screen\",},   \r\n        DecisionScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Decision screen\",},    \r\n        InvestSellScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Invest & sell screen\",},    \r\n        PayDayScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for PayDay screen\",},    \r\n        SellBusinessScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for SellBusiness screen\",},  \r\n        InvestScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for Invest screen\",},  \r\n        BuyOrSellScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for BuyOrSell screen\",},  \r\n        OneQuestionSpaceScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for OneQuestionSpace screen\",},  \r\n        OneQuestionDecisionScreen: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,\r\n            tooltip:\"Node reference for OneQuestionDecision screen\",},  \r\n         TempDiceText: {\r\n            default:null,                \r\n            type: cc.Label,\r\n            serializable: true,\r\n            tooltip:\"label reference for dice\",},   \r\n         LeaveRoomButton: {\r\n            default:null,                \r\n            type: cc.Node,\r\n            serializable: true,},       \r\n    },\r\n\r\n     onLoad () {\r\n         this.CheckReferences(); \r\n\r\n         //local variables\r\n         this.GoldInvested=false;\r\n         this.GoldSold=false;\r\n         this.StockInvested=false;\r\n         this.StockSold=false;\r\n\r\n     },\r\n\r\n     ResetTurnVariable()\r\n     {\r\n        this.GoldInvested=false;\r\n        this.GoldSold=false;\r\n        this.StockInvested=false;\r\n        this.StockSold=false;\r\n     },\r\n\r\n     CheckReferences()\r\n     {\r\n        if(!GamePlayReferenceManager || GamePlayReferenceManager==null)\r\n        GamePlayReferenceManager=require('GamePlayReferenceManager');\r\n\r\n        if(!GameManager || GameManager==null)\r\n            GameManager=require('GameManager');\r\n     },\r\n\r\n     onEnable: function () {\r\n        //events subscription to be called \r\n        cc.systemEvent.on('SyncData', this.SyncData, this);\r\n      },\r\n    \r\n    onDisable: function () {\r\n        cc.systemEvent.off('SyncData', this.SyncData, this);\r\n      },\r\n\r\n    //#region Spectate UI Setup\r\n    InitialScreen_SpectateMode()\r\n    {\r\n        this.BusinessSetupData.WaitingStatusNode.active=true;\r\n    },\r\n\r\n    CloseInitialScreen_SpectateMode()\r\n    {\r\n        this.BusinessSetupData.WaitingStatusNode.active=false;\r\n    },\r\n\r\n    ToggleLeaveRoomButton_SpectateModeUI(_state)\r\n    {\r\n        this.LeaveRoomButton.active=_state;\r\n    },\r\n\r\n    OnLeaveButtonClicked_SpectateModeUI()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().ToggleLeaveRoom_Bool(true);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().DisconnectPhoton();\r\n        setTimeout(() => {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().ClearDisplayTimeout();\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.Get_ServerBackend().RemovePersistNode();\r\n            GamePlayReferenceManager.Instance.RemovePersistNode();\r\n            cc.director.loadScene(\"Splash\");\r\n        }, 500);\r\n    },\r\n    //#endregion\r\n    \r\n    //#region BusinessSetup with loan\r\n    //Business setup ui//------------------------\r\n    StartNewBusiness_BusinessSetup: function (isFirstTime,insideGame=false) { //called first time form GameManager onload function\r\n        this.CheckReferences();\r\n        this.BusinessSetupNode.active=true;\r\n        this.Init_BusinessSetup(isFirstTime,insideGame);\r\n    },\r\n    Init_BusinessSetup: function (isFirstTime,insideGame=false) {\r\n        PlayerDataIntance=new GameManager.PlayerData();\r\n        PlayerBusinessDataIntance=new GameManager.BusinessInfo();\r\n       \r\n        if(isFirstTime)\r\n        {\r\n            this.BusinessSetupData.ExitButtonNode.active=false;\r\n            this.BusinessSetupData.TimerNode.active=true;\r\n            PlayerDataIntance.Cash=20000;\r\n        }\r\n\r\n        this.ResetButtonStates_BusinessSetup();\r\n\r\n        if(insideGame)\r\n        {\r\n            this.BusinessSetupData.ExitButtonNode.active=true;\r\n            this.BusinessSetupData.TimerNode.active=false;\r\n\r\n            for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length; index++) {\r\n                if(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID==GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID)\r\n                {\r\n                    InsideGameBusinessSetup=index;\r\n                    PlayerDataIntance=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index];\r\n                    this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerName);\r\n                    this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].PlayerUID);\r\n                    this.OnChangeCash_BusinessSetup(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[index].Cash);  \r\n                }  \r\n            }\r\n        }\r\n        else\r\n        {\r\n            InsideGameBusinessSetup=-1;\r\n            this.OnChangeName_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.name);\r\n            this.OnChangeUID_BusinessSetup(GamePlayReferenceManager.Instance.Get_ServerBackend().StudentData.userID);\r\n            this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash); \r\n        } \r\n    }, \r\n    GetObj_BusinessSetup: function () {\r\n        return this.BusinessSetupData;\r\n    },\r\n    OnChangeName_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.ChangeName_BusinessSetup(name);\r\n        PlayerDataIntance.PlayerName=name;\r\n    },\r\n    OnChangeUID_BusinessSetup: function (UID) {\r\n        PlayerDataIntance.PlayerUID=UID;\r\n    },\r\n    OnBusinessTypeTextChanged_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.BusinessTypeTextUI=name;\r\n        PlayerBusinessDataIntance.BusinessTypeDescription=name;\r\n       \r\n    },\r\n    OnBusinessNameTextChanged_BusinessSetup: function (name) {\r\n        this.BusinessSetupData.BusinessNameTextUI=name;\r\n        PlayerBusinessDataIntance.BusinessName=name;\r\n    },\r\n    ResetButtonStates_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BusinessTypeLabel.string=\"\";\r\n        this.BusinessSetupData.BusinessNameLabel.string=\"\";\r\n        this.BusinessSetupData.BusinessNameTextUI=\"\";\r\n        this.BusinessSetupData.BusinessTypeTextUI=\"\";\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.none;\r\n    },\r\n    OnHomeBasedSelected_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=true;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=false;\r\n\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.HomeBased;\r\n    },\r\n    OnBrickMortarSelected_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupData.HomeBasedNodeUI.children[0].children[0].active=false;\r\n        this.BusinessSetupData.BrickAndMortarNodeUI.children[0].children[0].active=true;\r\n\r\n        PlayerBusinessDataIntance.BusinessType=GameManager.EnumBusinessType.brickAndmortar;\r\n    },\r\n    OnChangeCash_BusinessSetup:function(amount)\r\n    {\r\n        this.BusinessSetupData.PlayerCashUI.string=\"$\"+amount;\r\n        PlayerDataIntance.Cash=amount;\r\n    },\r\n    CalculateLoan_BusinessSetup:function(amount)\r\n    {\r\n        var _loanTaken=false;\r\n        var _businessIndex=0;\r\n\r\n        for (let index = 0; index < PlayerDataIntance.NoOfBusiness.length; index++) {\r\n\r\n            if(PlayerDataIntance.NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loanTaken=true;\r\n                _businessIndex=index;\r\n                break;\r\n            }    \r\n        }\r\n\r\n        if(_loanTaken)\r\n        {\r\n            this.ShowToast(\"You have already taken loan of $\"+PlayerDataIntance.NoOfBusiness[_businessIndex].LoanAmount);\r\n        }\r\n        else\r\n        {\r\n            if(PlayerDataIntance.Cash >=amount)\r\n                {\r\n                    this.ShowToast(\"You do not need loan, you have enough cash to buy current selected business.\")\r\n                }\r\n                else\r\n                {\r\n                    this.BusinessSetupData.LoanSetupNode.active=true;\r\n                    RequiredCash=Math.abs(parseInt(PlayerDataIntance.Cash)-amount);\r\n                    this.BusinessSetupData.LoanAmountLabel[0].children[1].children[0].getComponent(cc.Label).string=\"$\"+RequiredCash;\r\n                }\r\n        }\r\n    },\r\n    OnLoanButtonClicked_BusinessSetup:function(event)\r\n    {\r\n        if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.brickAndmortar)\r\n        {\r\n            this.CalculateLoan_BusinessSetup(50000);\r\n        }else if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.HomeBased)\r\n        {\r\n            this.CalculateLoan_BusinessSetup(10000);\r\n        }\r\n        else\r\n        {\r\n            this.ShowToast(\"please select business between Home Based and brick & mortar. \")\r\n        }\r\n    },\r\n    OnLoanBackButtonClicked_BusinessSetup:function(event)\r\n    {\r\n      this.BusinessSetupData.LoanSetupNode.active=false;  \r\n    },\r\n    HighLightLoanSelection_BusinessSetup:function(index)\r\n    {\r\n        for(var i=0;i<this.BusinessSetupData.LoanAmountLabel.length;i++)\r\n        {\r\n            if(index==i)\r\n                this.BusinessSetupData.LoanAmountLabel[i].children[0].active=true;\r\n            else\r\n                this.BusinessSetupData.LoanAmountLabel[i].children[0].active=false;\r\n        }\r\n    },\r\n    OnLoanAmountChoosed_01_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.Other;\r\n        this.HighLightLoanSelection_BusinessSetup(0);\r\n\r\n    },\r\n    OnLoanAmountChoosed_02_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.TenThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(1);\r\n    },\r\n    OnLoanAmountChoosed_03_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.TentyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(2);\r\n    },\r\n    OnLoanAmountChoosed_04_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.ThirtyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(3);\r\n    },\r\n    OnLoanAmountChoosed_05_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.FortyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(4);\r\n    },\r\n    OnLoanAmountChoosed_06_BusinessSetup:function(event)\r\n    {\r\n        this.BusinessSetupData.LoanAmount=LoanAmountEnum.FiftyThousand;\r\n        this.HighLightLoanSelection_BusinessSetup(5);\r\n    },\r\n    OnTakenLoanClicked_BusinessSetup:function(event)\r\n    {\r\n        if(this.BusinessSetupData.LoanAmount==LoanAmountEnum.Other)\r\n            PlayerBusinessDataIntance.LoanAmount=RequiredCash;\r\n        else\r\n            PlayerBusinessDataIntance.LoanAmount=parseInt(this.BusinessSetupData.LoanAmount);\r\n\r\n        PlayerBusinessDataIntance.LoanTaken=true;\r\n        this.OnLoanBackButtonClicked_BusinessSetup();\r\n        PlayerDataIntance.Cash=PlayerDataIntance.Cash+PlayerBusinessDataIntance.LoanAmount;\r\n        this.OnChangeCash_BusinessSetup(PlayerDataIntance.Cash)\r\n    },\r\n\r\n    SyncData:function(_data,_ID)\r\n    {\r\n        if(_ID!=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().actorNr)\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(_data);\r\n\r\n        console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length>=GamePlayReferenceManager.Instance.Get_MultiplayerController().MaxPlayers)\r\n        {\r\n            //setting room property to declare initial setup has been\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"InitialSetup\",true,true);\r\n            GamePlayReferenceManager.Instance.Get_MultiplayerController().getPhotonRef().myRoom().setCustomProperty(\"PlayerGameInfo\",GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo,true);\r\n            this.BusinessSetupData.WaitingStatusNode.active=false;\r\n            this.BusinessSetupNode.active=false;\r\n            this.GameplayUIScreen.active=true;\r\n\r\n            GamePlayReferenceManager.Instance.Get_GameManager().StartTurn();\r\n\r\n            console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo);\r\n        }\r\n    },\r\n\r\n    PurchaseBusiness:function(_amount,_businessName,_isHomeBased)\r\n    {\r\n        if(PlayerDataIntance.Cash<_amount)\r\n            {\r\n                this.ShowToast(\"You have not enough cash to buy this \"+_businessName+\" business.\");\r\n            }\r\n        else\r\n           {\r\n                if(_isHomeBased)\r\n               {\r\n                   if(PlayerDataIntance.HomeBasedAmount<3)\r\n                   {\r\n                        PlayerDataIntance.Cash=PlayerDataIntance.Cash-_amount;\r\n                        this.BusinessSetupData.PlayerCashUI.string=\"$\"+PlayerDataIntance.Cash;\r\n                        this.StartGame=true;\r\n                        PlayerDataIntance.HomeBasedAmount++;\r\n                   }\r\n                   else{\r\n                        this.StartGame=false;\r\n                        this.ShowToast(\"You cannot own more than three Home based businesses\");\r\n                   }\r\n               }\r\n               else\r\n               {\r\n                    PlayerDataIntance.Cash=PlayerDataIntance.Cash-_amount;\r\n                    this.BusinessSetupData.PlayerCashUI.string=\"$\"+PlayerDataIntance.Cash;\r\n                    this.StartGame=true;\r\n                    PlayerDataIntance.BrickAndMortarAmount++;\r\n               }\r\n           }\r\n    },\r\n\r\n    Exit_BusinessSetup:function()\r\n    {\r\n        this.BusinessSetupNode.active=false;\r\n\r\n        if(PlayerBusinessDataIntance.LoanTaken)\r\n        {\r\n            PlayerBusinessDataIntance.LoanTaken=false;\r\n            PlayerDataIntance.Cash=PlayerDataIntance.Cash-PlayerBusinessDataIntance.LoanAmount;\r\n            PlayerBusinessDataIntance.LoanAmount=0;\r\n            this.ShowToast(\"Reverting back loan amount.\",500);\r\n        }\r\n    },\r\n\r\n    InitialSetup_BusinessSetup:function()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.push(PlayerDataIntance);\r\n               \r\n        //setting player current data in custom properties when his/her turn overs\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().setCustomProperty(\"PlayerSessionData\", PlayerDataIntance);\r\n        GamePlayReferenceManager.Instance.Get_MultiplayerSyncManager().RaiseEvent(1,PlayerDataIntance);\r\n        this.BusinessSetupData.WaitingStatusNode.active=true;\r\n    },\r\n\r\n    StartNewSetup_DuringGame_BusinessSetup:function()\r\n    {\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[InsideGameBusinessSetup]=PlayerDataIntance;\r\n        this.BusinessSetupNode.active=false;\r\n        InsideGameBusinessSetup=-1;\r\n        this.ToggleDecision_TurnDecision(true);\r\n    },\r\n\r\n    PayAmountToPlayGame:function()\r\n    {\r\n        this.StartGame=false;\r\n\r\n        if(PlayerBusinessDataIntance.BusinessTypeDescription==\"\")\r\n            this.ShowToast(\"please write a business type.\");\r\n        else if(PlayerBusinessDataIntance.BusinessName==\"\")\r\n            this.ShowToast(\"please write a business name.\");\r\n        else\r\n        {\r\n            if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.HomeBased) //if selected business is homebassed\r\n                this.PurchaseBusiness(10000,\"home\",true);\r\n            else if(PlayerBusinessDataIntance.BusinessType==GameManager.EnumBusinessType.brickAndmortar) //if selected business is brick and mortar\r\n                this.PurchaseBusiness(50000,\"brick and mortar\",false);\r\n\r\n        if(this.StartGame==true)\r\n        {\r\n            PlayerDataIntance.NoOfBusiness.push(PlayerBusinessDataIntance);\r\n\r\n            if(InsideGameBusinessSetup!=-1) //if start new business has not been called from inside game\r\n                this.StartNewSetup_DuringGame_BusinessSetup();\r\n            else    //if start new business has been called at start of game as initial setup\r\n                this.InitialSetup_BusinessSetup();\r\n\r\n            //prtinting all values to console\r\n            for(var i=0;i<GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;i++)\r\n            {\r\n                console.log(\"player name: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerName);\r\n                console.log(\"player ID: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].PlayerUID);\r\n                console.log(\"Is player bot: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].IsBot);\r\n                console.log(\"no of business of player (see below): \");\r\n                console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].NoOfBusiness);\r\n                console.log(\"player cash: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].Cash);\r\n                console.log(\"player taken loan: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanTaken);\r\n                console.log(\"taken loan amount: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[i].LoanAmount);\r\n            }\r\n        }\r\n        }\r\n    },\r\n    //#endregion\r\n\r\n    //#region TurnDecisionSetupUI\r\n    //TurnDecisionSetupUI//------------------------\r\n    ToggleDecision_TurnDecision: function (isactive) {\r\n        this.DecisionScreen.active=isactive;\r\n        this.UpdateCash_TurnDecision();\r\n    },\r\n\r\n    UpdateCash_TurnDecision:function()\r\n    {\r\n        this.TurnDecisionSetupUI.CashAmountLabel.string=\"$ \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber()].Cash;\r\n    },\r\n\r\n    OnMarketingAmountChanged_TurnDecision: function (amount) {\r\n        //console.log(amount);\r\n        TempMarketingAmount=amount;\r\n    }, \r\n\r\n    OnMarketingAmountSelected_TurnDecision: function () {\r\n        if(TempMarketingAmount==\"\" || TempMarketingAmount==null)\r\n        {\r\n            this.ShowToast(\"Please enter an amount.\");\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            this.marketingAmount=parseInt(TempMarketingAmount);\r\n            console.log(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash);\r\n            \r\n            //if player entered amount is greater than total cash he owns\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>= this.marketingAmount)\r\n            {\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash- this.marketingAmount;\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount+this.marketingAmount;\r\n                this.ShowToast(\"you successfully marketed amount of $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].MarketingAmount+\" , remaining cash is $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+\".\");\r\n                this.UpdateCash_TurnDecision();\r\n\r\n                //reseting marketing label and its holding variable\r\n                this.TurnDecisionSetupUI.MarketingEditBox.string=\"\";\r\n                TempMarketingAmount=\"\";\r\n            }\r\n            else\r\n            {\r\n                this.ShowToast(\"you don't have enough money.\");\r\n\r\n                //reseting marketing label and its holding variable\r\n                this.TurnDecisionSetupUI.MarketingEditBox.string=\"\";\r\n                TempMarketingAmount=\"\";\r\n            }\r\n        }\r\n    }, \r\n\r\n    OnHiringLawyerButtonClicked_TurnDecision: function () {\r\n        // if player has more than 5000$\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus)\r\n        {\r\n            this.ShowToast(\"you have already hired a lawyer.\");\r\n        }\r\n        else\r\n        {\r\n        if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>=5000)\r\n        {\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].LawyerStatus=true;\r\n            TempHiringLawyer=true;\r\n            console.log(TempHiringLawyer);\r\n            GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-5000;\r\n            this.ShowToast(\"you have successfully hired a lawyer, remaining cash is $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+\".\");\r\n            this.UpdateCash_TurnDecision();\r\n        }else\r\n        {\r\n            this.ShowToast(\"sorry, you dont have enough money to hire a lawyer.\");\r\n        }\r\n    }\r\n    }, \r\n\r\n    onLocationNameChanged_ExpandBusiness_TurnDecision(_name)\r\n    {\r\n        LocationName=_name;\r\n    },\r\n    OnExpandButtonClicked_TurnDecision: function () {\r\n        //if player has brick and mortar business he could expand it\r\n        console.log(\"expand business\");\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active=true;\r\n        var generatedLength=GamePlayReferenceManager.Instance.Get_GameManager().GenerateExpandBusiness_Prefabs_TurnDecision();\r\n\r\n        if(generatedLength==0)\r\n        {\r\n            this.ShowToast(\"You have no brick and mortar business to expand.\",1500);\r\n            setTimeout(() => {\r\n                this.TurnDecisionSetupUI.ExpandBusinessNode.active=false;\r\n            }, 1600);\r\n        }\r\n    },\r\n\r\n    OnExpandButtonExitClicked_TurnDecision: function () {\r\n        this.UpdateCash_TurnDecision();\r\n        this.CheckReferences();\r\n        LocationName=\"\";\r\n        console.log(\"expand business exit called\");\r\n        GamePlayReferenceManager.Instance.Get_GameManager().DestroyGeneratedNodes();\r\n        this.TurnDecisionSetupUI.ExpandBusinessNode.active=false;\r\n    },\r\n\r\n    OnNewBusinessButtonClicked_TurnDecision: function () {\r\n        console.log(\"starting new business\");\r\n        this.StartNewBusiness_BusinessSetup(false,true);\r\n    },\r\n\r\n    OnGoldAmountChanged_TurnDecision: function (amount) {\r\n        //console.log(amount);\r\n        GoldCashAmount=amount;\r\n    }, \r\n\r\n    OnGoldDiceClicked_TurnDecision: function () {\r\n        if(!this.GoldInvested)\r\n        {\r\n            this.GoldInvested=true;\r\n            EnterBuySellAmount=\"\";\r\n            this.ToggleInvestSellScreen_InvestSell(true);\r\n            this.InvestSellSetupUI.InvestState=InvestEnum.GoldInvest;\r\n            DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n            OnceOrShare=(DiceResult*1000);\r\n\r\n            this.AssignData_InvestSell(\r\n                \"Invest In GOLD\",\r\n                DiceResult,\r\n                \"Each Ounce of GOLD price is:\",\r\n                OnceOrShare+\"/ounce\",\r\n                \"Enter the number of ounce of GOLD you want to BUY\",\r\n                \"Total Buying Amount:\",\r\n                OnceOrShare+\"*0=0\",\r\n                \"BUY\",\r\n                this.InvestSellSetupUI.InvestState\r\n            );\r\n        }\r\n        else\r\n        {\r\n            this.ShowToast(\"You can invest in gold one time during turn.\",800);\r\n        }\r\n        \r\n    }, \r\n\r\n    OnStockBusinessNameChanged_TurnDecision: function (name) {\r\n        StockBusinessName=name;\r\n    }, \r\n\r\n    OnStockDiceClicked_TurnDecision: function () {\r\n\r\n        if(!this.StockInvested)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            if(StockBusinessName==\"\")\r\n            {\r\n                this.ResetStockBusinessNameInput();\r\n                this.ShowToast(\"Please enter a business name to invest.\");\r\n            }\r\n            else\r\n            {\r\n                this.StockInvested=true;\r\n                EnterBuySellAmount=\"\";\r\n                this.ToggleInvestSellScreen_InvestSell(true);\r\n                this.InvestSellSetupUI.InvestState=InvestEnum.StockInvest;\r\n                DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n                OnceOrShare=(DiceResult*1000);\r\n\r\n                this.AssignData_InvestSell(\r\n                    \"Invest in Stock\",\r\n                    DiceResult,\r\n                    \"Each Share of stock price is:\",\r\n                    OnceOrShare+\"/share\",\r\n                    \"Enter the number of shares of stock you want to BUY\",\r\n                    \"Total Buying Amount:\",\r\n                    OnceOrShare+\"*0=0\",\r\n                    \"BUY\",\r\n                    this.InvestSellSetupUI.InvestState\r\n                );\r\n            }\r\n        }else\r\n        {\r\n            this.ShowToast(\"You can invest in stocks one time during turn.\",800);\r\n        }\r\n    }, \r\n\r\n    OnSellGoldClicked_TurnDecision: function () {\r\n        if(!this.GoldSold)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount>0)\r\n            {\r\n                this.GoldSold=true;\r\n                EnterBuySellAmount=\"\";\r\n                this.ToggleInvestSellScreen_InvestSell(true);\r\n                this.InvestSellSetupUI.InvestState=InvestEnum.GoldSell;\r\n                DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n                OnceOrShare=(DiceResult*1000);\r\n\r\n                this.AssignData_InvestSell(\r\n                    \"Sell GOLD\",\r\n                    DiceResult,\r\n                    \"Each Ounce of GOLD price is:\",\r\n                    OnceOrShare+\"/ounce\",\r\n                    \"Enter the number of ounce of GOLD you want to SELL\",\r\n                    \"Total Selling Amount:\",\r\n                    OnceOrShare+\"*0=0\",\r\n                    \"SELL\",\r\n                    this.InvestSellSetupUI.InvestState\r\n                );\r\n            }\r\n            else\r\n            {\r\n                this.ShowToast(\"you have not purchased any GOLD ounces, please buy them.\");\r\n            }\r\n        }else\r\n        {\r\n            this.ShowToast(\"You can sell gold one time during turn.\",800);\r\n        }\r\n    }, \r\n\r\n    OnSellStockClicked_TurnDecision: function () {\r\n        \r\n        if(!this.StockSold)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount>0)\r\n            {\r\n                this.StockSold=true;\r\n                EnterBuySellAmount=\"\";\r\n                this.ToggleInvestSellScreen_InvestSell(true);\r\n                this.InvestSellSetupUI.InvestState=InvestEnum.StockSell;\r\n                DiceResult=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n                OnceOrShare=(DiceResult*1000);\r\n\r\n                this.AssignData_InvestSell(\r\n                    \"Sell STOCK\",\r\n                    DiceResult,\r\n                    \"Each share of stock price is:\",\r\n                    OnceOrShare+\"/share\",\r\n                    \"Enter the number of shares of stock you want to SELL\",\r\n                    \"Total Selling Amount:\",\r\n                    OnceOrShare+\"*0=0\",\r\n                    \"SELL\",\r\n                    this.InvestSellSetupUI.InvestState\r\n                );\r\n            }\r\n            else\r\n            {\r\n                this.ShowToast(\"you have not purchased any shares, please buy them.\");\r\n            }\r\n        }else\r\n        {\r\n            this.ShowToast(\"You can sell stocks one time during turn.\",800);\r\n        }\r\n    }, \r\n\r\n    OnPartnershipClicked_TurnDecision: function () {\r\n        console.log(\"go into partner ship\");\r\n        this.ShowToast(\"work in progress, coming soon...\");\r\n    }, \r\n\r\n    OnRollDiceClicked_TurnDecision: function () {\r\n        console.log(\"roll the dice\");\r\n        this.ToggleDecision_TurnDecision(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().RollDice();\r\n    }, \r\n\r\n    PrintDiceValue_TurnDecision: function (value) {\r\n        //this.TempDiceText.string=value;\r\n    }, \r\n    //#endregion\r\n    \r\n    //#region Invest and sell moddule\r\n\r\n    ResetGoldInput()\r\n    {\r\n        this.TurnDecisionSetupUI.GoldEditBox.string=\"\";\r\n        GoldCashAmount=\"\";\r\n    },\r\n\r\n    ResetStockBusinessNameInput()\r\n    {\r\n        this.TurnDecisionSetupUI.StockEditBox.string=\"\";\r\n        StockBusinessName=\"\";\r\n    },\r\n\r\n    onAmountChanged_InvestSell(_amount)\r\n    {\r\n        EnterBuySellAmount=_amount;\r\n\r\n        if(EnterBuySellAmount==\"\")\r\n        {\r\n            this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n        }\r\n        else\r\n        {\r\n            var _amount=parseInt(EnterBuySellAmount);\r\n            var _amount=OnceOrShare*_amount;\r\n            this.UpdateData_InvestSell(OnceOrShare+\"*\"+EnterBuySellAmount+\"=\"+_amount);\r\n        }\r\n    },\r\n\r\n    ToggleInvestSellScreen_InvestSell(_state)\r\n    {\r\n        this.InvestSellScreen.active=_state;\r\n        this.UpdateCash_TurnDecision();\r\n        this.ResetGoldInput();\r\n        this.ResetStockBusinessNameInput();\r\n        \r\n    },\r\n\r\n    AssignData_InvestSell(_title,_diceResult,_priceTitle,_priceValue,_buyOrSellTitle,_totalAmountTitle,_totalAmountValue,_buttonName,_state)\r\n    {\r\n        this.CheckReferences();\r\n        this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n        this.InvestSellSetupUI.TitleLabel.string=_title;\r\n        this.InvestSellSetupUI.DiceResultLabel.string=_diceResult;\r\n        this.InvestSellSetupUI.PriceTitleLabel.string=_priceTitle;\r\n        this.InvestSellSetupUI.PriceValueLabel.string=_priceValue;\r\n        this.InvestSellSetupUI.BuyOrSellTitleLabel.string=_buyOrSellTitle;\r\n        this.InvestSellSetupUI.TotalAmountTitleLabel.string=_totalAmountTitle;\r\n        this.InvestSellSetupUI.TotalAmountValueLabel.string=_totalAmountValue;\r\n        this.InvestSellSetupUI.ButtonNameLabel.string=_buttonName;\r\n    },\r\n\r\n    UpdateData_InvestSell(_totalAmountValue)\r\n    {\r\n        this.InvestSellSetupUI.TotalAmountValueLabel.string=_totalAmountValue;\r\n    },\r\n\r\n    ApplyButton_InvestSell()\r\n    {\r\n        if(EnterBuySellAmount==\"\")\r\n        {\r\n            this.ShowToast(\"Please enter an amount.\");\r\n        }\r\n        else\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n            if(this.InvestSellSetupUI.InvestState==InvestEnum.GoldInvest)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                var _TotalAmount=OnceOrShare*_amount;\r\n                if(_TotalAmount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount+_amount;\r\n                    this.ShowToast(\"You have successfully bought \"+_amount+\" ounces of GOLD\",1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"You don't have enough cash.\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.GoldSell)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                if(_amount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount)\r\n                {\r\n                    var _TotalAmount=OnceOrShare*_amount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount-_amount;\r\n                    this.ShowToast(\"You have successfully sold \"+_amount+\" ounces of GOLD for  $\"+_TotalAmount,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"you don't have enough GOLD ounces, you own \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].GoldCount+\" of GOLD ounces\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.StockInvest)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                var _TotalAmount=OnceOrShare*_amount;\r\n                if(_TotalAmount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount+_amount;\r\n                    //can add multiple stocks with business name in object if required\r\n\r\n                    this.ShowToast(\"You have successfully bought \"+_amount+\" shares of business \"+StockBusinessName,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"You don't have enough cash.\");\r\n                }\r\n            }\r\n            else if(this.InvestSellSetupUI.InvestState==InvestEnum.StockSell)\r\n            {\r\n                var _amount=parseInt(EnterBuySellAmount);\r\n                \r\n                if(_amount<=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount)\r\n                {\r\n                    var _TotalAmount=OnceOrShare*_amount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+_TotalAmount;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount= GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount-_amount;\r\n\r\n                    this.ShowToast(\"You have successfully sold \"+_amount+\" shares of stock for  $\"+_TotalAmount,1400);\r\n                    setTimeout(() => {\r\n                        this.ToggleInvestSellScreen_InvestSell(false);\r\n                    }, 1500);\r\n                }\r\n                else\r\n                {\r\n                    this.UpdateData_InvestSell(OnceOrShare+\"*0=0\");\r\n                    EnterBuySellAmount=\"\";\r\n                    this.InvestSellSetupUI.AmountEditBox.string=\"\";\r\n                    this.ShowToast(\"you don't have enough stocks shares, you own \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].StockCount+\" of stock shares\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    ExitButton_InvestSell()\r\n    {\r\n        this.ToggleInvestSellScreen_InvestSell(false);\r\n    },\r\n    //#endregion\r\n    \r\n    //#region Payday or Double pay Day\r\n    TogglePayDayScreen_PayDay(_state)\r\n    {\r\n        this.PayDayScreen.active=_state;\r\n    },\r\n\r\n    ToggleResultPanelScreen_PayDay(_state)\r\n    {\r\n        this.PayDaySetupUI.ResultPanelNode.active=_state;\r\n    },\r\n\r\n    UpdateButtons_PayDay(HMAmount,BMAmount,loanTaken)\r\n    {\r\n        if(HMAmount==0)\r\n        {\r\n            HomeBasedPaymentCompleted=true;\r\n            this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=false;\r\n        }\r\n        else\r\n        {\r\n            HomeBasedPaymentCompleted=false;\r\n            this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n\r\n        if(BMAmount==0)\r\n        {\r\n            BrickMortarPaymentCompleted=true;\r\n            this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=false;\r\n        }\r\n        else\r\n        {\r\n            BrickMortarPaymentCompleted=false;\r\n            this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n\r\n        if(!loanTaken)\r\n        {\r\n            LoanPayed=true;\r\n            this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n        }else\r\n        {\r\n            LoanPayed=false;\r\n            this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=true;\r\n        }\r\n    },\r\n\r\n    GetLoanAmount_PayDay()\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        var _loan=0;\r\n        for (let index = 0; index < _manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n            if(_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loan=_manager.PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanAmount;\r\n                break;\r\n            }\r\n        }\r\n        return _loan;\r\n    },\r\n\r\n    AssignData_PayDay(_title,_isDoublePayDay=false,_skipHM=false,_skipBM=false)\r\n    {\r\n        DoublePayDay=_isDoublePayDay;\r\n        this.TogglePayDayScreen_PayDay(true);\r\n        this.PayDaySetupUI.TitleLabel.string=_title;\r\n\r\n        var _time=1800;\r\n\r\n        //check skip payday variables\r\n        if(_skipHM && _skipBM)\r\n            this.ShowToast(\"your payday on home based and brick & mortar businessess will be skipped.\",_time);\r\n        else if(_skipHM)\r\n            this.ShowToast(\"your payday on home based businessess will be skipped.\",_time);\r\n        else if(_skipBM)\r\n            this.ShowToast(\"your payday on brick & mortar businessess will be skipped.\",_time);\r\n\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n        var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n        var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n        \r\n        var _loanTaken=false;\r\n        var _businessIndex=0;\r\n\r\n        for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n            {\r\n                _loanTaken=true;\r\n                _businessIndex=index;\r\n                break;\r\n            }    \r\n        }\r\n\r\n        var loanTaken=_loanTaken;\r\n        \r\n        this.PayDaySetupUI.HomeBasedNumberLabel.string=HMAmount;\r\n        this.PayDaySetupUI.BMNumberLabel.string=BMAmount;\r\n        this.PayDaySetupUI.BMNumberLocationLabel.string=BMLocations;\r\n\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        //check if loan was skipped previously\r\n        if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n        {\r\n            var _loan=this.GetLoanAmount_PayDay();\r\n            this.PayDaySetupUI.LoanFotterLabel.string=\"*pay $\"+_loan;\r\n        }else\r\n        {\r\n            this.PayDaySetupUI.LoanFotterLabel.string=\"*pay $5000\";\r\n        }\r\n\r\n        //check skip payday variables\r\n        if(_skipHM && _skipBM)\r\n            this.UpdateButtons_PayDay(0,0,loanTaken);\r\n        else if(_skipHM)\r\n            this.UpdateButtons_PayDay(0,BMAmount,loanTaken);\r\n        else if(_skipBM)\r\n            this.UpdateButtons_PayDay(HMAmount,0,loanTaken);\r\n        else\r\n            this.UpdateButtons_PayDay(HMAmount,BMAmount,loanTaken);\r\n\r\n        if(_skipBM || _skipHM)\r\n        {\r\n            setTimeout(() => {\r\n                this.PayDayCompleted();\r\n            }, (_time+200));\r\n        }\r\n    },\r\n\r\n    OnHomeBasedPaymentClicked_PayDay()\r\n    {\r\n        if(!HomeBasedPaymentCompleted)\r\n        {\r\n           this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"PayDay\";\r\n           else\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"DoublePayDay\";\r\n\r\n           HomeBasedPaymentCompleted=true;\r\n           this.PayDaySetupUI.HomeBasedBtn.getComponent(cc.Button).interactable=false;\r\n\r\n           var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n           var HMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].HomeBasedAmount;\r\n           var _dice=GamePlayReferenceManager.Instance.Get_GameManager().RollOneDice();\r\n\r\n           if(!DoublePayDay)\r\n                TotalPayDayAmount=(HMAmount*_dice)*1000;\r\n           else\r\n                TotalPayDayAmount=2*(HMAmount*_dice)*1000;\r\n\r\n\r\n           this.PayDaySetupUI.DiceResultLabel.string=_dice;\r\n           this.PayDaySetupUI.TotalBusinessLabel.string=HMAmount;\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+HMAmount+\"*\"+\"1000=\"+TotalPayDayAmount;\r\n           else\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+HMAmount+\"*\"+\"1000*2=\"+TotalPayDayAmount;\r\n        }\r\n    },\r\n\r\n    OnBMPaymentClicked_PayDay() //brick and mortar\r\n    {\r\n        if(!BrickMortarPaymentCompleted)\r\n        {\r\n            this.ToggleResultPanelScreen_PayDay(true);\r\n\r\n            if(!DoublePayDay)\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"PayDay\";\r\n           else\r\n                this.PayDaySetupUI.ResultScreenTitleLabel.string=\"DoublePayDay\";\r\n                \r\n           BrickMortarPaymentCompleted=true;\r\n           this.PayDaySetupUI.BMBtn.getComponent(cc.Button).interactable=false;\r\n\r\n           var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n           var BMAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].BrickAndMortarAmount;\r\n           var BMLocations=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].TotalLocationsAmount;\r\n\r\n           var _amount=BMAmount+BMLocations;\r\n           var _dice=GamePlayReferenceManager.Instance.Get_GameManager().RollTwoDices();\r\n           \r\n           if(!DoublePayDay)\r\n                TotalPayDayAmount=(_amount*_dice)*2000;\r\n           else\r\n                TotalPayDayAmount=2*(_amount*_dice)*2000;\r\n\r\n           this.PayDaySetupUI.DiceResultLabel.string=_dice;\r\n           this.PayDaySetupUI.TotalBusinessLabel.string=_amount;\r\n\r\n           if(!DoublePayDay)\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+_amount+\"*\"+\"2000=\"+TotalPayDayAmount;\r\n           else\r\n                this.PayDaySetupUI.TotalAmountLabel.string=_dice+\"*\"+_amount+\"*\"+\"2000*2=\"+TotalPayDayAmount;\r\n        }\r\n    },\r\n\r\n    OnLoanPaymentClicked_PayDay() //brick and mortar\r\n    {\r\n        if(!LoanPayed)\r\n        {\r\n            var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n            var  _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();   \r\n            var _EstimateLoan=0;\r\n\r\n            if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n                _EstimateLoan=this.GetLoanAmount_PayDay();\r\n            else\r\n                _EstimateLoan=5000;\r\n\r\n            if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash>=_EstimateLoan)\r\n            {\r\n                LoanPayed=true; \r\n                this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash-_EstimateLoan;\r\n\r\n                var _loanTaken=false;\r\n                var _businessIndex=0;\r\n\r\n                for (let index = 0; index < GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness.length; index++) {\r\n                    if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[index].LoanTaken)\r\n                    {\r\n                        _loanTaken=true;\r\n                        _businessIndex=index;\r\n                        break;\r\n                    }    \r\n                }\r\n\r\n                GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount-_EstimateLoan;\r\n                if(GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount<=0)\r\n                {\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanAmount=0;\r\n                    GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].NoOfBusiness[_businessIndex].LoanTaken=false;\r\n                }\r\n\r\n                if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n                    _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment=false;\r\n\r\n                this.PayDayCompleted();\r\n            }\r\n            else{\r\n\r\n                var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n                var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n                if(_manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment)\r\n                    this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable=false;\r\n                else\r\n                    this.PayDaySetupUI.SkipLoanButton.getComponent(cc.Button).interactable=true;\r\n\r\n                this.PayDaySetupUI.LoanResultPanelNode.active=true;\r\n            }      \r\n        }\r\n\r\n    },\r\n\r\n    ReceivePayment_PayDay() //all\r\n    {\r\n        var  _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash=GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash+TotalPayDayAmount;\r\n        this.ShowToast(\"Amount $\"+TotalPayDayAmount+\" has been added to your cash amount, Total Cash has become $\"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo[_playerIndex].Cash,1500);\r\n        setTimeout(() => {\r\n            this.ToggleResultPanelScreen_PayDay(false);\r\n            this.PayDayCompleted();\r\n        }, 1550);\r\n    },\r\n\r\n    SkipLoanOneTime_PayDay()\r\n    {\r\n        this.ShowToast(\"You have skipped the loan payment, bank will call upon complete loan amount on next payday\",2000);\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        _manager.PlayerGameInfo[_playerIndex].SkippedLoanPayment=true;\r\n        this.PayDaySetupUI.LoanResultPanelNode.active=false;\r\n        LoanPayed=true; \r\n        this.PayDaySetupUI.LoanBtn.getComponent(cc.Button).interactable=false;\r\n        this.PayDayCompleted();\r\n        LoanPayed=true;\r\n    },\r\n\r\n    SellBusiness_PayDay()\r\n    {\r\n        this.PayDaySetupUI.LoanResultPanelNode.active=false;\r\n        this.EnableSellScreen__SellBusinessUISetup(false);\r\n    },\r\n\r\n    ExitLoanScreen_PayDay()\r\n    {\r\n        this.PayDaySetupUI.LoanResultPanelNode.active=false;\r\n    },\r\n\r\n    PayDayCompleted()\r\n    {\r\n        if(HomeBasedPaymentCompleted && BrickMortarPaymentCompleted && LoanPayed)\r\n        {\r\n            var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n            console.log(\"all payday done\");\r\n            this.TogglePayDayScreen_PayDay(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_Whole(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_HomeBased(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().ToggleSkipPayDay_BrickAndMortar(false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().TogglePayDay(false,false);\r\n            _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().callUponCard();\r\n        }\r\n    },\r\n    //#endregion\r\n    \r\n    //#region Sell Business UI\r\n    ToggleSellBusinessScreen_SellBusinessUISetup(_state)\r\n    {\r\n        this.SellBusinessScreen.active=_state;\r\n    },\r\n    \r\n    SetBusinessUI_SellBusinessUISetup()\r\n    {\r\n        this.Reset_SellBusinessUISetup();\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n        var _tempData=_manager.PlayerGameInfo[_playerIndex];\r\n\r\n        this.SellBusinessSetupUI.TitleLabel.string=\"SELL\";\r\n        this.SellBusinessSetupUI.CashLabel.string=_manager.PlayerGameInfo[_playerIndex].Cash;\r\n        this.SellBusinessSetupUI.PlayerNameLabel.string=_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n        this.SellBusinessSetupUI.BusinessCountLabel.string=\"No of Businesses : \"+_manager.PlayerGameInfo[_playerIndex].NoOfBusiness.length;\r\n\r\n        for (let index = 0; index < _tempData.NoOfBusiness.length; index++) {\r\n            var node = cc.instantiate(this.SellBusinessSetupUI.BusinessSellPrefab);\r\n            node.parent = this.SellBusinessSetupUI.ScrollContentNode;\r\n            node.getComponent('BusinessDetail').CheckReferences();\r\n            node.getComponent('BusinessDetail').SetName(_tempData.NoOfBusiness[index].BusinessName);\r\n            node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n            node.getComponent('BusinessDetail').SetType(_tempData.NoOfBusiness[index].BusinessTypeDescription);\r\n            node.getComponent('BusinessDetail').SetBusinessIndex(index);\r\n\r\n            if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==1)\r\n            {\r\n                node.getComponent('BusinessDetail').SetBusinessMode(1);\r\n                node.getComponent('BusinessDetail').SetMode(\"Home Based\");\r\n            }\r\n            else if(parseInt(_tempData.NoOfBusiness[index].BusinessType)==2)\r\n            {\r\n                node.getComponent('BusinessDetail').SetBusinessMode(2);\r\n                node.getComponent('BusinessDetail').SetMode(\"Brick & Mortar\");\r\n            }\r\n\r\n            node.getComponent('BusinessDetail').SetBalance(_tempData.NoOfBusiness[index].Amount);\r\n            node.getComponent('BusinessDetail').SetLocations(_tempData.NoOfBusiness[index].LocationsName.length);\r\n\r\n            if(_tempData.NoOfBusiness[index].LocationsName.length==0)\r\n                node.getComponent('BusinessDetail').ToggleSellLocationButton(false);\r\n            else\r\n                node.getComponent('BusinessDetail').ToggleSellLocationButton(true);\r\n\r\n            businessDetailNodes.push(node);\r\n    }\r\n},\r\n\r\n    Reset_SellBusinessUISetup()\r\n    {\r\n        for (let index = 0; index < businessDetailNodes.length; index++) {\r\n            businessDetailNodes[index].destroy();\r\n        }\r\n\r\n        businessDetailNodes=[];\r\n    },\r\n\r\n    EnableSellScreen__SellBusinessUISetup(_isTurnover=false)\r\n    {\r\n        if(_isTurnover)\r\n        {\r\n            this.SellBusinessSetupUI.ExitButton.active=false;\r\n            this.SellBusinessSetupUI.TurnOverExitButton.active=true;\r\n        }\r\n        else\r\n        {\r\n            this.SellBusinessSetupUI.ExitButton.active=true;\r\n            this.SellBusinessSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n        this.ToggleSellBusinessScreen_SellBusinessUISetup(true);\r\n        this.SetBusinessUI_SellBusinessUISetup();\r\n    },\r\n        \r\n    ExitSellScreen__SellBusinessUISetup()\r\n    {\r\n        this.Reset_SellBusinessUISetup();\r\n        this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n    },  \r\n    \r\n    ExitSellScreenAlongTurnOver__SellBusinessUISetup()\r\n    {\r\n        this.Reset_SellBusinessUISetup();\r\n        this.ToggleSellBusinessScreen_SellBusinessUISetup(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    }, \r\n        \r\n\r\n  \r\n    //#endregion\r\n    \r\n    //#region Invest UI\r\n    ToggleInvestScreen_InvestSetupUI(_state)\r\n    {\r\n        this.InvestScreen.active=_state;\r\n    },\r\n\r\n    EnableInvest_InvestSetupUI(_isTurnover=false)\r\n    {\r\n        this.ResetTurnVariable();\r\n        this.ToggleInvestScreen_InvestSetupUI(true);\r\n        this.SetInvestUI_InvestSetupUI(_isTurnover);\r\n    },\r\n    SetInvestUI_InvestSetupUI(_isTurnover)\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        this.InvestSetupUI.TitleLabel.string=\"INVEST\";\r\n        this.InvestSetupUI.CashLabel.string=_manager.PlayerGameInfo[_playerIndex].Cash;\r\n        this.InvestSetupUI.PlayerNameLabel.string=_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n        if(_isTurnover)\r\n        {\r\n            this.InvestSetupUI.ExitButton.active=false;\r\n            this.InvestSetupUI.TurnOverExitButton.active=true;\r\n        }else\r\n        {\r\n            this.InvestSetupUI.ExitButton.active=true;\r\n            this.InvestSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n    },\r\n\r\n    ExitInvest_InvestSetupUI()\r\n    {\r\n        this.ToggleInvestScreen_InvestSetupUI(false);\r\n    },\r\n\r\n    ExitInvestAlongTurnOver_InvestSetupUI()\r\n    {\r\n        this.ToggleInvestScreen_InvestSetupUI(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    },\r\n    //#endregion\r\n    \r\n    //#region BuyORSell UI\r\n    ToggleBuyOrSellScreen_BuyOrSellSetupUI(_state)\r\n    {\r\n        this.BuyOrSellScreen.active=_state;\r\n    },\r\n\r\n    EnableBuyOrSell_BuyOrSellSetupUI(_isTurnover=false)\r\n    {\r\n        this.ResetTurnVariable();\r\n        this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(true);\r\n        this.SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover);\r\n    },\r\n    SetBuyOrSellUI_BuyOrSellSetupUI(_isTurnover)\r\n    {\r\n        var _manager=GamePlayReferenceManager.Instance.Get_GameManager();\r\n        var _playerIndex=GamePlayReferenceManager.Instance.Get_GameManager().GetTurnNumber();\r\n\r\n        this.BuyOrSellSetupUI.TitleLabel.string=\"BUY OR SELL\";\r\n        this.BuyOrSellSetupUI.CashLabel.string=_manager.PlayerGameInfo[_playerIndex].Cash;\r\n        this.BuyOrSellSetupUI.PlayerNameLabel.string=_manager.PlayerGameInfo[_playerIndex].PlayerName;\r\n\r\n        if(_isTurnover)\r\n        {\r\n            this.BuyOrSellSetupUI.ExitButton.active=false;\r\n            this.BuyOrSellSetupUI.TurnOverExitButton.active=true;\r\n        }else\r\n        {\r\n            this.BuyOrSellSetupUI.ExitButton.active=true;\r\n            this.BuyOrSellSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n    },\r\n\r\n    ExitSellOrBuy_BuyOrSellSetupUI()\r\n    {\r\n        this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n    },\r\n\r\n    ExitSellOrBuyAlongTurnOver_BuyOrSellSetupUI()\r\n    {\r\n        this.ToggleBuyOrSellScreen_BuyOrSellSetupUI(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    },\r\n    //#endregion\r\n\r\n    ///#region One Question setup Ui\r\n    ToggleDecisionScreen_OneQuestionSetupUI(_state)\r\n    {\r\n        this.OneQuestionDecisionScreen.active=_state;\r\n    },\r\n\r\n    ToggleSpaceScreen_OneQuestionSetupUI(_state)\r\n    {\r\n        this.OneQuestionSpaceScreen.active=_state;\r\n    },\r\n    \r\n    ToggleWaitingScreen_OneQuestionSetupUI(_state)\r\n    {\r\n        this.OneQuestionSetupUI.WaitingScreen.active=_state;\r\n    },\r\n\r\n    SetUpSpaceScreen_OneQuestionSetupUI(_myData,_actorsData,_isTurnOver)\r\n    {\r\n        this.OneQuestionSetupUI.TitleLabel.string=\"ONE QUESTION\";\r\n        this.OneQuestionSetupUI.CashLabel.string=\"$\"+_myData.Cash;\r\n        this.OneQuestionSetupUI.PlayerNameLabel.string=_myData.PlayerName;\r\n        this.OneQuestionSetupUI.PlayerDetailLabel.string=\"No of Players: \"+GamePlayReferenceManager.Instance.Get_GameManager().PlayerGameInfo.length;\r\n\r\n        for (let index = 0; index < _actorsData.length; index++) {\r\n           if(_actorsData[index].customProperties.RoomEssentials.IsSpectate==false) //check if player is spectate or not, dont add any spectates\r\n           {\r\n                if(_myData.PlayerUID!=_actorsData[index].customProperties.PlayerSessionData.PlayerUID)\r\n                {\r\n                    var node = cc.instantiate(this.OneQuestionSetupUI.DetailsPrefab);\r\n                    node.parent = this.OneQuestionSetupUI.ScrollContent;\r\n                    node.getComponent(\"PlayerDetails\").setPlayerName(_actorsData[index].customProperties.PlayerSessionData.PlayerName);\r\n                    node.getComponent(\"PlayerDetails\").setPlayerUID(_actorsData[index].customProperties.PlayerSessionData.PlayerUID);\r\n                    oneQuestionNodes.push(node);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(_isTurnOver)\r\n        {\r\n            this.OneQuestionSetupUI.ExitButton.active=false;\r\n            this.OneQuestionSetupUI.TurnOverExitButton.active=true;\r\n        }else\r\n        {\r\n            this.OneQuestionSetupUI.ExitButton.active=true;\r\n            this.OneQuestionSetupUI.TurnOverExitButton.active=false;\r\n        }\r\n\r\n    },\r\n\r\n    ResetSpaceScreen_OneQuestionSetupUI()\r\n    {\r\n        for (let index = 0; index < oneQuestionNodes.length; index++) {\r\n            oneQuestionNodes[index].destroy();   \r\n        }\r\n        oneQuestionNodes=[];\r\n    },\r\n\r\n    Exit_OneQuestionSetupUI()\r\n    {\r\n        this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n    },\r\n\r\n    ExitAlongTurnOver_OneQuestionSetupUI()\r\n    {\r\n        this.ToggleSpaceScreen_OneQuestionSetupUI(false);\r\n        GamePlayReferenceManager.Instance.Get_GameManager().completeCardTurn();\r\n    },\r\n    \r\n\r\n    SetUpDecisionScreen_OneQuestionSetupUI(_question)\r\n    {\r\n        var _myData=GamePlayReferenceManager.Instance.Get_MultiplayerController().PhotonActor().customProperties.PlayerSessionData;\r\n        this.OneQuestionSetupUI.DecisionTitleLabel.string=\"ONE QUESTION\";\r\n        this.OneQuestionSetupUI.DecisionCashLabel.string=\"$\"+_myData.Cash;\r\n        this.OneQuestionSetupUI.DecisionPlayerNameLabel.string=_myData.PlayerName;\r\n        this.OneQuestionSetupUI.DecisionQuestionLabel.string=\"Player has asked if \"+_question+\"\\n\"+\"\\n\"+\r\n        \"*either answer question or pay $5000 to player whose asking question.\";\r\n    },\r\n    //#endregion\r\n    ShowToast:function(message,time=2250)\r\n    {\r\n        this.PopUpUI.active=true;\r\n        this.PopUpUI.children[2].children[1].getComponent(cc.Label).string=message;\r\n        var SelfToast=this;\r\n        setTimeout(function(){  SelfToast.PopUpUI.active=false; }, time);\r\n    },\r\n\r\n});\r\n"]}